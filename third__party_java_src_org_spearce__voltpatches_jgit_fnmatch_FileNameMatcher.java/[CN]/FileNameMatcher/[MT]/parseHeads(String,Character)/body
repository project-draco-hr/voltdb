{
  int currentIndex=0;
  List<AbstractHead> heads=new ArrayList<AbstractHead>();
  while (currentIndex < pattern.length()) {
    final int groupStart=pattern.indexOf('[',currentIndex);
    if (groupStart == -1) {
      final String patternPart=pattern.substring(currentIndex);
      heads.addAll(createSimpleHeads(patternPart,invalidWildgetCharacter));
      currentIndex=pattern.length();
    }
 else {
      final String patternPart=pattern.substring(currentIndex,groupStart);
      heads.addAll(createSimpleHeads(patternPart,invalidWildgetCharacter));
      final int groupEnd=findGroupEnd(groupStart,pattern);
      final String groupPart=pattern.substring(groupStart + 1,groupEnd);
      heads.add(new GroupHead(groupPart,pattern));
      currentIndex=groupEnd + 1;
    }
  }
  return heads;
}
