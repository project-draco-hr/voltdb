{
  SynthesizedPlanFragment[] pfs=new SynthesizedPlanFragment[2];
  pfs[0]=new SynthesizedPlanFragment();
  pfs[0].fragmentId=SysProcFragmentId.PF_validatePartitioning;
  pfs[0].outputDepId=DEP_validatePartitioning;
  pfs[0].multipartition=true;
  pfs[0].parameters=ParameterSet.fromArrayNoCopy(hashinatorType,config);
  pfs[1]=new SynthesizedPlanFragment();
  pfs[1].fragmentId=SysProcFragmentId.PF_validatePartitioningResults;
  pfs[1].outputDepId=DEP_validatePartitioningResults;
  pfs[1].inputDepIds=new int[]{DEP_validatePartitioning};
  pfs[1].multipartition=false;
  pfs[1].parameters=ParameterSet.emptyParameterSet();
  ArrayList<VoltTable> results=new ArrayList<VoltTable>();
  for (  VoltTable t : executeSysProcPlanFragments(pfs,DEP_validatePartitioningResults)) {
    results.add(t);
  }
  pfs[0]=new SynthesizedPlanFragment();
  pfs[0].fragmentId=SysProcFragmentId.PF_matchesHashinator;
  pfs[0].outputDepId=DEP_matchesHashinator;
  pfs[0].multipartition=true;
  pfs[0].parameters=ParameterSet.fromArrayNoCopy(hashinatorType,config);
  pfs[1]=new SynthesizedPlanFragment();
  pfs[1].fragmentId=SysProcFragmentId.PF_matchesHashinatorResults;
  pfs[1].outputDepId=DEP_matchesHashinatorResults;
  pfs[1].inputDepIds=new int[]{DEP_matchesHashinator};
  pfs[1].multipartition=false;
  pfs[1].parameters=ParameterSet.emptyParameterSet();
  for (  VoltTable t : executeSysProcPlanFragments(pfs,DEP_matchesHashinatorResults)) {
    results.add(t);
  }
  return results.toArray(new VoltTable[0]);
}
