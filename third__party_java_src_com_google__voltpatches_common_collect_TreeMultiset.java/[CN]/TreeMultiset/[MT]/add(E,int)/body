{
  checkNonnegative(occurrences,"occurrences");
  if (occurrences == 0) {
    return count(element);
  }
  checkArgument(range.contains(element));
  AvlNode<E> root=rootReference.get();
  if (root == null) {
    comparator().compare(element,element);
    AvlNode<E> newRoot=new AvlNode<E>(element,occurrences);
    successor(header,newRoot,header);
    rootReference.checkAndSet(root,newRoot);
    return 0;
  }
  int[] result=new int[1];
  AvlNode<E> newRoot=root.add(comparator(),element,occurrences,result);
  rootReference.checkAndSet(root,newRoot);
  return result[0];
}
