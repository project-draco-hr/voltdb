{
  return new Iterator<Entry<E>>(){
    AvlNode<E> current=firstNode();
    Entry<E> prevEntry;
    @Override public boolean hasNext(){
      if (current == null) {
        return false;
      }
 else       if (range.tooHigh(current.getElement())) {
        current=null;
        return false;
      }
 else {
        return true;
      }
    }
    @Override public Entry<E> next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      Entry<E> result=wrapEntry(current);
      prevEntry=result;
      if (current.succ == header) {
        current=null;
      }
 else {
        current=current.succ;
      }
      return result;
    }
    @Override public void remove(){
      checkRemove(prevEntry != null);
      setCount(prevEntry.getElement(),0);
      prevEntry=null;
    }
  }
;
}
