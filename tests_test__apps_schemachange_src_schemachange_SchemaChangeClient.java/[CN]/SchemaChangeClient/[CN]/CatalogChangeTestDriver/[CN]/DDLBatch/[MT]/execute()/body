{
  String ddlString=this.ddl.toString();
  boolean success=true;
  try {
    if (ddlString.length() > 0) {
      log.info(_F("\n::: DDL Batch (BEGIN) :::\n%s\n::: DDL Batch (END) :::",ddlString));
      String error=execLiveDDL(client,ddlString,false);
      if (error == null) {
        this.lastSuccessfulDDL=ddlString;
        if (this.expectedError != null) {
          die("Expected an error containing '%s', but the batch succeeded.",this.expectedError);
        }
      }
 else {
        success=false;
        if (this.expectedError != null) {
          if (this.expectedError.length() == 0) {
            log.info("Ignored expected error.");
          }
 else           if (error.contains(this.expectedError)) {
            log.info(_F("Ignored expected error containing '%s'.",this.expectedError));
          }
 else {
            die("Expected an error containing '%s'.",this.expectedError);
          }
        }
 else {
          this.lastFailureDDL=ddlString;
          this.lastFailureError=error;
        }
      }
    }
  }
  finally {
    this.ddl=null;
  }
  return success;
}
