{
  sb.append(":::: Schema Dump ::::\n\n");
  sb.append(":: TABLES ::\n\n");
  ClientResponse cr=callROProcedureWithRetry("@SystemCatalog","TABLES");
  assert(cr.getStatus() == ClientResponse.SUCCESS);
  for (  VoltTable t : cr.getResults()) {
    while (t.advanceRow()) {
      sb.append(_F("%s: %s\n",t.getString("TABLE_TYPE"),t.getString("TABLE_NAME")));
    }
  }
  sb.append("\n");
  sb.append(":: COLUMNS ::\n\n");
  cr=callROProcedureWithRetry("@SystemCatalog","COLUMNS");
  String lastTableName=null;
  assert(cr.getStatus() == ClientResponse.SUCCESS);
  for (  VoltTable t : cr.getResults()) {
    while (t.advanceRow()) {
      String tableName=t.getString("TABLE_NAME");
      if (lastTableName != null && !lastTableName.equals(tableName)) {
        sb.append("\n");
      }
      lastTableName=tableName;
      sb.append(_F("%s.%s %s\n",tableName,t.getString("COLUMN_NAME"),t.getString("TYPE_NAME")));
    }
  }
  sb.append("\n");
  sb.append(":: PROCEDURES ::\n\n");
  cr=callROProcedureWithRetry("@SystemCatalog","PROCEDURES");
  assert(cr.getStatus() == ClientResponse.SUCCESS);
  for (  VoltTable t : cr.getResults()) {
    while (t.advanceRow()) {
      String procName=t.getString("PROCEDURE_NAME");
      if (!procName.endsWith(".insert") && !procName.endsWith(".update") && !procName.endsWith(".delete")&& !procName.endsWith(".upsert")) {
        sb.append(_F("%s\n",procName));
      }
    }
  }
}
