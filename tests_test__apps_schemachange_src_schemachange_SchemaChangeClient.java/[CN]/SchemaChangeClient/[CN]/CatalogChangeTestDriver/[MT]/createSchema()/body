{
  final boolean partitioned=this.oldSchema == null || !this.oldSchema.partitioned;
  final String tableName=partitioned ? "A" : "B";
  final TableHelper.RandomTable ranTable=helper.getTotallyRandomTable(tableName,partitioned);
  final TableHelper.ViewRep viewRep=this.makeViewRep(ranTable.table);
  final String pkeyName=ranTable.table.getColumnName(ranTable.bigintPrimaryKey);
  assert(ranTable.numExtraColumns == 0 || ranTable.numExtraColumns == 1);
  final String uniqueColumnName=ranTable.numExtraColumns != 0 ? ranTable.table.getColumnName(ranTable.numRandomColumns) : null;
  final String uniqueIndexName=uniqueColumnName != null ? String.format("IX_%s_%s",tableName,uniqueColumnName) : null;
  final Class<?> verifyClass=partitioned ? VerifySchemaChangedA.class : VerifySchemaChangedB.class;
  CatalogChangeSchema schema=new CatalogChangeSchema(ranTable.table,viewRep,tableName,partitioned,pkeyName,uniqueColumnName,uniqueIndexName,verifyClass);
  this.mutationCount=0;
  return schema;
}
