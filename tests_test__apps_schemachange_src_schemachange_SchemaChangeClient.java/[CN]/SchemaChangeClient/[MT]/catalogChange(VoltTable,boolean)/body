{
  CatalogBuilder builder=new CatalogBuilder();
  VoltTable t2=null;
  String currentName=t1 == null ? "B" : TableHelper.getTableName(t1);
  String newName=currentName;
  if (newTable) {
    newName=currentName.equals("A") ? "B" : "A";
    t2=TableHelper.getTotallyRandomTable(newName,rand);
  }
 else {
    t2=TableHelper.mutateTable(t1,false,rand);
  }
  log.info(_F("New Schema:\n%s",TableHelper.ddlForTable(t2)));
  builder.addLiteralSchema(TableHelper.ddlForTable(t2));
  if (newName.equalsIgnoreCase("A")) {
    int pkeyIndex=TableHelper.getBigintPrimaryKeyIndexIfExists(t2);
    builder.addPartitionInfo(newName,t2.getColumnName(pkeyIndex));
  }
  byte[] catalogData=builder.compileToBytes();
  assert(catalogData != null);
  long count=tupleCount(t1);
  long start=System.nanoTime();
  if (newTable) {
    log.info(_F("Starting catalog update to swap tables."));
  }
 else {
    log.info(_F("Starting catalog update to change schema."));
  }
  ClientResponse cr=client.callProcedure("@UpdateApplicationCatalog",catalogData,null);
  assert(cr.getStatus() == ClientResponse.SUCCESS);
  long end=System.nanoTime();
  double seconds=(end - start) / 1000000000.0;
  if (newTable) {
    log.info(_F("Completed catalog update that swapped tables in %.4f seconds",seconds));
  }
 else {
    log.info(_F("Completed catalog update of %d tuples in %.4f seconds (%d tuples/sec)",count,seconds,(long)(count / seconds)));
  }
  return t2;
}
