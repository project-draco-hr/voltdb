{
  startTime=System.currentTimeMillis();
class watchDog extends Thread {
    @Override public void run(){
      if (config.duration == 0)       return;
      try {
        Thread.sleep(config.duration * 1000);
      }
 catch (      Exception e) {
      }
      SchemaChangeUtility.die(true,"Duration limit reached, terminating run");
    }
  }
  ;
  watchDog th=new watchDog();
  th.setDaemon(true);
  th.start();
  ClientConfig clientConfig=new ClientConfig("","",new StatusListener());
  clientConfig.setMaxOutstandingTxns(512);
  client=ClientFactory.createClient(clientConfig);
  connect(config.servers);
  topo=getClusterTopology();
  CatalogChangeTestDriver testDriver=new CatalogChangeTestDriver();
  testDriver.addProcedureClasses(client,VerifySchemaChangedA.class,VerifySchemaChangedB.class);
  testDriver.catalogChange(ChangeType.CREATE);
  boolean tableHasData=false;
  while (true) {
    boolean isNewTable=rand.nextInt(100) < percentNewTable;
    boolean addDataToTable=rand.nextInt(100) < percentLoadTable;
    CatalogChangeTestDriver.SampleResults sampleResults=null;
    if (tableHasData && !isNewTable) {
      sampleResults=testDriver.sampleRows();
    }
    ChangeType changeType=(isNewTable ? ChangeType.CREATE : (tableHasData ? ChangeType.MUTATE_NONEMPTY : ChangeType.MUTATE_EMPTY));
    testDriver.catalogChange(changeType);
    if (isNewTable) {
      tableHasData=false;
    }
    if (tableHasData) {
      assert(sampleResults != null);
      if (sampleResults.table != null) {
        String err=testDriver.checkSample(sampleResults);
        if (err != null) {
          SchemaChangeUtility.die(false,err);
        }
      }
    }
    if (addDataToTable) {
      testDriver.loadTable();
      tableHasData=true;
    }
  }
}
