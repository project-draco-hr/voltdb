{
  boolean success=false;
  ClientResponse cr=null;
  try {
    cr=client.callProcedure("@AdHoc",ddl);
    success=true;
  }
 catch (  NoConnectionsException e) {
  }
catch (  ProcCallException e) {
    log.error(_F("Procedure @AdHoc call exception: %s",e.getMessage()));
    cr=e.getClientResponse();
  }
  if (success && cr != null) {
switch (cr.getStatus()) {
case ClientResponse.SUCCESS:
      log.info("Live DDL execution was reported to be successful");
    break;
case ClientResponse.CONNECTION_LOST:
case ClientResponse.CONNECTION_TIMEOUT:
case ClientResponse.RESPONSE_UNKNOWN:
case ClientResponse.SERVER_UNAVAILABLE:
  success=false;
break;
case ClientResponse.UNEXPECTED_FAILURE:
case ClientResponse.GRACEFUL_FAILURE:
case ClientResponse.USER_ABORT:
log.error(_F("USER_ABORT in procedure call for live DDL"));
log.error(((ClientResponseImpl)cr).toJSONString());
assert(false);
System.exit(-1);
}
}
if (!success && hardFail) {
String msg=(cr != null ? ((ClientResponseImpl)cr).toJSONString() : _F("Unknown @AdHoc failure"));
throw new IOException(msg);
}
return success;
}
