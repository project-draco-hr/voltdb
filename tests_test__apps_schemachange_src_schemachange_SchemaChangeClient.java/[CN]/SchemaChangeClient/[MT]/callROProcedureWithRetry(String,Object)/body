{
  long startTime=System.currentTimeMillis();
  long now=startTime;
  while (now - startTime < (config.noProgressTimeout * 1000)) {
    ClientResponse cr=null;
    try {
      cr=client.callProcedure(procName,params);
    }
 catch (    ProcCallException e) {
      log.debug("callROProcedureWithRetry operation exception:",e);
      cr=e.getClientResponse();
    }
catch (    NoConnectionsException e) {
      log.debug("callROProcedureWithRetry operation exception:",e);
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException e1) {
      }
    }
catch (    IOException e) {
      log.debug("callROProcedureWithRetry operation exception:",e);
      logStackTrace(e);
      System.exit(-1);
    }
    if (cr != null) {
      if (cr.getStatus() != ClientResponse.SUCCESS) {
        log.debug("callROProcedureWithRetry operation failed: " + ((ClientResponseImpl)cr).toJSONString());
      }
switch (cr.getStatus()) {
case ClientResponse.SUCCESS:
        return cr;
case ClientResponse.CONNECTION_LOST:
case ClientResponse.CONNECTION_TIMEOUT:
      try {
        Thread.sleep(5 * 1000);
      }
 catch (      Exception e) {
      }
    break;
case ClientResponse.RESPONSE_UNKNOWN:
  break;
case ClientResponse.SERVER_UNAVAILABLE:
try {
  Thread.sleep(30 * 1000);
}
 catch (Exception e) {
}
break;
case ClientResponse.GRACEFUL_FAILURE:
case ClientResponse.UNEXPECTED_FAILURE:
case ClientResponse.USER_ABORT:
log.error(_F("Error in procedure call for: %s",procName));
log.error(((ClientResponseImpl)cr).toJSONString());
assert(false);
System.exit(-1);
}
}
now=System.currentTimeMillis();
}
log.error(_F("Error no progress timeout reached, terminating"));
System.exit(-1);
return null;
}
