{
  long startTime=System.currentTimeMillis();
  long now=startTime;
  while (now - startTime < config.noProgressTimeout) {
    ClientResponse cr=null;
    try {
      cr=client.callProcedure(procName,params);
    }
 catch (    ProcCallException e) {
      cr=e.getClientResponse();
    }
catch (    NoConnectionsException e) {
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException e1) {
      }
    }
catch (    IOException e) {
      e.printStackTrace();
      System.exit(-1);
    }
    if (cr != null) {
switch (cr.getStatus()) {
case ClientResponse.SUCCESS:
        return cr;
case ClientResponse.CONNECTION_LOST:
      try {
        Thread.sleep(5 * 1000);
      }
 catch (      Exception e) {
      }
    break;
case ClientResponse.CONNECTION_TIMEOUT:
  try {
    Thread.sleep(5 * 1000);
  }
 catch (  Exception e) {
  }
break;
case ClientResponse.GRACEFUL_FAILURE:
assert(false);
System.exit(-1);
case ClientResponse.RESPONSE_UNKNOWN:
break;
case ClientResponse.SERVER_UNAVAILABLE:
try {
Thread.sleep(60 * 1000);
}
 catch (Exception e) {
}
break;
case ClientResponse.UNEXPECTED_FAILURE:
assert(false);
System.exit(-1);
case ClientResponse.USER_ABORT:
assert(false);
System.exit(-1);
}
}
now=System.currentTimeMillis();
}
assert(false);
System.exit(-1);
return null;
}
