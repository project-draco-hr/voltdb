{
  log.info("Starting testSimpleTask");
  try {
    for (int ii=0; ii < NUM_AGREEMENT_SITES; ii++) {
      registerGroup1BoolFor(ii);
    }
    while (!boolsInitialized(m_booleanStateMachinesForGroup1)) {
      Thread.sleep(500);
    }
    BooleanStateMachine i0=m_booleanStateMachinesForGroup1[0];
    BooleanStateMachine i1=m_booleanStateMachinesForGroup1[1];
    assertTrue(boolsSynchronized(m_booleanStateMachinesForGroup1));
    i0.coorelatedTask=false;
    i0.startTask();
    i1.switchState();
    boolean taskAndSwitchCompleted=false;
    int waitLoop=0;
    for (; waitLoop < 10; waitLoop++) {
      if (i1.ourProposalOrTaskFinished && boolProposalOrTaskFinished(m_booleanStateMachinesForGroup1,2) && boolsTaskUncorrelatedResultsAgree(m_booleanStateMachinesForGroup1,2)) {
        taskAndSwitchCompleted=true;
        break;
      }
      Thread.sleep(500);
    }
    assertTrue(waitLoop < 10);
    assertTrue(taskAndSwitchCompleted);
    assertTrue(boolsSynchronized(m_booleanStateMachinesForGroup1));
    assertTrue(i0.state);
  }
 catch (  InterruptedException e) {
    fail("Exception occured during test.");
  }
}
