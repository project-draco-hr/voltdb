def test_ensure_no_duplicate_role(self):
    'ensure no duplicate roles are inserted'
    db_data = {'name': 'test', 'password': 'admin', 'plaintext': True, 'roles': 'Administrator,Test1,Test1', 'databaseid': 1, }
    headers = {'Content-Type': 'application/json; charset=utf-8', }
    last_db_id = GetLastDbId()
    if (last_db_id != (-1)):
        user_url = ('%s%u/users/' % (__db_url__, last_db_id))
        response = requests.get(user_url)
        value = response.json()
        if value:
            user_length = len(value['deployment'])
            last_user_id = value['deployment'][(user_length - 1)]['userid']
            user_update_url = ('%s%u/' % (user_url, last_user_id))
            response = requests.put(user_update_url, json=db_data, headers=headers)
            value = response.json()
            self.assertEqual(value['statusstring'], 'User Updated')
            self.assertEqual(value['user']['roles'], 'Test1,Administrator')
            self.assertEqual(response.status_code, 200)
