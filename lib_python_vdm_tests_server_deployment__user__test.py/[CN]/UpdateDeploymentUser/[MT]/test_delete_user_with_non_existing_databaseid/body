def test_delete_user_with_non_existing_databaseid(self):
    response = requests.get(__db_url__)
    value = response.json()
    if value:
        db_data = {'name': 'user', 'password': 'voltdb', 'plaintext': True, 'roles': 'Administrator', 'databaseid': 1, }
        headers = {'Content-Type': 'application/json; charset=utf-8', }
        last_db_id = GetLastDbId()
        if (last_db_id != (-1)):
            user_url = ('%s%u/users/' % (__db_url__, last_db_id))
            response = requests.post(user_url, json=db_data, headers=headers)
            value = response.json()
            self.assertEqual(response.status_code, 200)
            last_db_id = 3
            last_user_id = 1
            user_delete_url = ('%s%u/users/%u/' % (__db_url__, last_db_id, last_user_id))
            response = requests.delete(user_delete_url)
            value1 = response.json()
            self.assertEqual(response.status_code, 404)
            self.assertEqual(value1['statusString'], 'No database found for id: 3')
    else:
        print 'The database list is empty'
