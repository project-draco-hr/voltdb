{
  System.out.println("STARTING TABLE LIMIT TEST......");
  Client client=getClient();
  VoltTable vt=null;
  Exception e=null;
  if (isHSQL()) {
    return;
  }
  vt=client.callProcedure("@AdHoc","select count(*) from CAPPED0").getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{0});
  e=null;
  try {
    vt=client.callProcedure("CAPPED0.insert",0,0,0).getResults()[0];
  }
 catch (  ProcCallException ex) {
    e=ex;
    assertTrue(ex.getMessage().contains("CONSTRAINT VIOLATION"));
    assertTrue(ex.getMessage().contains("Table CAPPED0 exceeds table maximum row count 0"));
  }
 finally {
    assertNotNull(e);
  }
  vt=client.callProcedure("@AdHoc","select count(*) from CAPPED0").getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{0});
  validStatisticsForTableLimit(client,"CAPPED0",0);
  vt=client.callProcedure("CAPPED2.insert",0,0,0).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1});
  vt=client.callProcedure("CAPPED2.insert",1,1,1).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1});
  e=null;
  try {
    vt=client.callProcedure("CAPPED2.insert",2,2,2).getResults()[0];
  }
 catch (  ProcCallException ex) {
    e=ex;
    assertTrue(ex.getMessage().contains("CONSTRAINT VIOLATION"));
    assertTrue(ex.getMessage().contains("Table CAPPED2 exceeds table maximum row count 2"));
  }
 finally {
    assertNotNull(e);
  }
  vt=client.callProcedure("@AdHoc","select count(*) from CAPPED2").getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2});
  validStatisticsForTableLimit(client,"CAPPED2",2);
  vt=client.callProcedure("NOCAPPED.insert",0,0,0).getResults()[0];
  validStatisticsForTableLimit(client,"NOCAPPED",VoltType.NULL_INTEGER);
}
