{
  Client client=getClient();
  client.callProcedure("TruncateP");
  client.callProcedure("@AdHoc","insert into P values(11, 11, 1, 1)");
  client.callProcedure("@AdHoc","insert into P values(1, 1, 2, 1)");
  client.callProcedure("@AdHoc","insert into P values(3, 6, 2, 1)");
  client.callProcedure("@AdHoc","insert into P values(8, 4, 1, 1)");
  client.callProcedure("@AdHoc","insert into P values(5, 11, 2, 1)");
  client.callProcedure("@AdHoc","insert into P values(4, 1, 4, 1)");
  client.callProcedure("@AdHoc","insert into P values(7, 6, 1, 1)");
  String sql;
  VoltTable vt;
  long[][] expected;
  sql="select PT_D1 from (select P_D1 as PT_D1 from P where P.P_D1 > 0 order by P_D1) P_T order by PT_D1;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  expected=new long[][]{{1},{1},{4},{6},{6},{11},{11}};
  validateTableOfLongs(vt,expected);
  sql="select PT_D1 from (select P_D1 as PT_D1 from P where P.P_D1 > 0 order by P_D1 limit 4) P_T limit 4;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  expected=new long[][]{{1},{1},{4},{6}};
  validateTableOfLongs(vt,expected);
  sql="select PT_D1, MP_D3 from (select P_D1 as PT_D1, max(P_D3) as MP_D3 from P group by P_D1 order by P_D1 limit 4) P_T order by PT_D1";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  expected=new long[][]{{1},{4},{6},{11}};
  validateTableOfLongs(vt,expected);
}
