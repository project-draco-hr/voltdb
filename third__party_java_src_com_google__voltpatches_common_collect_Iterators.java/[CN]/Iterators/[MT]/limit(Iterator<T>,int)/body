{
  checkNotNull(iterator);
  checkArgument(limitSize >= 0,"limit is negative");
  return new Iterator<T>(){
    private int count;
    @Override public boolean hasNext(){
      return count < limitSize && iterator.hasNext();
    }
    @Override public T next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      count++;
      return iterator.next();
    }
    @Override public void remove(){
      iterator.remove();
    }
  }
;
}
