{
  if (args.length == 0) {
  }
 else   if (args[0].equals("--help")) {
    printHelpAndQuit(0);
  }
  FileFilter filter=new SnapshotFilter();
  boolean specifiedSingle=false;
  String snapshotName=null;
  for (int ii=0; ii < args.length; ii++) {
    if (args[ii].equals("--name")) {
      specifiedSingle=true;
      if (ii + 1 >= args.length) {
        System.err.println("Error: No snapshot name specified after --name");
        printHelpAndQuit(-1);
      }
      snapshotName=args[ii + 1];
      break;
    }
  }
  if (specifiedSingle) {
    filter=new SpecificSnapshotFilter(snapshotName);
  }
  List<String> directories=null;
  for (int ii=0; ii < args.length; ii++) {
    if (args[ii].equals("--dirs")) {
      if (ii + 1 >= args.length) {
        System.err.println("Error: No directories specified after --dirs");
        printHelpAndQuit(-1);
        break;
      }
      directories=Arrays.asList(args[ii + 1].split(","));
    }
  }
  if (directories == null) {
    directories=new ArrayList<String>();
    directories.add(".");
  }
  TreeMap<Long,Snapshot> snapshots=new TreeMap<Long,Snapshot>();
  for (  String directory : directories) {
    SnapshotUtil.retrieveSnapshotFiles(new File(directory),snapshots,filter,0,true);
  }
  if (snapshots.isEmpty()) {
    System.out.println("Snapshot corrupted");
    System.out.println("No files found");
  }
  for (  Map.Entry<Long,Snapshot> s : snapshots.entrySet()) {
    System.out.println(SnapshotUtil.generateSnapshotReport(s.getKey(),s.getValue()).getSecond());
  }
}
