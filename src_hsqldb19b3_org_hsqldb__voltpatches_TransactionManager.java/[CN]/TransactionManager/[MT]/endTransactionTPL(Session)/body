{
  int unlockedCount=0;
  if (session.isReadOnly()) {
    return;
  }
  unlockTablesTPL(session);
  if (session.waitingSessions.isEmpty()) {
    return;
  }
  for (int i=0; i < session.waitingSessions.size(); i++) {
    Session current=(Session)session.waitingSessions.get(i);
    current.tempUnlocked=false;
    long count=current.latch.getCount();
    if (count == 1) {
      boolean canProceed=setWaitedSessionsTPL(current,current.currentStatement);
      if (!canProceed) {
        current.abortTransaction=true;
      }
      if (current.tempSet.isEmpty()) {
        lockTablesTPL(current,current.currentStatement);
        current.tempUnlocked=true;
        unlockedCount++;
      }
    }
  }
  if (unlockedCount > 0) {
    for (int i=0; i < session.waitingSessions.size(); i++) {
      Session current=(Session)session.waitingSessions.get(i);
      if (!current.tempUnlocked) {
        boolean canProceed=setWaitedSessionsTPL(current,current.currentStatement);
        if (!canProceed) {
          current.abortTransaction=true;
        }
      }
    }
  }
  for (int i=0; i < session.waitingSessions.size(); i++) {
    Session current=(Session)session.waitingSessions.get(i);
    setWaitingSessionTPL(current);
  }
  session.tempSet.clear();
  session.waitingSessions.clear();
}
