{
  if (!before.getUniqueName().equals(after.getUniqueName())) {
    return null;
  }
  VoltXMLDiff result=new VoltXMLDiff(before.getUniqueName());
  if (before.toMinString().equals(after.toMinString())) {
    return result;
  }
  for (int i=0; i < after.children.size(); i++) {
    VoltXMLElement child=after.children.get(i);
    result.m_elementOrder.put(child.getUniqueName(),i);
  }
  Set<String> firstKeys=before.attributes.keySet();
  Set<String> secondKeys=new HashSet<String>();
  secondKeys.addAll(after.attributes.keySet());
  for (  String firstKey : firstKeys) {
    if (!secondKeys.contains(firstKey)) {
      result.m_removedAttributes.add(firstKey);
    }
 else     if (!(after.attributes.get(firstKey).equals(before.attributes.get(firstKey)))) {
      result.m_changedAttributes.put(firstKey,after.attributes.get(firstKey));
    }
    secondKeys.remove(firstKey);
  }
  for (  String key : secondKeys) {
    result.m_addedAttributes.put(key,after.attributes.get(key));
  }
  Set<String> firstChildren=new HashSet<String>();
  for (  VoltXMLElement child : before.children) {
    firstChildren.add(child.getUniqueName());
  }
  Set<String> secondChildren=new HashSet<String>();
  for (  VoltXMLElement child : after.children) {
    secondChildren.add(child.getUniqueName());
  }
  Set<String> commonNames=new HashSet<String>();
  for (  VoltXMLElement firstChild : before.children) {
    if (!secondChildren.contains(firstChild.getUniqueName())) {
      result.m_removedElements.add(firstChild);
    }
 else {
      commonNames.add(firstChild.getUniqueName());
    }
  }
  for (  VoltXMLElement secondChild : after.children) {
    if (!firstChildren.contains(secondChild.getUniqueName())) {
      result.m_addedElements.add(secondChild);
    }
 else {
      assert(commonNames.contains(secondChild.getUniqueName()));
    }
  }
  for (  String name : commonNames) {
    VoltXMLDiff childDiff=computeDiff(before.findChild(name),after.findChild(name));
    if (!childDiff.isEmpty()) {
      result.m_changedElements.put(name,childDiff);
    }
  }
  return result;
}
