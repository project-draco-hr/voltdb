{
  assert(getUniqueName().equals(diff.m_name));
  attributes.putAll(diff.getAddedAttributes());
  for (  String key : diff.getRemovedAttributes()) {
    attributes.remove(key);
  }
  for (  Entry<String,String> e : diff.getChangedAttributes().entrySet()) {
    attributes.put(e.getKey(),e.getValue());
  }
  for (  VoltXMLElement e : diff.getRemovedNodes()) {
    children.remove(findChild(e.getUniqueName()));
  }
  for (  VoltXMLElement e : diff.getAddedNodes()) {
    children.add(e);
  }
  for (  Entry<String,VoltXMLDiff> e : diff.getChangedNodes().entrySet()) {
    findChild(e.getKey()).applyDiff(e.getValue());
  }
  if (diff.m_elementOrder.isEmpty()) {
    return true;
  }
  assert(children.size() == diff.m_elementOrder.size());
  List<VoltXMLElement> temp=new ArrayList<VoltXMLElement>();
  temp.addAll(children);
  for (  VoltXMLElement child : temp) {
    String name=child.getUniqueName();
    Integer position=diff.m_elementOrder.get(name);
    if (position == null) {
      throw new RuntimeException("You have encountered an unexpected error.  Please contact VoltDB support, and include your current schema along with the DDL changes you were attempting to make.");
    }
    if (!name.equals(children.get(position).getUniqueName())) {
      children.set(position,child);
    }
  }
  return true;
}
