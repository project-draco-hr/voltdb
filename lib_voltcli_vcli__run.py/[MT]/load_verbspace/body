def load_verbspace(command_name, command_dir, config, version, description):
    "\n    Build a verb space by searching for source files with verbs based on both\n    this file's and, if provided, the calling script's location.\n    "
    search_dirs = [os.path.dirname(__file__)]
    verbs_subdir = ('%s.d' % command_name)
    if ((command_dir is not None) and (command_dir not in search_dirs)):
        search_dirs.append(command_dir)
    classpath = ':'.join(vcli_env.classpath)
    classpath_ext = config.get('volt.classpath')
    if classpath_ext:
        classpath = ':'.join((classpath, classpath_ext))
    java_runner = JavaRunner(classpath)
    verbs = {}
    verb_decorators = VerbDecorators(verbs)
    namespace_VOLT = VOLT(verb_decorators, java_runner)
    vcli_util.search_and_execute(search_dirs, verbs_subdir, VOLT=namespace_VOLT)
    if ('help' not in verbs):

        def default_help(runner):
            runner.go()
        verbs['help'] = HelpVerb('help', default_help)
    return VerbSpace(command_name, version, description, namespace_VOLT, verbs)
