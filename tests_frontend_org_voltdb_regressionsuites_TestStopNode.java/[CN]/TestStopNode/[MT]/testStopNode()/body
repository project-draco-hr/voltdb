{
  Client client=ClientFactory.createClient();
  client.createConnection("localhost",m_config.port(0));
  try {
    CountDownLatch cdl=new CountDownLatch(1);
    client.callProcedure(new StopCallBack(cdl,ClientResponse.SUCCESS,4),"@StopNode",4);
    cdl.await();
    waitForHostToBeGone(client,4);
    cdl=new CountDownLatch(1);
    client.callProcedure(new StopCallBack(cdl,ClientResponse.SUCCESS,3),"@StopNode",3);
    cdl.await();
    waitForHostToBeGone(client,3);
    cdl=new CountDownLatch(1);
    client.callProcedure(new StopCallBack(cdl,ClientResponse.SUCCESS,2),"@StopNode",2);
    cdl.await();
    waitForHostToBeGone(client,2);
    client.callProcedure("@SystemInformation","overview");
  }
 catch (  Exception ex) {
    fail();
    ex.printStackTrace();
  }
  boolean lostConnect=false;
  try {
    CountDownLatch cdl=new CountDownLatch(3);
    client.callProcedure(new StopCallBack(cdl,ClientResponse.GRACEFUL_FAILURE,1),"@StopNode",1);
    client.callProcedure(new StopCallBack(cdl,ClientResponse.GRACEFUL_FAILURE,4),"@StopNode",4);
    client.callProcedure(new StopCallBack(cdl,ClientResponse.GRACEFUL_FAILURE,0),"@StopNode",0);
    VoltTable tab=client.callProcedure("@SystemInformation","overview").getResults()[0];
    cdl.await();
  }
 catch (  Exception pce) {
    pce.printStackTrace();
    lostConnect=pce.getMessage().contains("was lost before a response was received");
  }
  assertFalse(lostConnect);
}
