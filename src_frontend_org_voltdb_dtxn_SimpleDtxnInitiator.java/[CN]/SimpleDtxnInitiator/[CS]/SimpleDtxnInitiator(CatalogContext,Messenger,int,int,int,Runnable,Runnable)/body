{
  assert(messenger != null);
  System.out.printf("INITIALIZING INITIATOR ID: %d, SITEID: %d\n",initiatorId,siteId);
  System.out.flush();
  m_idManager=new TransactionIdManager(initiatorId);
  m_hostId=hostId;
  m_siteId=siteId;
  m_safetyState=new ExecutorTxnIdSafetyState(siteId,context.siteTracker);
  m_mailbox=new DtxnInitiatorMailbox(siteId,m_safetyState,(org.voltdb.messaging.HostMessenger)messenger);
  messenger.createMailbox(siteId,VoltDB.DTXN_MAILBOX_ID,m_mailbox);
  m_mailbox.setInitiator(this);
  m_onBackPressure=onBackPressure;
  m_offBackPressure=offBackPressure;
  m_thread=new Thread(new Runnable(){
    @Override public void run(){
      while (m_threadShouldContinue) {
        try {
synchronized (SimpleDtxnInitiator.this) {
            m_mailbox.processResponses();
            Runnable createTransaction=null;
            while ((createTransaction=m_transactionsToCreate.poll()) != null) {
              createTransaction.run();
            }
          }
          Thread.yield();
        }
 catch (        Exception e) {
          hostLog.error(e);
        }
      }
    }
  }
,"InitiatorThread");
  m_thread.start();
}
