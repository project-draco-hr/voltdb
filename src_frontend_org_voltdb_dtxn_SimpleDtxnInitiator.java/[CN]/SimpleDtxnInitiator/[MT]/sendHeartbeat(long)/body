{
  final SiteTracker st=VoltDB.instance().getSiteTracker();
  long remoteHeartbeatTargets[][]=st.getRemoteSites();
  long localHeartbeatTargets[]=st.getLocalSites();
  try {
    for (    long hostTargets[] : remoteHeartbeatTargets) {
      final long initiatorSiteId=st.getInitiatorsForHost(SiteTracker.getHostForSite(hostTargets[0])).get(0);
      assert(initiatorSiteId != 1L);
      long safeTxnIds[]=new long[hostTargets.length];
      for (int ii=0; ii < safeTxnIds.length; ii++) {
        safeTxnIds[ii]=m_safetyState.getNewestSafeTxnIdForExecutorBySiteId(hostTargets[ii]);
      }
      CoalescedHeartbeatMessage heartbeat=new CoalescedHeartbeatMessage(m_siteId,txnId,hostTargets,safeTxnIds);
      m_mailbox.send(initiatorSiteId,heartbeat);
    }
    for (    long siteId : localHeartbeatTargets) {
      long newestSafeTxnId=m_safetyState.getNewestSafeTxnIdForExecutorBySiteId(siteId);
      HeartbeatMessage tickNotice=new HeartbeatMessage(m_siteId,txnId,newestSafeTxnId);
      m_mailbox.send(siteId,tickNotice);
    }
  }
 catch (  MessagingException e) {
    throw new RuntimeException(e);
  }
}
