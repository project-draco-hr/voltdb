{
  assert(invocation != null);
  assert(partitions != null);
  assert(numPartitions >= 1);
  if (isSinglePartition || isEveryPartition) {
    createSinglePartitionTxn(connectionId,connectionHostname,adminConnection,txnId,invocation,isReadOnly,partitions,clientData,messageSize,now);
    return;
  }
 else {
    SiteTracker tracker=VoltDB.instance().getCatalogContext().siteTracker;
    ArrayList<Integer> sitesOnThisHost=tracker.m_hostsToSites.get(m_hostId);
    int coordinatorId=sitesOnThisHost.get(1);
    ArrayList<Integer> replicaIds=new ArrayList<Integer>();
    for (    Integer replica : tracker.getAllSitesForPartition(tracker.getPartitionForSite(coordinatorId))) {
      if (replica != coordinatorId && tracker.getAllLiveSites().contains(replica)) {
        replicaIds.add(replica);
      }
    }
    ArrayList<Integer> otherSiteIds=new ArrayList<Integer>();
    int[] allSiteIds=VoltDB.instance().getCatalogContext().siteTracker.getLiveSitesForEachPartition(partitions);
    for (int i=0; i < allSiteIds.length; i++) {
      if (allSiteIds[i] != coordinatorId && !replicaIds.contains(allSiteIds[i])) {
        otherSiteIds.add(allSiteIds[i]);
      }
    }
    int otherSiteIdsArr[]=new int[otherSiteIds.size()];
    int ii=0;
    for (    Integer otherSiteId : otherSiteIds) {
      otherSiteIdsArr[ii++]=otherSiteId;
    }
    InFlightTxnState txn=new InFlightTxnState(txnId,coordinatorId,replicaIds,otherSiteIdsArr,isReadOnly,false,invocation,clientData,messageSize,now,connectionId,connectionHostname,adminConnection);
    dispatchMultiPartitionTxn(txn);
  }
}
