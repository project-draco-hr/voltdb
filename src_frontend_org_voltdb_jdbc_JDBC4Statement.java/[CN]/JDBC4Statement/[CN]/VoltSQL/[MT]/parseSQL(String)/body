{
  if (queryIn == null || queryIn.length() == 0)   throw SQLError.get(SQLError.ILLEGAL_STATEMENT);
  String query=SingleLineComments.matcher(queryIn).replaceAll("");
  query=EscapedSingleQuote.matcher(query).replaceAll("#(SQL_PARSER_ESCAPE_SINGLE_QUOTE)");
  Matcher stringFragmentMatcher=Extract.matcher(query);
  ArrayList<String> stringFragments=new ArrayList<String>();
  int i=0;
  while (stringFragmentMatcher.find()) {
    stringFragments.add(stringFragmentMatcher.group());
    query=stringFragmentMatcher.replaceFirst("#(SQL_PARSER_STRING_FRAGMENT#" + i + ")");
    stringFragmentMatcher=Extract.matcher(query);
    i++;
  }
  query=AutoSplit.matcher(query.trim()).replaceAll(";$1 ");
  String[] sqlFragments=query.split("\\s*;+\\s*");
  if (sqlFragments.length > 1)   throw SQLError.get(SQLError.QUERY_PARSING_ERROR);
  query=SpaceCleaner.matcher(sqlFragments[0]).replaceAll(" ").trim();
  if (query.length() == 0)   throw SQLError.get(SQLError.ILLEGAL_STATEMENT);
  byte type=0;
  if (IsSelect.matcher(query).matches())   type=TYPE_SELECT;
 else   if (IsInsert.matcher(query).matches())   type=TYPE_INSERT;
 else   if (IsUpdate.matcher(query).matches())   type=TYPE_UPDATE;
 else   if (IsDelete.matcher(query).matches())   type=TYPE_DELETE;
  if (type == 0)   throw SQLError.get(SQLError.INVALID_QUERY_TYPE);
  if (query.indexOf("'") > -1)   throw SQLError.get(SQLError.UNTERMINATED_STRING);
  if (!query.endsWith(";")) {
    query+=";";
  }
  int parameterCount=0;
  if (query.indexOf("?") > -1) {
    String[] queryParts=(query + ";").split("\\?");
    parameterCount=queryParts.length - 1;
  }
  if (stringFragments.size() > 0) {
    for (int k=0; k < stringFragments.size(); k++) {
      query=query.replace("#(SQL_PARSER_STRING_FRAGMENT#" + k + ")",stringFragments.get(k));
    }
  }
  query=query.replace("#(SQL_PARSER_ESCAPE_SINGLE_QUOTE)","''");
  if (query.indexOf("\r") > -1 || query.indexOf("\n") > -1)   throw SQLError.get(SQLError.QUERY_PARSING_ERROR);
  return new VoltSQL(new String[]{query},parameterCount,type);
}
