{
  Content content=null;
  if (resource != null && resource.exists() && !resource.isDirectory()) {
    long len=resource.length();
    if (len > 0 && len < _maxCachedFileSize && len < _maxCacheSize) {
      int must_be_smaller_than=_maxCacheSize - (int)len;
synchronized (_cache) {
        while (_leastRecentlyUsed != null && (_cachedSize > must_be_smaller_than || (_maxCachedFiles > 0 && _cachedFiles >= _maxCachedFiles)))         _leastRecentlyUsed.invalidate();
        if (_cachedSize > must_be_smaller_than || (_maxCachedFiles > 0 && _cachedFiles >= _maxCachedFiles))         return null;
      }
      content=new Content(resource);
      fill(content);
synchronized (_cache) {
        Content content2=(Content)_cache.get(pathInContext);
        if (content2 != null) {
          content.release();
          return content2;
        }
        while (_leastRecentlyUsed != null && (_cachedSize > must_be_smaller_than || (_maxCachedFiles > 0 && _cachedFiles >= _maxCachedFiles)))         _leastRecentlyUsed.invalidate();
        if (_cachedSize > must_be_smaller_than || (_maxCachedFiles > 0 && _cachedFiles >= _maxCachedFiles))         return null;
        content.cache(pathInContext);
        return content;
      }
    }
  }
  return null;
}
