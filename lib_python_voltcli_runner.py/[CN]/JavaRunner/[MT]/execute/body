def execute(self, java_class, java_opts_override, *args, **kwargs):
    '\n        Run a Java command line with option overrides.\n        Supported keyword arguments:\n            classpath           Java classpath.\n            daemon              Run as background (daemon) process if True.\n            daemon_name         Daemon name.\n            daemon_description  Daemon description for messages.\n            daemon_output       Output directory for PID files and stdout/error capture.\n        '
    self.initialize()
    classpath = self.classpath
    kwargs_classpath = kwargs.get('classpath', None)
    if kwargs_classpath:
        classpath = ':'.join((kwargs_classpath, classpath))
    java_args = [environment.java]
    java_opts = utility.merge_java_options(environment.java_opts, java_opts_override)
    java_args.extend(java_opts)
    java_args.append(('-Dlog4j.configuration=file://%s' % os.environ['LOG4J_CONFIG_PATH']))
    java_args.append(('-Djava.library.path="%s"' % os.environ['VOLTDB_VOLTDB']))
    java_args.extend(('-classpath', classpath))
    java_args.append(java_class)
    for arg in args:
        if (arg is not None):
            java_args.append(arg)
    daemonizer = utility.kwargs_get(kwargs, 'daemonizer')
    if daemonizer:
        daemonizer.start_daemon(*java_args)
    else:
        return utility.run_cmd(*java_args)
