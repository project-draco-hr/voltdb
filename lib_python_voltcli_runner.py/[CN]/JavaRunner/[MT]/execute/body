def execute(self, java_class, java_opts_override, *args, **kwargs):
    '\n        Run a Java command line with option overrides.\n        '
    classpath = self.classpath
    kwargs_classpath = kwargs.get('classpath', None)
    if kwargs_classpath:
        classpath = ':'.join((kwargs_classpath, classpath))
    java_args = [environment.java]
    java_opts = utility.merge_java_options(environment.java_opts, java_opts_override)
    java_args.extend(java_opts)
    debug_port = kwargs.get('debugport', None)
    if debug_port:
        java_args.extend(('-Xdebug', '-Xnoagent', '-Djava.compiler=NONE', ('-Xrunjdwp:transport=dt_socket,address=%d,server=y,suspend=y' % debug_port)))
    java_args.append(('-Dlog4j.configuration=file://%s' % os.environ['LOG4J_CONFIG_PATH']))
    java_args.append(('-Djava.library.path="%s"' % os.environ['VOLTDB_VOLTDB']))
    java_args.extend(('-classpath', classpath))
    java_args.append(java_class)
    for arg in args:
        if (arg is not None):
            java_args.append(arg)
    return utility.run_cmd(*java_args)
