def package(self, output_dir_in, force, *args):
    '\n        Create python-runnable package/zip file.\n        '
    if (output_dir_in is None):
        output_dir = ''
    else:
        output_dir = output_dir_in
        if (not os.path.exists(output_dir)):
            os.makedirs(output_dir)
    if args:
        for name in args:
            if (name not in self.internal_verbspaces):
                utility.abort(('Unknown base command "%s" specified for packaging.' % name))
            verbspace = self.internal_verbspaces[name]
            self._create_package(output_dir, verbspace.name, verbspace.version, verbspace.description, force)
    else:
        self._create_package(output_dir, self.verbspace.name, self.verbspace.version, self.verbspace.description, force)
    compat_msg = (compatibility_warning % dict(name=self.verbspace.name))
    if ((sys.version_info[0] == 2) and (sys.version_info[1] < 6)):
        utility.warning(compat_msg)
    readme_path = os.path.join(output_dir, ('README.%s' % self.verbspace.name))
    readme_file = utility.File(readme_path, mode='w')
    readme_file.open()
    try:
        readme_file.write((readme_template % dict(name=self.verbspace.name, usage=self.get_usage(), warning=compat_msg)))
    finally:
        readme_file.close()
