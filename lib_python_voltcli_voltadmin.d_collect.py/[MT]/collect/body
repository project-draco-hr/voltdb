@VOLT.Command(description='Collect artifacts for problem analysis.', options=(VOLT.StringOption(None, '--nonce', 'nonce', 'the unique collection file identifier', default=''), VOLT.BooleanOption(None, '--skipheapdump', 'skipheapdump', 'exclude heap dump file from collection', default=False), VOLT.BooleanOption(None, '--upload', 'upload', 'automatically upload collected files to server (skip confirmation)', default=False)), arguments=VOLT.PathArgument('voltdbroot', 'the voltdbroot path', absolute=True))
def collect(runner):
    runner.args.extend([runner.opts.voltdbroot, runner.opts.nonce, runner.opts.skipheapdump, runner.opts.upload])
    runner.java.execute('org.voltdb.utils.Collector', None, *runner.args)
