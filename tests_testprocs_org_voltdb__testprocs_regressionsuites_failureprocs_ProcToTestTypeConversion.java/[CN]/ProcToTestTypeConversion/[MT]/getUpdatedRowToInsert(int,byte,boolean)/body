{
  Object[] rowToInsert={m_byteVal,m_shortVal,m_intVal,m_bigIntVal,m_doubleVal,m_bigDecVal,m_tsVal,m_strTs,m_binVal,m_pt,m_poly};
  assert(colIndex < rowToInsert.length);
  VoltType toType=VoltType.get(valueTypeToPopulateWith);
switch (toType) {
case TINYINT:
    rowToInsert[colIndex]=m_byteVal;
  break;
case SMALLINT:
rowToInsert[colIndex]=m_shortVal;
break;
case INTEGER:
rowToInsert[colIndex]=m_intVal;
break;
case BIGINT:
rowToInsert[colIndex]=m_bigIntVal;
break;
case FLOAT:
rowToInsert[colIndex]=m_doubleVal;
break;
case DECIMAL:
rowToInsert[colIndex]=m_bigDecVal;
break;
case TIMESTAMP:
rowToInsert[colIndex]=m_tsVal;
break;
case STRING:
rowToInsert[colIndex]=strTs ? m_strTs : m_strNum;
break;
case VARBINARY:
rowToInsert[colIndex]=m_binVal;
break;
case GEOGRAPHY_POINT:
rowToInsert[colIndex]=m_pt;
break;
case GEOGRAPHY:
rowToInsert[colIndex]=m_poly;
break;
default :
assert(false);
rowToInsert[colIndex]=VoltTypeUtil.getRandomValue(toType);
break;
}
return rowToInsert;
}
