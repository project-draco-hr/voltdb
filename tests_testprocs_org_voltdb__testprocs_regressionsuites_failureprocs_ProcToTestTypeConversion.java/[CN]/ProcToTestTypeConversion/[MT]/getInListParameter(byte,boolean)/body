{
  VoltType toType=VoltType.get(valueTypeToPopulateWith);
switch (toType) {
case TINYINT:
    byte[] tinyValue={m_byteVal,m_byteVal};
  return tinyValue;
case SMALLINT:
short[] shortValue={m_shortVal,m_shortVal};
return shortValue;
case INTEGER:
int[] intValue={m_intVal,m_intVal};
return intValue;
case BIGINT:
long[] bigintValue={m_bigIntVal,m_bigIntVal};
return bigintValue;
case FLOAT:
double[] floatValue={m_floatVal,m_floatVal};
return floatValue;
case DECIMAL:
BigDecimal[] bigdecValue={m_bigDecVal,m_bigDecVal};
return bigdecValue;
case TIMESTAMP:
TimestampType[] tsValue={m_tsVal,m_tsVal};
return tsValue;
case STRING:
String str=strTs ? m_strTs : m_strNum;
String[] strValue={str,str};
return strValue;
case VARBINARY:
byte[][] binValue={{m_byteVal,m_byteVal},{m_byteVal,m_byteVal}};
return binValue;
case GEOGRAPHY_POINT:
GeographyPointValue[] ptValue={m_pt,m_pt};
return ptValue;
case GEOGRAPHY:
GeographyValue[] polyValue={m_poly,m_poly};
return polyValue;
default :
assert(false);
break;
}
return null;
}
