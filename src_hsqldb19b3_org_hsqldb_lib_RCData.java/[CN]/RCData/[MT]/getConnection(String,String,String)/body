{
  String curDriver=curDriverIn;
  String curCharset=curCharsetIn;
  String curTrustStore=curTrustStoreIn;
  Properties sysProps=System.getProperties();
  if (curDriver == null) {
    curDriver=((driver == null) ? DEFAULT_JDBC_DRIVER : driver);
  }
  if (curCharset == null && charset != null) {
    curCharset=charset;
  }
  if (curTrustStore == null && truststore != null) {
    curTrustStore=truststore;
  }
  if (curCharset == null) {
    sysProps.remove("sqlfile.charset");
  }
 else {
    sysProps.put("sqlfile.charset",curCharset);
  }
  if (curTrustStore == null) {
    sysProps.remove("javax.net.ssl.trustStore");
  }
 else {
    sysProps.put("javax.net.ssl.trustStore",curTrustStore);
  }
  String urlString=null;
  try {
    urlString=expandSysPropVars(url);
  }
 catch (  IllegalArgumentException iae) {
    throw new MalformedURLException(iae.getMessage() + " for URL '" + url+ "'");
  }
  String userString=null;
  if (username != null)   try {
    userString=expandSysPropVars(username);
  }
 catch (  IllegalArgumentException iae) {
    throw new MalformedURLException(iae.getMessage() + " for user name '" + username+ "'");
  }
  String passwordString=null;
  if (password != null)   try {
    passwordString=expandSysPropVars(password);
  }
 catch (  IllegalArgumentException iae) {
    throw new MalformedURLException(iae.getMessage() + " for password");
  }
  Class.forName(curDriver);
  Connection c=(userString == null) ? DriverManager.getConnection(urlString) : DriverManager.getConnection(urlString,userString,passwordString);
  if (ti != null)   RCData.setTI(c,ti);
  return c;
}
