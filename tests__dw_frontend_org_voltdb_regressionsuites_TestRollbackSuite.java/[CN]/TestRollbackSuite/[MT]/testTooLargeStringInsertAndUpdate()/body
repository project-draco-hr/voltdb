{
  final java.util.Random r=new java.util.Random();
  StringBuilder sb=new StringBuilder(300);
  for (int ii=0; ii < 300; ii++) {
    sb.append(r.nextInt(9));
  }
  final String insertQuery="INSERT INTO CUSTOMER_NAME VALUES ( 0, 0, 0, 'foo','" + sb.toString() + "')";
  final String updateQuery="UPDATE CUSTOMER_NAME SET C_ID = 0, C_D_ID = 0, C_W_ID = 0, C_FIRST = 'foo', C_LAST ='" + sb.toString() + "'";
  final Client client=getClient();
  boolean threwException=false;
  try {
    client.callProcedure("@AdHoc",insertQuery);
  }
 catch (  ProcCallException e) {
    threwException=true;
  }
  assertTrue(threwException);
  VoltTable results[]=null;
  try {
    results=client.callProcedure("@AdHoc","SELECT * FROM CUSTOMER_NAME").getResults();
  }
 catch (  ProcCallException e) {
    fail();
  }
  assertNotNull(results);
  assertEquals(1,results.length);
  assertEquals(0,results[0].getRowCount());
  try {
    client.callProcedure("@AdHoc","INSERT INTO CUSTOMER_NAME VALUES ( 0, 0, 0, 'foo', 'bar')");
  }
 catch (  ProcCallException e) {
    fail();
  }
  threwException=false;
  try {
    client.callProcedure("@AdHoc",updateQuery);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    threwException=true;
  }
  assertTrue(threwException);
  results=null;
  try {
    results=client.callProcedure("@AdHoc","SELECT * FROM CUSTOMER_NAME").getResults();
  }
 catch (  ProcCallException e) {
    fail();
  }
  assertNotNull(results);
  assertEquals(1,results.length);
  assertEquals(1,results[0].getRowCount());
  VoltTable result=results[0];
  result.advanceRow();
  assertEquals(0,result.getLong(0));
  assertEquals(0,result.getLong(1));
  assertEquals(0,result.getLong(2));
  assertTrue("foo".equals(result.getString(3)));
  assertTrue("bar".equals(result.getString(4)));
}
