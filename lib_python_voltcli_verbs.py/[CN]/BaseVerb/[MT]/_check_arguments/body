def _check_arguments(self):
    if self.dirty_args:

        def check_argument(cli_spec_arg, is_last):
            if ((cli_spec_arg.min_count < 0) or (cli_spec_arg.max_count < 0)):
                utility.abort(('%s argument (%s) has a negative min or max count declared.' % (self.name, self.cli_spec_arg.name)))
            if ((cli_spec_arg.min_count == 0) and (cli_spec_arg.max_count == 0)):
                utility.abort(('%s argument (%s) has zero min and max counts declared.' % (self.name, self.cli_spec_arg.name)))
            if ((not is_last) and ((cli_spec_arg.min_count != 1) or (cli_spec_arg.max_count != 1))):
                utility.abort(('%s argument (%s) is not the last argument, but has min/max counts declared.' % (self.name, self.cli_spec_arg.name)))
        nargs = len(self.cli_spec.arguments)
        if (nargs > 1):
            for i in range((nargs - 1)):
                check_argument(self.cli_spec.arguments[i], False)
            check_argument(self.cli_spec.arguments[(-1)], True)
        self.dirty_args = False
