def initialize(self, verb):
    JavaBundle.initialize(self, verb)
    verb.add_options(cli.StringListOption(None, '--ignore', 'skip_requirements', 'requirements to skip when start voltdb:\n\t\t\t     thp - Checking for Transparent Huge Pages (THP) has been disabled.  Use of THP can cause VoltDB to run out of memory. Do not disable this check on production systems.', default=None))
    verb.add_options(cli.StringOption('-d', '--deployment', 'deployment', 'specify the location of the deployment file', default=None))
    verb.add_options(cli.StringOption('-g', '--placement-group', 'placementgroup', 'placement group', default='0'))
    if self.default_host:
        verb.add_options(cli.StringOption('-H', '--host', 'host', 'HOST[:PORT] (default HOST=localhost, PORT=3021)', default='localhost:3021'))
    else:
        verb.add_options(cli.StringOption('-H', '--host', 'host', 'HOST[:PORT] host must be specified (default HOST=localhost, PORT=3021)'))
    if self.supports_live:
        verb.add_options(cli.BooleanOption('-b', '--blocking', 'block', 'perform a blocking rejoin'))
    if self.needs_catalog:
        verb.add_arguments(cli.PathArgument('catalog', 'the application catalog jar file path', min_count=0, max_count=1))
    if self.safemode_available:
        verb.add_options(cli.BooleanOption(None, '--safemode', 'safemode', None))
    if self.supports_daemon:
        verb.add_options(cli.BooleanOption('-B', '--background', 'daemon', 'run the VoltDB server in the background (as a daemon process)'))
        if self.supports_multiple_daemons:
            verb.add_options(cli.IntegerOption('-I', '--instance', 'instance', None))
    if self.new_voltdb_instance:
        verb.add_options(cli.BooleanOption('-n', '--new', 'new', 'Start a new, empty database even if the VoltDB managed directories contain files from a previous session.'))
