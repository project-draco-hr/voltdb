def go(self, verb, runner):
    if self.needs_live:
        if runner.opts.live:
            final_args = ['live', self.subcommand]
        else:
            final_args = [self.subcommand]
    else:
        final_args = [self.subcommand]
    if self.needs_catalog:
        catalog = runner.opts.catalog
        if (not catalog):
            catalog = runner.config.get('volt.catalog')
        if (catalog is None):
            utility.abort('A catalog path is required.')
        final_args.extend(['catalog', catalog])
    if runner.opts.deployment:
        final_args.extend(['deployment', runner.opts.deployment])
    if runner.opts.host:
        final_args.extend(['host', runner.opts.host.host])
        if (runner.opts.host.port is not None):
            final_args.extend(['port', runner.opts.host.port])
    if runner.opts.license:
        final_args.extend(['license', runner.opts.license])
    if runner.opts.internalinterface:
        final_args.extend(['internalinterface', runner.opts.internalinterface])
    if runner.opts.internalport:
        final_args.extend(['internalport', runner.opts.internalport])
    if runner.opts.zkport:
        final_args.extend(['zkport', runner.opts.zkport])
    if runner.opts.replicationport:
        final_args.extend(['replicationport', runner.opts.replicationport])
    if runner.opts.adminport:
        final_args.extend(['adminport', runner.opts.adminport])
    if runner.opts.externalinterface:
        final_args.extend(['externalinterface', runner.opts.externalinterface])
    if runner.args:
        final_args.extend(runner.args)
    self.run_java(verb, runner, *final_args)
