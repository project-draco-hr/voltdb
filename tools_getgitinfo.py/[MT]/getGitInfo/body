def getGitInfo():
    'Make a build string for svn\n    \n    Returns a string or None if not in a git repository'
    (urlbase, gitLocalVersion, local) = ('', '', '')
    (gitLocalVersion, stderr) = Popen('git describe --dirty', shell=True, stdout=PIPE, stderr=PIPE).communicate()
    if stderr:
        print 'This is not a git working tree\n'
        return
    gitLocalVersion = gitLocalVersion.strip()
    (gitLocalBranch, stderr) = Popen('git name-rev --name-only HEAD', shell=True, stdout=PIPE, stderr=PIPE).communicate()
    gitLocalBranch = gitLocalBranch.strip()
    (gitRemote, stderr) = Popen(('git config --get branch.%s.remote' % gitLocalBranch), shell=True, stdout=PIPE, stderr=PIPE).communicate()
    gitRemote = gitRemote.strip()
    if (not gitRemote):
        local = '-local'
    else:
        (gitRemoteVersion, stderr) = Popen(('git describe %s' % gitRemote), shell=True, stdout=PIPE, stderr=PIPE).communicate()
        gitRemoteVersion = gitRemoteVersion.strip()
        if (gitRemoteVersion != gitLocalVersion[:len(gitRemoteVersion)]):
            local = '-local'
    return ('%s%s' % (gitLocalVersion, local))
