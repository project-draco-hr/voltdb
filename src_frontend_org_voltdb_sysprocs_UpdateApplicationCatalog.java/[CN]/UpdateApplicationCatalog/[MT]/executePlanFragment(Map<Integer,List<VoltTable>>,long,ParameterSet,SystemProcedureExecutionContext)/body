{
  if (fragmentId == SysProcFragmentId.PF_updateCatalog) {
    String catalogDiffCommands=(String)params.toArray()[0];
    String commands=Encoder.decodeBase64AndDecompress(catalogDiffCommands);
    int expectedCatalogVersion=(Integer)params.toArray()[1];
    long deploymentCRC=(Long)params.toArray()[2];
    byte catalogBytes[]=null;
    try {
      catalogBytes=VoltDB.instance().getHostMessenger().getZK().getData(VoltZK.catalogbytes,false,null);
    }
 catch (    Exception e) {
      Throwables.propagate(e);
    }
    catalogBytes=Arrays.copyOfRange(catalogBytes,4,catalogBytes.length - 4);
    Pair<CatalogContext,CatalogSpecificPlanner> p=VoltDB.instance().catalogUpdate(commands,catalogBytes,expectedCatalogVersion,getVoltPrivateRealTransactionIdDontUseMe(),getTransactionTime().getTime(),deploymentCRC);
    context.updateCatalog(commands,p.getFirst(),p.getSecond());
    VoltTable result=new VoltTable(VoltSystemProcedure.STATUS_SCHEMA);
    result.addRow(VoltSystemProcedure.STATUS_OK);
    return new DependencyPair(DEP_updateCatalog,result);
  }
 else   if (fragmentId == SysProcFragmentId.PF_updateCatalogAggregate) {
    VoltTable result=new VoltTable(VoltSystemProcedure.STATUS_SCHEMA);
    List<VoltTable> deps=dependencies.get(DEP_updateCatalog);
    for (    VoltTable dep : deps) {
      while (dep.advanceRow()) {
        result.add(dep);
      }
    }
    return new DependencyPair(DEP_updateCatalogAggregate,result);
  }
 else {
    VoltDB.crashLocalVoltDB("Received unrecognized plan fragment id " + fragmentId + " in UpdateApplicationCatalog",false,null);
  }
  throw new RuntimeException("Should not reach this code");
}
