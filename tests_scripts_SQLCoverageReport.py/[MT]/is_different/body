def is_different(x, cntonly):
    'Marks the attributes that are different. Since the whole table will be\n    printed out as a single string.\n    the first line is column count,\n    the second line is row count,\n    the third line is column names and types,\n    and then followed by rows.\n    '
    if (x['jni']['Status'] != x['hsqldb']['Status']):
        if ((int(x['jni']['Status']) > 0) or (int(x['hsqldb']['Status']) > 0)):
            x['highlight'] = ['Status']
            return True
    if (('Result' in x['jni']) and ('Result' in x['hsqldb'])):
        x['highlight'] = []
        jniResult = x['jni']['Result']
        hsqldbResult = x['hsqldb']['Result']
        if ((jniResult == None) or (hsqldbResult == None)):
            return True
        if (len(jniResult) != len(hsqldbResult)):
            return True
        for i in xrange(len(jniResult)):
            x['highlight'].append([])
            if (len(jniResult[i].tuples) != len(hsqldbResult[i].tuples)):
                x['highlight'][i].append(1)
                return True
            if (cntonly != True):
                return False
                for j in xrange(len(jniResult[i].tuples)):
                    if (jniResult[i].tuples[j] != hsqldbResult[i].tuples[j]):
                        if ((jniResult[i].columns[j].type == FastSerializer.VOLTTYPE_FLOAT) and (hsqldbResult[i].columns[j].type == FastSerializer.VOLTTYPE_DECIMAL) and (decimal.Decimal(str(jniResult[i].tuples[j])) == hsqldbResult[i].tuples[j])):
                            continue
                        x['highlight'][i].append((j + 4))
        if (cntonly != True):
            for i in x['highlight']:
                return True
    return False
