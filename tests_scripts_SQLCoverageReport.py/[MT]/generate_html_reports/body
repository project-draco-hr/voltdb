def generate_html_reports(suite, seed, statements_path, hsql_path, jni_path, output_dir, report_all, cntonly=False):
    if ((output_dir != None) and (not os.path.exists(output_dir))):
        os.makedirs(output_dir)
    statements_file = open(statements_path, 'rb')
    hsql_file = open(hsql_path, 'rb')
    jni_file = open(jni_path, 'rb')
    failures = 0
    count = 0
    mismatches = []
    all_results = []
    try:
        while True:
            try:
                statement = cPickle.load(statements_file)
            except EOFError:
                break
            jni = cPickle.load(jni_file)
            hsql = cPickle.load(hsql_file)
            count += 1
            if (int(jni['Status']) != 1):
                failures += 1
            statement['jni'] = jni
            statement['hsqldb'] = hsql
            if is_different(statement, cntonly):
                mismatches.append(statement)
            if report_all:
                all_results.append(statement)
    except EOFError as e:
        raise IOError(('Not enough results for generated statements: %s' % str(e)))
    statements_file.close()
    hsql_file.close()
    jni_file.close()
    topLine = getTopSummaryLine()
    currentTime = datetime.datetime.now().strftime('%A, %B %d, %I:%M:%S %p')
    keyStats = createSummaryInHTML(count, failures, len(mismatches), seed)
    report = ('\n<html>\n<head>\n<title>SQL Coverage Test Report</title>\n<style>\nh2 {text-transform: uppercase}\n</style>\n</head>\n\n<body>\n    <h2>Test Suite Name: %s</h2>\n    <h4>Random Seed: <b>%d</b></h4>\n    <p>This report was generated on <b>%s</b></p>\n    <table border=1><tr>%s</tr>\n' % (suite, seed, currentTime, topLine))
    report += ('\n<tr>%s</tr>\n</table>\n' % keyStats)

    def key(x):
        return int(x['id'])
    if (len(mismatches) > 0):
        sorted(mismatches, cmp=cmp, key=key)
        report += print_section('Mismatched Statements', mismatches, output_dir)
    if report_all:
        report += print_section('Total Statements', all_results, output_dir)
    report += '\n</body>\n</html>\n'
    if (output_dir != None):
        summary = open(os.path.join(output_dir, 'index.html'), 'w')
        summary.write(report.encode('utf-8'))
        summary.close()
    results = {}
    results['mis'] = len(mismatches)
    results['keyStats'] = keyStats
    return results
