def generate_html_reports(seed, statements_path, hsql_path, jni_path, output_dir, report_all, cntonly=False, is_matching=False):
    if ((output_dir != None) and (not os.path.exists(output_dir))):
        os.makedirs(output_dir)
    statements_file = open(statements_path, 'rb')
    hsql_file = open(hsql_path, 'rb')
    jni_file = open(jni_path, 'rb')
    failures = 0
    count = 0
    mismatches = []
    all_results = []
    while True:
        try:
            statement = cPickle.load(statements_file)
        except EOFError:
            break
        try:
            jni = cPickle.load(jni_file)
            hsql = cPickle.load(hsql_file)
        except EOFError as e:
            raise IOError(('Not enough results for generated statements: %s' % str(e)))
        count += 1
        if (int(jni['Status']) != 1):
            failures += 1
        statement['hsqldb'] = hsql
        statement['jni'] = jni
        if is_matching:
            if (not is_different(statement, cntonly)):
                mismatches.append(statement)
        elif is_different(statement, cntonly):
            mismatches.append(statement)
        if report_all:
            all_results.append(statement)
    statements_file.close()
    hsql_file.close()
    jni_file.close()
    keyStats = createSummaryInHTML(count, failures, mismatches, seed)
    report = '\n<html>\n<head>\n<title>SQL Coverage Test Report</title>\n<style>\nh2 {text-transform: uppercase}\n</style>\n</head>\n\n<body>\n'
    report += keyStats

    def key(x):
        return int(x['id'])
    if (len(mismatches) > 0):
        sorted(mismatches, cmp=cmp, key=key)
        report += print_section('Mismatched Statements', mismatches, output_dir)
    if report_all:
        report += print_section('Total Statements', all_results, output_dir)
    report += '\n</body>\n</html>\n'
    if (output_dir != None):
        summary = open(os.path.join(output_dir, 'index.html'), 'w')
        summary.write(report.encode('utf-8'))
        summary.close()
    return (failures, len(mismatches), keyStats)
