def generate_table_str(res, key):
    highlights = res.get('highlight')
    source = res[key].get('Result')
    if (not source):
        return ''
    result = []
    result.append(highlight(('column count: %d' % len(source.columns)), ('columns' == highlights)))
    result.append(highlight(('row count: %d' % len(source.tuples)), ('tuples' == highlights)))
    result.append(('cols: ' + ', '.join(map((lambda x: str(x)), source.columns))))
    result.append('rows -')
    if isinstance(highlights, list):
        for j in xrange(len(source.tuples)):
            result.append(highlight(as_html_unicode_string(source.tuples[j]), (j in highlights)))
    else:
        result.extend(map((lambda x: as_html_unicode_string(x)), source.tuples))
    tablestr = '<br />'.join(result)
    return tablestr
