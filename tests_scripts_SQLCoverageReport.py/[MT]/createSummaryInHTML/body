def createSummaryInHTML(count, failures, mismatches, seed):
    passed = (count - (failures + len(mismatches)))
    passed_ps = fail_ps = mis_ps = cell4misPct = cell4misCnt = color = None
    if (failures == 0):
        fail_ps = '0.00%'
    else:
        fail_ps = (str('{0:.2f}'.format(((failures / float(count)) * 100))) + '%')
    if (len(mismatches) == 0):
        mis_ps = '0.00%'
        cell4misPct = (('<td align=right>' + mis_ps) + '</td>')
        cell4misCnt = (('<td align=right>' + str(len(mismatches))) + '</td>')
    else:
        color = '#FF0000'
        mis_ps = (str('{0:.2f}'.format(((len(mismatches) / float(count)) * 100))) + '%')
        cell4misPct = (((('<td align=right bgcolor=' + color) + '>') + mis_ps) + '</td>')
        cell4misCnt = (((('<td align=right bgcolor=' + color) + '>') + str(len(mismatches))) + '</td>')
    misRow = (cell4misCnt + cell4misPct)
    if (passed == count):
        passed_ps = '100.00%'
    else:
        passed_ps = (str('{0:.2f}'.format(((passed / float(count)) * 100))) + '%')
    stats = ('\n<td align=right>%d</td>\n<td align=right>%s</td>\n<td align=right>%d</td>\n<td align=right>%s</td>\n<td align=right>%d</td>%s</tr>\n' % (passed, passed_ps, failures, fail_ps, count, misRow))
    return stats
