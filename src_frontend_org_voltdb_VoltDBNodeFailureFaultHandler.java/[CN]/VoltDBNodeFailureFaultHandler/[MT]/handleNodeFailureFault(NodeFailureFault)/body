{
  ArrayList<Long> dead_sites=new ArrayList<Long>();
  Collections.sort(dead_sites);
  hostLog.error("Host failed, host id: " + node_fault.getHostId() + " hostname: "+ node_fault.getHostname());
  hostLog.error("  Removing sites from cluster: " + dead_sites);
  StringBuilder sb=new StringBuilder();
  for (  long site_id : dead_sites) {
    sb.append("set ");
    String site_path=VoltDB.instance().getCatalogContext().catalog.getClusters().get("cluster").getSites().get(Long.toString(site_id)).getPath();
    sb.append(site_path).append(" ").append("isUp false");
    sb.append("\n");
  }
  VoltDB.instance().clusterUpdate(sb.toString());
  if (m_rvdb.getCatalogContext().siteTracker.getFailedPartitions().size() != 0) {
    VoltDB.crashLocalVoltDB("Failure of host " + node_fault.getHostId() + " has rendered the cluster unviable.  Shutting down...",false,null);
  }
  m_waitForFaultReported.release();
  new Thread(){
    @Override public void run(){
      if (ExportManager.instance() != null) {
        ExportManager.instance().notifyOfClusterTopologyChange();
      }
      if (VoltDB.instance().getHostMessenger().isLocalHostReady() == false) {
        if (VoltDB.instance().getConfig().m_rejoinToHostAndPort == null) {
          String message="Node fault detected before all nodes finished " + "initializing. Cluster will not start.";
          VoltDB.crashGlobalVoltDB(message,false,null);
        }
      }
    }
  }
.start();
}
