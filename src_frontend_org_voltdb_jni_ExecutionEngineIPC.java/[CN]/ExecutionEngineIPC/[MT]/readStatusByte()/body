{
  int status=kErrorCode_RetrieveDependency;
  while (true) {
    status=m_socket.getInputStream().read();
    if (status == kErrorCode_RetrieveDependency) {
      final ByteBuffer dependencyIdBuffer=ByteBuffer.allocate(4);
      final int read=m_socketChannel.read(dependencyIdBuffer);
      if (read == 0) {
        throw new IOException("Unable to read enough bytes for dependencyId in order to " + " satisfy IPC backend request for a dependency table");
      }
      dependencyIdBuffer.rewind();
      sendDependencyTable(dependencyIdBuffer.getInt());
      continue;
    }
    if (status == kErrorCode_HandoffReadyELBuffer) {
      handoffReadELBuffer();
      continue;
    }
    try {
      checkErrorCode(status);
      break;
    }
 catch (    final RuntimeException e) {
      if (e instanceof SerializableException) {
        throw e;
      }
 else {
        throw (IOException)e.getCause();
      }
    }
  }
  return status;
}
