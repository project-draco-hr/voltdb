{
  final ByteBuffer resultTablesLengthBytes=ByteBuffer.allocate(4);
  resultTablesLengthBytes.rewind();
  int read=m_socketChannel.read(resultTablesLengthBytes);
  resultTablesLengthBytes.rewind();
  assert(read == 4);
  final int resultTablesLength=resultTablesLengthBytes.getInt();
  final ByteBuffer resultTablesBuffer=ByteBuffer.allocate(resultTablesLength);
  resultTablesBuffer.clear();
  resultTablesBuffer.rewind();
  read=m_socketChannel.read(resultTablesBuffer);
  while (read != resultTablesLength) {
    read+=m_socketChannel.read(resultTablesBuffer);
  }
  resultTablesBuffer.rewind();
  assert(read == resultTablesLength);
  final FastDeserializer ds=new FastDeserializer(resultTablesBuffer);
  final boolean dirty=ds.readBoolean();
  if (dirty)   m_dirty=true;
  for (int ii=0; ii < tables.length; ii++) {
    final int dependencyCount=ds.readInt();
    assert(dependencyCount == 1);
    ds.readInt();
    tables[ii]=(VoltTable)ds.readObject(tables[ii],null);
  }
}
