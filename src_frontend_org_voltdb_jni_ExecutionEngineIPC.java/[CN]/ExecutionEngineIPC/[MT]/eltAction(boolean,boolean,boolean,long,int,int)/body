{
  try {
    m_data.clear();
    m_data.putInt(Commands.ELTAction.m_id);
    m_data.putInt(ackAction ? 1 : 0);
    m_data.putInt(pollAction ? 1 : 0);
    m_data.putInt(resetAction ? 1 : 0);
    m_data.putLong(ackOffset);
    m_data.putInt(mTableId);
    m_data.flip();
    m_connection.write();
    ByteBuffer data=null;
    ByteBuffer results=ByteBuffer.allocate(8);
    while (results.remaining() > 0)     m_connection.m_socketChannel.read(results);
    results.flip();
    long result_offset=results.getLong();
    if (result_offset < 0) {
      ELTProtoMessage reply=null;
      reply=new ELTProtoMessage(partitionId,mTableId);
      reply.error();
      return reply;
    }
 else {
      results=ByteBuffer.allocate(4);
      while (results.remaining() > 0)       m_connection.m_socketChannel.read(results);
      results.flip();
      int result_sz=results.getInt();
      data=ByteBuffer.allocate(result_sz + 4);
      data.putInt(result_sz);
      while (data.remaining() > 0)       m_connection.m_socketChannel.read(data);
      data.flip();
      ELTProtoMessage reply=null;
      if (pollAction) {
        reply=new ELTProtoMessage(partitionId,mTableId);
        reply.pollResponse(result_offset,data);
      }
      return reply;
    }
  }
 catch (  final IOException e) {
    throw new RuntimeException(e);
  }
}
