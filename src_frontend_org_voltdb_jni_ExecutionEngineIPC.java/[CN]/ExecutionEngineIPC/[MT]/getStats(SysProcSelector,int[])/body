{
  m_data.clear();
  m_data.putInt(Commands.GetStats.m_id);
  m_data.putInt(selector.ordinal());
  m_data.putInt(locators.length);
  for (  final int locator : locators) {
    m_data.putInt(locator);
  }
  m_data.flip();
  try {
    m_connection.write();
  }
 catch (  final IOException e) {
    System.out.println("Exception: " + e.getMessage());
    throw new RuntimeException(e);
  }
  int result=ExecutionEngine.ERRORCODE_ERROR;
  try {
    result=m_connection.readStatusByte();
  }
 catch (  final IOException e) {
    System.out.println("Exception: " + e.getMessage());
    throw new RuntimeException(e);
  }
  try {
    if (result == ExecutionEngine.ERRORCODE_SUCCESS) {
      final ByteBuffer messageLengthBuffer=ByteBuffer.allocate(4);
      m_connection.m_socketChannel.read(messageLengthBuffer);
      messageLengthBuffer.rewind();
      final ByteBuffer messageBuffer=ByteBuffer.allocate(messageLengthBuffer.getInt());
      m_connection.m_socketChannel.read(messageBuffer);
      messageBuffer.rewind();
      final FastDeserializer fds=new FastDeserializer(messageBuffer);
      final VoltTable results[]=new VoltTable[1];
      final VoltTable resultTable=new VoltTable();
      results[0]=(VoltTable)fds.readObject(resultTable,this);
      return results;
    }
  }
 catch (  final IOException e) {
    System.out.println("Exception: " + e.getMessage());
    throw new RuntimeException(e);
  }
  return null;
}
