{
  String sql;
  AbstractPlanNode pn;
  AggregatePlanNode aggNode;
  sql="select a from r1 group by a having max(c) in (select c from r2 )";
  failToCompile(sql,HavingErrorMsg);
  sql="select a from r1 " + " group by a " + " having exists (select max(a) from r2) or max(c) > 0";
  pn=compile(sql);
  pn=pn.getChild(0);
  assertTrue(pn instanceof SeqScanPlanNode);
  aggNode=AggregatePlanNode.getInlineAggregationNode(pn);
  assertNotNull(aggNode);
  assertTrue(aggNode.getPostPredicate() == null);
  sql="select a from r1 " + " group by a " + " having exists (select max(a) from r2 limit 0) and max(c) > 0";
  pn=compile(sql);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof SeqScanPlanNode);
  aggNode=AggregatePlanNode.getInlineAggregationNode(pn);
  assertNotNull(aggNode);
  AbstractExpression having=aggNode.getPostPredicate();
  assertTrue(ConstantValueExpression.isBooleanFalse(having));
}
