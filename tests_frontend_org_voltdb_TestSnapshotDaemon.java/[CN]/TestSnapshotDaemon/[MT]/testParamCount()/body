{
  System.out.println("--------------\n  testParamCount\n---------------");
  SnapshotDaemon dut=getSnapshotDaemon();
  Connection c=mock(Connection.class);
  WriteStream ws=mock(WriteStream.class);
  when(c.writeStream()).thenReturn(ws);
  StoredProcedureInvocation spi=new StoredProcedureInvocation();
  Object[] params=new Object[0];
  spi.setParams(params);
  dut.requestUserSnapshot(spi,c);
  ClientResponseImpl resp=getResponseFromConnectionMock(c);
  assertEquals(ClientResponseImpl.GRACEFUL_FAILURE,resp.getStatus());
  assertTrue(resp.getStatusString().contains("@SnapshotSave requires 3 parameters"));
  params=new Object[2];
  spi.setParams(params);
  dut.requestUserSnapshot(spi,c);
  resp=getResponseFromConnectionMock(c);
  assertEquals(ClientResponseImpl.GRACEFUL_FAILURE,resp.getStatus());
  assertTrue(resp.getStatusString().contains("@SnapshotSave requires 3 parameters"));
  params=new Object[4];
  spi.setParams(params);
  dut.requestUserSnapshot(spi,c);
  resp=getResponseFromConnectionMock(c);
  assertEquals(ClientResponseImpl.GRACEFUL_FAILURE,resp.getStatus());
  assertTrue(resp.getStatusString().contains("@SnapshotSave requires 3 parameters"));
}
