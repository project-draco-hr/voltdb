{
  if (args.length != 1) {
    System.err.println("USAGE: LogFormatter log_file");
    System.exit(2);
  }
  FileInputStream fis=new FileInputStream(args[0]);
  BinaryInputArchive logStream=BinaryInputArchive.getArchive(fis);
  FileHeader fhdr=new FileHeader();
  fhdr.deserialize(logStream,"fileheader");
  if (fhdr.getMagic() != FileTxnLog.TXNLOG_MAGIC) {
    System.err.println("Invalid magic number for " + args[0]);
    System.exit(2);
  }
  System.out.println("ZooKeeper Transactional Log File with dbid " + fhdr.getDbid() + " txnlog format version "+ fhdr.getVersion());
  int count=0;
  while (true) {
    long crcValue;
    byte[] bytes;
    try {
      crcValue=logStream.readLong("crcvalue");
      bytes=logStream.readBuffer("txnEntry");
    }
 catch (    EOFException e) {
      System.out.println("EOF reached after " + count + " txns.");
      return;
    }
    if (bytes.length == 0) {
      System.out.println("EOF reached after " + count + " txns.");
      return;
    }
    Checksum crc=new Adler32();
    crc.update(bytes,0,bytes.length);
    if (crcValue != crc.getValue()) {
      throw new IOException("CRC doesn't match " + crcValue + " vs "+ crc.getValue());
    }
    InputArchive iab=BinaryInputArchive.getArchive(new ByteArrayInputStream(bytes));
    TxnHeader hdr=new TxnHeader();
    SerializeUtils.deserializeTxn(iab,hdr);
    System.out.println(DateFormat.getDateTimeInstance(DateFormat.SHORT,DateFormat.LONG).format(new Date(hdr.getTime())) + " session 0x" + Long.toHexString(hdr.getClientId())+ " cxid 0x"+ Long.toHexString(hdr.getCxid())+ " zxid 0x"+ Long.toHexString(hdr.getZxid())+ " "+ TraceFormatter.op2String(hdr.getType()));
    if (logStream.readByte("EOR") != 'B') {
      LOG.error("Last transaction was partial.");
      throw new EOFException("Last transaction was partial.");
    }
    count++;
  }
}
