{
  ServerThread localServer=null;
  Client client=null;
  try {
    String simpleSchema="create table blah (" + "ival integer default 0 not null, " + "PRIMARY KEY(ival)); "+ "PARTITION TABLE blah ON COLUMN ival;";
    VoltProjectBuilder builder=new VoltProjectBuilder();
    builder.addLiteralSchema(simpleSchema);
    builder.addStmtProcedure("Insert","insert into blah values (?);",null);
    boolean success=builder.compile(Configuration.getPathToCatalogForTest("edgecases.jar"),7,1,0);
    assert(success);
    MiscUtils.copyFile(builder.getPathToDeployment(),Configuration.getPathToCatalogForTest("edgecases.xml"));
    VoltDB.Configuration config=new VoltDB.Configuration();
    config.m_pathToCatalog=Configuration.getPathToCatalogForTest("edgecases.jar");
    config.m_pathToDeployment=Configuration.getPathToCatalogForTest("edgecases.xml");
    localServer=new ServerThread(config);
    localServer.start();
    localServer.waitForInitialization();
    client=ClientFactory.createClient();
    client.createConnection("localhost");
    try {
      ByteBuffer buf=ByteBuffer.allocate(4);
      buf.order(ByteOrder.LITTLE_ENDIAN);
      buf.putInt(7);
      byte[] value=buf.array();
      client.callProcedure("Insert",value);
      fail();
    }
 catch (    ProcCallException pce) {
      assertTrue(pce.getMessage().contains("Array / Scalar parameter mismatch"));
    }
  }
  finally {
    if (client != null)     client.close();
    if (localServer != null)     localServer.shutdown();
  }
}
