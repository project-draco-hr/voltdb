{
  Client client=getClient();
  loadData(false);
  VoltTable vt;
  String sql;
  ClientResponse cr;
  for (  String tb : tbs) {
    cr=client.callProcedure(tb + ".insert",6,10,2,"2013-07-18 02:00:00.123457");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    cr=client.callProcedure(tb + ".insert",7,40,2,"2013-07-18 02:00:00.123457");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  }
  for (  String tb : replicated_tbs) {
    sql="select dept, sum(wage) as sw1 from " + tb + " where (id, dept + 2) in "+ "       (select dept, count(dept) from "+ tb+ "        group by dept "+ "        order by dept DESC) "+ "group by dept;";
    validateTableOfLongs(client,sql,new long[][]{{1,10}});
    sql="select dept from " + tb + " "+ "group by dept "+ "having max(wage) in (select wage from R1) "+ "order by dept desc";
    verifyStmtFails(client,sql,TestPlansInExistsSubQueries.HavingErrorMsg);
    sql="select dept from " + tb + " "+ "group by dept "+ "having max(wage) + 1 - 1 in (select wage from R1) "+ "order by dept desc";
    verifyStmtFails(client,sql,TestPlansInExistsSubQueries.HavingErrorMsg);
    sql="select id from " + tb + " TBA "+ "where exists "+ "      (select dept from R1 "+ "       group by dept "+ "       having max(wage) = TBA.wage or min(wage) = TBA.wage) "+ "order by id;";
    validateTableOfLongs(client,sql,new long[][]{{1},{3},{5},{6}});
    sql="select id from " + tb + " TBA "+ "where exists "+ "      (select 1 from R2 "+ "       where exists "+ "             (select dept from R1 "+ "              group by dept "+ "              having max(wage) = TBA.wage) ) "+ "order by id;";
    validateTableOfLongs(client,sql,new long[][]{{3},{5}});
    vt=client.callProcedure("@AdHoc","select id from " + tb + " TBA "+ "where exists "+ "      (select dept from R1 "+ "       group by dept "+ "       having max(wage) = ?);",3).getResults()[0];
    validateTableOfLongs(vt,EMPTY_TABLE);
    sql="select id from " + tb + " where wage in "+ "       (select max(wage) from R1 "+ "        group by dept "+ "        having max(wage) > 30);";
    validateTableOfLongs(client,sql,new long[][]{{5}});
    sql="select id from " + tb + " TBA "+ "where exists "+ "      (select max(dept) from R1 where TBA.id = R1.id "+ "       group by dept) "+ "order by id;";
    validateTableOfLongs(client,sql,new long[][]{{1},{2},{3},{4},{5},{6},{7}});
  }
}
