{
  Client client=getClient();
  loadData(true);
  VoltTable vt;
  String sql;
  for (  String tb : replicated_tbs) {
    sql="select dept, sum(wage) as sw1 " + "from " + tb + " "+ "where (id, dept + 2) IN "+ "      (select dept, count(*) from "+ tb+ "       group by dept)"+ "group by dept;";
    validateTableOfLongs(client,sql,new long[][]{{1,10}});
    sql="select dept, sum(wage) as sw1 " + "from " + tb + " "+ "where (id, dept + 2) IN "+ "       (select dept, count(*) from "+ tb+ "        group by dept "+ "        order by dept DESC) "+ "group by dept;";
    validateTableOfLongs(client,sql,new long[][]{{1,10}});
    sql="select id " + "from " + tb + " TBA "+ "where exists "+ "      (select max(dept) from R1 where TBA.id = R1.id "+ "       group by dept) "+ "order by id;";
    validateTableOfLongs(client,sql,new long[][]{{1},{2},{3},{4},{5},{6},{7}});
    sql="select id " + "from " + tb + " "+ "where wage IN "+ "       (select max(wage) from R1 "+ "        group by dept "+ "        having max(wage) > 30);";
    validateTableOfLongs(client,sql,new long[][]{{5}});
    vt=client.callProcedure("@AdHoc","select id " + "from " + tb + " TBA "+ "where exists "+ "      (select dept from R1 "+ "       group by dept "+ "       having max(wage) = ?);",3).getResults()[0];
    validateTableOfLongs(vt,EMPTY_TABLE);
    sql="select id " + "from " + tb + " TBA "+ "where exists "+ "      (select dept from R1 "+ "       group by dept "+ "       having max(wage) = TBA.wage or min(wage) = TBA.wage) "+ "order by id;";
    validateTableOfLongs(client,sql,new long[][]{{1},{3},{5},{6}});
    sql="select id " + "from " + tb + " TBA "+ "where exists "+ "      (select 1 from R2 "+ "       where exists "+ "             (select dept from R1 "+ "              group by dept "+ "              having max(wage) = TBA.wage) ) "+ "order by id;";
    validateTableOfLongs(client,sql,new long[][]{{3},{5}});
  }
}
