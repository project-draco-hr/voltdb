{
  Client client=getClient();
  client.callProcedure("R1.insert",1,5,1,"2013-06-18 02:00:00.123457");
  client.callProcedure("R1.insert",2,10,1,"2013-07-18 10:40:01.123457");
  client.callProcedure("R1.insert",3,10,2,"2013-08-18 02:00:00.123457");
  VoltTable vt;
  String sql;
  sql="select R1.ID from R1 " + "where exists " + "      (select max(ID) from R2) "+ "order by ID;";
  validateTableOfLongs(client,sql,new long[][]{{1},{2},{3}});
  if (!isHSQL()) {
    sql="select R1.ID from R1 " + "where exists " + "      (select max(id) from R2 limit 0)";
    validateTableOfLongs(client,sql,EMPTY_TABLE);
    sql="select R1.ID from R1 " + "where exists " + "      (select count(*) from R2 limit 0)";
    validateTableOfLongs(client,sql,EMPTY_TABLE);
    vt=client.callProcedure("@AdHoc","select R1.ID from R1 " + "where exists " + "      (select count(id) from R2 limit ?)",0).getResults()[0];
    validateTableOfLongs(vt,EMPTY_TABLE);
  }
  vt=client.callProcedure("@AdHoc","select R1.ID from R1 " + "where exists " + "      (select count(*) from R2 limit ?) "+ "order by id;",1).getResults()[0];
  validateTableOfLongs(vt,new long[][]{{1},{2},{3}});
  sql="select R1.ID from R1 " + "where exists " + "      (select max(ID) from R2 offset 1);";
  validateTableOfLongs(client,sql,EMPTY_TABLE);
  sql="select R1.ID from R1 " + "where exists " + "      (select count(*) from R2 offset 1);";
  validateTableOfLongs(client,sql,EMPTY_TABLE);
  sql="select T1.ID " + "from R1 T1 join R1 T2 " + "ON exists "+ "   (select max(ID) from R2 offset 1)"+ "and T1.ID = 1;";
  validateTableOfLongs(client,sql,EMPTY_TABLE);
  vt=client.callProcedure("@AdHoc","select T1.ID " + "from R1 T1 join R1 T2 " + "ON exists "+ "   (select max(ID) from R2)"+ "or T1.ID = 25").getResults()[0];
  assertEquals(9,vt.getRowCount());
  sql="select max(ID), WAGE from R1 " + "group by WAGE " + "having exists "+ "       (select max(ID) from R2)"+ "    or max(ID) = 25 "+ "order by max(ID) asc";
  validateTableOfLongs(client,sql,new long[][]{{1},{3}});
  sql="select max(ID), WAGE from R1 " + "group by WAGE " + "having exists "+ "       (select max(ID) from R2 offset 1)"+ "    and max(ID) > 0 "+ "order by max(ID) asc";
  validateTableOfLongs(client,sql,EMPTY_TABLE);
  client.callProcedure("R2.insert",1,5,1,"2013-06-18 02:00:00.123457");
  client.callProcedure("R2.insert",2,10,1,"2013-07-18 10:40:01.123457");
  client.callProcedure("R2.insert",3,10,2,"2013-08-18 02:00:00.123457");
  vt=client.callProcedure("@AdHoc","select R1.ID from R1 " + "where exists " + "      (select ID from R2"+ "       offset ?)",4).getResults()[0];
  validateTableOfLongs(vt,EMPTY_TABLE);
  vt=client.callProcedure("@AdHoc","select R1.ID from R1 " + "where exists " + "      (select ID from R2"+ "       offset ?) "+ "order by id;",1).getResults()[0];
  validateTableOfLongs(vt,new long[][]{{1},{2},{3}});
  sql="select R1.ID from R1 " + "where exists " + "      (select WAGE from R2"+ "       group by WAGE ) "+ "order by id;";
  validateTableOfLongs(client,sql,new long[][]{{1},{2},{3}});
  sql="select R1.ID from R1 " + "where exists " + "      (select WAGE from R2"+ "       group by WAGE"+ "       offset 2)";
  validateTableOfLongs(client,sql,EMPTY_TABLE);
  sql="select R1.ID from R1 " + "where exists " + "      (select ID, MAX(WAGE) from R2"+ "       group by ID) "+ "order by id;";
  validateTableOfLongs(client,sql,new long[][]{{1},{2},{3}});
  sql="select R1.ID from R1 " + "where exists " + "      (select ID, MAX(WAGE) from R2 "+ "       group by ID "+ "       having MAX(WAGE) > 20)";
  validateTableOfLongs(client,sql,EMPTY_TABLE);
  sql="select R1.ID from R1 " + "where exists " + "      (select ID, MAX(WAGE) from R2 "+ "       group by ID "+ "       having MAX(WAGE) > 9) "+ "order by id;";
  validateTableOfLongs(client,sql,new long[][]{{1},{2},{3}});
  sql="select R1.ID from R1 " + "where exists " + "      (select ID, MAX(WAGE) from R2 "+ "       group by ID "+ "       having MAX(WAGE) > 9 offset 2);";
  validateTableOfLongs(client,sql,EMPTY_TABLE);
}
