{
  m_hsql=null;
  m_projectFileURL=projectFileURL;
  m_jarOutputPath=jarOutputPath;
  m_outputStream=output;
  m_procInfoOverrides=procInfoOverrides;
  final Catalog catalog=compileCatalog(projectFileURL);
  if (catalog == null) {
    compilerLog.error("Catalog compilation failed.");
    return false;
  }
  if (pathToDeployment != null) {
    CatalogUtil.compileDeployment(catalog,pathToDeployment);
  }
  final String catalogCommands=catalog.serialize();
  byte[] catalogBytes=null;
  try {
    catalogBytes=catalogCommands.getBytes("UTF-8");
  }
 catch (  final UnsupportedEncodingException e1) {
    addErr("Can't encode the compiled catalog file correctly");
    return false;
  }
  try {
    m_jarBuilder.addEntry("catalog.txt",catalogBytes);
    m_jarBuilder.addEntry("project.xml",new File(projectFileURL));
    for (    final Entry<String,String> e : m_ddlFilePaths.entrySet())     m_jarBuilder.addEntry(e.getKey(),new File(e.getValue()));
    m_jarBuilder.writeJarToDisk(jarOutputPath);
  }
 catch (  final VoltCompilerException e) {
    return false;
  }
  assert(!hasErrors());
  if (hasErrors()) {
    return false;
  }
  return true;
}
