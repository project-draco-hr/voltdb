{
  final ArrayList<Class<?>> classDependencies=new ArrayList<Class<?>>();
  final VoltDDLElementTracker voltDdlTracker=new VoltDDLElementTracker(this);
  Database db=initCatalogDatabase();
  if (database.getSchemas() != null) {
    for (    SchemasType.Schema schema : database.getSchemas().getSchema()) {
      compilerLog.l7dlog(Level.INFO,LogKeys.compiler_VoltCompiler_CatalogPath.name(),new Object[]{schema.getPath()},null);
      File schemaFile=new File(schema.getPath());
      String schemaName=schemaFile.getName();
      if (jarOutput != null && jarOutput.containsKey(schemaName)) {
        ddlReaderList.add(new VoltCompilerJarFileReader(jarOutput,schemaName));
      }
 else {
        ddlReaderList.add(createDDLFileReader(schema.getPath()));
      }
    }
  }
  if (database.getGroups() != null) {
    for (    GroupsType.Group group : database.getGroups().getGroup()) {
      org.voltdb.catalog.Group catGroup=db.getGroups().add(group.getName());
      catGroup.setAdhoc(group.isAdhoc());
      catGroup.setDefaultproc(group.isDefaultproc());
      catGroup.setDefaultprocread(group.isDefaultprocread());
      if (group.isSysproc()) {
        catGroup.setAdmin(true);
        catGroup.setAdhoc(true);
        catGroup.setDefaultproc(true);
        catGroup.setDefaultprocread(true);
      }
    }
  }
  if (database.getRoles() != null) {
    for (    RolesType.Role role : database.getRoles().getRole()) {
      org.voltdb.catalog.Group catGroup=db.getGroups().add(role.getName());
      catGroup.setAdhoc(role.isAdhoc());
      catGroup.setDefaultproc(role.isDefaultproc());
      catGroup.setDefaultprocread(role.isDefaultprocread());
      if (role.isSysproc()) {
        catGroup.setAdmin(true);
        catGroup.setAdhoc(true);
        catGroup.setDefaultproc(true);
        catGroup.setDefaultprocread(true);
      }
    }
  }
  if (database.getProcedures() != null) {
    for (    ProceduresType.Procedure proc : database.getProcedures().getProcedure()) {
      voltDdlTracker.add(getProcedure(proc));
    }
  }
  if (database.getClassdependencies() != null) {
    for (    Classdependency dep : database.getClassdependencies().getClassdependency()) {
      classDependencies.add(getClassDependency(dep));
    }
  }
  if (database.getPartitions() != null) {
    for (    PartitionsType.Partition table : database.getPartitions().getPartition()) {
      voltDdlTracker.put(table.getTable(),table.getColumn());
    }
  }
  HSQLInterface hsql=HSQLInterface.loadHsqldb();
  compileDatabase(db,hsql,voltDdlTracker,ddlReaderList,database.getExport(),classDependencies,DdlProceduresToLoad.ALL_DDL_PROCEDURES,jarOutput);
}
