{
  assert(ddlReaderList.size() > 0 || projectReader != null);
  final InMemoryJarfile jarOutput=(jarOutputRet != null ? jarOutputRet : new InMemoryJarfile());
  m_projectFileURL=(projectReader != null ? projectReader.getPath() : null);
  if (m_projectFileURL == null && (ddlReaderList == null || ddlReaderList.isEmpty())) {
    addErr("One or more DDL files are required.");
    return null;
  }
  m_warnings.clear();
  m_infos.clear();
  m_errors.clear();
  DatabaseType database=getProjectDatabase(projectReader);
  if (database == null) {
    return null;
  }
  final Catalog catalog=compileCatalogInternal(database,cannonicalDDLIfAny,previousCatalogIfAny,ddlReaderList,jarOutput);
  if (catalog == null) {
    return null;
  }
  String ddlWithBatchSupport=CatalogSchemaTools.toSchema(catalog,m_importLines);
  m_canonicalDDL=CatalogSchemaTools.toSchemaWithoutInlineBatches(ddlWithBatchSupport);
  try {
    VoltDBInterface voltdb=VoltDB.instance();
    CatalogContext catalogContext=voltdb != null ? voltdb.getCatalogContext() : null;
    ClusterSettings clusterSettings=catalogContext != null ? catalogContext.getClusterSettings() : null;
    int tableCount=catalogContext != null ? catalogContext.tables.size() : 0;
    Deployment deployment=catalogContext != null ? catalogContext.cluster.getDeployment().get("deployment") : null;
    int hostcount=clusterSettings != null ? clusterSettings.hostcount() : 1;
    int kfactor=deployment != null ? deployment.getKfactor() : 0;
    int sitesPerHost=8;
    if (voltdb != null && voltdb.getCatalogContext() != null) {
      sitesPerHost=voltdb.getCatalogContext().getNodeSettings().getLocalSitesCount();
    }
    boolean isPro=MiscUtils.isPro();
    long minHeapRqt=RealVoltDB.computeMinimumHeapRqt(isPro,tableCount,sitesPerHost,kfactor);
    m_report=ReportMaker.report(m_catalog,minHeapRqt,isPro,hostcount,sitesPerHost,kfactor,m_warnings,ddlWithBatchSupport);
    m_reportPath=null;
    File file=null;
    if (standaloneCompiler) {
      file=new File("catalog-report.html");
    }
 else {
      if (catalogContext != null) {
        file=new File(VoltDB.instance().getVoltDBRootPath(),"catalog-report.html");
      }
    }
    if (file != null) {
      FileWriter fw=new FileWriter(file);
      fw.write(m_report);
      fw.close();
      m_reportPath=file.getAbsolutePath();
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
    return null;
  }
  jarOutput.put(AUTOGEN_DDL_FILE_NAME,m_canonicalDDL.getBytes(Constants.UTF8ENCODING));
  if (DEBUG_VERIFY_CATALOG) {
    debugVerifyCatalog(jarOutput,catalog);
  }
  final String catalogCommands=catalog.serialize();
  byte[] catalogBytes=catalogCommands.getBytes(Constants.UTF8ENCODING);
  try {
    if (!jarOutput.containsKey(CatalogUtil.CATALOG_BUILDINFO_FILENAME)) {
      addBuildInfo(jarOutput);
    }
    jarOutput.put(CatalogUtil.CATALOG_FILENAME,catalogBytes);
    jarOutput.put("catalog-report.html",m_report.getBytes(Constants.UTF8ENCODING));
  }
 catch (  final Exception e) {
    e.printStackTrace();
    return null;
  }
  assert(!hasErrors());
  if (hasErrors()) {
    return null;
  }
  return jarOutput;
}
