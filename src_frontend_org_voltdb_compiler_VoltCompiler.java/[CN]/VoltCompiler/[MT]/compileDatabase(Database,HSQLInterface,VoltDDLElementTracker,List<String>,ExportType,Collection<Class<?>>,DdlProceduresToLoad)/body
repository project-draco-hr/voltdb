{
  final DDLCompiler ddlcompiler=new DDLCompiler(this,hsql,voltDdlTracker);
  for (  final String schemaPath : schemas) {
    File schemaFile=null;
    if (schemaPath.contains(".jar!")) {
      String ddlText=null;
      try {
        ddlText=readFileFromJarfile(schemaPath);
      }
 catch (      final Exception e) {
        throw new VoltCompilerException(e);
      }
      schemaFile=VoltProjectBuilder.writeStringToTempFile(ddlText);
    }
 else {
      schemaFile=new File(schemaPath);
    }
    if (!schemaFile.isAbsolute()) {
      if (m_projectFileURL != null) {
        schemaFile=new File(new File(m_projectFileURL).getParent(),schemaPath);
      }
 else {
        schemaFile=new File(schemaPath);
      }
    }
    m_ddlFilePaths.put(schemaFile.getName(),schemaFile.getPath());
    ddlcompiler.loadSchema(schemaFile.getAbsolutePath(),db);
  }
  ddlcompiler.compileToCatalog(db);
  String msg="In database, ";
  final CatalogMap<Table> tables=db.getTables();
  for (  Table table : tables) {
    String tableName=table.getTypeName();
    if (voltDdlTracker.m_partitionMap.containsKey(tableName.toLowerCase())) {
      String colName=voltDdlTracker.m_partitionMap.get(tableName.toLowerCase());
      if (colName != null) {
        final Table t=tables.getIgnoreCase(tableName);
        if (t == null) {
          msg+="PARTITION has unknown TABLE '" + tableName + "'";
          throw new VoltCompilerException(msg);
        }
        final Column c=t.getColumns().getIgnoreCase(colName);
        if (c == null) {
          msg+="PARTITION has unknown COLUMN '" + colName + "'";
          throw new VoltCompilerException(msg);
        }
        if (c.getNullable() == true) {
          msg+="Partition column '" + tableName + "."+ colName+ "' is nullable. "+ "Partition columns must be constrained \"NOT NULL\".";
          throw new VoltCompilerException(msg);
        }
        VoltType pcolType=VoltType.get((byte)c.getType());
switch (pcolType) {
case TINYINT:
case SMALLINT:
case INTEGER:
case BIGINT:
case STRING:
case VARBINARY:
          break;
default :
        msg+="Partition column '" + tableName + "."+ colName+ "' is not a valid type. "+ "Partition columns must be an integer or varchar type.";
      throw new VoltCompilerException(msg);
  }
  t.setPartitioncolumn(c);
  t.setIsreplicated(false);
  checkValidIndexes(t,c);
}
}
 else {
Table t=table;
for (Index index : t.getIndexes()) {
  if (index.getAssumeunique()) {
    String exceptionMsg=String.format("Please use UNIQUE instead of ASSUMEUNIQUE");
    throw new VoltCompilerException(exceptionMsg);
  }
}
}
}
addDatabaseEstimatesInfo(m_estimates,db);
for (String exportedTableName : voltDdlTracker.getExportedTables()) {
addExportTableToConnector(exportedTableName,db);
}
if (export != null) {
compileExport(export,db);
}
if (whichProcs != DdlProceduresToLoad.NO_DDL_PROCEDURES) {
Collection<ProcedureDescriptor> allProcs=voltDdlTracker.getProcedureDescriptors();
compileProcedures(db,hsql,allProcs,classDependencies,whichProcs);
}
m_addedClasses=voltDdlTracker.m_extraClassses;
addExtraClasses();
}
