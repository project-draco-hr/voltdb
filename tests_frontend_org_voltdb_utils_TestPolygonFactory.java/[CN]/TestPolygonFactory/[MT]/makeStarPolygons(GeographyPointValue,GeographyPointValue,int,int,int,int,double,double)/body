{
  List<List<List<GeographyValue>>> answer=new ArrayList<List<List<GeographyValue>>>();
  int npoints=maxNumPoints - minNumPoints + 1;
  for (int idx=0; idx < npoints; idx+=1) {
    GeographyPointValue column=x.mul(xmul * idx);
    List<List<GeographyValue>> oneSize=new ArrayList<List<GeographyValue>>();
    for (int irdx=0; irdx < numIRLevels; irdx+=1) {
      GeographyPointValue irCenter=y.mul(numIRLevels * ymul * irdx);
      List<GeographyValue> oneRadius=new ArrayList<GeographyValue>();
      for (int hidx=0; hidx < numHoleSizeLevels; hidx+=1) {
        GeographyPointValue hCenter=irCenter.add(y.mul(ymul * hidx));
        GeographyPointValue center=firstCenter.add(column.add(hCenter));
        GeographyPointValue firstVertex=firstFirstVertex.add(center);
        oneRadius.add(PolygonFactory.CreateStar(center,firstVertex,idx + minNumPoints,(irdx + 1) * 0.2,hidx * 0.2));
      }
      oneSize.add(oneRadius);
    }
    answer.add(oneSize);
  }
  return answer;
}
