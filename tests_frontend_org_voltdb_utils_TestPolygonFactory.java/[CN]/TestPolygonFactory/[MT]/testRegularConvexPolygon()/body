{
  GeographyValue pt3=PolygonFactory.CreateRegularConvex(origin,y.mul(20.0),3,0);
  String triangle="POLYGON ((0.0 20.0, -17.320508075689 -10.0, 17.320508075689 -10.0, 0.0 20.0))";
  assertEquals(triangle,pt3.toString());
  GeographyValue pt4=PolygonFactory.CreateRegularConvex(origin,y.mul(20).add(x.mul(20)),4,0);
  String square="POLYGON ((20.0 20.0, -20.0 20.0, -20.0 -20.0, 20.0 -20.0, 20.0 20.0))";
  assertEquals(square,pt4.toString());
  GeographyPointValue offset=x.mul(20).add(y.mul(20));
  GeographyValue pt4plus=pt4.add(offset);
  String squareOff="POLYGON ((40.0 40.0, 0.0 40.0, 0.0 0.0, 40.0 0.0, 40.0 40.0))";
  assertEquals(squareOff,pt4plus.toString());
  GeographyPointValue startVertex=x.add(y);
  for (int npts=3; npts < 10; npts+=1) {
    GeographyValue regularConvex=PolygonFactory.CreateRegularConvex(origin,startVertex,npts,0.0);
    List<List<GeographyPointValue>> loops=regularConvex.getRings();
    assertEquals(1,loops.size());
    List<GeographyPointValue> loop=loops.get(0);
    assertEquals(npts + 1,loop.size());
    regularConvex=PolygonFactory.CreateRegularConvex(origin,startVertex,npts,0.5);
    loops=regularConvex.getRings();
    assertEquals(2,loops.size());
    assertEquals(npts + 1,loops.get(0).size());
    assertEquals(npts + 1,loops.get(1).size());
  }
}
