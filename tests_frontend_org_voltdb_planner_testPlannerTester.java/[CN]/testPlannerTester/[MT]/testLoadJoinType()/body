{
  AbstractPlanNode pn=null;
  pn=compile("select * from l, t where l.b=t.b limit ?;",3,true);
  String path=m_homeDir + "/";
  System.out.println(pn.toExplainPlanString());
  System.out.println(pn.toJSONString());
  plannerTester.writePlanToFile(pn,path,"prettyJson.txt","");
  ArrayList<String> getsql=new ArrayList<String>();
  PlanNodeTree pnt=plannerTester.loadPlanFromFile(path + "prettyJson.txt",getsql);
  System.out.println(pnt.toJSONString());
  System.out.println(pnt.getRootPlanNode().toExplainPlanString());
  ArrayList<AbstractPlanNode> list1=pn.getPlanNodeList();
  ArrayList<AbstractPlanNode> list2=pnt.getRootPlanNode().getPlanNodeList();
  assertTrue(list1.size() == list2.size());
  for (int i=0; i < list1.size(); i++) {
    Map<PlanNodeType,AbstractPlanNode> inlineNodes1=list1.get(i).getInlinePlanNodes();
    Map<PlanNodeType,AbstractPlanNode> inlineNodes2=list2.get(i).getInlinePlanNodes();
    if (inlineNodes1 != null) {
      assertTrue(inlineNodes1.size() == inlineNodes2.size());
    }
  }
}
