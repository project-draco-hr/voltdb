{
  AbstractPlanNode pn=null;
  plannerTester.setUp("/home/zhengli/workspace/voltdb/tests/frontend/org/voltdb/planner/testplans-plannerTester-ddl.sql","testplans-plannerTester-ddl","L","a");
  List<AbstractPlanNode> pnList=plannerTester.compile("select * from l, t where t.a=l.a limit ?;",3,false);
  String path="/home/zhengli/";
  System.out.println(pnList.size());
  pn=plannerTester.combinePlanNodes(pnList);
  System.out.println(pn.toExplainPlanString());
  plannerTester.writePlanToFile(pn,path,"prettyJson.txt");
  PlanNodeTree pnt=plannerTester.loadPlanFromFile(path + "prettyJson.txt");
  System.out.println(pnt.toJSONString());
  ArrayList<AbstractPlanNode> list1=pn.getLists();
  ArrayList<AbstractPlanNode> list2=pnt.getRootPlanNode().getLists();
  assertTrue(list1.size() == list2.size());
  for (int i=0; i < list1.size(); i++) {
    Map<PlanNodeType,AbstractPlanNode> inlineNodes1=list1.get(i).getInlinePlanNodes();
    Map<PlanNodeType,AbstractPlanNode> inlineNodes2=list2.get(i).getInlinePlanNodes();
    if (inlineNodes1 != null)     assertTrue(inlineNodes1.size() == inlineNodes2.size());
  }
}
