{
  AbstractPlanNode pn=null;
  pn=compile("select * from l where b = ? limit ?;",3,true);
  PlanNodeTree pnt1=new PlanNodeTree(pn);
  System.out.println(pnt1.toJSONString());
  System.out.println(pnt1.getRootPlanNode().toExplainPlanString());
  String path="/home/zhengli/prettyJson.txt";
  plannerTester.writePlanToFile(pn,path);
  PlanNodeTree pnt=plannerTester.loadPlanFromFile(path);
  System.out.println(pnt.toJSONString());
  System.out.println(pnt.getRootPlanNode().toExplainPlanString());
  ArrayList<AbstractPlanNode> list1=pnt1.getRootPlanNode().getLists();
  ArrayList<AbstractPlanNode> list2=pnt.getRootPlanNode().getLists();
  assertTrue(list1.size() == list2.size());
  for (int i=0; i < list1.size(); i++) {
    Map<PlanNodeType,AbstractPlanNode> inlineNodes1=list1.get(i).getInlinePlanNodes();
    Map<PlanNodeType,AbstractPlanNode> inlineNodes2=list2.get(i).getInlinePlanNodes();
    if (inlineNodes1 != null)     assertTrue(inlineNodes1.size() == inlineNodes2.size());
  }
}
