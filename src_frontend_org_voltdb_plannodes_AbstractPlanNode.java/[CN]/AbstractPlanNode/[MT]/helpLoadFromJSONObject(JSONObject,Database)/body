{
  assert(jobj != null);
  m_id=jobj.getInt(Members.ID.name());
  JSONArray jarray=null;
  if (!jobj.isNull(Members.INLINE_NODES.name())) {
    jarray=jobj.getJSONArray(Members.INLINE_NODES.name());
    PlanNodeTree pnt=new PlanNodeTree();
    pnt.loadPlanNodesFromJSONArrays(jarray,db);
    List<AbstractPlanNode> list=pnt.getNodeList();
    for (    AbstractPlanNode pn : list) {
      m_inlineNodes.put(pn.getPlanNodeType(),pn);
    }
  }
  if (!jobj.isNull(Members.OUTPUT_SCHEMA.name())) {
    m_hasSignificantOutputSchema=true;
    m_outputSchema=loadSchemaFromJSONObject(jobj,Members.OUTPUT_SCHEMA.name());
  }
}
