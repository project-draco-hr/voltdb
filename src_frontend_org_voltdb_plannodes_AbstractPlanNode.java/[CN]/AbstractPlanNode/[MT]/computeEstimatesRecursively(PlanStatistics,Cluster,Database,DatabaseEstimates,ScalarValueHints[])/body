{
  assert(stats != null);
  m_outputColumnHints.clear();
  m_estimatedOutputTupleCount=0;
  long childOutputTupleCountEstimate=0;
  for (  AbstractPlanNode child : m_children) {
    child.computeEstimatesRecursively(stats,cluster,db,estimates,paramHints);
    m_outputColumnHints.addAll(child.m_outputColumnHints);
    childOutputTupleCountEstimate+=child.m_estimatedOutputTupleCount;
  }
  for (  Entry<PlanNodeType,AbstractPlanNode> entry : m_inlineNodes.entrySet()) {
    AbstractPlanNode inlineNode=entry.getValue();
    if (inlineNode instanceof AbstractScanPlanNode) {
      inlineNode.computeCostEstimates(0,cluster,db,estimates,paramHints);
    }
  }
  computeCostEstimates(childOutputTupleCountEstimate,cluster,db,estimates,paramHints);
  stats.incrementStatistic(0,StatsField.TUPLES_READ,m_estimatedProcessedTupleCount);
}
