{
  Maker<SiteFailureMessage> s23fail=a(SiteFailureMessage,with(sfmSurvivors,Longs.asList(1,4)),with(sfmSafeTxns,sfmSafe(2,22,3,33)),with(sfmFailures,sfmFailed(2,3)));
  s1.startSeekingFor(hsids,ImmutableMap.of(2L,true,3L,true));
  s4.startSeekingFor(hsids,ImmutableMap.of(2L,true,3L,true));
  s1.add(make(s23fail.but(with(sfmSource,1L))));
  s1.add(make(s23fail.but(with(sfmSource,4L))));
  s4.add(make(s23fail.but(with(sfmSource,1L))));
  s4.add(make(s23fail.but(with(sfmSource,4L))));
  assertThat(s1.nextKill(),contains(2L,3L));
  assertThat(s4.nextKill(),contains(2L,3L));
  assertThat(s1.needForward(),equalTo(false));
  assertThat(s4.needForward(),equalTo(false));
  assertThat(s1.forWhomSiteIsDead(2L),empty());
  assertThat(s1.forWhomSiteIsDead(3L),empty());
  assertThat(s4.forWhomSiteIsDead(2L),empty());
  assertThat(s4.forWhomSiteIsDead(3L),empty());
}
