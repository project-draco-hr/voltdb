{
  int end=s.length();
  char[] dest=Platform.charBufferFromThreadLocal();
  int destIndex=0;
  int unescapedChunkStart=0;
  while (index < end) {
    int cp=codePointAt(s,index,end);
    if (cp < 0) {
      throw new IllegalArgumentException("Trailing high surrogate at end of input");
    }
    char[] escaped=escape(cp);
    int nextIndex=index + (Character.isSupplementaryCodePoint(cp) ? 2 : 1);
    if (escaped != null) {
      int charsSkipped=index - unescapedChunkStart;
      int sizeNeeded=destIndex + charsSkipped + escaped.length;
      if (dest.length < sizeNeeded) {
        int destLength=sizeNeeded + (end - index) + DEST_PAD;
        dest=growBuffer(dest,destIndex,destLength);
      }
      if (charsSkipped > 0) {
        s.getChars(unescapedChunkStart,index,dest,destIndex);
        destIndex+=charsSkipped;
      }
      if (escaped.length > 0) {
        System.arraycopy(escaped,0,dest,destIndex,escaped.length);
        destIndex+=escaped.length;
      }
      unescapedChunkStart=nextIndex;
    }
    index=nextEscapeIndex(s,nextIndex,end);
  }
  int charsSkipped=end - unescapedChunkStart;
  if (charsSkipped > 0) {
    int endIndex=destIndex + charsSkipped;
    if (dest.length < endIndex) {
      dest=growBuffer(dest,destIndex,endIndex);
    }
    s.getChars(unescapedChunkStart,end,dest,destIndex);
    destIndex=endIndex;
  }
  return new String(dest,0,destIndex);
}
