{
  assertEquals(prefix + "column count mismatch.  Expected: " + expectedRows.getColumnCount()+ " actual: "+ actualRows.getColumnCount(),expectedRows.getColumnCount(),actualRows.getColumnCount());
  if (expectedRows.getRowCount() != actualRows.getRowCount()) {
    long expRowCount=expectedRows.getRowCount();
    long actRowCount=actualRows.getRowCount();
    if (expRowCount + actRowCount < TOO_MUCH_INFO) {
      System.out.println("Expected: " + expectedRows);
      System.out.println("Actual:   " + actualRows);
    }
 else {
      System.out.println("Expected: " + expRowCount + " rows");
      System.out.println("Actual:   " + actRowCount + " rows");
    }
    fail(prefix + "row count mismatch.  Expected: " + expectedRows.getRowCount()+ " actual: "+ actualRows.getRowCount());
  }
  int rowNum=1;
  while (expectedRows.advanceRow()) {
    if (!actualRows.advanceRow()) {
      fail(prefix + "too few actual rows; expected more than " + rowNum);
    }
    for (int j=0; j < actualRows.getColumnCount(); j++) {
      String columnName=actualRows.getColumnName(j);
      String colPrefix=prefix + "row " + rowNum+ ": column: "+ columnName+ ": ";
      VoltType actualType=actualRows.getColumnType(j);
      VoltType expectedType=expectedRows.getColumnType(j);
      assertEquals(colPrefix + "type mismatch",expectedType,actualType);
      Object expectedObj=expectedRows.get(j,expectedType);
      Object actualObj=actualRows.get(j,actualType);
      if (expectedRows.wasNull()) {
        if (actualRows.wasNull()) {
          continue;
        }
        fail(colPrefix + "expected null, got non null value: " + actualObj);
      }
 else {
        assertFalse(colPrefix + "expected the value " + expectedObj+ ", got a null value.",actualRows.wasNull());
        String message=colPrefix + "values not equal: ";
        if (expectedType == VoltType.FLOAT) {
          if (epsilon != null) {
            assertEquals(message,(Double)expectedObj,(Double)actualObj,epsilon);
            continue;
          }
          message+=". NOTE: You may want to pass a" + " non-null epsilon value >= " + Math.abs((Double)expectedObj - (Double)actualObj) + " to the table comparison test "+ " if nearly equal FLOAT values are "+ " causing a false mismatch.";
        }
        assertEquals(message,expectedObj,actualObj);
      }
    }
    rowNum++;
  }
}
