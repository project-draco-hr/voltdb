{
  if (expected == actual) {
    return;
  }
  assert(expected != null);
  if (actual == null) {
    fail(msg + " found null value when non-null expected");
  }
  List<List<GeographyPointValue>> expectedLoops=expected.getLoops();
  List<List<GeographyPointValue>> actualLoops=actual.getLoops();
  assertEquals(msg + "wrong number of loops, expected " + expectedLoops.size()+ ", "+ "got "+ actualLoops.size(),expectedLoops.size(),actualLoops.size());
  int loopCtr=0;
  Iterator<List<GeographyPointValue>> expectedLoopIt=expectedLoops.iterator();
  for (  List<GeographyPointValue> actualLoop : actualLoops) {
    List<GeographyPointValue> expectedLoop=expectedLoopIt.next();
    assertEquals(msg + loopCtr + "th loop should have "+ expectedLoop.size()+ " vertices, but has "+ actualLoop.size(),expectedLoop.size(),actualLoop.size());
    int vertexCtr=0;
    Iterator<GeographyPointValue> expectedVertexIt=expectedLoop.iterator();
    for (    GeographyPointValue actualPt : actualLoop) {
      GeographyPointValue expectedPt=expectedVertexIt.next();
      String prefix=msg + "at loop " + loopCtr+ ", vertex "+ vertexCtr;
      assertApproximatelyEquals(prefix,expectedPt,actualPt,epsilon);
      ++vertexCtr;
    }
    ++loopCtr;
  }
}
