{
  File cat=File.createTempFile("temp-log-reinitiator","catalog");
  cat.deleteOnExit();
  VoltProjectBuilder builder=new VoltProjectBuilder();
  String schema="create table A (i integer not null, primary key (i));";
  builder.addLiteralSchema(schema);
  builder.addPartitionInfo("A","i");
  builder.addStmtProcedure("hello","select * from A where i = ?","A.i: 0");
  builder.addStmtProcedure("hellorw","delete from A where i = ?","A.i: 0");
  if (!builder.compile(cat.getAbsolutePath())) {
    throw new IOException();
  }
  byte[] bytes=MiscUtils.fileToBytes(cat);
  String serializedCat=CatalogUtil.getSerializedCatalogStringFromJar(CatalogUtil.loadAndUpgradeCatalogFromJar(bytes).getFirst());
  assertNotNull(serializedCat);
  Catalog catalog=new Catalog();
  catalog.execute(serializedCat);
  String deploymentPath=builder.getPathToDeployment();
  CatalogUtil.compileDeployment(catalog,deploymentPath,false);
  DbSettings dbSettings=CatalogUtil.asDbSettings(deploymentPath);
  m_context=new CatalogContext(0,0,catalog,dbSettings,bytes,null,new byte[]{},0);
  TheHashinator.initialize(TheHashinator.getConfiguredHashinatorClass(),TheHashinator.getConfigureBytes(3));
}
