{
  when(m_initiator.createTransaction(anyLong(),anyString(),anyBoolean(),any(StoredProcedureInvocation.class),anyBoolean(),anyBoolean(),anyBoolean(),any(int[].class),anyInt(),anyObject(),anyInt(),anyLong())).thenReturn(true);
  CatalogChangeResult catalogResult=new CatalogChangeResult();
  catalogResult.clientData=null;
  catalogResult.clientHandle=0;
  catalogResult.connectionId=0;
  catalogResult.adminConnection=false;
  catalogResult.hostname="localhost";
  catalogResult.catalogBytes="blah".getBytes();
  catalogResult.deploymentString="blah";
  catalogResult.deploymentCRC=1234l;
  catalogResult.expectedCatalogVersion=3;
  catalogResult.encodedDiffCommands="diff";
  m_mb.deliver(new LocalObjectMessage(catalogResult));
  m_ci.checkForFinishedCompilerWork();
  ArgumentCaptor<Boolean> boolCaptor=ArgumentCaptor.forClass(Boolean.class);
  ArgumentCaptor<StoredProcedureInvocation> invocationCaptor=ArgumentCaptor.forClass(StoredProcedureInvocation.class);
  verify(m_initiator).createTransaction(anyLong(),anyString(),boolCaptor.capture(),invocationCaptor.capture(),boolCaptor.capture(),boolCaptor.capture(),boolCaptor.capture(),any(int[].class),anyInt(),anyObject(),anyInt(),anyLong());
  List<Boolean> boolValues=boolCaptor.getAllValues();
  assertFalse(boolValues.get(0));
  assertFalse(boolValues.get(1));
  assertTrue(boolValues.get(2));
  assertTrue(boolValues.get(3));
  assertEquals("@UpdateApplicationCatalog",invocationCaptor.getValue().getProcName());
  assertEquals("diff",invocationCaptor.getValue().getParameterAtIndex(0));
  assertTrue(Arrays.equals("blah".getBytes(),(byte[])invocationCaptor.getValue().getParameterAtIndex(1)));
  assertEquals(3,invocationCaptor.getValue().getParameterAtIndex(2));
  assertEquals("blah",invocationCaptor.getValue().getParameterAtIndex(3));
  assertEquals(1234l,invocationCaptor.getValue().getParameterAtIndex(4));
}
