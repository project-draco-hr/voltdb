{
  CatalogChangeResult catalogResult=new CatalogChangeResult();
  catalogResult.clientData=null;
  catalogResult.clientHandle=0;
  catalogResult.connectionId=0;
  catalogResult.adminConnection=false;
  catalogResult.catalogHash="blah".getBytes();
  catalogResult.catalogBytes="blah".getBytes();
  catalogResult.deploymentString="blah";
  catalogResult.expectedCatalogVersion=3;
  catalogResult.encodedDiffCommands="diff";
  catalogResult.invocationType=ProcedureInvocationType.VERSION2;
  catalogResult.originalTxnId=12345678l;
  catalogResult.originalUniqueId=87654321l;
  catalogResult.diffCommandsLength=10;
  catalogResult.user=new AuthSystem.AuthDisabledUser();
  m_ci.getDispatcher().processFinishedCompilerWork(catalogResult).run();
  ArgumentCaptor<Long> destinationCaptor=ArgumentCaptor.forClass(Long.class);
  ArgumentCaptor<Iv2InitiateTaskMessage> messageCaptor=ArgumentCaptor.forClass(Iv2InitiateTaskMessage.class);
  verify(m_messenger).send(destinationCaptor.capture(),messageCaptor.capture());
  Iv2InitiateTaskMessage message=messageCaptor.getValue();
  assertFalse(message.isReadOnly());
  assertFalse(message.isSinglePartition());
  assertEquals("@UpdateApplicationCatalog",message.getStoredProcedureName());
  assertEquals("diff",message.getStoredProcedureInvocation().getParameterAtIndex(0));
  assertTrue(Arrays.equals("blah".getBytes(),(byte[])message.getStoredProcedureInvocation().getParameterAtIndex(2)));
  assertEquals(3,message.getStoredProcedureInvocation().getParameterAtIndex(3));
  assertEquals("blah",message.getStoredProcedureInvocation().getParameterAtIndex(4));
  assertEquals(ProcedureInvocationType.VERSION2,message.getStoredProcedureInvocation().getType());
}
