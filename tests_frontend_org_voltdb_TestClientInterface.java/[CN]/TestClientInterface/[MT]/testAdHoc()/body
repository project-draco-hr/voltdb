{
  ByteBuffer msg=createMsg("@AdHoc","select * from a");
  ClientResponseImpl resp=m_ci.handleRead(msg,m_handler,m_cxn);
  assertNull(resp);
  ArgumentCaptor<LocalObjectMessage> captor=ArgumentCaptor.forClass(LocalObjectMessage.class);
  verify(m_messenger).send(eq(32L),captor.capture());
  assertTrue(captor.getValue().payload instanceof AdHocPlannerWork);
  String payloadString=captor.getValue().payload.toString();
  assertTrue(payloadString.contains("partition param index: -1"));
  reset(m_messenger);
  msg=createMsg("@AdHocSpForTest","select * from a where i = 3",3);
  resp=m_ci.handleRead(msg,m_handler,m_cxn);
  assertNull(resp);
  verify(m_messenger).send(eq(32L),captor.capture());
  assertTrue(captor.getValue().payload instanceof AdHocPlannerWork);
  payloadString=captor.getValue().payload.toString();
  assertTrue(payloadString.contains("partition param index: 0"));
  assertTrue(payloadString.contains("user param[1]: 3"));
}
