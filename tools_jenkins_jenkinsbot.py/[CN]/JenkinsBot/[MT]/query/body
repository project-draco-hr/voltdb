def query(self, channels, query, params, is_retry=False):
    '\n        Make a query and return a table\n        :param channels: Channels this query is for\n        :param query: Query to execute\n        :param params: Parameters for the query\n        :param is_retry: If this call of the query is a retry\n        :return: Tuple of (headers, rows) as results\n        '
    table = ''
    cursor = None
    database = None
    try:
        try:
            database = mysql.connector.connect(host=os.environ.get('dbhost', None), user=os.environ.get('dbuser', None), password=os.environ.get('dbpass', None), database=os.environ.get('dbdb', None))
            cursor = database.cursor()
            cursor.execute(query, params)
            headers = list(cursor.column_names)
            rows = cursor.fetchall()
            table = (headers, rows)
        except MySQLError as error:
            self.log('Could not connect to database')
            self.log(error)
            for channel in channels:
                self.post_message(channel, 'Something went wrong with the query.')
        except Exception as error:
            self.log('Something unexpected went wrong')
            self.log(error)
            if (self.connect_to_slack() and (not is_retry)):
                table = self.query(query, params, True)
    finally:
        if (cursor is not None):
            cursor.close()
        if (database is not None):
            database.close()
    return table
