{
  InitiatorMailbox mailbox=mock(InitiatorMailbox.class);
  InOrder inOrder=inOrder(mailbox);
  SpPromoteAlgo term=new SpPromoteAlgo(null,mailbox,"Test",1);
  SpPromoteAlgo.ReplicaRepairStruct r3=new SpPromoteAlgo.ReplicaRepairStruct();
  r3.m_maxSpHandleSeen=2L;
  term.m_replicaRepairStructs.put(3L,r3);
  long spHandles[]=new long[]{0L,1L,2L,3L,4L,5L};
  Iv2RepairLogResponseMessage msgs[]=new Iv2RepairLogResponseMessage[6];
  for (int i=1; i < spHandles.length; ++i) {
    msgs[i]=makeResponse(spHandles[i]);
    term.m_repairLogUnion.add(msgs[i]);
  }
  term.repairSurvivors();
  List<Long> repair3=new ArrayList<Long>();
  repair3.add(3L);
  inOrder.verify(mailbox).repairReplicasWith(repair3,msgs[3]);
  inOrder.verify(mailbox).repairReplicasWith(repair3,msgs[4]);
  inOrder.verify(mailbox).repairReplicasWith(repair3,msgs[5]);
  verify(mailbox,times(3)).repairReplicasWith(any(repair3.getClass()),any(Iv2RepairLogResponseMessage.class));
}
