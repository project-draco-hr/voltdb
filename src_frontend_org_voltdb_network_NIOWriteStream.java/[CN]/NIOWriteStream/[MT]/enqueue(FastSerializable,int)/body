{
synchronized (this) {
    if (m_isShutdown) {
      return false;
    }
    updateLastPendingWriteTimeAndQueueBackpressure();
    m_queuedWrites.offer(new DeferredSerialization(){
      @Override public BBContainer serialize(      final DBBPool pool) throws IOException {
        final FastSerializer fs=new FastSerializer(pool,expectedSize);
        return fs.writeObjectForMessaging(f);
      }
      @Override public void cancel(){
      }
    }
);
    m_port.setInterests(SelectionKey.OP_WRITE,0);
  }
  return true;
}
