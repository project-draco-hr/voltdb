{
  ArrayDeque<DeferredSerialization> oldlist;
synchronized (this) {
    if (m_queuedWrites.isEmpty()) {
      return null;
    }
 else {
      if (m_queuedWrites == m_queuedWrites1) {
        oldlist=m_queuedWrites1;
        m_queuedWrites=m_queuedWrites2;
      }
 else {
        oldlist=m_queuedWrites2;
        m_queuedWrites=m_queuedWrites1;
      }
    }
  }
  final BBContainer results[]=new BBContainer[oldlist.size()];
  int ii=0;
  DeferredSerialization ds=null;
  int bytesQueued=0;
  while ((ds=oldlist.poll()) != null) {
    results[ii]=ds.serialize(pool);
    bytesQueued+=results[ii].b.remaining();
    assert(results[ii] != null);
    assert(results[ii].b != null);
    ii++;
  }
  updateQueued(bytesQueued);
  return results;
}
