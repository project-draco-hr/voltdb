{
  if (tCurrent == null) {
    return;
  }
  TransferTable t=tCurrent;
  t.Stmts.sSourceTable=tSourceTable.getText();
  t.Stmts.sDestTable=tDestTable.getText();
  t.Stmts.sDestDrop=tDestDrop.getText();
  t.Stmts.sDestCreateIndex=tDestCreateIndex.getText();
  t.Stmts.sDestDropIndex=tDestDropIndex.getText();
  t.Stmts.sDestCreate=tDestCreate.getText();
  t.Stmts.sDestDelete=tDestDelete.getText();
  t.Stmts.sSourceSelect=tSourceSelect.getText();
  t.Stmts.sDestInsert=tDestInsert.getText();
  t.Stmts.sDestAlter=tDestAlter.getText();
  t.Stmts.bTransfer=cTransfer.getState();
  t.Stmts.bDrop=cDrop.getState();
  t.Stmts.bCreate=cCreate.getState();
  t.Stmts.bDelete=cDelete.getState();
  t.Stmts.bInsert=cInsert.getState();
  t.Stmts.bAlter=cAlter.getState();
  t.Stmts.bCreateIndex=cCreateIndex.getState();
  t.Stmts.bDropIndex=cDropIndex.getState();
  if (!t.Stmts.bTransfer) {
    t.Stmts.bInsert=false;
    cInsert.setState(false);
  }
  boolean reparsetable=((t.Stmts.bFKForced != cFKForced.getState()) || (t.Stmts.bIdxForced != cIdxForced.getState()));
  t.Stmts.bFKForced=cFKForced.getState();
  t.Stmts.bIdxForced=cIdxForced.getState();
  if (reparsetable) {
    try {
      sourceDb.getTableStructure(t,targetDb);
    }
 catch (    Exception e) {
      trace("Exception reading source tables: " + e);
      e.printStackTrace();
    }
  }
}
