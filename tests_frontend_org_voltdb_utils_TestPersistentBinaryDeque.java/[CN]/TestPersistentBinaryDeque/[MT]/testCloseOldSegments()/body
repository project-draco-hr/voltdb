{
  System.out.println("Running testCloseOldSegments");
  BinaryDequeReader reader=m_pbd.openForRead(CURSOR_ID);
  assertNull(reader.poll(PersistentBinaryDeque.UNSAFE_CONTAINER_FACTORY));
  final int total=100;
  for (int i=0; i < total; i++) {
    m_pbd.offer(defaultContainer());
  }
  File files[]=TEST_DIR.listFiles();
  assertEquals(4,files.length);
  Set<String> actualFiles=Sets.newHashSet();
  for (  File f : files) {
    actualFiles.add(f.getName());
  }
  Set<String> expectedFiles=Sets.newHashSet();
  for (int i=0; i < 3; i++) {
    expectedFiles.add("pbd_nonce." + i + ".pbd");
  }
  expectedFiles.add("pbd_nonce.pbd.cursors");
  Assert.assertEquals(expectedFiles,actualFiles);
  for (int i=0; i < total; i++) {
    BBContainer retval=reader.poll(PersistentBinaryDeque.UNSAFE_CONTAINER_FACTORY);
    retval.discard();
  }
}
