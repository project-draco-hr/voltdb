{
  System.out.println("Running testTruncator");
  BinaryDequeReader reader=m_pbd.openForRead(CURSOR_ID);
  assertNull(reader.poll(PersistentBinaryDeque.UNSAFE_CONTAINER_FACTORY));
  for (int ii=0; ii < 160; ii++) {
    m_pbd.offer(DBBPool.wrapBB(getFilledBuffer(ii)));
  }
  m_pbd.close();
  m_pbd=new PersistentBinaryDeque(TEST_NONCE,TEST_DIR,logger);
  TreeSet<String> listing=getSortedDirectoryListing();
  assertEquals(listing.size(),5);
  m_pbd.parseAndTruncate(new BinaryDequeTruncator(){
    private long m_objectsParsed=0;
    @Override public TruncatorResponse parse(    BBContainer bbc){
      ByteBuffer b=bbc.b();
      assertEquals(b.getLong(0),m_objectsParsed);
      assertEquals(b.remaining(),1024 * 1024 * 2);
      if (b.getLong(0) == 45) {
        b.limit(b.remaining() / 2);
        return new PersistentBinaryDeque.ByteBufferTruncatorResponse(b.slice());
      }
      while (b.remaining() > 15) {
        assertEquals(b.getLong(),m_objectsParsed);
        b.getLong();
      }
      m_objectsParsed++;
      return null;
    }
  }
);
  reader=m_pbd.openForRead(CURSOR_ID);
  assertEquals(95420416,reader.sizeInBytes());
  listing=getSortedDirectoryListing();
  assertEquals(listing.size(),2);
  for (int ii=46; ii < 96; ii++) {
    m_pbd.offer(DBBPool.wrapBB(getFilledBuffer(ii)));
  }
  long actualSizeInBytes=0;
  long reportedSizeInBytes=reader.sizeInBytes();
  long blocksFound=0;
  BBContainer cont=null;
  while ((cont=reader.poll(PersistentBinaryDeque.UNSAFE_CONTAINER_FACTORY)) != null) {
    try {
      ByteBuffer buffer=cont.b();
      if (blocksFound == 45) {
        assertEquals(buffer.remaining(),1024 * 1024);
      }
 else {
        assertEquals(buffer.remaining(),1024 * 1024 * 2);
      }
      actualSizeInBytes+=buffer.remaining();
      while (buffer.remaining() > 15) {
        assertEquals(buffer.getLong(),blocksFound);
        buffer.getLong();
      }
    }
  finally {
      blocksFound++;
      cont.discard();
    }
  }
  assertEquals(actualSizeInBytes,reportedSizeInBytes);
  assertEquals(blocksFound,96);
}
