{
  System.out.println("Running testEmptyTruncation");
  TreeSet<String> listing=getSortedDirectoryListing();
  assertEquals(listing.size(),1);
  m_pbd.close();
  listing=getSortedDirectoryListing();
  assertEquals(listing.size(),0);
  m_pbd=new PersistentBinaryDeque(TEST_NONCE,TEST_DIR,logger);
  listing=getSortedDirectoryListing();
  assertEquals(listing.size(),1);
  m_pbd.parseAndTruncate(new BinaryDequeTruncator(){
    @Override public ByteBuffer parse(    BBContainer bbc){
      fail();
      return null;
    }
  }
);
  for (int ii=0; ii < 96; ii++) {
    m_pbd.offer(DBBPool.wrapBB(getFilledBuffer(ii)));
  }
  for (long ii=0; ii < 96; ii++) {
    BBContainer cont=m_pbd.poll(PersistentBinaryDeque.UNSAFE_CONTAINER_FACTORY);
    assertNotNull(cont);
    assertEquals(cont.b().remaining(),1024 * 1024 * 2);
    while (cont.b().remaining() > 15) {
      assertEquals(cont.b().getLong(),ii);
      cont.b().getLong();
    }
    cont.discard();
  }
}
