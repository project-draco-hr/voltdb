{
  if (jobj.has(PLAN_NODES_LISTS_MEMBER_NAME)) {
    JSONArray jplanNodesArray=jobj.getJSONArray(PLAN_NODES_LISTS_MEMBER_NAME);
    for (int i=0; i < jplanNodesArray.length(); ++i) {
      JSONObject jplanNodesObj=jplanNodesArray.getJSONObject(i);
      JSONArray jplanNodes=jplanNodesObj.getJSONArray(PLAN_NODES_MEMBER_NAME);
      int stmtId=jplanNodesObj.getInt(STATEMENT_ID_MEMBER_NAME);
      loadPlanNodesFromJSONArrays(stmtId,jplanNodes,db);
    }
  }
 else {
    int stmtId=0;
    JSONArray jplanNodes=jobj.getJSONArray(PLAN_NODES_MEMBER_NAME);
    loadPlanNodesFromJSONArrays(stmtId,jplanNodes,db);
  }
  for (  List<AbstractPlanNode> nextPlanNodes : m_planNodesListMap.values()) {
    for (    AbstractPlanNode node : nextPlanNodes) {
      findPlanNodeWithPredicate(node);
    }
  }
}
