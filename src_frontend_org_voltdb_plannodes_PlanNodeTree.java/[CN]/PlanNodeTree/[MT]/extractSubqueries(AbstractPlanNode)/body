{
  assert(node != null);
  Collection<AbstractExpression> subexprs=node.findAllExpressionsOfClass(AbstractSubqueryExpression.class);
  for (  AbstractExpression nextexpr : subexprs) {
    assert(nextexpr instanceof AbstractSubqueryExpression);
    AbstractSubqueryExpression subqueryExpr=(AbstractSubqueryExpression)nextexpr;
    int stmtId=subqueryExpr.getSubqueryId();
    List<AbstractPlanNode> planNodes=new ArrayList<AbstractPlanNode>();
    assert(!m_planNodesListMap.containsKey(stmtId));
    m_planNodesListMap.put(stmtId,planNodes);
    constructTree(planNodes,subqueryExpr.getSubqueryNode());
  }
}
