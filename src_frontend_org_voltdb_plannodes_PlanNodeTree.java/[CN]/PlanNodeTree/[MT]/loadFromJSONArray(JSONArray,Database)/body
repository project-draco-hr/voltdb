{
  int size=jArray.length();
  try {
    for (int i=0; i < size; i++) {
      JSONObject jobj;
      jobj=jArray.getJSONObject(i);
      String nodeTypeStr=jobj.getString("PLAN_NODE_TYPE");
      PlanNodeType nodeType=PlanNodeType.get(nodeTypeStr);
      AbstractPlanNode apn=null;
      try {
        apn=nodeType.getPlanNodeClass().newInstance();
      }
 catch (      InstantiationException e) {
        System.err.println(e.getMessage());
        e.printStackTrace();
        return;
      }
catch (      IllegalAccessException e) {
        System.err.println(e.getMessage());
        e.printStackTrace();
        return;
      }
      apn.loadFromJSONObject(jobj,db);
      m_planNodes.add(apn);
    }
    for (int i=0; i < size; i++) {
      JSONObject jobj;
      jobj=jArray.getJSONObject(i);
      if (jobj.has("CHILDREN_IDS")) {
        JSONArray children=jobj.getJSONArray("CHILDREN_IDS");
        for (int j=0; j < children.length(); j++) {
          m_planNodes.get(i).addAndLinkChild(getNodeofId(children.getInt(j)));
        }
      }
    }
  }
 catch (  JSONException e) {
    e.printStackTrace();
  }
}
