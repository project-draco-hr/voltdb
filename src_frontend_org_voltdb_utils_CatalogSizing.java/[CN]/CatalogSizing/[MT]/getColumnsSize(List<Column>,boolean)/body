{
  CatalogItemSizeBase csize=new CatalogItemSizeBase();
  for (  Column column : columns) {
    VoltType ctype=VoltType.get((byte)column.getType());
switch (ctype) {
case STRING:
{
        boolean inBytes=column.getInbytes();
        int capacity=column.getSize();
        if (!inBytes)         capacity*=MAX_BYTES_PER_UTF8_CHARACTER;
        csize.widthMin+=getVariableColumnSize(capacity,0,forIndex);
        csize.widthMax+=getVariableColumnSize(capacity,capacity,forIndex);
        break;
      }
case VARBINARY:
{
      int capacity=column.getSize();
      csize.widthMin+=getVariableColumnSize(capacity,0,forIndex);
      csize.widthMax+=getVariableColumnSize(capacity,capacity,forIndex);
      break;
    }
case GEOGRAPHY:
  csize.widthMin+=4;
csize.widthMax+=VoltType.MAX_VALUE_LENGTH;
break;
default :
{
csize.widthMin+=ctype.getLengthInBytesForFixedTypes();
csize.widthMax+=ctype.getLengthInBytesForFixedTypes();
}
}
}
return csize;
}
