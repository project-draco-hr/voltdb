def _determine_partitioning(self):
    partition_table = None
    if self.partition_table_name:
        for table in self.iter_tables():
            if (table.name == self.partition_table_name):
                partition_table = table
                reason_chosen = ('%s was explicitly specified for partitioning.' % table.name)
                break
        else:
            utility.abort(('Partitioning table "%s" is not in the schema.' % self.partition_table_name))
    else:
        max_row_count = 0
        for table in self.iter_tables():
            if (table.row_count > max_row_count):
                max_row_count = table.row_count
                partition_table = table
                reason_chosen = ('%s has the largest row count of %d.' % (table.name, max_row_count))
    if (not partition_table):
        utility.abort('Unable to generate partitioning without one of the following:', ('- A database populated with representative data.', '- A partitioning table specified on the command line.'))
    pkey_column_name = partition_table.primary_key_columns[0].name
    biggest_ptable = PartitionedTable(partition_table, pkey_column_name, reason_chosen)
    self.partitioned_tables[partition_table.name] = biggest_ptable
    for table in self.iter_tables():
        if (table.name == partition_table.name):
            continue
        for fk_name in table.schema.foreign_keys:
            fk = table.schema.foreign_keys[fk_name]
            if (fk.referenced_table_name != partition_table.name):
                continue
            for icolumn in range(len(fk.columns)):
                if (fk.referenced_columns[icolumn] == biggest_ptable.pkey_column_name):
                    pkey_column_name = fk.columns[icolumn]
                    reason_chosen = ('%s references partitioned table %s through a foreign key that references the partition key' % (table.name, biggest_ptable.name))
                    fk_ptable = PartitionedTable(table, pkey_column_name, reason_chosen)
                    self.partitioned_tables[table.name] = fk_ptable
                    break
