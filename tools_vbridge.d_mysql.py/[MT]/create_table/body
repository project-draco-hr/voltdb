def create_table(table, messages):
    table_comment = option_value(table, 'comment')
    lines = []
    if table_comment:
        lines.append(('-- %s' % table_comment))
    lines = OutputSchemaLines()
    lines.add(False, ('CREATE TABLE %s' % table.name), '(')
    primary_key_columns = []
    for column_name in table.columns:
        column = table.columns[column_name]
        if column.comment:
            lines.add(False, ('   -- %s' % column.comment))
        if (column.key == 'PRI'):
            primary_key_columns.append(column)
        (voltdb_type, message_number) = convert_type(column.type)
        if message_number:
            try:
                n = (messages.index(message_number) + 1)
            except ValueError:
                messages.append(message_number)
                n = len(messages)
            lines.add(False, ('   -- see note (%d)' % n))
        if column.null:
            voltdb_null = ''
        else:
            voltdb_null = ' NOT NULL'
        lines.add(True, ('   %s %s%s' % (column.name, voltdb_type, voltdb_null)))
    if primary_key_columns:
        constraint_lines = OutputSchemaLines()
        constraint_lines.add(False, ('   CONSTRAINT PK_%s PRIMARY KEY' % table.name), '   (')
        for primary_key_column in primary_key_columns:
            constraint_lines.add(True, ('      %s' % primary_key_column.name))
        constraint_lines.add(False, '   )')
        lines.add(True, constraint_lines)
    lines.add(False, ');')
    return str(lines)
