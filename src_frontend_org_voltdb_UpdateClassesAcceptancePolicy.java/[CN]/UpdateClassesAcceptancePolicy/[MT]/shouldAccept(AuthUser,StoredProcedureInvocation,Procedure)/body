{
  if (!invocation.getProcName().equals("@UpdateClasses")) {
    return null;
  }
  ParameterSet params=invocation.getParams();
  final Object[] paramsArray=params.toArray();
  if (paramsArray.length != 2) {
    return new ClientResponseImpl(ClientResponseImpl.UNEXPECTED_FAILURE,new VoltTable[0],"UpdateClasses system procedure requires exactly " + "two parameters, the bytes of the jarfile containing new class files " + "and the string containing class names to be deleted "+ "(either of which may be null).",invocation.clientHandle);
  }
  if (paramsArray[0] != null) {
    boolean isHex=false;
    if (paramsArray[0] instanceof String) {
      isHex=Encoder.isHexEncodedString((String)paramsArray[0]);
    }
    if (!isHex && !(paramsArray[0] instanceof byte[])) {
      return new ClientResponseImpl(ClientResponseImpl.UNEXPECTED_FAILURE,new VoltTable[0],"UpdateClasses system procedure takes the " + "jarfile bytes as a byte array. The received parameter " + "is of type " + paramsArray[0].getClass() + ".",invocation.clientHandle);
    }
  }
  if (paramsArray[1] != null && !(paramsArray[1] instanceof String)) {
    return new ClientResponseImpl(ClientResponseImpl.UNEXPECTED_FAILURE,new VoltTable[0],"UpdateClasses system procedure takes the list of classes to be " + "deleted as a string. The received parameter " + "is of type " + paramsArray[0].getClass() + ".",invocation.clientHandle);
  }
  return null;
}
