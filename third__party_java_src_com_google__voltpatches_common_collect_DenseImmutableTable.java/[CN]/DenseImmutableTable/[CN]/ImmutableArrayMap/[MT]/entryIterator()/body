{
  return new AbstractIterator<Entry<K,V>>(){
    private int index=-1;
    private final int maxIndex=keyToIndex().size();
    @Override protected Entry<K,V> computeNext(){
      for (index++; index < maxIndex; index++) {
        V value=getValue(index);
        if (value != null) {
          return Maps.immutableEntry(getKey(index),value);
        }
      }
      return endOfData();
    }
  }
;
}
