{
  try {
    internalProcessResults(rc,path,ctx,nodeData,stat);
    if (Code.get(rc) != Code.OK) {
      return;
    }
    OperationMode next=OperationMode.RUNNING;
    if (nodeData != null && nodeData.length > 0)     try {
      next=OperationMode.valueOf(nodeData);
    }
 catch (    IllegalArgumentException e) {
      fault=Optional.of(loggedDistributerException(e,"unable to decode content in operation node: \"%s\"",new String(nodeData,StandardCharsets.UTF_8)));
      return;
    }
    opmode=Optional.of(new VersionedOperationMode(next,stat.getVersion()));
    int[] stamp=new int[]{0};
    OperationMode prev=m_mode.get(stamp);
    if (stamp[0] > stat.getVersion()) {
      opmode=Optional.of(new VersionedOperationMode(prev,stamp[0]));
      return;
    }
    if (!m_mode.compareAndSet(prev,next,stamp[0],stat.getVersion())) {
      return;
    }
    if (m_isLeader && !m_done.get() && next == OperationMode.RUNNING) {
      m_es.submit(new AssignChannels());
    }
    m_eb.post(opmode.get());
  }
  finally {
    lock.release();
  }
}
