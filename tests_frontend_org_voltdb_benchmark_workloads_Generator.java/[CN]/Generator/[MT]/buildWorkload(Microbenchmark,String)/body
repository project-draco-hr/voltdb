{
  if (mb == null)   return false;
  try {
    List<ProcedureType> wlList=mb.getWorkload();
    ProcedureType toBuild=wlList.get(0);
    boolean foundWL=false;
    if (workloadToBuild != null) {
      ListIterator<ProcedureType> wlLI=wlList.listIterator();
      while (wlLI.hasNext()) {
        ProcedureType wl=wlLI.next();
        if (wl.getWlName().equals(workloadToBuild)) {
          toBuild=wl;
          foundWL=true;
          break;
        }
      }
    }
    if (!foundWL) {
      System.err.println("***************************************************************************************************");
      System.err.println("|                                                                                                 |");
      System.err.println("|    Specified workload not found in config file. Defaulting to first workload of config file.    |");
      System.err.println("|                                                                                                 |");
      System.err.println("***************************************************************************************************");
    }
    Workload myWL=new Workload(toBuild.getWlName());
    System.err.println("Building workload " + myWL.name);
    List<ParamType> procList=toBuild.getProcedure();
    myWL.procs=new String[procList.size()];
    myWL.percs=new double[procList.size()];
    myWL.paramTypes=new String[procList.size()][];
    myWL.generatorTypes=new GeneratorType[procList.size()][];
    myWL.params=new Object[procList.size()][];
    ListIterator<ParamType> procLI=procList.listIterator();
    int procIndex=0;
    while (procLI.hasNext()) {
      ParamType proc=procLI.next();
      myWL.procs[procIndex]=proc.getProcName();
      myWL.percs[procIndex]=proc.getPercOfWL().doubleValue();
      List<ValueType> paramList=proc.getParam();
      myWL.paramTypes[procIndex]=new String[paramList.size()];
      myWL.generatorTypes[procIndex]=new GeneratorType[paramList.size()];
      myWL.params[procIndex]=new Object[paramList.size()];
      ListIterator<ValueType> paramLI=paramList.listIterator();
      int paramIndex=0;
      while (paramLI.hasNext()) {
        ValueType param=paramLI.next();
        myWL.paramTypes[procIndex][paramIndex]=param.getType();
        myWL.generatorTypes[procIndex][paramIndex]=param.getValue().getGenerator();
        paramIndex++;
      }
      procIndex++;
    }
    workloads.add(myWL);
    System.err.println("Workload " + myWL.name + " successfully built.");
    return true;
  }
 catch (  Exception e) {
    e.printStackTrace();
    System.err.println("Building failed due to syntax errors in XML file.");
    return false;
  }
}
