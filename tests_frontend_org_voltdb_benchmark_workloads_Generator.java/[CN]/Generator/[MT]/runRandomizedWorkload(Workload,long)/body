{
  if (!(currWorkload.procs.length == currWorkload.percs.length && currWorkload.percs.length == currWorkload.params.length))   throw new Exception();
  if (currWorkload.procs.length > 0) {
    double[] cumPercArray=new double[currWorkload.percs.length];
    cumPercArray[0]=currWorkload.percs[0];
    for (int i=1; i < currWorkload.percs.length; i++)     cumPercArray[i]=cumPercArray[i - 1] + currWorkload.percs[i];
    if (cumPercArray[cumPercArray.length - 1] != 100.)     throw new Exception();
    double randomVal;
    final long startTime=System.nanoTime();
    long currentTime=System.nanoTime();
    int numProcCalls=0;
    while (currentTime - startTime < totalTime) {
      randomVal=Math.random() * 100;
      int index=0;
      while (randomVal > cumPercArray[index])       index++;
      for (int i=0; i < currWorkload.params[index].length; i++)       setParams(currWorkload,index,i);
      callProc(currWorkload.procs[index],currWorkload.params[index],index + firstWLProcIndex);
      numProcCalls++;
      currentTime=System.nanoTime();
    }
    long timeElapsed=currentTime - startTime;
    System.err.println("Workload " + currWorkload.name + " made "+ numProcCalls+ " procedure calls in time: "+ (timeElapsed / ((long)1000000000 * 60 * 60))+ "h"+ (timeElapsed % ((long)1000000000 * 60 * 60) / ((long)1000000000 * 60))+ "m"+ (timeElapsed % ((long)1000000000 * 60) / (long)1000000000)+ "s"+ (timeElapsed % (long)1000000000)+ "n");
  }
}
