@patch.object(jenkins.Jenkins, 'jenkins_open')
def test_in_folder_unexpected_job_name(self, jenkins_mock):
    job_name_to_return = {u'name': 'not the right name', }
    jenkins_mock.return_value = json.dumps(job_name_to_return)
    with self.assertRaises(jenkins.JenkinsException) as context_manager:
        self.j.get_job_name(u'a Folder/TestJob')
    self.assertEqual(jenkins_mock.call_args_list[0][0][0].get_full_url(), self.make_url('job/a%20Folder/job/TestJob/api/json?tree=name'))
    self.assertEqual(str(context_manager.exception), 'Jenkins returned an unexpected job name {0} (expected: {1})'.format(job_name_to_return['name'], 'a Folder/TestJob'))
    self._check_requests(jenkins_mock.call_args_list)
