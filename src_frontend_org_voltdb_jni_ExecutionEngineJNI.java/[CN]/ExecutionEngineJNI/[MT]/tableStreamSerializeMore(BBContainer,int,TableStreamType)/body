{
  FastSerializer fs=new FastSerializer();
  try {
    fs.writeInt(1);
    fs.writeLong(c.address);
    fs.writeInt(c.b.position());
    fs.writeInt(c.b.remaining());
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  long remaining=nativeTableStreamSerializeMore(pointer,tableId,streamType.ordinal(),fs.getBytes());
  int[] positions=null;
  if (remaining <= 0) {
    return (int)remaining;
  }
  if (deserializer != null) {
    int count;
    try {
      count=deserializer.readInt();
      if (count > 0) {
        positions=new int[count];
        for (int i=0; i < count; i++) {
          positions[i]=deserializer.readInt();
        }
        assert(positions.length == 1);
        return positions[0];
      }
    }
 catch (    final IOException ex) {
      LOG.error("Failed to deserialze position array" + ex);
      throw new EEException(ERRORCODE_WRONG_SERIALIZED_BYTES);
    }
  }
  return 0;
}
