{
  fsForParameterSet.clear();
  deserializer.clear();
  int errorCode=0;
synchronized (ExecutionEngineJNI.class) {
    errorCode=nativeExecuteCustomPlanFragment(pointer,getStringBytes(plan),0,inputDepId,txnId,lastCommittedTxnId,undoQuantumToken);
  }
  try {
    checkErrorCode(errorCode);
    FastDeserializer fds=fallbackBuffer == null ? deserializer : new FastDeserializer(fallbackBuffer);
    try {
      fds.readInt();
      final boolean dirty=fds.readBoolean();
      if (dirty)       m_dirty=true;
      final int numDependencies=fds.readInt();
      assert(numDependencies == 1);
      final VoltTable dependencies[]=new VoltTable[numDependencies];
      for (int i=0; i < numDependencies; ++i) {
        fds.readInt();
        dependencies[i]=fds.readObject(VoltTable.class);
      }
      return dependencies[0];
    }
 catch (    final IOException ex) {
      LOG.error("Failed to deserialze result dependencies" + ex);
      throw new EEException(ERRORCODE_WRONG_SERIALIZED_BYTES);
    }
  }
  finally {
    fallbackBuffer=null;
  }
}
