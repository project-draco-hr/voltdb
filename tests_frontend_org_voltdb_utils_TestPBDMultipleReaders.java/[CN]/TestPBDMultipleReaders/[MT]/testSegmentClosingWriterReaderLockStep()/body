{
  assertEquals(1,m_pbd.numOpenSegments());
  BinaryDequeReader reader=m_pbd.openForRead("reader0");
  for (int i=0; i < 3; i++) {
    for (int j=0; j < s_segmentFillCount; j++) {
      m_pbd.offer(DBBPool.wrapBB(TestPersistentBinaryDeque.getFilledBuffer(j)));
      BBContainer bbC=reader.poll(PersistentBinaryDeque.UNSAFE_CONTAINER_FACTORY);
      bbC.discard();
    }
    assertEquals(1,m_pbd.numOpenSegments());
  }
}
