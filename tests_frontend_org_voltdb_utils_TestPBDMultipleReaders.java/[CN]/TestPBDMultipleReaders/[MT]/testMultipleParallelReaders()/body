{
  int numBuffers=100;
  for (int i=0; i < numBuffers; i++) {
    m_pbd.offer(DBBPool.wrapBB(TestPersistentBinaryDeque.getFilledBuffer(i)));
  }
  int numSegments=TestPersistentBinaryDeque.getSortedDirectoryListing().size();
  int numReaders=3;
  PBDReader[] readers=new PBDReader[numReaders];
  for (int i=0; i < numReaders; i++) {
    readers[i]=new PBDReader("reader" + i);
  }
  int currNumSegments=numSegments;
  for (int i=0; i < numSegments; i++) {
    readers[0].readToEndOfSegment();
    assertEquals(currNumSegments,TestPersistentBinaryDeque.getSortedDirectoryListing().size());
    for (int j=1; j < numReaders; j++) {
      readers[j].readToEndOfSegment();
    }
    if (i < numSegments - 1)     currNumSegments--;
    assertEquals(currNumSegments,TestPersistentBinaryDeque.getSortedDirectoryListing().size());
  }
}
