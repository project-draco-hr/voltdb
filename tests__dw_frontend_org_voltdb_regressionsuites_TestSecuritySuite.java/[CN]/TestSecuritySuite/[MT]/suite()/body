{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestSecuritySuite.class);
  TPCCProjectBuilder project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  ArrayList<ProcedureInfo> procedures=new ArrayList<ProcedureInfo>();
  procedures.add(new ProcedureInfo(new String[0],PROCEDURES[0]));
  procedures.add(new ProcedureInfo(new String[]{"group1"},PROCEDURES[1]));
  procedures.add(new ProcedureInfo(new String[]{"group1","group2"},PROCEDURES[2]));
  project.addProcedures(procedures);
  UserInfo users[]=new UserInfo[]{new UserInfo("user1","password",new String[]{"grouP1"}),new UserInfo("user2","password",new String[]{"grouP2"}),new UserInfo("user3","password",new String[]{"grouP3"}),new UserInfo("user4","password",new String[]{"AdMINISTRATOR"}),new UserInfo("userWithDefaultUserPerm","password",new String[]{"User"}),new UserInfo("userWithAllProc","password",new String[]{"GroupWithAllProcPerm"}),new UserInfo("userWithDefaultProcPerm","password",new String[]{"groupWithDefaultProcPerm"}),new UserInfo("userWithoutDefaultProcPerm","password",new String[]{"groupWiThoutDefaultProcPerm"}),new UserInfo("userWithDefaultProcReadPerm","password",new String[]{"groupWiThDefaultProcReadPerm"})};
  project.addUsers(users);
  RoleInfo groups[]=new RoleInfo[]{new RoleInfo("Group1",false,false,false,false,false,false),new RoleInfo("Group2",true,false,false,false,false,false),new RoleInfo("Group3",true,false,false,false,false,false),new RoleInfo("GroupWithDefaultUserPerm",true,false,false,false,false,true),new RoleInfo("GroupWithAllProcPerm",false,false,false,false,false,true),new RoleInfo("GroupWithDefaultProcPerm",false,false,false,true,false,false),new RoleInfo("GroupWithoutDefaultProcPerm",false,false,false,false,false,false),new RoleInfo("GroupWithDefaultProcReadPerm",false,false,false,false,true,false)};
  project.addRoles(groups);
  project.setSecurityEnabled(true,false);
  if (MiscUtils.isPro()) {
    project.addExport(true);
  }
  config=new LocalCluster("security-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  if (!config.compile(project))   fail();
  builder.addServerConfig(config);
  return builder;
}
