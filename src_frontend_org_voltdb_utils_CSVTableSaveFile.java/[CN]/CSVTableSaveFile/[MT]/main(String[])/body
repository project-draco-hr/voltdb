{
  if (args.length != 2) {
    System.err.println("Usage: [--partitions 1,3,4] outfile.[csv | tsv] infile.vpt");
    System.exit(-1);
  }
  DelimitedDataWriter escaper=null;
  Integer partitions[]=null;
  if (args[0].equals("--partitions")) {
    if (args.length < 2) {
      System.err.println("Not enough args");
      System.exit(-1);
    }
    String partitionStrings[]=args[1].split(",");
    partitions=new Integer[partitionStrings.length];
    int ii=0;
    for (    String partitionString : partitionStrings) {
      partitions[ii++]=Integer.valueOf(partitionString);
    }
  }
  if (args[0].endsWith(".tsv")) {
    escaper=new TSVWriter();
  }
 else   if (args[0].endsWith(".csv")) {
    escaper=new CSVWriter();
  }
 else {
    System.err.println("Output filename must end in .csv or .tsv to indicate format");
    System.exit(-1);
  }
  final File outfile=new File(args[0]);
  if (!outfile.exists() && !outfile.createNewFile()) {
    System.err.println("Can't create output file " + args[0]);
    System.exit(-1);
  }
  if (!outfile.canWrite()) {
    System.err.println("Can't write to output file " + args[0]);
    System.exit(-1);
  }
  final File infile=new File(args[1]);
  if (!infile.exists()) {
    System.err.println("Input file " + args[1] + " does not exist");
    System.exit(-1);
  }
  if (!infile.canRead()) {
    System.err.println("Can't read input file " + args[1]);
    System.exit(-1);
  }
  convertTableSaveFile(escaper,partitions,outfile,infile);
}
