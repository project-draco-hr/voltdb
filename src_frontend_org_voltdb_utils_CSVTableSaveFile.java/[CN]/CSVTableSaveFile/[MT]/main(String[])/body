{
  if (args.length != 2) {
    System.err.println("Usage: outfile.[csv | tsv] infile.vpt");
    System.exit(-1);
  }
  Escaper escaper=null;
  char delimeter='0';
  if (args[0].endsWith(".tsv")) {
    escaper=new TSVEscaper();
    delimeter='\t';
  }
 else   if (args[0].endsWith(".csv")) {
    escaper=new CSVEscaper();
    delimeter=',';
  }
 else {
    System.err.println("Output filename must end in .csv or .tsv to indicate format");
    System.exit(-1);
  }
  final File outfile=new File(args[0]);
  if (!outfile.exists() && !outfile.createNewFile()) {
    System.err.println("Can't create output file " + args[0]);
    System.exit(-1);
  }
  if (!outfile.canWrite()) {
    System.err.println("Can't write to output file " + args[0]);
    System.exit(-1);
  }
  final File infile=new File(args[1]);
  if (!infile.exists()) {
    System.err.println("Input file " + args[1] + " does not exist");
    System.exit(-1);
  }
  if (!infile.canRead()) {
    System.err.println("Can't read input file " + args[1]);
    System.exit(-1);
  }
  final FileOutputStream fos=new FileOutputStream(outfile,true);
  try {
    final CSVTableSaveFile converter=new CSVTableSaveFile(infile,delimeter,escaper);
    try {
      while (true) {
        final byte bytes[]=converter.read();
        if (bytes.length == 0) {
          break;
        }
        fos.write(bytes);
      }
    }
  finally {
      try {
        converter.close();
      }
  finally {
        fos.getFD().sync();
      }
    }
  }
  finally {
    fos.close();
  }
}
