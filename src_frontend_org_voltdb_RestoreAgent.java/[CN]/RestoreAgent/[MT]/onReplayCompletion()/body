{
  if (!m_hasRestored && !m_replayAgent.hasReplayedSegments() && m_action.doesRecover()) {
    VoltDB.crashGlobalVoltDB("Nothing to recover from",false,null);
  }
 else   if (!m_clEnabled && !m_replayAgent.hasReplayedTxns()) {
    m_state=State.TRUNCATE;
  }
  changeState();
  if (m_isLeader && m_action.doesRecover()) {
    VoltDBInterface instance=VoltDB.instance();
    if (!instance.getCatalogContext().database.getIsactiveactivedred() && instance.getReplicationRole() == ReplicationRole.NONE) {
      ByteBuffer params=ByteBuffer.allocate(4);
      params.putInt(ExecutionEngine.TaskType.RESET_DR_APPLIED_TRACKER.ordinal());
      try {
        instance.getClientInterface().callExecuteTask(MAX_RESET_DR_APPLIED_TRACKER_TIMEOUT_MILLIS,params.array());
      }
 catch (      IOException e) {
        LOG.warn("Failed to reset DR applied tracker due to an IOException",e);
      }
catch (      InterruptedException e) {
        LOG.warn("Failed to reset DR applied tracker due to an InterruptedException",e);
      }
    }
  }
  if (m_clEnabled || m_replayAgent.hasReplayedTxns()) {
    if (m_isLeader) {
      try {
        try {
          m_zk.create(VoltZK.truncation_snapshot_path,m_clSnapshotPath.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
        }
 catch (        KeeperException.NodeExistsException e) {
        }
        m_zk.create(VoltZK.request_truncation_snapshot_node,null,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT_SEQUENTIAL);
      }
 catch (      Exception e) {
        VoltDB.crashGlobalVoltDB("Requesting a truncation snapshot " + "via ZK should always succeed",false,e);
      }
    }
  }
}
