{
  ClientResponse cr;
  VoltTable result;
  Client client=getClient();
  loadJS1(client);
  cr=client.callProcedure("IdFieldProc","arr3d[0]",0);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[0]",-1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","arr3d[1][0]",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][0]",-2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][0]",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][0]",-2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][1]",3);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][1]",-3);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("UpdateSetFieldProc","arr3d[0]","-1",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","arr3d[1][0]","-2",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","arr3d[1][1][0]","-2",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","arr3d[1][1][1]","-3",3);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("IdFieldProc","arr3d[0]",0);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[0]",-1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][0]",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][0]",-2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][0]",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][0]",-2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2}});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][1]",3);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","arr3d[1][1][1]",-3);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{3}});
}
