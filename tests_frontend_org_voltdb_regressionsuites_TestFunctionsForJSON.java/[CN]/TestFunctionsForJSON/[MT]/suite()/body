{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestFunctionsForJSON.class);
  boolean success;
  VoltProjectBuilder project=new VoltProjectBuilder();
  final String literalSchema="CREATE TABLE JS1 (\n" + "  ID INTEGER NOT NULL, \n" + "  DOC VARCHAR(8192),\n"+ "  PRIMARY KEY(ID))\n"+ ";\n"+ "CREATE PROCEDURE IdFieldProc AS\n"+ "   SELECT ID FROM JS1 WHERE FIELD(DOC, ?) = ? ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE NumericFieldProc AS\n"+ "   SELECT ID FROM JS1 WHERE FIELD(DOC, ?) IN (?, ?) ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE InnerFieldProc AS\n"+ "   SELECT ID FROM JS1 WHERE FIELD(FIELD(DOC, 'inner'), ?) = ? ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE NullFieldProc AS\n"+ "   SELECT ID FROM JS1 WHERE FIELD(DOC, ?) IS NULL ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE IdArrayProc AS\n"+ "   SELECT ID FROM JS1 WHERE ARRAY_ELEMENT(FIELD(DOC, ?), ?) = ? ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE NullArrayProc AS\n"+ "   SELECT ID FROM JS1 WHERE ARRAY_ELEMENT(FIELD(DOC, ?), ?) IS NULL ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE IdArrayLengthProc AS\n"+ "   SELECT ID FROM JS1 WHERE ARRAY_LENGTH(FIELD(DOC, ?)) = ? ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE NullArrayLengthProc AS\n"+ "   SELECT ID FROM JS1 WHERE ARRAY_LENGTH(FIELD(DOC, ?)) IS NULL ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE SmallArrayLengthProc AS\n"+ "   SELECT ID FROM JS1 WHERE ARRAY_LENGTH(FIELD(DOC, ?)) BETWEEN 0 AND ? ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE LargeArrayLengthProc AS\n"+ "   SELECT ID FROM JS1 WHERE ARRAY_LENGTH(FIELD(DOC, ?)) > ? ORDER BY ID\n"+ ";\n"+ "CREATE PROCEDURE UpdateSetFieldProc AS\n"+ "   UPDATE JS1 SET DOC = SET_FIELD(DOC, ?, ?) WHERE ID = ?\n"+ ";\n"+ "CREATE PROCEDURE GetDocFromId AS\n"+ "   SELECT DOC FROM JS1 WHERE ID = ?\n"+ ";\n"+ "CREATE TABLE JSBAD (\n"+ "  ID INTEGER NOT NULL,\n"+ "  DOC VARCHAR(8192),\n"+ "  PRIMARY KEY(ID))\n"+ ";\n"+ "CREATE PROCEDURE BadIdFieldProc AS\n"+ "  SELECT ID FROM JSBAD WHERE ID = ? AND FIELD(DOC, ?) = ?\n"+ ";\n"+ "CREATE PROCEDURE BadIdArrayProc AS\n"+ "  SELECT ID FROM JSBAD WHERE ID = ? AND ARRAY_ELEMENT(FIELD(DOC, ?), 1) = ?\n"+ ";\n"+ "CREATE PROCEDURE BadIdArrayLengthProc AS\n"+ "  SELECT ID FROM JSBAD WHERE ID = ? AND ARRAY_LENGTH(FIELD(DOC, ?)) = ?\n"+ ";\n"+ "";
  try {
    project.addLiteralSchema(literalSchema);
  }
 catch (  IOException e) {
    assertFalse(true);
  }
  config=new LocalCluster("fixedsql-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("fixedsql-threesite.jar",3,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  return builder;
}
