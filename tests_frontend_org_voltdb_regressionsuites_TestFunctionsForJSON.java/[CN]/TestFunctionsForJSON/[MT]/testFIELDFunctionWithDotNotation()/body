{
  ClientResponse cr;
  VoltTable result;
  Client client=getClient();
  loadJS1(client);
  cr=client.callProcedure("IdFieldProc","inner.veggies","good for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.second.fruits",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.second.third.meats","yum");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.second.third.dairy","1");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1}});
  cr=client.callProcedure("IdFieldProc","dot\\.char","foo.bar");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","dot.char","foo.bar");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  testProcWithValidJSON(empty_table,client,"IdFieldProc","id.veggies",1);
  testProcWithValidJSON(empty_table,client,"IdFieldProc","bool.veggies","true");
  testProcWithValidJSON(empty_table,client,"IdFieldProc","numeric.veggies",1.2);
  testProcWithValidJSON(empty_table,client,"IdFieldProc","tag.veggies","one");
  testProcWithValidJSON(empty_table,client,"IdFieldProc","arr.veggies",0);
  testProcWithValidJSON(empty_table,client,"IdFieldProc","arr.0",0);
}
