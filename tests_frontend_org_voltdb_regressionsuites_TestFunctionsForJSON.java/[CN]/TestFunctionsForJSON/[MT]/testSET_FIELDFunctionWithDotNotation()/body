{
  ClientResponse cr;
  VoltTable result;
  Client client=getClient();
  loadJS1(client);
  cr=client.callProcedure("IdFieldProc","inner.veggies","good for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.veggies","bad for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","inner.second.fruits","semi-good for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.second.fruits","semi-bad for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","inner.second.third.meats","yum");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.second.third.meats","yuck");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("UpdateSetFieldProc","inner.veggies","\"bad for you\"",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","inner.second.fruits","\"semi-bad for you\"",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","inner.second.third.meats","\"yuck\"",3);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("IdFieldProc","inner.veggies","good for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.veggies","bad for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1}});
  cr=client.callProcedure("IdFieldProc","inner.second.fruits","semi-good for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{3}});
  cr=client.callProcedure("IdFieldProc","inner.second.fruits","semi-bad for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2}});
  cr=client.callProcedure("IdFieldProc","inner.second.third.meats","yum");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2}});
  cr=client.callProcedure("IdFieldProc","inner.second.third.meats","yuck");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{3}});
}
