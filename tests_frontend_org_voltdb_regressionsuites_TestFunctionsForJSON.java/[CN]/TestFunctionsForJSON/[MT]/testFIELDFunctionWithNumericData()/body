{
  ClientResponse cr;
  VoltTable result;
  Client client=getClient();
  loadJS1(client);
  cr=client.callProcedure("NumericFieldProc","numeric","1.2","1.20");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("NumericFieldProc","inner.second.third.numeric","2.3","2.30");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("NumericFieldProc","arr3d[1][1][2]","4.5","4.50");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("NumericFieldProc","inner.arr[2]","3.4","3.40");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("NumericFieldProc","arr3d[2].numeric","5.6","5.60");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
}
