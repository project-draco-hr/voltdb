{
  ClientResponse cr;
  VoltTable result;
  Client client=getClient();
  loadJS1(client);
  cr=client.callProcedure("IdFieldProc","inner.arr[0]",0);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.arr[0]",-1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","inner.arr[1]",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2}});
  cr=client.callProcedure("IdFieldProc","inner.arr[1]",-2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","arr3d[2].veggies","good for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{2},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[2].veggies","bad for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","arr3d[2].dairy","3");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[2].dairy","-3");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("UpdateSetFieldProc","inner.arr[0]","-1",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","inner.arr[1]","-2",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","arr3d[2].veggies","\"bad for you\"",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("UpdateSetFieldProc","arr3d[2].dairy","-3",3);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateRowOfLongs(result,new long[]{1});
  cr=client.callProcedure("IdFieldProc","inner.arr[0]",0);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2},{3}});
  cr=client.callProcedure("IdFieldProc","inner.arr[0]",-1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1}});
  cr=client.callProcedure("IdFieldProc","inner.arr[1]",2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","inner.arr[1]",-2);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2}});
  cr=client.callProcedure("IdFieldProc","arr3d[2].veggies","good for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{1},{3}});
  cr=client.callProcedure("IdFieldProc","arr3d[2].veggies","bad for you");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{2}});
  cr=client.callProcedure("IdFieldProc","arr3d[2].dairy","3");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{});
  cr=client.callProcedure("IdFieldProc","arr3d[2].dairy","-3");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableOfLongs(result,new long[][]{{3}});
}
