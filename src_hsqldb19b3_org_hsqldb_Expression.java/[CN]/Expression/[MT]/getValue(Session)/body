{
switch (opType) {
case OpTypes.VALUE:
    return valueData;
case OpTypes.SIMPLE_COLUMN:
{
    Object[] data=session.sessionContext.rangeIterators[rangePosition].getCurrent();
    return data[columnIndex];
  }
case OpTypes.ROW:
{
  if (nodes.length == 1) {
    return nodes[0].getValue(session);
  }
  Object[] row=new Object[nodes.length];
  for (int i=0; i < nodes.length; i++) {
    row[i]=nodes[i].getValue(session);
  }
  return row;
}
case OpTypes.ROW_SUBQUERY:
case OpTypes.TABLE_SUBQUERY:
{
subQuery.materialiseCorrelated(session);
Object value=subQuery.getValue(session);
return value;
}
default :
throw Error.runtimeError(ErrorCode.U_S0500,"Expression");
}
}
