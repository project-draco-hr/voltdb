{
  boolean askedForHelp=false;
  try {
    for (int i=0; i < args.length; ++i) {
      if (args[i].equals("-csv")) {
        logFormatCsv=true;
      }
 else       if (args[i].equals("-v")) {
        verbose=true;
      }
 else       if (args[i].equals("-i")) {
        inputFileName=args[++i];
      }
 else       if (args[i].equals("-start")) {
        rangeStartTimeSec=Double.parseDouble(args[++i]);
      }
 else       if (args[i].equals("-end")) {
        rangeEndTimeSec=Double.parseDouble(args[++i]);
      }
 else       if (args[i].equals("-o")) {
        outputFileName=args[++i];
      }
 else       if (args[i].equals("-percentilesOutputTicksPerHalf")) {
        percentilesOutputTicksPerHalf=Integer.parseInt(args[++i]);
      }
 else       if (args[i].equals("-outputValueUnitRatio")) {
        outputValueUnitRatio=Double.parseDouble(args[++i]);
      }
 else       if (args[i].equals("-h")) {
        askedForHelp=true;
        throw new Exception("Help: " + args[i]);
      }
 else {
        throw new Exception("Invalid args: " + args[i]);
      }
    }
  }
 catch (  Exception e) {
    error=true;
    errorMessage="Error: " + versionString + " launched with the following args:\n";
    for (    String arg : args) {
      errorMessage+=arg + " ";
    }
    if (!askedForHelp) {
      errorMessage+="\nWhich was parsed as an error, indicated by the following exception:\n" + e;
      System.err.println(errorMessage);
    }
    final String validArgs="\"[-csv] [-v] [-i inputFileName] [-o outputFileName] " + "[-start rangeStartTimeSec] [-end rangeEndTimeSec] " + "[-outputValueUnitRatio r]";
    System.err.println("valid arguments = " + validArgs);
    System.err.println(" [-h]                        help\n" + " [-v]                        Provide verbose error output\n" + " [-csv]                      Use CSV format for output log files\n"+ " [-i logFileName]            File name of Histogram Log to process (default is standard input)\n"+ " [-o outputFileName]         File name to output to (default is standard output)\n"+ "                             (will replace occurrences of %pid and %date with appropriate information)\n"+ " [-start rangeStartTimeSec]  The start time for the range in the file, in seconds (default 0.0)\n"+ " [-end rangeEndTimeSec]      The end time for the range in the file, in seconds (default is infinite)\n"+ " [-outputValueUnitRatio r]   The scaling factor by which to divide histogram recorded values units\n"+ "                             in output. [default = 1000000.0 (1 msec in nsec)]\n");
    System.exit(1);
  }
}
