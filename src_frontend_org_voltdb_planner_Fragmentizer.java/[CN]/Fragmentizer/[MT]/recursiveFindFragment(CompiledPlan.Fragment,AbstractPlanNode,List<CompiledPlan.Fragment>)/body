{
  if (currentNode instanceof ReceivePlanNode) {
    ReceivePlanNode recvNode=(ReceivePlanNode)currentNode;
    assert(recvNode.getChildCount() == 1);
    AbstractPlanNode childNode=recvNode.getChild(0);
    assert(childNode instanceof SendPlanNode);
    SendPlanNode sendNode=(SendPlanNode)childNode;
    sendNode.clearParents();
    recvNode.clearChildren();
    CompiledPlan.Fragment subFrag=new CompiledPlan.Fragment();
    subFrag.multiPartition=sendNode.isMultiPartition;
    subFrag.planGraph=sendNode;
    currentFragment.hasDependencies=true;
    fragments.add(subFrag);
    recursiveFindFragment(subFrag,sendNode,fragments);
    return;
  }
  for (int i=0; i < currentNode.getChildCount(); i++) {
    AbstractPlanNode childNode=currentNode.getChild(i);
    recursiveFindFragment(currentFragment,childNode,fragments);
  }
}
