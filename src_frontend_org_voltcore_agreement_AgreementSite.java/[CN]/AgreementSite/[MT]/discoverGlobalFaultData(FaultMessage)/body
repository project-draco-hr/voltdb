{
  if (m_recovering) {
    org.voltdb.VoltDB.crashLocalVoltDB("Aborting recovery due to a remote node (" + CoreUtils.hsIdToString(faultMessage.failedSite) + ") failure. Retry again.",true,null);
  }
  Set<Long> unknownFaultedHosts=new TreeSet<>();
  Map<Long,Long> initiatorSafeInitPoint=m_meshArbiter.reconfigureOnFault(m_hsIds,faultMessage,unknownFaultedHosts);
  ImmutableSet<Long> failedSites=ImmutableSet.copyOf(initiatorSafeInitPoint.keySet());
  if (initiatorSafeInitPoint.isEmpty() && unknownFaultedHosts.isEmpty()) {
    return;
  }
  ImmutableSet.Builder<Integer> failedHosts=ImmutableSet.builder();
  for (  long hsId : failedSites) {
    failedHosts.add(CoreUtils.getHostIdFromHSId(hsId));
  }
  for (  long hsId : unknownFaultedHosts) {
    failedHosts.add(CoreUtils.getHostIdFromHSId(hsId));
  }
  m_failedHostsCallback.disconnect(failedHosts.build());
  if (!initiatorSafeInitPoint.isEmpty()) {
    handleSiteFaults(failedSites,initiatorSafeInitPoint);
  }
  m_hsIds.removeAll(failedSites);
}
