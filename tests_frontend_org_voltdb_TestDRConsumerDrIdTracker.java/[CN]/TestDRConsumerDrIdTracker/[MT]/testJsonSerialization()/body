{
  tracker.append(5L,5L,0L,0L);
  tracker.append(15L,20L,0L,0L);
  DRConsumerDrIdTracker tracker2=DRConsumerDrIdTracker.createPartitionTracker(17L,0L,0L);
  tracker2.append(20L,25L,0L,0L);
  tracker2.append(28L,28L,0L,0L);
  Map<Integer,DRConsumerDrIdTracker> perProducerPartitionTrackers=new HashMap<Integer,DRConsumerDrIdTracker>();
  perProducerPartitionTrackers.put(0,tracker);
  perProducerPartitionTrackers.put(1,tracker2);
  Map<Integer,Map<Integer,DRConsumerDrIdTracker>> perSiteTrackers=new HashMap<Integer,Map<Integer,DRConsumerDrIdTracker>>();
  perSiteTrackers.put(20,perProducerPartitionTrackers);
  JSONObject trackersInJSON=ExtensibleSnapshotDigestData.serializeSiteConsumerDrIdTrackersToJSON(perSiteTrackers);
  JSONStringer stringer=new JSONStringer();
  stringer.object();
  stringer.key("5");
  stringer.value(trackersInJSON);
  stringer.endObject();
  String output=stringer.toString();
  JSONObject allsiteInfo=new JSONObject(output);
  JSONObject siteInfo=allsiteInfo.getJSONObject("5");
  final Map<Integer,Map<Integer,DRConsumerDrIdTracker>> siteTrackers=ExtensibleSnapshotDigestData.buildConsumerSiteDrIdTrackersFromJSON(siteInfo);
  DRConsumerDrIdTracker tracker3=siteTrackers.get(20).get(0);
  DRConsumerDrIdTracker tracker4=siteTrackers.get(20).get(1);
  assertTrue(tracker.getSafePointDrId() == tracker3.getSafePointDrId());
  assertTrue(tracker.getLastSpUniqueId() == tracker3.getLastSpUniqueId());
  assertTrue(tracker.getLastMpUniqueId() == tracker3.getLastMpUniqueId());
  assertTrue(tracker.getDrIdRanges().equals(tracker3.getDrIdRanges()));
  assertTrue(tracker2.getSafePointDrId() == tracker4.getSafePointDrId());
  assertTrue(tracker2.getLastSpUniqueId() == tracker4.getLastSpUniqueId());
  assertTrue(tracker2.getLastMpUniqueId() == tracker4.getLastMpUniqueId());
  assertTrue(tracker2.getDrIdRanges().equals(tracker4.getDrIdRanges()));
}
