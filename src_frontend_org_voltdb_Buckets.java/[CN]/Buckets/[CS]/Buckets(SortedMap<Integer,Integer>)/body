{
  Preconditions.checkNotNull(tokens);
  Preconditions.checkArgument(tokens.size() > 1);
  Preconditions.checkArgument(tokens.size() % 2 == 0);
  m_tokenCount=tokens.size();
  m_tokenInterval=calculateTokenInterval(m_tokenCount);
  int partitionCount=new HashSet<Integer>(tokens.values()).size();
  for (int partition=0; partition < partitionCount; partition++) {
    m_partitionTokens.add(Sets.<Integer>newTreeSet());
  }
  for (  Map.Entry<Integer,Integer> e : tokens.entrySet()) {
    TreeSet<Integer> buckets=m_partitionTokens.get(e.getValue());
    int token=e.getKey();
    buckets.add(token);
  }
}
