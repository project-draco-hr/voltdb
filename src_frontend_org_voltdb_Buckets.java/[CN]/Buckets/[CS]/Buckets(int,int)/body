{
  Preconditions.checkArgument(partitionCount > 0);
  Preconditions.checkArgument(tokenCount > partitionCount);
  Preconditions.checkArgument(tokenCount % 2 == 0);
  m_tokenCount=tokenCount;
  m_tokenInterval=calculateTokenInterval(tokenCount);
  m_partitionTokens.add(Sets.<Long>newTreeSet());
  long token=Long.MIN_VALUE;
  for (int ii=0; ii < tokenCount; ii++) {
    m_partitionTokens.get(0).add(token);
    token+=m_tokenInterval;
  }
  addPartitions(partitionCount - 1);
}
