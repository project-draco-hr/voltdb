{
  DuplicateCounter counter=m_duplicateCounters.get(message.getTxnId());
  if (counter != null) {
    int result=counter.offer(message);
    if (result == DuplicateCounter.DONE) {
      m_duplicateCounters.remove(message.getTxnId());
      if (message.shouldCommit()) {
        m_repairLogTruncationHandle=m_repairLogAwaitingCommit;
        m_repairLogAwaitingCommit=message.getTxnId();
      }
      m_outstandingTxns.remove(message.getTxnId());
      m_mailbox.send(counter.m_destinationId,message);
    }
 else     if (result == DuplicateCounter.MISMATCH) {
      hostLog.fatal("Stored procedure " + counter.getStoredProcedureName() + " generated different SQL queries at different partitions."+ " Shutting down to preserve data integrity.");
      VoltDB.crashLocalVoltDB("HASH MISMATCH running every-site system procedure.",true,null);
    }
  }
 else {
    if (message.shouldCommit()) {
      m_repairLogTruncationHandle=m_repairLogAwaitingCommit;
      m_repairLogAwaitingCommit=message.getTxnId();
    }
    m_outstandingTxns.remove(message.getTxnId());
    m_mailbox.send(message.getInitiatorHSId(),message);
    CompleteTransactionMessage ctm=new CompleteTransactionMessage(m_mailbox.getHSId(),message.m_sourceHSId,message.getTxnId(),message.isReadOnly(),0,!message.shouldCommit(),false,false,false);
    ctm.setTruncationHandle(m_repairLogTruncationHandle);
    ((MpInitiatorMailbox)m_mailbox).deliverToRepairLog(ctm);
  }
}
