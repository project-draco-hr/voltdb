{
  return new TypeSafeDiagnosingMatcher<String[]>(){
    String[] expected=m_data.peek();
    @Override public void describeTo(    Description d){
      d.appendText("row [");
      if (expected != null) {
        d.appendValueList("",", ","",Arrays.<String>asList(expected));
      }
    }
    @Override protected boolean matchesSafely(    String[] gotten,    Description d){
      d.appendText(" row [");
      boolean match=expected != null;
      if (!match) {
        d.appendText("{ EOD exhausted expected rows }");
      }
      if (match) {
        String[] atHead=m_data.poll();
        match=arrayContaining(expected).matches(atHead);
        if (!match) {
          d.appendValueList("",", ","",Arrays.asList(atHead));
        }
      }
      d.appendText("]");
      return match;
    }
  }
;
}
