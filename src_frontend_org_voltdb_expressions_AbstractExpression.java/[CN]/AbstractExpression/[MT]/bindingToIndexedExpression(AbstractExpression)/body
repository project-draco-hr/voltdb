{
  if (m_type != expr.m_type) {
    return null;
  }
  if (!hasEqualAttributes(expr)) {
    return null;
  }
  if ((expr.m_left == null) != (m_left == null)) {
    return null;
  }
  if ((expr.m_right == null) != (m_right == null)) {
    return null;
  }
  if ((expr.m_args == null) != (m_args == null)) {
    return null;
  }
  List<AbstractExpression> leftBindings=null;
  if (m_left != null) {
    leftBindings=m_left.bindingToIndexedExpression(expr.m_left);
    if (leftBindings == null) {
      return null;
    }
  }
  List<AbstractExpression> rightBindings=null;
  if (m_right != null) {
    rightBindings=m_right.bindingToIndexedExpression(expr.m_right);
    if (rightBindings == null) {
      return null;
    }
  }
  List<AbstractExpression> argBindings=null;
  if (m_args != null) {
    if (m_args.size() != expr.m_args.size()) {
      return null;
    }
    argBindings=new ArrayList<>();
    int ii=0;
    for (    AbstractExpression rhs : expr.m_args) {
      AbstractExpression lhs=m_args.get(ii++);
      List<AbstractExpression> moreBindings=lhs.bindingToIndexedExpression(rhs);
      if (moreBindings == null) {
        return null;
      }
      argBindings.addAll(moreBindings);
    }
  }
  List<AbstractExpression> result=new ArrayList<>();
  if (leftBindings != null) {
    result.addAll(leftBindings);
  }
  if (rightBindings != null) {
    result.addAll(rightBindings);
  }
  if (argBindings != null) {
    result.addAll(argBindings);
  }
  return result;
}
