{
  List<AbstractExpression> subExprList=new ArrayList<AbstractExpression>();
  extractAndSubExpressions(this,subExprList);
  HashSet<String> uniqueIds=new HashSet<String>();
  Iterator<AbstractExpression> it=subExprList.iterator();
  while (it.hasNext()) {
    AbstractExpression expr=it.next();
    if (uniqueIds.contains(expr.m_id)) {
      it.remove();
    }
 else {
      uniqueIds.add(expr.m_id);
    }
  }
  if (!subExprList.isEmpty()) {
    Iterator<AbstractExpression> itExpr=subExprList.iterator();
    AbstractExpression finalExpr=itExpr.next();
    while (itExpr.hasNext()) {
      finalExpr=new ConjunctionExpression(ExpressionType.CONJUNCTION_AND,finalExpr,itExpr.next());
    }
    return finalExpr;
  }
  return this;
}
