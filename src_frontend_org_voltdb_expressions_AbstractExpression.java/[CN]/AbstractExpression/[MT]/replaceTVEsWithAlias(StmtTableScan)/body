{
  if (this instanceof TupleValueExpression) {
    assert(tableScan != null);
    TupleValueExpression tve=(TupleValueExpression)this;
    String tableName=tableScan.m_table.getTypeName();
    String columnName=tableScan.m_columnIndexToName.get(tve.m_columnIndex);
    TupleValueExpression newTVE=new TupleValueExpression(tableName,tableScan.m_tableAlias,columnName,columnName,tve.m_columnIndex);
    newTVE.setValueType(tve.getValueType());
    newTVE.setValueSize(tve.getValueSize());
    return newTVE;
  }
  AbstractExpression lnode=null, rnode=null;
  ArrayList<AbstractExpression> newArgs=null;
  if (m_left != null) {
    lnode=m_left.replaceTVEsWithAlias(tableScan);
  }
  if (m_right != null) {
    rnode=m_right.replaceTVEsWithAlias(tableScan);
  }
  boolean changed=false;
  if (m_args != null) {
    newArgs=new ArrayList<AbstractExpression>();
    for (    AbstractExpression expr : m_args) {
      AbstractExpression ex=expr.replaceTVEsWithAlias(tableScan);
      newArgs.add(ex);
      if (ex != expr) {
        changed=true;
      }
    }
  }
  if (m_left != lnode || m_right != rnode || changed) {
    AbstractExpression resExpr=(AbstractExpression)this.clone();
    resExpr.setLeft(lnode);
    resExpr.setRight(rnode);
    resExpr.setArgs(newArgs);
    return resExpr;
  }
  return this;
}
