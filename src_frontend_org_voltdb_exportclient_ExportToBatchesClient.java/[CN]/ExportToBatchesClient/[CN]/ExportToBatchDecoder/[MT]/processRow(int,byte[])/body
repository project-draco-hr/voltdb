{
  System.out.println("Processing a row");
  Object[] row=null;
  try {
    row=decodeRow(rowData);
  }
 catch (  IOException e) {
    m_logger.error("Unable to decode row for table: " + m_source.tableName);
    return false;
  }
  try {
    for (int i=m_firstfield; i < m_tableSchema.size(); i++) {
      if (row[i] == null) {
        m_escaper.writeRawField(m_writer,"NULL",i > m_firstfield);
      }
 else       if (m_tableSchema.get(i) == VoltType.STRING) {
        m_escaper.writeEscapedField(m_writer,(String)row[i],i > m_firstfield);
      }
 else       if (m_tableSchema.get(i) == VoltType.TIMESTAMP) {
        TimestampType timestamp=(TimestampType)row[i];
        m_escaper.writeRawField(m_writer,m_sdf.format(timestamp.asApproximateJavaDate()),i > m_firstfield);
        m_escaper.writeRawField(m_writer,String.valueOf(timestamp.getUSec()),false);
      }
 else {
        m_escaper.writeRawField(m_writer,row[i].toString(),i > m_firstfield);
      }
    }
    m_writer.write("\n");
  }
 catch (  IOException e) {
    e.printStackTrace();
    throw new RuntimeException(e.getMessage());
  }
catch (  Exception x) {
    x.printStackTrace();
    return false;
  }
  return true;
}
