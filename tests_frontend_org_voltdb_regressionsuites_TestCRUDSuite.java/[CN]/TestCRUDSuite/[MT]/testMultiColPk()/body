{
  final Client client=this.getClient();
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P4.insert",i,Integer.toHexString(i),i * 100);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    assertTrue(resp.getResults()[0].asScalarLong() == 1);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P4.select",i * 100,Integer.toHexString(i),i);
    VoltTable vt=resp.getResults()[0];
    assertTrue(vt.advanceRow());
    assertTrue(vt.getLong(0) == i);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P4.update",i * 10,"STR" + Integer.toHexString(i),i * 100,i * 100,Integer.toHexString(i),i);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    assertTrue(resp.getResults()[0].asScalarLong() == 1);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P4.select",i * 100,"STR" + Integer.toHexString(i),i * 10);
    VoltTable vt=resp.getResults()[0];
    assertTrue(vt.advanceRow());
    assertTrue(vt.getLong(0) == i * 10);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P4.delete",i * 100,"STR" + Integer.toHexString(i),i * 10);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    assertTrue(resp.getResults()[0].asScalarLong() == 1);
  }
}
