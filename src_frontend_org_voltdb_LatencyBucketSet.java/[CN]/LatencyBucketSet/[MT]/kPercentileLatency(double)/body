{
  if ((percentile > 1.0) || (percentile < 0.0)) {
    throw new IllegalArgumentException("KPercentileLatency accepts values greater or equal to 0.0 " + "and less than or equal to 1.0");
  }
  if (totalTxns == 0)   return 0;
  long k=(long)(totalTxns * percentile);
  if (k == 0)   ++k;
  if (k > totalTxns)   k=totalTxns;
  if ((totalTxns == 0) || (k > (totalTxns - unaccountedTxns))) {
    return Integer.MAX_VALUE;
  }
  long sum=0;
  for (int i=0; i < numberOfBuckets; i++) {
    sum+=buckets[i];
    if (sum >= k) {
      return i * msPerBucket + (int)Math.ceil(msPerBucket / 2.0);
    }
  }
  assert(false);
  return -1;
}
