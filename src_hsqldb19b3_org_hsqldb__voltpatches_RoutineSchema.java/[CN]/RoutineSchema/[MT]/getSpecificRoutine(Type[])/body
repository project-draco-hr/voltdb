{
  int matchIndex=-1;
  outerLoop:   for (int i=0; i < this.routines.length; i++) {
    int matchCount=0;
    if (routines[i].parameterTypes.length != types.length) {
      continue;
    }
    if (types.length == 0) {
      return this.routines[i];
    }
    for (int j=0; j < types.length; j++) {
      int typeDifference;
      if (types[j] == null) {
        continue;
      }
      typeDifference=types[j].precedenceDegree(routines[i].parameterTypes[j]);
      if (typeDifference < 0) {
        continue outerLoop;
      }
 else       if (typeDifference == 0) {
        if (matchCount == j) {
          matchCount=j + 1;
        }
      }
    }
    if (matchCount == types.length) {
      return routines[i];
    }
    if (matchIndex == -1) {
      matchIndex=i;
      continue;
    }
    for (int j=0; j < types.length; j++) {
      if (types[j] == null) {
        continue;
      }
      int oldDiff=types[j].precedenceDegree(routines[matchIndex].parameterTypes[j]);
      int newDiff=types[j].precedenceDegree(routines[i].parameterTypes[j]);
      if (oldDiff == newDiff) {
        continue;
      }
      if (newDiff < oldDiff) {
        matchIndex=i;
      }
      continue outerLoop;
    }
  }
  if (matchIndex < 0) {
    throw Error.error(ErrorCode.X_42501);
  }
  return routines[matchIndex];
}
