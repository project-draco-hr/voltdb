{
  try {
    recordingPhaser.readerLock();
    if (inactiveHistogram == null) {
      if (activeHistogram instanceof InternalAtomicHistogram) {
        inactiveHistogram=new InternalAtomicHistogram(instanceId,activeHistogram.getLowestDiscernibleValue(),activeHistogram.getHighestTrackableValue(),activeHistogram.getNumberOfSignificantValueDigits());
      }
 else {
        inactiveHistogram=new InternalConcurrentHistogram(instanceId,activeHistogram.getNumberOfSignificantValueDigits());
      }
    }
    inactiveHistogram.reset();
    final Histogram tempHistogram=inactiveHistogram;
    inactiveHistogram=activeHistogram;
    activeHistogram=tempHistogram;
    long now=System.currentTimeMillis();
    activeHistogram.setStartTimeStamp(now);
    inactiveHistogram.setEndTimeStamp(now);
    recordingPhaser.flipPhase(500000L);
  }
  finally {
    recordingPhaser.readerUnlock();
  }
}
