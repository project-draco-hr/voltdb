{
  SimpleConsumer consumer=null;
  try {
    consumer=new SimpleConsumer(brokerList.get(0).getHost(),brokerList.get(0).getPort(),soTimeout,fetchSize,CLIENT_ID);
    TopicMetadataRequest req=new TopicMetadataRequest(singletonList(topic));
    kafka.javaapi.TopicMetadataResponse resp=consumer.send(req);
    List<TopicMetadata> metaData=resp.topicsMetadata();
    if (metaData == null) {
      throw new RuntimeException("Failed to get topic metadata for topic " + topic);
    }
    Map<URI,KafkaStreamImporterConfig> configs=new HashMap<>();
    for (    TopicMetadata item : metaData) {
      for (      PartitionMetadata part : item.partitionsMetadata()) {
        URI uri;
        try {
          uri=new URI("kafka",key,topic + "/partition/" + part.partitionId());
        }
 catch (        URISyntaxException ex) {
          throw new RuntimeException(ex);
        }
        Broker leader=part.leader();
        KafkaStreamImporterConfig config=new KafkaStreamImporterConfig(uri,brokerList,topic,part.partitionId(),new HostAndPort(leader.host(),leader.port()),groupId,fetchSize,soTimeout,procedure);
        configs.put(uri,config);
      }
    }
    return configs;
  }
  finally {
    closeConsumer(consumer);
  }
}
