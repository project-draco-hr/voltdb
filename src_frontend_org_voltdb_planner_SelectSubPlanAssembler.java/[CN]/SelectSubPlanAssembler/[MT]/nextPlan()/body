{
  while (m_plans.size() == 0) {
    JoinNode joinTree=m_joinOrders.poll();
    if (joinTree == null) {
      return null;
    }
    joinTree.analyzeJoinExpressions(m_parsedStmt.m_noTableSelectionList);
    if (!m_parsedStmt.m_noTableSelectionList.isEmpty()) {
      throw new PlanningErrorException("Join with filters that do not depend on joined tables is not supported in VoltDB");
    }
    if (!m_partitioning.wasSpecifiedAsSingle()) {
      HashMap<AbstractExpression,Set<AbstractExpression>> valueEquivalence=joinTree.getAllEquivalenceFilters();
      m_partitioning.analyzeForMultiPartitionAccess(m_parsedStmt.m_tableAliasMap.values(),valueEquivalence);
      if (!m_partitioning.isJoinValid()) {
        m_recentErrorMsg="Join of multiple partitioned tables has insufficient join criteria.";
        continue;
      }
    }
    generateMorePlansForJoinTree(joinTree);
  }
  return m_plans.poll();
}
