{
  HashMap<Table,ArrayList<AccessPath>> accessPathOptions=generateAccessPathsForEachTable(joinOrder);
  ArrayList<AccessPath[]> retval=new ArrayList<AccessPath[]>();
  if (joinOrder.length == 1) {
    for (    AccessPath path : accessPathOptions.get(joinOrder[0])) {
      AccessPath[] paths=new AccessPath[1];
      paths[0]=path;
      retval.add(paths);
    }
    return retval;
  }
  Table[] subJoinOrder=Arrays.copyOfRange(joinOrder,1,joinOrder.length);
  ArrayList<AccessPath[]> subList=generateAllAccessPathCombinationsForJoinOrder(subJoinOrder);
  for (  AccessPath path : accessPathOptions.get(joinOrder[0])) {
    for (    AccessPath[] choice : subList) {
      AccessPath[] paths=new AccessPath[joinOrder.length];
      paths[0]=path;
      assert(choice.length == subJoinOrder.length);
      for (int i=0; i < choice.length; i++)       paths[i + 1]=choice[i];
      retval.add(paths);
    }
  }
  return retval;
}
