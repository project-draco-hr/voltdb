{
  if (place == inputTables.length) {
    JoinTree joinNode=new JoinTree();
    joinNode.m_joinOrder=outputTables.clone();
    m_joinOrders.add(joinNode);
    return;
  }
  for (int i=0; i < outputTables.length; i++) {
    outputTables[place]=inputTables[i];
    boolean duplicate=false;
    for (int j=0; j < place; j++) {
      if (outputTables[j].getTypeName().equalsIgnoreCase(outputTables[place].getTypeName())) {
        duplicate=true;
        break;
      }
    }
    if (duplicate)     continue;
    queueInnerSubJoinOrdersRecursively(inputTables,outputTables,place + 1);
  }
}
