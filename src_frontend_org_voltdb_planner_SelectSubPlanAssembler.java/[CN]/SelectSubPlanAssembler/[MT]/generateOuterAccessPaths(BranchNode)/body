{
  JoinNode outerChildNode=parentNode.getLeftNode();
  assert(outerChildNode != null);
  List<AbstractExpression> joinOuterList=(parentNode.getJoinType() == JoinType.INNER) ? parentNode.m_joinOuterList : null;
  if (outerChildNode instanceof BranchNode) {
    generateOuterAccessPaths((BranchNode)outerChildNode);
    generateInnerAccessPaths((BranchNode)outerChildNode);
    outerChildNode.m_accessPaths.add(getRelevantNaivePath(joinOuterList,parentNode.m_whereOuterList));
    assert(outerChildNode.m_accessPaths.size() > 0);
    return;
  }
  outerChildNode.m_accessPaths.addAll(getRelevantAccessPathsForTable(outerChildNode.getTableScan(),joinOuterList,parentNode.m_whereOuterList,null));
}
