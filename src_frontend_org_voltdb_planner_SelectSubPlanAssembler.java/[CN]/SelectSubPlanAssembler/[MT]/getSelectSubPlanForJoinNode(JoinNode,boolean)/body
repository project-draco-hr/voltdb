{
  assert(joinNode != null);
  if (joinNode.m_table != null) {
    Table joinOrder[]=new Table[1];
    AccessPath accessPath[]=new AccessPath[1];
    joinOrder[0]=joinNode.m_table;
    accessPath[0]=joinNode.m_currentAccessPath;
    return getSelectSubPlanForAccessPathsIterative(joinOrder,accessPath,deferSendReceivePair);
  }
 else {
    assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);
    AbstractPlanNode outerScanPlan=getSelectSubPlanForJoinNode(joinNode.m_leftNode,deferSendReceivePair);
    AbstractPlanNode innerScanPlan=getSelectSubPlanForJoinNode(joinNode.m_rightNode,deferSendReceivePair);
    AbstractPlanNode resultPlan=getSelectSubPlanForOuterAccessPathStep(joinNode,outerScanPlan,innerScanPlan);
    if (deferSendReceivePair && m_partitioning.requiresTwoFragments()) {
      resultPlan=addSendReceivePair(resultPlan);
    }
    return resultPlan;
  }
}
