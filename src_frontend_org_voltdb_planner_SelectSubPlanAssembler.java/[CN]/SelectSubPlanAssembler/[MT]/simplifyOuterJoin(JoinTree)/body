{
  assert(joinTree.m_root != null);
  List<AbstractExpression> exprs=new ArrayList<AbstractExpression>();
  if (joinTree.m_root.m_leftNode != null && joinTree.m_root.m_leftNode.m_whereExpr != null) {
    exprs.add(joinTree.m_root.m_leftNode.m_whereExpr);
  }
  if (joinTree.m_root.m_rightNode != null && joinTree.m_root.m_rightNode.m_whereExpr != null) {
    exprs.add(joinTree.m_root.m_rightNode.m_whereExpr);
  }
  simplifyOuterJoinRecursively(joinTree.m_root,exprs);
  joinTree.m_hasOuterJoin=joinTree.m_root.hasOuterJoin();
  return joinTree;
}
