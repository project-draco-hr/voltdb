{
  VoltTable vt;
  Client client=getClient();
  loadF(client,0);
  loadDims(client);
  String qs="select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) " + "from V, D1, D2 " + "where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY "+ "group by D1.D1_NAME, D2.D2_NAME";
  vt=client.callProcedure("@AdHoc",qs)[0];
  System.out.println("DistributedSumGroupMultiJoin: " + vt);
  ArrayList<VoltTableRow> sorted=new ArrayList<VoltTableRow>();
  while (vt.advanceRow()) {
    String d1=(String)vt.get(0,VoltType.STRING);
    String d2=(String)vt.get(1,VoltType.STRING);
    System.out.println("Adding Row: " + d1 + ", "+ d2);
    sorted.add(vt.cloneRow());
  }
  System.out.println("DSGMJonedim");
  debug(sorted);
  Collections.sort(sorted,new VRowComparator<VoltTableRow>());
  System.out.println("DSGMJonedim: ");
  debug(sorted);
  assertEquals(50,vt.getRowCount());
  Integer i=0, j=0;
  for (  VoltTableRow row : sorted) {
    String d1_name="D1_" + i;
    String d2_name="D2_" + (i + (j * 10));
    int v3=(i % 2) * 20;
    String d1=(String)row.get(0,VoltType.STRING);
    String d2=(String)row.get(1,VoltType.STRING);
    Integer s1=(Integer)row.get(2,VoltType.INTEGER);
    Integer s3=(Integer)row.get(4,VoltType.INTEGER);
    assertEquals(d1,d1_name);
    assertEquals(d2,d2_name);
    assertEquals(s1.intValue(),40);
    assertEquals(s3.intValue(),v3);
    j++;
    if (j == 5) {
      i++;
      j=0;
    }
  }
}
