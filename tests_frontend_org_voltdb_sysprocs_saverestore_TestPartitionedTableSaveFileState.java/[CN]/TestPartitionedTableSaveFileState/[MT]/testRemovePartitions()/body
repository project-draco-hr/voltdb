{
  int original_partitions=4;
  int current_partitions=2;
  Set<Integer> partitionsToDistribute=new HashSet<Integer>();
  for (int i=0; i < original_partitions; ++i) {
    addSiteToTestData(i % current_partitions,i,i,4);
    partitionsToDistribute.add(i);
    addSiteInfoToCatalog(i,i,i,true);
  }
  m_voltDB.addSite(CoreUtils.getHSIdFromHostAndSite(0,original_partitions),MailboxType.Initiator);
  m_voltDB.addSite(CoreUtils.getHSIdFromHostAndSite(1,original_partitions + 1),MailboxType.Initiator);
  m_siteInput.resetRowPosition();
  while (m_siteInput.advanceRow()) {
    try {
      m_state.addHostData(m_siteInput);
    }
 catch (    IOException e) {
      e.printStackTrace();
      assertTrue(false);
    }
  }
  Table test_table=m_voltDB.getTable(TABLE_NAME);
  SynthesizedPlanFragment[] test_plan=m_state.generateRestorePlan(test_table);
  checkPlanFragments(test_plan,partitionsToDistribute);
}
