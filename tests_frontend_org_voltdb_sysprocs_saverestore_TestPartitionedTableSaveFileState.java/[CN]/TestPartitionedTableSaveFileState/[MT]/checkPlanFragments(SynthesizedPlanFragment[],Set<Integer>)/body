{
  HashSet<Integer> partitionsDistributed=new HashSet<Integer>();
  for (int i=0; i < plan.length - 1; ++i) {
    assertEquals(SysProcFragmentId.PF_restoreDistributePartitionedTable,plan[i].fragmentId);
    assertTrue(plan[i].siteId == 0 || plan[i].siteId == MiscUtils.getHSIdFromHostAndSite(i,i));
    assertFalse(plan[i].multipartition);
    assertEquals(TABLE_NAME,plan[i].parameters.toArray()[0]);
    for (    Integer partition : ((int[])plan[i].parameters.toArray()[2])) {
      boolean inserted=partitionsDistributed.add(partition);
      if (!inserted) {
        fail("Plan inserts partition " + partition + " more then once");
      }
    }
  }
  assertTrue(partitionsDistributed.containsAll(partitionsToDistribute));
  assertEquals(SysProcFragmentId.PF_restoreDistributePartitionedTableResults,plan[plan.length - 1].fragmentId);
  assertFalse(plan[plan.length - 1].multipartition);
  checkPlanDependencies(plan);
  assertEquals(m_state.getRootDependencyId(),plan[plan.length - 1].parameters.toArray()[0]);
}
