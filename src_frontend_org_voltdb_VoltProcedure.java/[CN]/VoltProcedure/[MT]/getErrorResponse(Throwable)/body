{
  StackTraceElement[] stack=e.getStackTrace();
  ArrayList<StackTraceElement> matches=new ArrayList<StackTraceElement>();
  for (  StackTraceElement ste : stack) {
    if (ste.getClassName() == getClass().getName())     matches.add(ste);
  }
  byte status=ClientResponseImpl.UNEXPECTED_FAILURE;
  StringBuilder msg=new StringBuilder();
  if (e.getClass() == VoltAbortException.class) {
    status=ClientResponseImpl.USER_ABORT;
    msg.append("USER ABORT\n");
  }
 else   if (e.getClass() == org.voltdb.exceptions.ConstraintFailureException.class) {
    status=ClientResponseImpl.GRACEFUL_FAILURE;
    msg.append("CONSTRAINT VIOLATION\n");
  }
 else   if (e.getClass() == org.voltdb.exceptions.SQLException.class) {
    status=ClientResponseImpl.GRACEFUL_FAILURE;
    msg.append("SQL ERROR\n");
  }
 else   if (e.getClass() == org.voltdb.ExpectedProcedureException.class) {
    msg.append("HSQL-BACKEND ERROR\n");
    if (e.getCause() != null)     e=e.getCause();
  }
 else {
    msg.append("UNEXPECTED FAILURE:\n");
  }
  String exMsg=e.getMessage();
  if (exMsg == null)   if (e.getClass() == NullPointerException.class) {
    exMsg="Null Pointer Exception";
  }
 else {
    exMsg="Possible Null Pointer Exception (";
    exMsg+=e.getClass().getSimpleName() + ")";
    e.printStackTrace();
  }
  msg.append("  ").append(exMsg);
  for (  StackTraceElement ste : matches) {
    msg.append("\n    at ");
    msg.append(ste.getClassName()).append(".").append(ste.getMethodName());
    msg.append("(").append(ste.getFileName()).append(":");
    msg.append(ste.getLineNumber()).append(")");
  }
  return getErrorResponse(status,msg.toString(),e instanceof SerializableException ? (SerializableException)e : null);
}
