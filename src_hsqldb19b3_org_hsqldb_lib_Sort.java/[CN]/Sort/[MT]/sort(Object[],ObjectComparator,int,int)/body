{
  int i;
  int j;
  Object p;
  if (l > r) {
    return;
  }
  while (r - l > 10) {
    i=(r + l) >>> 1;
    if (comparator.compare(w[l],w[r]) > 0) {
      swap(w,l,r);
    }
    if (comparator.compare(w[i],w[l]) < 0) {
      swap(w,l,i);
    }
 else     if (comparator.compare(w[i],w[r]) > 0) {
      swap(w,i,r);
    }
    j=r - 1;
    swap(w,i,j);
    p=w[j];
    i=l;
    while (true) {
      while (comparator.compare(w[++i],p) < 0) {
        ;
      }
      while (comparator.compare(w[--j],p) > 0) {
        ;
      }
      if (i >= j) {
        break;
      }
      swap(w,i,j);
    }
    swap(w,i,r - 1);
    sort(w,comparator,l,i - 1);
    l=i + 1;
  }
  for (i=l + 1; i <= r; i++) {
    Object t=w[i];
    for (j=i - 1; j >= l && comparator.compare(w[j],t) > 0; j--) {
      w[j + 1]=w[j];
    }
    w[j + 1]=t;
  }
}
