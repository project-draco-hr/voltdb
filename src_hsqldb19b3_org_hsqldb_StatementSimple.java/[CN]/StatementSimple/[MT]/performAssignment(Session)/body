{
  Object[] values;
  if (expression.getType() == OpTypes.ROW) {
    values=expression.getRowValue(session);
  }
 else   if (expression.getType() == OpTypes.TABLE_SUBQUERY) {
    values=expression.subQuery.queryExpression.getSingleRowValues(session);
    if (values == null) {
      return;
    }
  }
 else {
    values=new Object[1];
    values[0]=expression.getValue(session,variables[0].getDataType());
  }
  for (int j=0; j < values.length; j++) {
    Object[] data=ValuePool.emptyObjectArray;
switch (variables[j].getType()) {
case SchemaObject.PARAMETER:
      data=session.sessionContext.routineArguments;
    break;
case SchemaObject.VARIABLE:
  data=session.sessionContext.routineVariables;
break;
}
int colIndex=variableIndexes[j];
data[colIndex]=variables[j].getDataType().convertToDefaultType(session,values[j]);
}
}
