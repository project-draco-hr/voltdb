{
class Tester {
    List<CallableStatement> m_callableStatements=new ArrayList<CallableStatement>();
    int m_value=0;
    void makeStatements() throws SQLException {
      for (      Connection connection : m_connections) {
        CallableStatement cs=connection.prepareCall("{call InsertA(?, ?)}");
        cs.setInt(1,m_value + 100);
        cs.setInt(2,m_value + 1000);
        m_value++;
        m_callableStatements.add(cs);
      }
    }
    void testStatements(    int expectConnectionFailures){
      if (expectConnectionFailures < 0) {
        expectConnectionFailures=m_callableStatements.size();
      }
      for (int i=0; i < m_connections.length; ++i) {
        try {
          m_callableStatements.get(i).execute();
          assertEquals(0,expectConnectionFailures);
        }
 catch (        SQLException e) {
          assertTrue(expectConnectionFailures > 0);
          expectConnectionFailures--;
          assertEquals(e.getSQLState(),SQLError.CONNECTION_FAILURE);
        }
      }
    }
  }
{
    Tester tester=new Tester();
    tester.makeStatements();
    tester.testStatements(0);
  }
  m_server.shutdown();
{
    Tester tester=new Tester();
    tester.makeStatements();
    tester.testStatements(-1);
  }
  startServer();
{
    Tester tester=new Tester();
    tester.makeStatements();
    tester.testStatements(0);
  }
}
