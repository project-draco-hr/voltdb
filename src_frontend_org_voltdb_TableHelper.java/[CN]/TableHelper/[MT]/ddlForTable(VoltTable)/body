{
  assert(table.m_originalColumnInfos != null);
  String[] colLines=new String[table.m_originalColumnInfos.length];
  for (int i=0; i < table.m_originalColumnInfos.length; i++) {
    VoltTable.ColumnInfo colInfo=table.m_originalColumnInfos[i];
    String col=colInfo.name + " " + colInfo.type.toSQLString().toUpperCase();
    if ((colInfo.type == VoltType.STRING) || (colInfo.type == VoltType.VARBINARY)) {
      col+=String.format("(%d)",colInfo.size);
    }
    if (colInfo.defaultValue != VoltTable.ColumnInfo.NO_DEFAULT_VALUE) {
      col+=" DEFAULT ";
      if (colInfo.defaultValue == null) {
        col+="NULL";
      }
 else       if (colInfo.type.isNumber()) {
        col+=colInfo.defaultValue;
      }
 else {
        col+="'" + colInfo.defaultValue + "'";
      }
    }
    if (colInfo.nullable == false) {
      col+=" NOT NULL";
    }
    if (colInfo.unique == true) {
      col+=" UNIQUE";
    }
    colLines[i]=col;
  }
  String s="CREATE TABLE " + table.m_name + " (\n  ";
  s+=StringUtils.join(colLines,",\n  ");
  int[] pkeyIndexes=table.getPkeyColumnIndexes();
  if (pkeyIndexes.length > 0) {
    s+=",\n  PRIMARY KEY (";
    String[] pkeyColNames=new String[pkeyIndexes.length];
    for (int i=0; i < pkeyColNames.length; i++) {
      pkeyColNames[i]=table.getColumnName(pkeyIndexes[i]);
    }
    s+=StringUtils.join(pkeyColNames,",");
    s+=")";
  }
  s+="\n);";
  if (table.m_partitionColIndex != -1) {
    s+=String.format("\nPARTITION TABLE %s ON COLUMN %s;",table.m_name,table.m_originalColumnInfos[table.m_partitionColIndex].name);
  }
  return s;
}
