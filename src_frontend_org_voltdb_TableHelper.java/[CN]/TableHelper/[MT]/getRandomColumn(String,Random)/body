{
  VoltType[] allTypes={VoltType.BIGINT,VoltType.FLOAT,VoltType.INTEGER,VoltType.SMALLINT,VoltType.STRING,VoltType.TIMESTAMP,VoltType.TINYINT};
  VoltTable.ColumnInfo column=new VoltTable.ColumnInfo(name,allTypes[rand.nextInt(allTypes.length)]);
  column.size=0;
  if ((column.type == VoltType.VARBINARY) || (column.type == VoltType.STRING)) {
    if (rand.nextBoolean()) {
      column.size=rand.nextInt(63) + 1;
    }
 else {
      column.size=Math.min(64 + (int)(Math.abs(rand.nextGaussian()) * (1024 - 64)),1024 * 1024);
    }
  }
  Object defaultValue=null;
  column.nullable=false;
  defaultValue=VoltTypeUtil.getRandomValue(column.type,Math.max(column.size % 128,1),0.0,rand);
  if (defaultValue != null) {
    column.defaultValue=String.valueOf(defaultValue);
  }
 else {
    column.defaultValue=null;
  }
  if ((column.type == VoltType.VARBINARY) || (column.type == VoltType.DECIMAL)) {
    column.defaultValue=null;
    column.nullable=true;
  }
  assert(column.name != null);
  assert(column.size >= 0);
  if ((column.type == VoltType.STRING) || (column.type == VoltType.VARBINARY)) {
    assert(column.size >= 0);
  }
  return column;
}
