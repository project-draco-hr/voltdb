{
  Map<Integer,Integer> indexMap=new TreeMap<Integer,Integer>();
  for (int i=0; i < dest.getColumnCount(); i++) {
    String destColName=dest.getColumnName(i);
    for (int j=0; j < source.getColumnCount(); j++) {
      String srcColName=source.getColumnName(j);
      if (srcColName.equals(destColName)) {
        indexMap.put(i,j);
      }
    }
  }
  assert(dest.getRowCount() == 0);
  source.resetRowPosition();
  while (source.advanceRow()) {
    Object[] row=new Object[dest.getColumnCount()];
    for (int i=0; i < dest.getColumnCount(); i++) {
      if (indexMap.containsKey(i)) {
        int sourcePos=indexMap.get(i);
        row[i]=source.get(sourcePos,source.getColumnType(sourcePos));
      }
 else {
        row[i]=dest.getColumnDefaultValue(i);
        if (row[i] == TableShorthand.ColMeta.NO_DEFAULT_VALUE) {
          if (dest.getColumnNullable(i)) {
            row[i]=null;
          }
 else {
            throw new RuntimeException(String.format("New column %s needs a default value in migration",dest.getColumnName(i)));
          }
        }
      }
      VoltType destColType=dest.getColumnType(i);
      Class<?> descColClass=destColType.classFromType();
      row[i]=ParameterConverter.tryToMakeCompatible(false,false,descColClass,null,row[i]);
    }
    dest.addRow(row);
  }
}
