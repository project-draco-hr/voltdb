{
  assert((maxRows > 0) || (mb > 0));
  assert(maxRows >= 0);
  assert(mb >= 0);
  final int mbTarget=mb > 0 ? mb : Integer.MAX_VALUE;
  if (maxRows == 0) {
    maxRows=Long.MAX_VALUE;
  }
  System.out.printf("Filling table %s with rows starting with pkey id %d (every %d rows) until either RSS=%dmb or rowcount=%d\n",table.m_extraMetadata.name,offset,jump,mbTarget,maxRows);
  int pkeyColIndex=getBigintPrimaryKeyIndexIfExists(table);
  if (pkeyColIndex == -1) {
    pkeyColIndex=0;
    assert(table.getColumnType(0).isInteger());
  }
  final AtomicLong rss=new AtomicLong(0);
  ProcedureCallback insertCallback=new ProcedureCallback(){
    @Override public void clientCallback(    ClientResponse clientResponse) throws Exception {
      if (clientResponse.getStatus() != ClientResponse.SUCCESS) {
        System.out.println("Error in loader callback:");
        System.out.println(((ClientResponseImpl)clientResponse).toJSONString());
        assert(false);
      }
    }
  }
;
  final AtomicBoolean rssThreadShouldStop=new AtomicBoolean(false);
  Thread rssThread=new Thread(){
    @Override public void run(){
      long tempRss=rss.get();
      long rssPrev=tempRss;
      while (!rssThreadShouldStop.get()) {
        tempRss=MiscUtils.getMBRss(client);
        if (tempRss != rssPrev) {
          rssPrev=tempRss;
          rss.set(tempRss);
          System.out.printf("RSS=%dmb\n",tempRss);
          if (tempRss > mbTarget) {
            return;
          }
        }
        try {
          Thread.sleep(2000);
        }
 catch (        Exception e) {
        }
      }
    }
  }
;
  long i=offset;
  long rows=0;
  rssThread.start();
  final String insertProcName=table.m_extraMetadata.name.toUpperCase() + ".insert";
  RandomRowMaker filler=createRandomRowMaker(table,Integer.MAX_VALUE,false,false);
  while (rss.get() < mbTarget) {
    Object[] row=filler.randomRow();
    row[pkeyColIndex]=i;
    client.callProcedure(insertCallback,insertProcName,row);
    rows++;
    if ((rows % 100000) == 0) {
      System.out.printf("Loading 100000 rows. %d inserts sent (%d max id).\n",rows,i);
    }
    if (rows >= maxRows) {
      break;
    }
    i+=jump;
  }
  rssThreadShouldStop.set(true);
  client.drain();
  rssThread.join();
  System.out.printf("Filled table %s with %d rows and now RSS=%dmb\n",table.m_extraMetadata.name,rows,rss.get());
}
