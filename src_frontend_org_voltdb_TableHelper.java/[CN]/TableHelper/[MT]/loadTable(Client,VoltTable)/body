{
  assert(t.m_extraMetadata != null);
  if (t.m_extraMetadata.partitionColIndex == -1) {
    client.callProcedure("@LoadMultipartitionTable",t.m_extraMetadata.name,(byte)0,t);
  }
 else {
    final AtomicBoolean failed=new AtomicBoolean(false);
    final CountDownLatch latch=new CountDownLatch(t.getRowCount());
    int columns=t.getColumnCount();
    String procedureName=t.m_extraMetadata.name.toUpperCase() + ".insert";
    final ProcedureCallback insertCallback=new ProcedureCallback(){
      @Override public void clientCallback(      ClientResponse clientResponse) throws Exception {
        latch.countDown();
        if (clientResponse.getStatus() != ClientResponse.SUCCESS) {
          failed.set(true);
        }
      }
    }
;
    t.resetRowPosition();
    while (t.advanceRow()) {
      Object params[]=new Object[columns];
      for (int i=0; i < columns; ++i) {
        params[i]=t.get(i,t.getColumnType(i));
      }
      client.callProcedure(insertCallback,procedureName,params);
    }
    latch.await();
    if (failed.get()) {
      throw new RuntimeException("TableHelper.load failed.");
    }
  }
}
