{
  return new AbstractIndexedListIterator<Cell<R,C,V>>(size()){
    @Override protected Cell<R,C,V> get(    final int index){
      return new Tables.AbstractCell<R,C,V>(){
        final int rowIndex=index / columnList.size();
        final int columnIndex=index % columnList.size();
        @Override public R getRowKey(){
          return rowList.get(rowIndex);
        }
        @Override public C getColumnKey(){
          return columnList.get(columnIndex);
        }
        @Override public V getValue(){
          return at(rowIndex,columnIndex);
        }
      }
;
    }
  }
;
}
