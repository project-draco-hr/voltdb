{
  final java.util.concurrent.atomic.AtomicBoolean deleted=new java.util.concurrent.atomic.AtomicBoolean(false);
synchronized (m_committedBuffers) {
    if (buffer != null) {
      try {
        m_committedBuffers.offer(new StreamBlock(new BBContainer(buffer,bufferPtr){
          @Override public void discard(){
            DBBPool.deleteCharArrayMemory(address);
            deleted.set(true);
          }
        }
,uso,false));
      }
 catch (      IOException e) {
        exportLog.error(e);
        if (!deleted.get()) {
          DBBPool.deleteCharArrayMemory(bufferPtr);
        }
      }
    }
    if (sync) {
      try {
        m_committedBuffers.sync(true);
      }
 catch (      IOException e) {
        exportLog.error(e);
      }
    }
  }
}
