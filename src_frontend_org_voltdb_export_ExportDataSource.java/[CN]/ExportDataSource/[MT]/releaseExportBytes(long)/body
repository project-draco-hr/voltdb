{
  if (!m_committedBuffers.isEmpty() && releaseOffset < m_committedBuffers.peek().uso()) {
    return;
  }
  long lastUso=m_firstUnpolledUso;
  while (!m_committedBuffers.isEmpty() && releaseOffset >= m_committedBuffers.peek().uso()) {
    StreamBlock sb=m_committedBuffers.peek();
    if (releaseOffset >= sb.uso() + sb.totalUso()) {
      m_committedBuffers.pop();
      try {
        lastUso=sb.uso() + sb.totalUso();
      }
  finally {
        sb.deleteContent();
      }
    }
 else     if (releaseOffset >= sb.uso()) {
      sb.releaseUso(releaseOffset);
      lastUso=releaseOffset;
      break;
    }
  }
  m_firstUnpolledUso=Math.max(m_firstUnpolledUso,lastUso);
}
