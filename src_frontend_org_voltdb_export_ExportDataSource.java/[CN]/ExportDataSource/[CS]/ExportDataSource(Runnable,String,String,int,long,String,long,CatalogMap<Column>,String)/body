{
  checkNotNull(onDrain,"onDrain runnable is null");
  m_generation=generation;
  m_onDrain=new Runnable(){
    @Override public void run(){
      try {
        onDrain.run();
      }
  finally {
        m_onDrain=null;
        forwardAckToOtherReplicas(Long.MIN_VALUE);
      }
    }
  }
;
  m_database=db;
  m_tableName=tableName;
  m_es=CoreUtils.getListeningExecutorService("ExportDataSource gen " + m_generation + " table "+ m_tableName+ " partition "+ partitionId,1);
  String nonce=signature + "_" + HSId+ "_"+ partitionId;
  m_committedBuffers=new StreamBlockQueue(overflowPath,nonce);
  m_signature=signature;
  m_signatureBytes=m_signature.getBytes(VoltDB.UTF8ENCODING);
  m_partitionId=partitionId;
  m_HSId=HSId;
  m_columnNames.add("VOLT_TRANSACTION_ID");
  m_columnTypes.add(((int)VoltType.BIGINT.getValue()));
  m_columnLengths.add(8);
  m_columnNames.add("VOLT_EXPORT_TIMESTAMP");
  m_columnTypes.add(((int)VoltType.BIGINT.getValue()));
  m_columnLengths.add(8);
  m_columnNames.add("VOLT_EXPORT_SEQUENCE_NUMBER");
  m_columnTypes.add(((int)VoltType.BIGINT.getValue()));
  m_columnLengths.add(8);
  m_columnNames.add("VOLT_PARTITION_ID");
  m_columnTypes.add(((int)VoltType.BIGINT.getValue()));
  m_columnLengths.add(8);
  m_columnNames.add("VOLT_SITE_ID");
  m_columnTypes.add(((int)VoltType.BIGINT.getValue()));
  m_columnLengths.add(8);
  m_columnNames.add("VOLT_EXPORT_OPERATION");
  m_columnTypes.add(((int)VoltType.TINYINT.getValue()));
  m_columnLengths.add(1);
  for (  Column c : CatalogUtil.getSortedCatalogItems(catalogMap,"index")) {
    m_columnNames.add(c.getName());
    m_columnTypes.add(c.getType());
    m_columnLengths.add(c.getSize());
  }
  File adFile=new VoltFile(overflowPath,nonce + ".ad");
  exportLog.info("Creating ad for " + nonce);
  assert(!adFile.exists());
  byte jsonBytes[]=null;
  FastSerializer fs=new FastSerializer();
  try {
    JSONStringer stringer=new JSONStringer();
    stringer.object();
    stringer.key("hsId").value(m_HSId);
    stringer.key("database").value(m_database);
    writeAdvertisementTo(stringer);
    stringer.endObject();
    JSONObject jsObj=new JSONObject(stringer.toString());
    jsonBytes=jsObj.toString(4).getBytes(Charsets.UTF_8);
  }
 catch (  JSONException e) {
    Throwables.propagate(e);
  }
  FileOutputStream fos=new FileOutputStream(adFile);
  fos.write(jsonBytes);
  fos.getFD().sync();
  fos.close();
  m_nullArrayLength=((m_columnTypes.size() + 7) & -8) >> 3;
}
