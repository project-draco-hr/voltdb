{
  m_endOfStream=true;
  m_onDrain=onDrain;
  String overflowPath=adFile.getParent();
  FileInputStream fis=new FileInputStream(adFile);
  byte data[]=new byte[(int)adFile.length()];
  int read=fis.read(data);
  if (read != data.length) {
    throw new IOException("Failed to read ad file " + adFile);
  }
  FastDeserializer fds=new FastDeserializer(data);
  m_HSId=fds.readLong();
  m_database=fds.readString();
  m_generation=fds.readLong();
  m_partitionId=fds.readInt();
  m_signature=fds.readString();
  m_signatureBytes=m_signature.getBytes(VoltDB.UTF8ENCODING);
  m_tableName=fds.readString();
  fds.readLong();
  int numColumns=fds.readInt();
  for (int ii=0; ii < numColumns; ++ii) {
    m_columnNames.add(fds.readString());
    int columnType=fds.readInt();
    m_columnTypes.add(columnType);
  }
  String nonce=m_signature + "_" + m_HSId+ "_"+ m_partitionId;
  m_committedBuffers=new StreamBlockQueue(overflowPath,nonce);
  m_nullArrayLength=((m_columnTypes.size() + 7) & -8) >> 3;
  m_es=CoreUtils.getListeningExecutorService("ExportDataSource gen " + m_generation + " sig "+ m_signature,1);
}
