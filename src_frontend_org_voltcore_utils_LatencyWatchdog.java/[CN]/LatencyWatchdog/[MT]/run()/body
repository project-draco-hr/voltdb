{
  Thread.currentThread().setName("Latency Watchdog");
  System.out.println("Latency Watchdog thread has been started.");
  while (true) {
    for (Iterator<WatchdogTimestamp> iter=sLatencyMap.values().iterator(); iter.hasNext(); ) {
      WatchdogTimestamp wt=iter.next();
      Thread t=wt.getThread();
      Long timestamp=wt.getTimestamp();
      long now=System.currentTimeMillis();
      if ((now - timestamp > WATCHDOG_THRESHOLD) && t.getState() != Thread.State.TERMINATED) {
        StringBuilder sb=new StringBuilder();
        sb.append(t.getName() + " has been delayed for more than " + WATCHDOG_THRESHOLD+ " milliseconds\n");
        for (        StackTraceElement ste : t.getStackTrace()) {
          sb.append(ste);
          sb.append("\n");
        }
        RateLimitedLogger.tryLogForMessage(sb.toString(),now,MIN_LOG_INTERVAL,TimeUnit.SECONDS,LOG,Level.DEBUG);
      }
      if (t.getState() == Thread.State.TERMINATED) {
        iter.remove();
      }
    }
    try {
      Thread.sleep(WAKEUP_INTERVAL);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
