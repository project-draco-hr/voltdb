{
  if (key == null)   return _nullEntry;
  Node node=_root;
  int ni=-1;
  charLoop:   for (int i=0; i < maxLength; i++) {
    char c=(char)key[offset + i];
    if (ni == -1) {
      ni=0;
      Node child=(node._children == null) ? null : node._children[c % _width];
      if (child == null && i > 0)       return node;
      node=child;
    }
    while (node != null) {
      if (node._char[ni] == c || _ignoreCase && node._ochar[ni] == c) {
        ni++;
        if (ni == node._char.length)         ni=-1;
        continue charLoop;
      }
      if (ni > 0)       return null;
      node=node._next;
    }
    return null;
  }
  if (ni > 0)   return null;
  if (node != null && node._key == null)   return null;
  return node;
}
