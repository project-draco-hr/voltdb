{
  assert(message != null);
  final Deque<VoltMessage> dq=m_messages.get(message.getSubject());
synchronized (this) {
    if (toFront) {
      dq.offerFirst(message);
    }
 else {
      dq.offer(message);
    }
    this.notify();
  }
  message.receivedFromSiteId=m_siteId;
  if (MESSAGE_HISTORY_SIZE > 0) {
    if (message instanceof DebugMessage)     return;
 else     if (message instanceof TransactionInfoBaseMessage) {
      TransactionInfoBaseMessage mn=(TransactionInfoBaseMessage)message;
      if (mn instanceof HeartbeatMessage) synchronized (m_lastTenHeartbeats) {
        m_lastTenHeartbeats.addLast(message);
        if (m_lastTenHeartbeats.size() > MESSAGE_HISTORY_SIZE)         m_lastTenHeartbeats.pollFirst();
      }
 else synchronized (m_lastTenMembershipNotices) {
        m_lastTenMembershipNotices.addLast(message);
        if (m_lastTenMembershipNotices.size() > MESSAGE_HISTORY_SIZE)         m_lastTenMembershipNotices.pollFirst();
      }
    }
 else synchronized (m_lastTenReceivedMessages) {
      m_lastTenReceivedMessages.addLast(message);
      if (m_lastTenReceivedMessages.size() > MESSAGE_HISTORY_SIZE)       m_lastTenReceivedMessages.pollFirst();
    }
  }
}
