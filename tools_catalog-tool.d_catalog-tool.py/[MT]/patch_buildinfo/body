def patch_buildinfo(runner, buildinfo_in, version_new):
    buildinfo_out = ('%s.out' % buildinfo_in)
    buildinfo_orig = ('%s.orig' % buildinfo_in)
    if (not os.path.isfile(buildinfo_in)):
        runner.abort(('"%s" not found.' % buildinfo_in))
    try:
        shutil.copy(buildinfo_in, buildinfo_orig)
    except (IOError, OSError) as e:
        runner.abort(('Failed to backup "%s" to "%s".' % (buildinfo_in, buildinfo_orig)), e)
    try:
        f_in = open(buildinfo_in, 'r')
    except (IOError, OSError) as e:
        runner.abort(('Failed to open input file "%s".' % buildinfo_in))
    try:
        try:
            f_out = open(buildinfo_out, 'w')
        except (IOError, OSError) as e:
            runner.abort(('Failed to open output file "%s".' % buildinfo_out))
        try:
            nline = 0
            for line in f_in:
                if (nline == 0):
                    f_out.write(('%s\n' % version_new))
                else:
                    f_out.write(line)
                nline += 1
        finally:
            f_out.close()
    finally:
        f_in.close()
    try:
        shutil.move(buildinfo_out, buildinfo_in)
    except (IOError, OSError) as e:
        runner.abort(('Failed to move "%s" to "%s".' % (buildinfo_out, buildinfo_in)), e)
