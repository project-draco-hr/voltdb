{
  PlatformProperties pp=PlatformProperties.getPlatformProperties();
  String processName=java.lang.management.ManagementFactory.getRuntimeMXBean().getName();
  String pidString=processName.substring(0,processName.indexOf('@'));
  pid=Integer.valueOf(pidString);
  initialized=true;
  PSScraper.PSData psdata=PSScraper.getPSData(pid);
  assert(psdata.rss > 0);
  memorysize=pp.ramInMegabytes;
  assert(memorysize > 0);
  long rss=-1;
  try {
    rss=ExecutionEngine.nativeGetRSS();
  }
 catch (  Throwable e) {
  }
  if (rss > 0)   mode=GetRSSMode.MACOSX_NATIVE;
  rss=getRSSFromProcFS();
  if (rss > 0)   mode=GetRSSMode.PROCFS;
  if (mode == GetRSSMode.PS) {
    VoltLogger logger=new VoltLogger("HOST");
    logger.warn("System statistics will be collected in a sub-optimal " + "manner because either procfs couldn't be read from or " + "the native library couldn't be loaded.");
  }
}
