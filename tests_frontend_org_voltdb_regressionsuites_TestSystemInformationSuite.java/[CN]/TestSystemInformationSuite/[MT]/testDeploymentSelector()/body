{
  Client client=getClient();
  try {
    client.callProcedure("@SystemInformation","NONSENSE");
    fail("Invalid selector should have resulted in a ProcCallException but didn't");
  }
 catch (  ProcCallException pce) {
    assertTrue(pce.getMessage().contains("Invalid @SystemInformation selector NONSENSE"));
  }
  VoltTable[] results=client.callProcedure("@SystemInformation").getResults();
  System.out.println(results[0]);
  VoltTable[] results2=client.callProcedure("@SystemInformation","OVERVIEW").getResults();
  assertTrue(results[0].hasSameContents(results2[0]));
  results=client.callProcedure("@SystemInformation","DEPLOYMENT").getResults();
  System.out.println(results[0]);
  HashMap<String,String> sysinfo=new HashMap<String,String>();
  while (results[0].advanceRow()) {
    sysinfo.put(results[0].getString(0),results[0].getString(1));
  }
  System.out.println(sysinfo.toString());
  assertEquals(m_expectedVals.get("adminstartup"),sysinfo.get("adminstartup"));
  assertEquals(m_expectedVals.get("heartbeattimeout"),sysinfo.get("heartbeattimeout"));
  assertEquals(m_expectedVals.get("partitiondetection"),sysinfo.get("partitiondetection"));
  assertEquals(m_expectedVals.get("partitiondetectionsnapshotprefix"),sysinfo.get("partitiondetectionsnapshotprefix"));
  assertEquals(m_expectedVals.get("export"),sysinfo.get("export"));
  assertEquals(m_expectedVals.get("snapshotenabled"),sysinfo.get("snapshotenabled"));
  assertEquals(m_expectedVals.get("snapshotfrequency"),sysinfo.get("snapshotfrequency"));
  assertEquals(m_expectedVals.get("snapshotretain"),sysinfo.get("snapshotretain"));
  assertEquals(m_expectedVals.get("snapshotprefix"),sysinfo.get("snapshotprefix"));
  assertEquals(m_expectedVals.get("httpenabled"),sysinfo.get("httpenabled"));
  assertEquals(m_expectedVals.get("jsonenabled"),sysinfo.get("jsonenabled"));
}
