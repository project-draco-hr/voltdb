{
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestSystemInformationSuite.class);
  VoltProjectBuilder project=new VoltProjectBuilder();
  project.addLiteralSchema("CREATE TABLE T(A1 INTEGER NOT NULL, A2 INTEGER, PRIMARY KEY(A1));");
  project.addPartitionInfo("T","A1");
  project.addStmtProcedure("InsertA","INSERT INTO T VALUES(?,?);","T.A1: 0");
  GroupInfo[] groups=new GroupInfo[2];
  groups[0]=new GroupInfo("admins",true,true,true);
  groups[1]=new GroupInfo("users",false,false,true);
  project.addGroups(groups);
  UserInfo[] users=new UserInfo[3];
  users[0]=new UserInfo("joeadmin","adminpass",new String[]{new String("admins"),new String("users")});
  users[1]=new UserInfo("joeuser","userpass",new String[]{new String("users")});
  users[2]=new UserInfo("why:would;you\\dothis","dummy",new String[]{new String("users")});
  project.addUsers(users);
  m_expectedVals.put("snapshotenabled","true");
  m_expectedVals.put("snapshotfrequency","10s");
  m_expectedVals.put("snapshotretain","5");
  m_expectedVals.put("snapshotpath","/tmp");
  m_expectedVals.put("snapshotprefix","dude");
  project.setSnapshotSettings(m_expectedVals.get("snapshotfrequency"),Integer.valueOf(m_expectedVals.get("snapshotretain")),m_expectedVals.get("snapshotpath"),m_expectedVals.get("snapshotprefix"));
  m_expectedVals.put("partitiondetection","true");
  m_expectedVals.put("partitiondetectionsnapshotprefix","/tmp");
  project.setPartitionDetectionSettings(m_expectedVals.get("snapshotpath"),m_expectedVals.get("partitiondetectionsnapshotprefix"));
  m_expectedVals.put("export","true");
  project.addExport(true);
  m_expectedVals.put("commandlogenabled","false");
  m_expectedVals.put("adminstartup","false");
  m_expectedVals.put("heartbeattimeout","10");
  m_expectedVals.put("httpenabled","false");
  m_expectedVals.put("jsonenabled","false");
  LocalCluster lcconfig=new LocalCluster("getclusterinfo-cluster.jar",2,3,1,BackendTarget.NATIVE_EE_JNI);
  boolean success=lcconfig.compile(project);
  assertTrue(success);
  lcconfig.setHasLocalServer(false);
  builder.addServerConfig(lcconfig);
  return builder;
}
