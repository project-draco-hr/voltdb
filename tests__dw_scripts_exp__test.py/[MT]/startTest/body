def startTest(testSuiteList):
    statusBySuite = {}
    msgBySuite = {}
    keyWordsBySuite = {}
    msg = ''
    result = False
    for (suiteName, path) in testSuiteList.iteritems():
        keyStrSet = None
        if (suiteName in elem2Test.keys()):
            os.chdir(path)
            currDir = os.getcwd()
            service = elem2Test[suiteName]
            print ('>>> Test: %s' % suiteName)
            print ("   Current Directory: '%s'" % currDir)
            logFileS = os.path.join(logDir, (suiteName + '_server'))
            logFileC = os.path.join(logDir, (suiteName + '_client'))
            print ("   Log File for VoltDB Server: '%s'" % logFileS)
            print ("   Log File for VoltDB Client: '%s'" % logFileC)
            execThisService(service, logFileS, logFileC)
            if (suiteName == 'helloworld'):
                (result, msg) = assertHelloWorld(suiteName, logFileC)
            elif (suiteName == 'voter'):
                (result, msg) = assertVoter(suiteName, logFileC)
            elif ((suiteName == 'voltkv') or (suiteName == 'voltcache')):
                (result, msg, keyStrSet) = assertVoltkv_Voltcache(suiteName, logFileC)
        else:
            msg = ("Unknown Suite Name: '%s'. To be implemented. Exit with an error..." % suiteName)
            print ('==-->> %s' % msg)
            exit(1)
        statusBySuite[suiteName] = result
        msgBySuite[suiteName] = msg
        keyWordsBySuite[suiteName] = keyStrSet
        os.chdir(origDir)
    return (statusBySuite, msgBySuite, keyWordsBySuite)
