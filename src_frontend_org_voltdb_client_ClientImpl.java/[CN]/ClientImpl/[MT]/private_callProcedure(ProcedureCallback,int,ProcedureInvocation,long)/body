{
  if (m_isShutdown) {
    return false;
  }
  if (callback == null) {
    callback=new NullCallback();
  }
  final long nowNanos=System.nanoTime();
  boolean isBlessed=m_blessedThreadIds.contains(Thread.currentThread().getId());
  if (m_blockingQueue) {
    while (!m_distributer.queue(invocation,callback,isBlessed,nowNanos,timeoutNanos)) {
      final long delta=Math.max(1,System.nanoTime() - nowNanos);
      final long timeout=timeoutNanos == Distributer.USE_DEFAULT_TIMEOUT ? m_distributer.getProcedureTimeoutNanos() : timeoutNanos;
      try {
        if (backpressureBarrier(nowNanos,timeout - delta)) {
          final ClientResponseImpl r=new ClientResponseImpl(ClientResponse.CONNECTION_TIMEOUT,ClientResponse.UNINITIALIZED_APP_STATUS_CODE,"",new VoltTable[0],String.format("No response received in the allotted time (set to %d ms).",TimeUnit.NANOSECONDS.toMillis(timeoutNanos)));
          try {
            callback.clientCallback(r);
          }
 catch (          Throwable t) {
            m_distributer.uncaughtException(callback,r,t);
          }
        }
      }
 catch (      InterruptedException e) {
        throw new java.io.InterruptedIOException("Interrupted while invoking procedure asynchronously");
      }
    }
    return true;
  }
 else {
    return m_distributer.queue(invocation,callback,isBlessed,nowNanos,timeoutNanos);
  }
}
