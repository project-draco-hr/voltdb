{
  VoltDB.Configuration config=new VoltDB.Configuration();
  String ddl="create table FOO (" + "ID integer not null," + "VAL bigint, "+ "VAL1 float,"+ "constraint PK_TREE primary key (ID)"+ ");\n"+ "create table FOO_R ("+ "ID integer not null,"+ "VAL bigint, "+ "constraint PK_TREE_R primary key (ID)"+ ");\n"+ "Partition table FOO on column ID;\n";
  createSchema(config,ddl,2,1,0);
  try {
    startSystem(config);
    assertFalse(findTableInSystemCatalogResults("FOOVIEW"));
    try {
      m_client.callProcedure("@AdHoc","create view FOOVIEW (VAL, VAL1, TOTAL) as " + "select VAL, VAL1, COUNT(*) from FOO group by VAL, VAL1;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to create a view");
    }
    assertTrue(findTableInSystemCatalogResults("FOOVIEW"));
    assertFalse(findIndexInSystemCatalogResults("VALDEX"));
    try {
      m_client.callProcedure("@AdHoc","create index SimpleIndex on FOOVIEW (VAL);");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to create an index on a view");
    }
    assertTrue(findIndexInSystemCatalogResults("SimpleIndex"));
    try {
      m_client.callProcedure("@AdHoc","drop index SimpleIndex;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to drop an index on a view");
    }
    assertFalse(findIndexInSystemCatalogResults("SimpleIndex"));
    boolean threw=false;
    try {
      m_client.callProcedure("@AdHoc","drop index SimpleIndex;");
    }
 catch (    ProcCallException pce) {
      threw=true;
    }
    assertTrue("Shouldn't be able to drop bad index without if exists",threw);
    assertFalse(findIndexInSystemCatalogResults("SimpleIndex"));
    try {
      m_client.callProcedure("@AdHoc","drop index SimpleIndex if exists;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to drop a bad index with if exists");
    }
    assertFalse(findIndexInSystemCatalogResults("SimpleIndex"));
    try {
      m_client.callProcedure("@AdHoc","create index ComplexIndex on FOOVIEW (VAL, TOTAL);");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to recreate an index on a view");
    }
    assertTrue(findIndexInSystemCatalogResults("ComplexIndex"));
    try {
      m_client.callProcedure("@AdHoc","drop index ComplexIndex if exists;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to drop an index on a view");
    }
    assertFalse(findIndexInSystemCatalogResults("ComplexIndex"));
  }
  finally {
    teardownSystem();
  }
}
