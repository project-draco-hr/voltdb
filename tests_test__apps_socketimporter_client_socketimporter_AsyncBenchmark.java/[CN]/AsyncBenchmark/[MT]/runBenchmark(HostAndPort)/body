{
  System.out.print(HORIZONTAL_RULE);
  System.out.println(" Setup & Initialization");
  System.out.println(HORIZONTAL_RULE);
  System.out.print(HORIZONTAL_RULE);
  System.out.println(" Starting Benchmark");
  System.out.println(HORIZONTAL_RULE);
  SecureRandom rnd=new SecureRandom();
  rnd.setSeed(Thread.currentThread().getId());
  try {
    System.out.println("Warming up...");
    final long warmupEndTime=System.currentTimeMillis() + (1000l * config.warmup);
    while (warmupEndTime > System.currentTimeMillis()) {
      String key=Long.toString(rnd.nextLong());
      String s;
      if (config.perftest) {
        String valString=RandomStringUtils.randomAlphanumeric(1024);
        s=key + "," + valString+ "\n";
      }
 else {
        String t=Long.toString(System.currentTimeMillis());
        Pair<String,String> p=new Pair<String,String>(key,t);
        queue.offer(p);
        s=key + "," + t+ "\n";
      }
      writeFully(s,hap,warmupEndTime);
      warmupCount.getAndIncrement();
    }
    benchmarkStartTS=System.currentTimeMillis();
    System.out.println("\nRunning benchmark...");
    final long benchmarkEndTime=System.currentTimeMillis() + (1000l * config.duration);
    while (benchmarkEndTime > System.currentTimeMillis()) {
      String key=Long.toString(rnd.nextLong());
      String s;
      if (config.perftest) {
        String valString=RandomStringUtils.randomAlphanumeric(16);
        s=key + "," + valString+ "\n";
      }
 else {
        String t=Long.toString(System.currentTimeMillis());
        Pair<String,String> p=new Pair<String,String>(key,t);
        queue.offer(p);
        s=key + "," + t+ "\n";
      }
      writeFully(s,hap,benchmarkEndTime);
      runCount.getAndIncrement();
    }
    haplist.get(hap).flush();
  }
 catch (  Exception e) {
    System.out.println("Exception in printStatistics" + e);
    StringWriter writer=new StringWriter();
    e.printStackTrace(new PrintWriter(writer,true));
    System.out.println("exeption stack is :\n" + writer.toString());
  }
 finally {
    if (timer != null)     timer.cancel();
  }
}
