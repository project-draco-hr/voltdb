{
  try {
    ConsumerIterator<byte[],byte[]> it=m_stream.iterator();
    int ttlVerified=0;
    while (it.hasNext()) {
      byte msg[]=it.next().message();
      String smsg=new String(msg);
      String row[]=ExportOnServerVerifier.RoughCSVTokenizer.tokenize(smsg);
      try {
        if (m_doneStream) {
          System.out.println("EOS Consumed: " + smsg + " Expected Rows: "+ row[6]);
          expectedRows=Long.parseLong(row[6]);
          break;
        }
        consumedRows.incrementAndGet();
        if (m_skinny) {
          if (expectedRows != 0 && consumedRows.get() >= expectedRows) {
            break;
          }
        }
        ExportOnServerVerifier.ValidationErr err=ExportOnServerVerifier.verifyRow(row);
        if (err != null) {
          System.out.println("ERROR in validation: " + err.toString());
        }
        if (++ttlVerified % VALIDATION_REPORT_INTERVAL == 0) {
          System.out.println("Verified " + ttlVerified + " rows.");
        }
        Integer partition=Integer.parseInt(row[3].trim());
        Long rowTxnId=Long.parseLong(row[6].trim());
        if (TxnEgo.getPartitionId(rowTxnId) != partition) {
          System.err.println("ERROR: mismatched exported partition for txid " + rowTxnId + ", tx says it belongs to "+ TxnEgo.getPartitionId(rowTxnId)+ ", while export record says "+ partition);
        }
        if (expectedRows != 0 && consumedRows.get() >= expectedRows) {
          break;
        }
      }
 catch (      ExportOnServerVerifier.ValidationErr ex) {
        System.out.println("Validation ERROR: " + ex);
      }
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
 finally {
    if (m_cdl != null) {
      m_cdl.countDown();
    }
  }
}
