{
  String cmd=cmd2String.get(len);
  if (cmd == null) {
    return false;
  }
  LOG.info("Processing " + cmd + " command from "+ sock.socket().getRemoteSocketAddress());
  packetReceived();
  if (k != null) {
    try {
      k.cancel();
    }
 catch (    Exception e) {
      LOG.error("Error cancelling command selection key ",e);
    }
  }
  final PrintWriter pwriter=new PrintWriter(new BufferedWriter(new SendBufferWriter()));
  if (len == ruokCmd) {
    RuokCommand ruok=new RuokCommand(pwriter);
    ruok.start();
    return true;
  }
 else   if (len == getTraceMaskCmd) {
    TraceMaskCommand tmask=new TraceMaskCommand(pwriter);
    tmask.start();
    return true;
  }
 else   if (len == setTraceMaskCmd) {
    int rc=sock.read(incomingBuffer);
    if (rc < 0) {
      throw new IOException("Read error");
    }
    incomingBuffer.flip();
    long traceMask=incomingBuffer.getLong();
    ZooTrace.setTextTraceLevel(traceMask);
    SetTraceMaskCommand setMask=new SetTraceMaskCommand(pwriter,traceMask);
    setMask.start();
    return true;
  }
 else   if (len == enviCmd) {
    EnvCommand env=new EnvCommand(pwriter);
    env.start();
    return true;
  }
 else   if (len == confCmd) {
    ConfCommand ccmd=new ConfCommand(pwriter);
    ccmd.start();
    return true;
  }
 else   if (len == srstCmd) {
    StatResetCommand strst=new StatResetCommand(pwriter);
    strst.start();
    return true;
  }
 else   if (len == crstCmd) {
    CnxnStatResetCommand crst=new CnxnStatResetCommand(pwriter);
    crst.start();
    return true;
  }
 else   if (len == dumpCmd) {
    DumpCommand dump=new DumpCommand(pwriter);
    dump.start();
    return true;
  }
 else   if (len == statCmd || len == srvrCmd) {
    StatCommand stat=new StatCommand(pwriter,len);
    stat.start();
    return true;
  }
 else   if (len == consCmd) {
    ConsCommand cons=new ConsCommand(pwriter);
    cons.start();
    return true;
  }
 else   if (len == wchpCmd || len == wchcCmd || len == wchsCmd) {
    WatchCommand wcmd=new WatchCommand(pwriter,len);
    wcmd.start();
    return true;
  }
  return false;
}
