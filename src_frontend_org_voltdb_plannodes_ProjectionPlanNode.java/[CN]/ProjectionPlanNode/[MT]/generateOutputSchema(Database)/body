{
  assert(m_children.size() == 1);
  m_children.get(0).generateOutputSchema(db);
  NodeSchema new_schema=new NodeSchema();
  for (  SchemaColumn col : m_outputSchema.getColumns()) {
    if (col.getExpression().getExpressionType().isAggregateExpression()) {
      NodeSchema input_schema=m_children.get(0).getOutputSchema();
      SchemaColumn agg_col=input_schema.find(col.getTableName(),col.getTableAlias(),col.getColumnName(),col.getColumnAlias());
      if (agg_col == null) {
        throw new RuntimeException("Unable to find matching " + "input column for projection: " + col.toString());
      }
      new_schema.addColumn(col.copyAndReplaceWithTVE());
    }
 else {
      new_schema.addColumn(col.clone());
    }
  }
  m_outputSchema=new_schema;
  m_hasSignificantOutputSchema=true;
  Collection<AbstractExpression> subqueryExpressions=findAllSubquerySubexpressions();
  for (  AbstractExpression subqueryExpression : subqueryExpressions) {
    assert(subqueryExpression instanceof AbstractSubqueryExpression);
    ((AbstractSubqueryExpression)subqueryExpression).generateOutputSchema(db);
  }
}
