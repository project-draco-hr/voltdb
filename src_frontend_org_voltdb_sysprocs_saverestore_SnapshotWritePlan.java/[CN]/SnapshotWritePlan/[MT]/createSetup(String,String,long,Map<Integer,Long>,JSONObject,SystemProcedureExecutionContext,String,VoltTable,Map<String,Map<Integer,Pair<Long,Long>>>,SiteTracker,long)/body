{
  try {
    boolean aborted=createSetupInternal(file_path,file_nonce,txnId,partitionTransactionIds,jsData,context,hostname,result,exportSequenceNumbers,tracker,timestamp);
    return aborted;
  }
 catch (  Exception ex) {
    m_taskListsForHSIds.clear();
    for (    SnapshotDataTarget sdt : m_targets) {
      try {
        sdt.close();
      }
 catch (      Exception e) {
        SNAP_LOG.error("Failed to create snapshot write plan: " + ex.getMessage(),ex);
        SNAP_LOG.error("Failed closing data target after error: " + e.getMessage(),e);
      }
    }
    StringWriter sw=new StringWriter();
    PrintWriter pw=new PrintWriter(sw);
    ex.printStackTrace(pw);
    pw.flush();
    result.addRow(context.getHostId(),hostname,"","FAILURE","SNAPSHOT INITIATION OF " + file_path + file_nonce+ "RESULTED IN Exception: \n"+ sw.toString());
    SNAP_LOG.error("Failed to create snapshot write plan: " + ex.getMessage(),ex);
    return true;
  }
}
