{
  try {
    long startTime=System.currentTimeMillis();
    Boolean success=false;
    m_term=createTerm(m_messenger.getZK(),m_partitionId,getInitiatorHSId(),m_initiatorMailbox,m_whoami);
    m_term.start();
    while (!success) {
      RepairAlgo repair=m_initiatorMailbox.constructRepairAlgo(m_term.getInterestingHSIds(),m_whoami);
      if (!m_initiatorMailbox.acceptPromotion()) {
        tmLog.error(m_whoami + "rejoining site can not be promoted to leader. Terminating.");
        VoltDB.crashLocalVoltDB("A rejoining site can not be promoted to leader.",false,null);
        return;
      }
      Long txnid=Long.MIN_VALUE;
      Long uniqueId=UniqueIdGenerator.makeZero(m_partitionId);
      try {
        Pair<Long,Long> p=repair.start().get();
        txnid=p.getFirst();
        uniqueId=p.getSecond();
        success=true;
      }
 catch (      CancellationException e) {
        success=false;
      }
      if (success) {
        m_initiatorMailbox.setLeaderState(txnid,uniqueId);
        tmLog.info(m_whoami + "finished leader promotion. Took " + (System.currentTimeMillis() - startTime)+ " ms.");
        LeaderCacheWriter iv2masters=new LeaderCache(m_messenger.getZK(),m_zkMailboxNode);
        iv2masters.put(m_partitionId,m_initiatorMailbox.getHSId());
      }
 else {
        tmLog.info(m_whoami + "interrupted during leader promotion after " + (System.currentTimeMillis() - startTime)+ " ms. of "+ "trying. Retrying.");
      }
    }
    ExportManager.instance().acceptMastership(m_partitionId);
  }
 catch (  Exception e) {
    VoltDB.crashLocalVoltDB("Terminally failed leader promotion.",true,e);
  }
}
