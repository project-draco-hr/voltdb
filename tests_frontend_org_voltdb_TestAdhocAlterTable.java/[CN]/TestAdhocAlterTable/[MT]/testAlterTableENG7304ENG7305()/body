{
  System.out.println("----------------\n\n TestAlterTableENG7304ENG7305 \n\n--------------");
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("-- dont care");
  builder.setUseDDLSchema(true);
  boolean success=builder.compile(pathToCatalog,1,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  try {
    startSystem(config);
    m_client.callProcedure("@AdHoc","create table FOO (ID integer not null, " + "VAL bigint not null, " + "VAL2 bigint not null, "+ "VAL3 bigint not null);");
    m_client.callProcedure("@AdHoc","partition table foo on column ID;");
    m_client.callProcedure("@AdHoc","alter table FOO add constraint blurg ASSUMEUNIQUE(abs(VAL3));");
    m_client.callProcedure("FOO.insert",1,1,1,1);
    boolean threw=true;
    try {
      m_client.callProcedure("FOO.insert",-1,-1,-1,-1);
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      threw=true;
    }
    assertTrue("Unique absolute value constraint on FOO never applied",threw);
    threw=false;
    try {
      m_client.callProcedure("@AdHoc","alter table FOO drop column VAL2;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      threw=true;
    }
    assertTrue("Shouldn't be able to drop column VAL2 when table has data",threw);
    try {
      m_client.callProcedure("@AdHoc","truncate table FOO;");
      m_client.callProcedure("@AdHoc","alter table FOO drop column VAL2;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to drop a column on empty table in presence of expression-based index: " + pce.getMessage());
    }
    m_client.callProcedure("FOO.insert",2,2,2);
    threw=true;
    try {
      m_client.callProcedure("FOO.insert",-2,-2,-2);
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      threw=true;
    }
    assertTrue("Unique absolute value constraint on FOO has gone missing",threw);
  }
  finally {
    teardownSystem();
  }
}
