{
  System.out.println("----------------\n\n TestAlterTableENG7242 \n\n--------------");
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("-- dont care");
  builder.setUseDDLSchema(true);
  boolean success=builder.compile(pathToCatalog,1,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  try {
    startSystem(config);
    m_client.callProcedure("@AdHoc","create table FOO (ID integer not null, " + "VAL bigint not null, " + "VAL2 bigint not null, "+ "VAL3 bigint not null);");
    m_client.callProcedure("@AdHoc","partition table foo on column ID;");
    VoltTable indexes=m_client.callProcedure("@Statistics","INDEX",0).getResults()[0];
    VoltTable tables=null;
    assertEquals(0,indexes.getRowCount());
    m_client.callProcedure("@AdHoc","alter table FOO add constraint blarg LIMIT PARTITION ROWS 10;");
    m_client.callProcedure("@AdHoc","alter table FOO add constraint blerg ASSUMEUNIQUE(VAL);");
    do {
      indexes=m_client.callProcedure("@Statistics","INDEX",0).getResults()[0];
      tables=m_client.callProcedure("@Statistics","TABLE",0).getResults()[0];
    }
 while (indexes.getRowCount() != 1);
    indexes.advanceRow();
    assertEquals(1,indexes.getLong("IS_UNIQUE"));
    tables.advanceRow();
    assertEquals(10,tables.getLong("TUPLE_LIMIT"));
    try {
      m_client.callProcedure("@AdHoc","alter table FOO drop column VAL2;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("ALTER TABLE shouldn't drop ASSUMEUNIQUE from constraint blerg");
    }
    do {
      tables=m_client.callProcedure("@Statistics","TABLE",0).getResults()[0];
    }
 while (tables.getColumnCount() == 3);
    tables.advanceRow();
    assertEquals(10,tables.getLong("TUPLE_LIMIT"));
    m_client.callProcedure("@AdHoc","alter table FOO drop constraint blerg;");
    indexes=m_client.callProcedure("@Statistics","INDEX",0).getResults()[0];
    do {
      indexes=m_client.callProcedure("@Statistics","INDEX",0).getResults()[0];
      tables=m_client.callProcedure("@Statistics","TABLE",0).getResults()[0];
    }
 while (indexes.getRowCount() != 0);
    tables.advanceRow();
    assertEquals(10,tables.getLong("TUPLE_LIMIT"));
  }
  finally {
    teardownSystem();
  }
}
