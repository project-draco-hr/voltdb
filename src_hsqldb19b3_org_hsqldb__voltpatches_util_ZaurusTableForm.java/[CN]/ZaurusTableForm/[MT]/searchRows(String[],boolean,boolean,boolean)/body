{
  String where=this.generateWhere(words,allWords,ignoreCase,noMatchWhole);
  Vector temp=new Vector(20);
  Statement stmt=null;
  try {
    stmt=cConn.createStatement();
    ResultSet rs=stmt.executeQuery("SELECT " + this.getPrimaryKeysString() + " FROM "+ tableName+ where);
    while (rs.next()) {
      Object[] pkValues=new Object[primaryKeys.length];
      for (int i=0; i < primaryKeys.length; i++) {
        pkValues[i]=rs.getObject(pkColIndex[i] + 1);
      }
      temp.addElement(pkValues);
    }
    rs.close();
  }
 catch (  SQLException e) {
    ZaurusEditor.printStatus("SQL Exception: " + e.getMessage());
    return -1;
  }
 finally {
    try {
      if (stmt != null) {
        stmt.close();
      }
    }
 catch (    SQLException e) {
    }
  }
  resultRowPKs=new Object[temp.size()][primaryKeys.length];
  numberOfResult=temp.size();
  for (int i=0; i < primaryKeys.length; i++) {
    for (int j=0; j < temp.size(); j++) {
      resultRowPKs[j][i]=((Object[])temp.elementAt(j))[i];
    }
  }
  String stmtString="SELECT * FROM " + tableName;
  try {
    pStmt=cConn.prepareStatement(stmtString + this.generatePKWhere());
  }
 catch (  SQLException e) {
    System.out.println("SQL Exception: " + e.getMessage());
  }
  if (numberOfResult > 0) {
    this.disablePKFields();
    aktRowNr=0;
    this.showAktRow();
  }
  return numberOfResult;
}
