{
  if (m_partitionTxnId == null)   return;
  connection.setPerPartitionTxnIds(m_partitionTxnIds,true);
  ZooKeeper zk=VoltDB.instance().getHostMessenger().getZK();
  do {
    ByteBuffer txnIdsBuf=ByteBuffer.allocate(4 + (8 * (m_partitionTxnIds.length - 1)));
    txnIdsBuf.putInt(m_partitionTxnIds.length - 1);
    boolean foundSelf=false;
    for (int ii=0; ii < m_partitionTxnIds.length; ii++) {
      if (m_partitionTxnIds[ii] == m_partitionTxnId) {
        foundSelf=true;
        continue;
      }
      txnIdsBuf.putLong(m_partitionTxnIds[ii]);
    }
    if (!foundSelf) {
      m_partitionTxnIds=null;
      m_partitionTxnIdStat=null;
      return;
    }
    try {
      zk.setData(VoltZK.perPartitionTxnIds,txnIdsBuf.array(),m_partitionTxnIdStat.getVersion());
      m_partitionTxnIds=null;
      m_partitionTxnIdStat=null;
      System.out.println("Updated per partition txnids for " + m_partitionTxnId);
      return;
    }
 catch (    KeeperException.BadVersionException e) {
    }
catch (    Exception e) {
      VoltDB.crashLocalVoltDB("Error updating per partition txn ids",true,e);
    }
    try {
      ByteBuffer update=ByteBuffer.wrap(zk.getData(VoltZK.perPartitionTxnIds,false,m_partitionTxnIdStat));
      int count=update.getInt();
      m_partitionTxnIds=new long[count];
      for (int ii=0; ii < count; ii++) {
        m_partitionTxnIds[ii]=update.getLong();
      }
    }
 catch (    Exception e) {
      VoltDB.crashLocalVoltDB("Error retrieving per partition txn ids",true,e);
    }
  }
 while (true);
}
