{
  initParams();
  int state=properties.getDBModified();
switch (state) {
case HsqlDatabaseProperties.FILES_MODIFIED:
    deleteNewAndOldFiles();
  restoreBackup();
processScript();
processDataFile();
processLog();
close(false);
if (cache != null) {
cache.open(filesReadOnly);
}
reopenAllTextCaches();
break;
case HsqlDatabaseProperties.FILES_NEW:
try {
deleteBackup();
backupData();
renameNewBackup();
renameNewScript();
deleteLog();
properties.setDBModified(HsqlDatabaseProperties.FILES_NOT_MODIFIED);
}
 catch (IOException e) {
database.logger.appLog.logContext(e,null);
}
case HsqlDatabaseProperties.FILES_NOT_MODIFIED:
processScript();
if (isAnyCacheModified()) {
properties.setDBModified(HsqlDatabaseProperties.FILES_MODIFIED);
close(false);
if (cache != null) {
cache.open(filesReadOnly);
}
reopenAllTextCaches();
}
break;
}
openLog();
if (!filesReadOnly) {
properties.setDBModified(HsqlDatabaseProperties.FILES_MODIFIED);
}
}
