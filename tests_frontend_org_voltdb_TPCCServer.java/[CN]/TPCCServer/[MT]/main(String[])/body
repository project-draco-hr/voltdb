{
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.setPathToCatalogForTest("tpcc.jar");
  int partitions=1;
  boolean doCompile=true;
  if (args.length > 5) {
    System.err.println("TPCCServer [partitions=1] [compile=true] [useProfiling=0] [-useThreadAffinity true/false]");
    System.exit(1);
  }
  if (args.length >= 1) {
    partitions=Integer.parseInt(args[0]);
  }
  if (args.length >= 2) {
    doCompile=args[1].equals("true");
  }
  if (args.length >= 3) {
    if (args[2].equals("1"))     config.m_profilingLevel=ProcedureProfiler.Level.POLITE;
    if (args[2].equals("2"))     config.m_profilingLevel=ProcedureProfiler.Level.INTRUSIVE;
  }
  for (int ii=0; ii < args.length; ii++) {
    if (args[ii].equals("-useThreadAffinity true")) {
      config.m_useThreadAffinity=true;
    }
  }
  if (doCompile) {
    TPCCProjectBuilder project=new TPCCProjectBuilder();
    project.addDefaultSchema();
    project.addDefaultProcedures();
    project.addDefaultPartitioning();
    project.setCompilerDebugPrintStream(System.out);
    if (!project.compile(config.m_pathToCatalog,partitions,0)) {
      System.out.println("Compilation failed");
      System.exit(-1);
    }
  }
  VoltDB.initialize(config);
  VoltDB.instance().run();
}
