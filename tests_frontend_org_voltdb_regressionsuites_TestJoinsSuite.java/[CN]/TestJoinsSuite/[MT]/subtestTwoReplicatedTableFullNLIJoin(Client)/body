{
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(1, 1, NULL);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(1, 2, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(2, 1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(3, 3, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(4, 4, 4);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(2, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(3, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(4, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(5, 5);");
  String sql;
  VoltTable vt;
  long MINVAL=Long.MIN_VALUE;
  sql="select R1.A, R1.C, R3.A, R3.C FROM R1 FULL JOIN R3 ON R3.A = R1.A AND R3.A > 2 " + "ORDER BY R1.A, R1.D, R3.A, R3.C";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,1,1},{MINVAL,MINVAL,2,1},{MINVAL,MINVAL,5,5},{1,1,MINVAL,MINVAL},{1,2,MINVAL,MINVAL},{2,1,MINVAL,MINVAL},{3,3,3,2},{4,4,4,3}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(vt.toString().contains("NESTLOOP INDEX FULL JOIN"));
  sql="select L.A, L.C, R.A, R.C FROM R3 L FULL JOIN R3 R ON L.A = R.A AND L.A > 3 " + "ORDER BY L.A, L.C, R.A, R.C";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,1,1},{MINVAL,MINVAL,2,1},{MINVAL,MINVAL,3,2},{1,1,MINVAL,MINVAL},{2,1,MINVAL,MINVAL},{3,2,MINVAL,MINVAL},{4,3,4,3},{5,5,5,5}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(vt.toString().contains("NESTLOOP INDEX FULL JOIN"));
}
