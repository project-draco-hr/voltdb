{
  client.callProcedure("@AdHoc","INSERT INTO P1 VALUES(1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO P1 VALUES(1, 2);");
  client.callProcedure("@AdHoc","INSERT INTO P1 VALUES(2, 1);");
  client.callProcedure("@AdHoc","INSERT INTO P1 VALUES(3, 3);");
  client.callProcedure("@AdHoc","INSERT INTO P1 VALUES(4, 4);");
  client.callProcedure("@AdHoc","INSERT INTO P3 VALUES(1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO P3 VALUES(2, 1);");
  client.callProcedure("@AdHoc","INSERT INTO P3 VALUES(3, 3);");
  client.callProcedure("@AdHoc","INSERT INTO P3 VALUES(4, 4);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(2, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(2, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(3, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(5, 5);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(5, NULL);");
  String sql;
  VoltTable vt;
  long MINVAL=Long.MIN_VALUE;
  sql="select P1.A, P1.C, R2.A, R2.C FROM P1 FULL JOIN R2 ON P1.A = R2.A " + " ORDER BY P1.A, P1.C, R2.A, R2.C";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,5,MINVAL},{MINVAL,MINVAL,5,5},{1,1,1,1},{1,2,1,1},{2,1,2,1},{2,1,2,2},{3,3,3,3},{4,4,MINVAL,MINVAL}});
  sql="select P1.A, P1.C, R2.A, R2.C FROM P1 FULL JOIN R2 ON P1.C = R2.A " + "WHERE (P1.A > 1 OR P1.A IS NULL) AND (R2.A = 3 OR R2.A IS NULL)" + " ORDER BY P1.A, P1.C, R2.A, R2.C";
  validateTableOfLongs(client,sql,new long[][]{{3,3,3,3},{4,4,MINVAL,MINVAL}});
  sql="select P1.A, P1.C, R2.A, R2.C FROM  " + "P1 FULL JOIN R2 ON P1.C = R2.A AND P1.A > 2" + " ORDER BY P1.A, P1.C, R2.A, R2.C";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,1,1},{MINVAL,MINVAL,2,1},{MINVAL,MINVAL,2,2},{MINVAL,MINVAL,5,MINVAL},{MINVAL,MINVAL,5,5},{1,1,MINVAL,MINVAL},{1,2,MINVAL,MINVAL},{2,1,MINVAL,MINVAL},{3,3,3,3},{4,4,MINVAL,MINVAL}});
  sql="select P1.A, P1.C, R2.A, R2.C FROM  " + "P1 FULL JOIN R2 ON P1.C = R2.A AND R2.A > 1" + " ORDER BY P1.A, P1.C, R2.A, R2.C";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,1,1},{MINVAL,MINVAL,5,MINVAL},{MINVAL,MINVAL,5,5},{1,1,MINVAL,MINVAL},{1,2,2,1},{1,2,2,2},{2,1,MINVAL,MINVAL},{3,3,3,3},{4,4,MINVAL,MINVAL}});
  sql="select P3.A, P3.F, R2.A, R2.C FROM P3 FULL JOIN R2 ON P3.A = R2.A " + " ORDER BY P3.A, P3.F, R2.A, R2.C";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,5,MINVAL},{MINVAL,MINVAL,5,5},{1,1,1,1},{2,1,2,1},{2,1,2,2},{3,3,3,3},{4,4,MINVAL,MINVAL}});
  sql="select L.A, L.C, R.A, R.C FROM P1 L FULL JOIN P1 R ON L.A = R.A AND L.A = 1 AND R.C = 1" + " ORDER BY L.A, L.C, R.A, R.C";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,1,2},{MINVAL,MINVAL,2,1},{MINVAL,MINVAL,3,3},{MINVAL,MINVAL,4,4},{1,1,1,1},{1,2,1,1},{2,1,MINVAL,MINVAL},{3,3,MINVAL,MINVAL},{4,4,MINVAL,MINVAL}});
  sql="select P1.A, P1.C, P3.A, P3.F FROM P1 FULL JOIN P3 ON P1.A = P3.A AND P1.A = 1 AND P3.F = 1" + " ORDER BY P1.A, P1.C, P3.A, P3.F";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,2,1},{MINVAL,MINVAL,3,3},{MINVAL,MINVAL,4,4},{1,1,1,1},{1,2,1,1},{2,1,MINVAL,MINVAL},{3,3,MINVAL,MINVAL},{4,4,MINVAL,MINVAL}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(vt.toString().contains("NESTLOOP INDEX FULL JOIN"));
}
