{
  String sql;
  VoltTable vt;
  long MINVAL=Long.MIN_VALUE;
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(1, 1, NULL);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(1, 2, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(2, 1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(3, 3, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(4, 4, 4);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(1, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(3, 8);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(5, 8);");
  sql="SELECT MAX(R1.C), A FROM R1 FULL JOIN R2 USING (A) WHERE A > 0 GROUP BY A ORDER BY A";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{2,1},{1,2},{3,3},{4,4},{MINVAL,5}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertEquals(1,StringUtils.countMatches(vt.toString(),"FULL"));
  sql="SELECT A FROM R1 FULL JOIN R2 USING (A) WHERE A > 0 ORDER BY A";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{1},{1},{2},{3},{4},{5}});
}
