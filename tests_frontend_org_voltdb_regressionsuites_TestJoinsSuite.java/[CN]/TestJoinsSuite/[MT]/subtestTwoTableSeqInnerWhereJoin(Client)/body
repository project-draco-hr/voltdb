{
  client.callProcedure("InsertR1",1,5,1);
  client.callProcedure("InsertR1",1,1,1);
  client.callProcedure("InsertR1",2,2,2);
  client.callProcedure("InsertR1",3,3,3);
  client.callProcedure("InsertR2",1,3);
  client.callProcedure("InsertR2",3,4);
  VoltTable result=client.callProcedure("@AdHoc","SELECT * FROM R1 JOIN R2 ON R1.A = R2.A WHERE R1.C > R2.C;").getResults()[0];
  assertEquals(1,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT * FROM R1 JOIN R2 ON R1.A = R2.A WHERE R1.C > R2.C;").getResults()[0];
  assertEquals(1,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT * FROM R1 INNER JOIN R2 ON R1.A = R2.A WHERE R1.C > R2.C;").getResults()[0];
  assertEquals(1,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT * FROM R1, R2 WHERE R1.A = R2.A AND R1.C > R2.C;").getResults()[0];
  assertEquals(1,result.getRowCount());
  client.callProcedure("InsertP1",1,5);
  client.callProcedure("InsertP1",1,1);
  client.callProcedure("InsertP1",2,2);
  client.callProcedure("InsertP1",3,3);
  result=client.callProcedure("@AdHoc","SELECT * FROM P1 JOIN R2 ON P1.A = R2.A WHERE P1.C > R2.C;").getResults()[0];
  assertEquals(1,result.getRowCount());
}
