{
  String query;
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A AND R1.D "+ joinOp+ " R2.C "+ "ORDER BY 1, 2, 3, 4";
  validateTableOfLongs(client,query,new long[][]{});
  client.callProcedure("R1.INSERT",1,1,null);
  client.callProcedure("R1.INSERT",1,2,2);
  client.callProcedure("R1.INSERT",2,1,1);
  client.callProcedure("R1.INSERT",2,4,4);
  client.callProcedure("R1.INSERT",3,3,3);
  client.callProcedure("R1.INSERT",4,4,4);
  client.callProcedure("@AdHoc","DELETE FROM R1 WHERE A = 2 AND C = 4 AND D = 4;");
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A AND R1.D "+ joinOp+ " R2.C "+ "ORDER BY 1, 2, 3, 4";
  validateTableOfLongs(client,query,new long[][]{{1,NULL_VALUE,NULL_VALUE,NULL_VALUE},{1,2,NULL_VALUE,NULL_VALUE},{2,1,NULL_VALUE,NULL_VALUE},{3,3,NULL_VALUE,NULL_VALUE},{4,4,NULL_VALUE,NULL_VALUE}});
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R2 FULL JOIN R1 " + "ON R1.A " + joinOp + " R2.A AND R1.D "+ joinOp+ " R2.C "+ "ORDER BY R1.A, R1.D, R2.A, R2.C";
  validateTableOfLongs(client,query,new long[][]{{1,NULL_VALUE,NULL_VALUE,NULL_VALUE},{1,2,NULL_VALUE,NULL_VALUE},{2,1,NULL_VALUE,NULL_VALUE},{3,3,NULL_VALUE,NULL_VALUE},{4,4,NULL_VALUE,NULL_VALUE}});
  client.callProcedure("R2.INSERT",1,1);
  client.callProcedure("R2.INSERT",2,1);
  client.callProcedure("R2.INSERT",2,2);
  client.callProcedure("R2.INSERT",3,3);
  client.callProcedure("R2.INSERT",4,4);
  client.callProcedure("R2.INSERT",5,5);
  client.callProcedure("R2.INSERT",5,null);
  client.callProcedure("@AdHoc","DELETE FROM R2 WHERE A = 4 AND C = 4;");
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A AND R1.D "+ joinOp+ " R2.C "+ "ORDER BY 1, 2, 3, 4";
  validateTableOfLongs(client,query,new long[][]{{NULL_VALUE,NULL_VALUE,1,1},{NULL_VALUE,NULL_VALUE,2,2},{NULL_VALUE,NULL_VALUE,5,NULL_VALUE},{NULL_VALUE,NULL_VALUE,5,5},{1,NULL_VALUE,NULL_VALUE,NULL_VALUE},{1,2,NULL_VALUE,NULL_VALUE},{2,1,2,1},{3,3,3,3},{4,4,NULL_VALUE,NULL_VALUE}});
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A AND R1.D "+ joinOp+ " R2.C AND R1.C = 1 "+ "ORDER BY 1, 2, 3, 4";
  validateTableOfLongs(client,query,new long[][]{{NULL_VALUE,NULL_VALUE,1,1},{NULL_VALUE,NULL_VALUE,2,2},{NULL_VALUE,NULL_VALUE,3,3},{NULL_VALUE,NULL_VALUE,5,NULL_VALUE},{NULL_VALUE,NULL_VALUE,5,5},{1,NULL_VALUE,NULL_VALUE,NULL_VALUE},{1,2,NULL_VALUE,NULL_VALUE},{2,1,2,1},{3,3,NULL_VALUE,NULL_VALUE},{4,4,NULL_VALUE,NULL_VALUE}});
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A "+ "ORDER BY 1, 2, 3, 4";
  validateTableOfLongs(client,query,new long[][]{{NULL_VALUE,NULL_VALUE,5,NULL_VALUE},{NULL_VALUE,NULL_VALUE,5,5},{1,NULL_VALUE,1,1},{1,2,1,1},{2,1,2,1},{2,1,2,2},{3,3,3,3},{4,4,NULL_VALUE,NULL_VALUE}});
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A "+ "WHERE R2.C = 3 OR R2.C IS NULL "+ "ORDER BY 1, 2, 3, 4";
  validateTableOfLongs(client,query,new long[][]{{NULL_VALUE,NULL_VALUE,5,NULL_VALUE},{3,3,3,3},{4,4,NULL_VALUE,NULL_VALUE}});
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A "+ "WHERE R1.A = 3 OR R1.A IS NULL "+ "ORDER BY 1, 2, 3, 4";
  if (isHSQL()) {
    VoltTable result=client.callProcedure("@AdHoc",query).getResults()[0];
    System.out.println("Ignoring erroneous(?) HSQL baseline: " + result);
  }
 else {
    validateTableOfLongs(client,query,new long[][]{{NULL_VALUE,NULL_VALUE,5,NULL_VALUE},{NULL_VALUE,NULL_VALUE,5,5},{3,3,3,3}});
  }
  query="SELECT R1.A, R1.D, R2.A, R2.C FROM R1 FULL JOIN R2 " + "ON R1.A " + joinOp + " R2.A "+ "WHERE R1.A = 3 OR R2.C IS NULL "+ "ORDER BY 1, 2, 3, 4";
  validateTableOfLongs(client,query,new long[][]{{NULL_VALUE,NULL_VALUE,5,NULL_VALUE},{3,3,3,3},{4,4,NULL_VALUE,NULL_VALUE}});
}
