{
  Client client=this.getClient();
  client.callProcedure("InsertR1",1,1,1);
  client.callProcedure("InsertR1",2,2,2);
  client.callProcedure("InsertR1",3,3,3);
  client.callProcedure("InsertR1",4,4,4);
  client.callProcedure("InsertR3",1,1);
  client.callProcedure("InsertR3",2,2);
  client.callProcedure("InsertR3",4,4);
  client.callProcedure("InsertR3",5,5);
  client.callProcedure("InsertR3",6,6);
  VoltTable result=client.callProcedure("@AdHoc","select *  FROM R3 LEFT JOIN R1 on R3.A = R1.A and R3.A in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(5,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R3 LEFT JOIN R1 on R3.A = R1.A and R3.C in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(5,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R3 JOIN R1 on R3.A = R1.A and R3.A in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R1 LEFT JOIN R3 on R3.A = R1.A and R3.A in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(4,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R1 LEFT JOIN R3 on R3.A = R1.A and R3.C in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(4,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R3 LEFT JOIN R1 on R3.A = R1.A WHERE R3.A in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R3 LEFT JOIN R1 on R3.A = R1.A WHERE R3.C in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R3 JOIN R1 on R3.A = R1.A WHERE R3.A in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R3 JOIN R1 on R3.A = R1.A WHERE R3.C in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","select *  FROM R1 LEFT JOIN R3 on R3.A = R1.A WHERE R3.A in (1,2)").getResults()[0];
  System.out.println(result.toString());
  assertEquals(2,result.getRowCount());
}
