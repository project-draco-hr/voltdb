{
  String sql;
  VoltTable vt;
  long MINVAL=Long.MIN_VALUE;
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(1, 1, NULL);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(1, 2, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(2, 3, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(3, 4, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(4, 5, 4);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(2, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(2, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(3, 4);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(5, 5);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(5, 6);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(2, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(2, 3);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(3, 4);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(5, 5);");
  client.callProcedure("@AdHoc","INSERT INTO R3 VALUES(5, 6);");
  sql="SELECT R1.A, R1.C, R2.A, R2.C FROM R1 FULL JOIN R2 ON " + "R1.A = R2.A LIMIT 2 OFFSET 3";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{2,3,2,3},{3,4,3,4}});
  sql="SELECT R1.A, R1.C, R2.A, R2.C FROM R1 FULL JOIN R2 ON " + "R1.A = R2.A LIMIT 2 OFFSET 4";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{3,4,3,4L},{4,5,MINVAL,MINVAL}});
  sql="SELECT R1.A, R1.C, R2.A, R2.C FROM R1 FULL JOIN R2 ON " + "R1.A = R2.A LIMIT 3 OFFSET 4";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{3,4,3,4L},{4,5,MINVAL,MINVAL},{MINVAL,MINVAL,5,5}});
  sql="SELECT MAX(R1.C), R1.A, R2.A FROM R1 FULL JOIN R2 ON " + "R1.A = R2.A GROUP BY R1.A, R2.A LIMIT 2 OFFSET 2";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertEquals(2,vt.getRowCount());
  sql="SELECT R1.A, R1.C, R3.A, R3.C FROM R1 FULL JOIN R3 ON " + "R1.A = R3.A  LIMIT 2 OFFSET 3";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{2,3,2,3},{3,4,3,4}});
  sql="SELECT R1.A, R1.C, R3.A, R3.C FROM R1 FULL JOIN R3 ON " + "R1.A = R3.A LIMIT 2 OFFSET 4";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{3,4,3,4L},{4,5,MINVAL,MINVAL}});
  sql="SELECT R1.A, R1.C, R3.A, R3.C FROM R1 FULL JOIN R3 ON " + "R1.A = R3.A LIMIT 3 OFFSET 4";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfLongs(client,sql,new long[][]{{3,4,3,4L},{4,5,MINVAL,MINVAL},{MINVAL,MINVAL,5,5}});
  sql="SELECT MAX(R1.C), R1.A, R3.A FROM R1 FULL JOIN R3 ON " + "R1.A = R3.A GROUP BY R1.A, R3.A LIMIT 2 OFFSET 2";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertEquals(2,vt.getRowCount());
}
