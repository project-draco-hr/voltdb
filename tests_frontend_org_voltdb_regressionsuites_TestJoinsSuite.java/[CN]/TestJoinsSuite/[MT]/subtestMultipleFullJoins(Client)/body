{
  String sql;
  VoltTable vt;
  long MINVAL=Long.MIN_VALUE;
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(1, 1, 1);");
  client.callProcedure("@AdHoc","INSERT INTO R1 VALUES(10, 10, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(1, 2);");
  client.callProcedure("@AdHoc","INSERT INTO R2 VALUES(3, 8);");
  client.callProcedure("@AdHoc","INSERT INTO P2 VALUES(1, 3);");
  client.callProcedure("@AdHoc","INSERT INTO P2 VALUES(8, 8);");
  sql="select * FROM R1 FULL JOIN R2 ON R1.A = R2.A RIGHT JOIN P2 ON P2.A = R1.A " + "ORDER BY P2.A";
  validateTableOfLongs(client,sql,new long[][]{{1,1,1,1,2,1,3},{MINVAL,MINVAL,MINVAL,MINVAL,MINVAL,8,8}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(!vt.toString().contains("FULL"));
  assertEquals(2,StringUtils.countMatches(vt.toString(),"LEFT"));
  sql="select * FROM R1 FULL JOIN R2 ON R1.A = R2.A LEFT JOIN P2 ON P2.A = R2.A " + "ORDER BY P2.A";
  validateTableOfLongs(client,sql,new long[][]{{10,10,2,MINVAL,MINVAL,MINVAL,MINVAL},{MINVAL,MINVAL,MINVAL,3,8,MINVAL,MINVAL},{1,1,1,1,2,1,3}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(vt.toString().contains("FULL"));
  sql="select * FROM R1 RIGHT JOIN R2 ON R1.A = R2.A FULL JOIN P2 ON R1.A = P2.A " + "ORDER BY P2.A";
  validateTableOfLongs(client,sql,new long[][]{{MINVAL,MINVAL,MINVAL,3,8,MINVAL,MINVAL},{1,1,1,1,2,1,3},{MINVAL,MINVAL,MINVAL,MINVAL,MINVAL,8,8}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(vt.toString().contains("LEFT"));
  sql="select * FROM R1 FULL JOIN R2 ON R1.A = R2.A FULL JOIN P2 ON R1.A = P2.A " + "ORDER BY P2.A";
  validateTableOfLongs(client,sql,new long[][]{{10,10,2,MINVAL,MINVAL,MINVAL,MINVAL},{MINVAL,MINVAL,MINVAL,3,8,MINVAL,MINVAL},{1,1,1,1,2,1,3},{MINVAL,MINVAL,MINVAL,MINVAL,MINVAL,8,8}});
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertEquals(2,StringUtils.countMatches(vt.toString(),"FULL"));
}
