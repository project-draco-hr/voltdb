{
  int avail=4096;
  int bytes_read=0;
  byte content1[]=new byte[avail];
  byte content2[]=new byte[avail];
  byte read[]=new byte[avail * 2];
  BBInputStream is=new BBInputStream();
  DBBPool p=new DBBPool();
  DBBPool.BBContainer pc=p.acquire(avail);
  Random random=new Random(0);
  random.nextBytes(content1);
  pc.b.put(content1);
  pc.b.flip();
  is.offer(pc);
  pc=p.acquire(avail);
  random.nextBytes(content2);
  pc.b.put(content2);
  pc.b.flip();
  is.offer(pc);
  is.EOF();
  try {
    assertEquals(avail * 2,is.available());
    bytes_read=is.read(read,0,avail * 2);
    assertEquals(avail * 2,bytes_read);
    assertEquals(0,is.available());
    for (int i=0; i < avail; i++) {
      assertEquals(content1[i],read[i]);
    }
    for (int i=0; i < avail; i++) {
      assertEquals(content2[i],read[avail + i]);
    }
  }
 catch (  IOException e) {
    fail(e.getMessage());
  }
  p.clear();
}
