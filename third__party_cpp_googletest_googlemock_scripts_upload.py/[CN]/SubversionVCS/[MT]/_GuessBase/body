def _GuessBase(self, required):
    "Returns the SVN base URL.\n\n    Args:\n      required: If true, exits if the url can't be guessed, otherwise None is\n        returned.\n    "
    info = RunShell(['svn', 'info'])
    for line in info.splitlines():
        words = line.split()
        if ((len(words) == 2) and (words[0] == 'URL:')):
            url = words[1]
            (scheme, netloc, path, params, query, fragment) = urlparse.urlparse(url)
            (username, netloc) = urllib.splituser(netloc)
            if username:
                logging.info('Removed username from base URL')
            if netloc.endswith('svn.python.org'):
                if (netloc == 'svn.python.org'):
                    if path.startswith('/projects/'):
                        path = path[9:]
                elif (netloc != 'pythondev@svn.python.org'):
                    ErrorExit(('Unrecognized Python URL: %s' % url))
                base = ('http://svn.python.org/view/*checkout*%s/' % path)
                logging.info('Guessed Python base = %s', base)
            elif netloc.endswith('svn.collab.net'):
                if path.startswith('/repos/'):
                    path = path[6:]
                base = ('http://svn.collab.net/viewvc/*checkout*%s/' % path)
                logging.info('Guessed CollabNet base = %s', base)
            elif netloc.endswith('.googlecode.com'):
                path = (path + '/')
                base = urlparse.urlunparse(('http', netloc, path, params, query, fragment))
                logging.info('Guessed Google Code base = %s', base)
            else:
                path = (path + '/')
                base = urlparse.urlunparse((scheme, netloc, path, params, query, fragment))
                logging.info('Guessed base = %s', base)
            return base
    if required:
        ErrorExit("Can't find URL in output from svn info")
    return None
