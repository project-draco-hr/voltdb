def GetBaseFile(self, filename):
    status = self.GetStatus(filename)
    base_content = None
    new_content = None
    if ((status[0] == 'A') and (status[3] != '+')):
        mimetype = RunShell(['svn', 'propget', 'svn:mime-type', filename], silent_ok=True)
        base_content = ''
        is_binary = (mimetype and (not mimetype.startswith('text/')))
        if (is_binary and self.IsImage(filename)):
            new_content = self.ReadFile(filename)
    elif ((status[0] in ('M', 'D', 'R')) or ((status[0] == 'A') and (status[3] == '+')) or ((status[0] == ' ') and (status[1] == 'M'))):
        args = []
        if self.options.revision:
            url = ('%s/%s@%s' % (self.svn_base, filename, self.rev_start))
        else:
            url = filename
            args += ['-r', 'BASE']
        cmd = ((['svn'] + args) + ['propget', 'svn:mime-type', url])
        (mimetype, returncode) = RunShellWithReturnCode(cmd)
        if returncode:
            mimetype = ''
        get_base = False
        is_binary = (mimetype and (not mimetype.startswith('text/')))
        if (status[0] == ' '):
            base_content = ''
        elif is_binary:
            if self.IsImage(filename):
                get_base = True
                if (status[0] == 'M'):
                    if (not self.rev_end):
                        new_content = self.ReadFile(filename)
                    else:
                        url = ('%s/%s@%s' % (self.svn_base, filename, self.rev_end))
                        new_content = RunShell(['svn', 'cat', url], universal_newlines=True, silent_ok=True)
            else:
                base_content = ''
        else:
            get_base = True
        if get_base:
            if is_binary:
                universal_newlines = False
            else:
                universal_newlines = True
            if self.rev_start:
                url = ('%s/%s@%s' % (self.svn_base, filename, self.rev_start))
                base_content = RunShell(['svn', 'cat', url], universal_newlines=universal_newlines, silent_ok=True)
            else:
                base_content = RunShell(['svn', 'cat', filename], universal_newlines=universal_newlines, silent_ok=True)
            if (not is_binary):
                args = []
                if self.rev_start:
                    url = ('%s/%s@%s' % (self.svn_base, filename, self.rev_start))
                else:
                    url = filename
                    args += ['-r', 'BASE']
                cmd = ((['svn'] + args) + ['propget', 'svn:keywords', url])
                (keywords, returncode) = RunShellWithReturnCode(cmd)
                if (keywords and (not returncode)):
                    base_content = self._CollapseKeywords(base_content, keywords)
    else:
        StatusUpdate(('svn status returned unexpected output: %s' % status))
        sys.exit(1)
    return (base_content, new_content, is_binary, status[0:5])
