{
  System.out.println("\t\t ***** Starting BabySitter testcase.");
  final Semaphore sem=new Semaphore(0);
  BabySitter.Callback cb=new BabySitter.Callback(){
    @Override public void run(    List<String> children){
      sem.release(1);
    }
  }
;
  ZooKeeper zk=getClient(0);
  zk.create("/babysitterroot",new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  zk.create("/babysitterroot/c1",new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL_SEQUENTIAL);
  BabySitter bs=new BabySitter(zk,"/babysitterroot",cb,true);
  sem.acquire();
  assertTrue(bs.lastSeenChildren().size() == 1);
  zk.create("/babysitterroot/c2",new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL_SEQUENTIAL);
  sem.acquire();
  assertTrue(bs.lastSeenChildren().size() == 2);
  zk.delete("/babysitterroot/" + bs.lastSeenChildren().get(0),-1);
  sem.acquire();
  assertTrue(bs.lastSeenChildren().size() == 1);
  bs.shutdown();
}
