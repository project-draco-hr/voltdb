{
  isNull=pattern == null;
  if (!hasEscape) {
    escapeChar=-1;
  }
 else {
    if (escape == null) {
      isNull=true;
      return;
    }
 else {
      int length=getLength(session,escape,"");
      if (length != 1) {
        if (isBinary) {
          throw Error.error(ErrorCode.X_2200D);
        }
 else {
          throw Error.error(ErrorCode.X_22019);
        }
      }
      escapeChar=getChar(escape,0);
    }
  }
  if (isNull) {
    return;
  }
  if (isIgnoreCase) {
    pattern=(String)((CharacterType)dataType).upper(null,pattern);
  }
  iLen=0;
  iFirstWildCard=-1;
  int l=getLength(session,pattern,"");
  cLike=new char[l];
  wildCardType=new int[l];
  boolean bEscaping=false, bPercent=false;
  for (int i=0; i < l; i++) {
    char c=getChar(pattern,i);
    if (!bEscaping) {
      if (escapeChar == c) {
        bEscaping=true;
        continue;
      }
 else       if (c == '_') {
        wildCardType[iLen]=UNDERSCORE_CHAR;
        if (iFirstWildCard == -1) {
          iFirstWildCard=iLen;
        }
      }
 else       if (c == '%') {
        if (bPercent) {
          continue;
        }
        bPercent=true;
        wildCardType[iLen]=PERCENT_CHAR;
        if (iFirstWildCard == -1) {
          iFirstWildCard=iLen;
        }
      }
 else {
        bPercent=false;
      }
    }
 else {
      if (c == escapeChar || c == '_' || c == '%') {
        bPercent=false;
        bEscaping=false;
      }
 else {
        throw Error.error(ErrorCode.X_22025);
      }
    }
    cLike[iLen++]=c;
  }
  if (bEscaping) {
    throw Error.error(ErrorCode.X_22025);
  }
  for (int i=0; i < iLen - 1; i++) {
    if ((wildCardType[i] == PERCENT_CHAR) && (wildCardType[i + 1] == UNDERSCORE_CHAR)) {
      wildCardType[i]=UNDERSCORE_CHAR;
      wildCardType[i + 1]=PERCENT_CHAR;
    }
  }
}
