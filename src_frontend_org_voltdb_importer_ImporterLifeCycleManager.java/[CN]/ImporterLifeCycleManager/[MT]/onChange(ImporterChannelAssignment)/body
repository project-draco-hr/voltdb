{
  if (m_stopping)   return;
  ImmutableMap.Builder<URI,AbstractImporter> builder=new ImmutableMap.Builder<>();
  builder.putAll(Maps.filterKeys(m_importers,notUriIn(assignment.getRemoved())));
  for (  URI removed : assignment.getRemoved()) {
    try {
      AbstractImporter importer=m_importers.get(removed);
      importer.stop();
    }
 catch (    Exception e) {
      s_logger.warn(String.format("Error calling stop on %s in importer %s",removed.toString(),m_factory.getTypeName()),e);
    }
  }
  for (  final URI added : assignment.getAdded()) {
    AbstractImporter importer=m_factory.createImporter(m_configs.get(added));
    builder.put(added,importer);
  }
  m_importers=builder.build();
  startImporters();
}
