{
  m_stopping=true;
  ImmutableMap<URI,AbstractImporter> oldReference;
  boolean success=false;
  do {
    oldReference=m_importers.get();
    success=m_importers.compareAndSet(oldReference,ImmutableMap.<URI,AbstractImporter>of());
  }
 while (!success);
  stopImporters(oldReference.values());
  if (!m_factory.isImporterRunEveryWhere()) {
    distributer.registerChannels(m_factory.getTypeName(),Collections.<URI>emptySet());
  }
  if (m_executorService != null) {
    m_executorService.shutdown();
    try {
      m_executorService.awaitTermination(365,TimeUnit.DAYS);
    }
 catch (    InterruptedException ex) {
      s_logger.warn("Unexpected interrupted exception waiting for " + m_factory.getTypeName() + " to shutdown",ex);
    }
  }
}
