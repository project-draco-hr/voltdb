{
  SocketAddress returnAddr=null;
  String message=null;
  System.out.println("GOT MESSAGE");
  try {
    buffer.clear();
    returnAddr=channel.receive(buffer);
    buffer.flip();
    int messageLength=buffer.get();
    if (messageLength > buffer.capacity()) {
      System.out.println("WARN: packet exceeds allocate size; message truncated");
    }
    byte[] localBuf=new byte[messageLength];
    buffer.get(localBuf,0,messageLength);
    message=new String(localBuf);
  }
 catch (  IOException e) {
    exitWithException("Couldn't read from socket",e);
  }
catch (  BufferUnderflowException e) {
    System.out.println("WARN: Incomplete UDP packet; some data might be lost");
    byte[] localBuf=new byte[buffer.remaining()];
    buffer.get(localBuf,0,buffer.remaining());
    message=new String(localBuf);
  }
  System.out.println(message);
}
