{
  System.out.println("Warming up...");
  long now=System.currentTimeMillis();
  AtomicLong rowId=new AtomicLong(0);
  while (benchmarkWarmupEndTS > now) {
    try {
      client.callProcedure(new NullCallback(),"InsertExport",rowId.getAndIncrement(),0);
      if (++totalInserts % 50 == 0) {
        now=System.currentTimeMillis();
      }
    }
 catch (    Exception ignore) {
    }
  }
  System.out.println("Warmup complete");
  rowId.set(0);
  fullStatsContext.fetchAndResetBaseline();
  periodicStatsContext.fetchAndResetBaseline();
  schedulePeriodicStats();
  System.out.println("Running benchmark...");
  now=System.currentTimeMillis();
  while (benchmarkEndTS > now) {
    try {
      client.callProcedure(new ExportCallback(),"InsertExport",rowId.getAndIncrement(),0);
      if (++totalInserts % 50 == 0) {
        now=System.currentTimeMillis();
      }
    }
 catch (    Exception e) {
      System.err.println("Couldn't insert into VoltDB\n");
      e.printStackTrace();
      System.exit(1);
    }
  }
  try {
    client.drain();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  System.out.println("Benchmark complete: wrote " + successfulInserts.get() + " objects");
  System.out.println("Failed to insert " + failedInserts.get() + " objects");
  testFinished.set(true);
  if (config.target.equals("socket")) {
    statsSocketSelector.wakeup();
  }
}
