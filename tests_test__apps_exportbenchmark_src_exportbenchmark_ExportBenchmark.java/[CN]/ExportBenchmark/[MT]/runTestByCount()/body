{
  System.out.println("=== Insertion by Count ===");
  warmupComplete.set(false);
  benchmarkComplete.set(false);
  Thread threads[]=new Thread[config.threads];
  for (int i=0; i < config.threads; ++i) {
    threads[i]=new Thread(new ExportThreadByCount());
    threads[i].start();
  }
  System.out.println("Warming up...");
  Thread.sleep(1000l * config.warmup);
  warmupComplete.set(true);
  benchmarkStartTS=System.currentTimeMillis();
  fullStatsContext.fetchAndResetBaseline();
  periodicStatsContext.fetchAndResetBaseline();
  schedulePeriodicStats();
  System.out.println("\nRunning benchmark...");
  for (  Thread thread : threads) {
    thread.join();
  }
  timer.cancel();
  client.drain();
  System.out.println("Client flushed; waiting for export to finish");
  boolean success=false;
  try {
    success=waitForStreamedAllocatedMemoryZero();
  }
 catch (  Exception e) {
    System.err.println("Error while waiting for export: ");
    e.printStackTrace();
  }
  benchmarkEndTS=System.currentTimeMillis();
  System.out.println("Finished benchmark (test by count)");
  return success;
}
