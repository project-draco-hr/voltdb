def create(self):
    "\n        Generate the SQL to create a this table\n          >>> schema.databases['sakila'].tables['rental'].create()\n          'CREATE TABLE `rental` (\n          `rental_id` int(11) NOT NULL AUTO_INCREMENT,\n          `rental_date` datetime NOT NULL,\n          `inventory_id` mediumint(8) unsigned NOT NULL,\n          `customer_id` smallint(5) unsigned NOT NULL,\n          `return_date` datetime DEFAULT NULL,\n          `staff_id` tinyint(3) unsigned NOT NULL,\n          `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n          PRIMARY KEY (`rental_id`),\n          UNIQUE KEY `rental_date` (`rental_date`,`inventory_id`,`customer_id`),\n          KEY `idx_fk_inventory_id` (`inventory_id`),\n          KEY `idx_fk_customer_id` (`customer_id`),\n          KEY `idx_fk_staff_id` (`staff_id`),\n          CONSTRAINT `fk_rental_customer` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON UPDATE CASCADE,\n          CONSTRAINT `fk_rental_inventory` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`) ON UPDATE CASCADE,\n          CONSTRAINT `fk_rental_staff` FOREIGN KEY (`staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE)\n          ENGINE=InnoDB DEFAULT CHARSET=utf8;'\n        "
    cursor = self.parent.parent.connection
    result = cursor.execute(('SHOW CREATE TABLE `%s`.`%s`' % (self.parent.name, self.name)))
    sql = (result[0]['Create Table'] + ';')
    sql = sql.replace('\n', '')
    return REGEX_MULTI_SPACE.sub(' ', sql)
