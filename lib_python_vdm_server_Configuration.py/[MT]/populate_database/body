def populate_database(databases, log):
    success = True
    if (type(databases) is dict):
        db_json = get_field_from_xml(databases, 'dict', 'database')
        req = HTTPListener.DictClass()
        req.json = {}
        req.json = db_json[0]
        inputs = DatabaseInputs(req)
        if (not inputs.validate()):
            success = False
            sys.stdout.write(str(inputs.errors))
            log.error('Error while reloading configuration: %s', str(inputs.errors))
        if (success is True):
            HTTPListener.Global.DATABASES = {db_json[0]['id']: db_json[0], }
    else:
        db_json = get_field_from_xml(databases, 'list', 'database')
        success = True
        result = check_duplicate_database(db_json)
        if (result != ''):
            success = False
            log.error('Error while reloading configuration: %s', result)
        else:
            for database in db_json:
                req = HTTPListener.DictClass()
                req.json = {}
                req.json = database
                inputs = DatabaseInputs(req)
                if (not inputs.validate()):
                    success = False
                    sys.stdout.write(str(inputs.errors))
                    log.error('Error while reloading configuration: %s', str(inputs.errors))
        if (success is True):
            HTTPListener.Global.DATABASES = {}
            for database in db_json:
                HTTPListener.Global.DATABASES[database['id']] = database
