def check_export_property(type, properties):
    property_list = []
    for property in properties:
        if (('name' in property) and ('value' in property)):
            if ((str(property['name']).strip() == '') or (str(property['value']).strip() == '')):
                return {'status': 'error', 'error': 'Invalid property.', }
            if (property['name'] in property_list):
                return {'status': 'error', 'error': 'Duplicate properties are not allowed.', }
            property_list.append(property['name'])
        else:
            return {'status': 'error', 'error': 'Invalid property.', }
    if (str(type).lower() == 'kafka'):
        if ('metadata.broker.list' not in property_list):
            return {'status': 'error', 'error': 'Default property(metadata.broker.list) of kafka not present.', }
    if (str(type).lower() == 'elasticsearch'):
        if ('endpoint' not in property_list):
            return {'status': 'error', 'error': 'Default property(endpoint) of elasticsearch not present.', }
    if (str(type).lower() == 'file'):
        if (('type' not in property_list) or ('nonce' not in property_list) or ('outdir' not in property_list)):
            return {'status': 'error', 'error': 'Default properties(type, nonce, outdir) of file not present.', }
    if (str(type).lower() == 'http'):
        if ('endpoint' not in property_list):
            return {'status': 'error', 'error': 'Default property(endpoint) of  http not present.', }
    if (str(type).lower() == 'jdbc'):
        if (('jdbcdriver' not in property_list) or ('jdbcurl' not in property_list)):
            return {'status': 'error', 'error': 'Default properties(jdbcdriver, jdbcurl) of jdbc not present.', }
    if (str(type).lower() == 'rabbitmq'):
        if (('broker.host' not in property_list) and ('amqp.uri' not in property_list)):
            return {'status': 'error', 'error': 'Default property(either amqp.uri or broker.host) of rabbitmq not present.', }
        elif (('broker.host' in property_list) and ('amqp.uri' in property_list)):
            return {'status': 'error', 'error': 'Both broker.host and amqp.uri cannot be included as rabbibmq property.', }
    return {'status': 'success', }
