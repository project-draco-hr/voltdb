def get_deployment(deployment, is_upload=False):
    '\n    Gets the required deployment object\n    :param deployment: raw deployment object\n    :param is_upload: flag to know if it is list or dict\n    :return: deployment object in required format\n    '
    new_deployment = {}
    for field in deployment:
        if (field == 'export'):
            try:
                if (deployment[field] is not None):
                    new_deployment[field] = {}
                    new_deployment[field]['configuration'] = {}
                    if (type(deployment[field]['configuration']) is list):
                        new_deployment[field]['configuration'] = get_field_from_xml(deployment[field]['configuration'], 'list', 'export')
                    else:
                        new_deployment[field]['configuration'] = get_field_from_xml(deployment[field]['configuration'], 'dict', 'export')
                else:
                    new_deployment[field] = deployment[field]
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'import'):
            try:
                if (deployment[field] is not None):
                    new_deployment[field] = {}
                    new_deployment[field]['configuration'] = {}
                    if (type(deployment[field]['configuration']) is list):
                        new_deployment[field]['configuration'] = get_field_from_xml(deployment[field]['configuration'], 'list', 'export')
                    else:
                        new_deployment[field]['configuration'] = get_field_from_xml(deployment[field]['configuration'], 'dict', 'export')
                else:
                    new_deployment[field] = deployment[field]
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'admin-mode'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['adminstartup'] = parse_bool_string(deployment[field]['adminstartup'])
                new_deployment[field]['port'] = int(deployment[field]['port'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'cluster'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['hostcount'] = int(deployment[field]['hostcount'])
                new_deployment[field]['kfactor'] = int(deployment[field]['kfactor'])
                new_deployment[field]['sitesperhost'] = int(deployment[field]['sitesperhost'])
                new_deployment[field]['elastic'] = str(deployment[field]['elastic'])
                new_deployment[field]['schema'] = str(deployment[field]['schema'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'commandlog'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                new_deployment[field]['synchronous'] = parse_bool_string(deployment[field]['synchronous'])
                new_deployment[field]['logsize'] = int(deployment[field]['logsize'])
                new_deployment[field]['frequency'] = {}
                new_deployment[field]['frequency']['transactions'] = int(deployment[field]['frequency']['transactions'])
                new_deployment[field]['frequency']['time'] = int(deployment[field]['frequency']['time'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'heartbeat'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['timeout'] = int(deployment[field]['timeout'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'httpd'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['port'] = int(deployment[field]['port'])
                new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                new_deployment[field]['jsonapi'] = {}
                new_deployment[field]['jsonapi']['enabled'] = parse_bool_string(deployment[field]['jsonapi']['enabled'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'partition-detection'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                new_deployment[field]['snapshot'] = {}
                new_deployment[field]['snapshot']['prefix'] = deployment[field]['snapshot']['prefix']
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'security'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                new_deployment[field]['provider'] = str(deployment[field]['provider'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'snapshot'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                new_deployment[field]['frequency'] = str(deployment[field]['frequency'])
                new_deployment[field]['prefix'] = str(deployment[field]['prefix'])
                new_deployment[field]['retain'] = int(deployment[field]['retain'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'systemsettings'):
            try:
                new_deployment[field] = {}
                new_deployment[field]['elastic'] = {}
                new_deployment[field]['elastic']['duration'] = int(deployment[field]['elastic']['duration'])
                new_deployment[field]['elastic']['throughput'] = int(deployment[field]['elastic']['throughput'])
                new_deployment[field]['query'] = {}
                new_deployment[field]['query']['timeout'] = int(deployment[field]['query']['timeout'])
                new_deployment[field]['snapshot'] = {}
                new_deployment[field]['snapshot']['priority'] = int(deployment[field]['snapshot']['priority'])
                new_deployment[field]['temptables'] = {}
                new_deployment[field]['temptables']['maxsize'] = int(deployment[field]['temptables']['maxsize'])
                if (('resourcemonitor' not in deployment[field]) or (deployment[field]['resourcemonitor'] is None)):
                    if ('resourcemonitor' in deployment[field]):
                        new_deployment[field]['resourcemonitor'] = None
                else:
                    new_deployment[field]['resourcemonitor'] = {}
                    if ('memorylimit' in deployment[field]['resourcemonitor']):
                        new_deployment[field]['resourcemonitor']['memorylimit'] = deployment[field]['resourcemonitor']['memorylimit']
                    if (('disklimit' in deployment[field]['resourcemonitor']) and ('feature' in deployment[field]['resourcemonitor']['disklimit'])):
                        if (type(deployment[field]['resourcemonitor']['disklimit']['feature']) is list):
                            new_deployment[field]['resourcemonitor']['disklimit'] = {}
                            new_deployment[field]['resourcemonitor']['disklimit']['feature'] = get_field_from_xml(deployment[field]['resourcemonitor']['disklimit']['feature'], 'list', 'disklimit')
                        else:
                            new_deployment[field]['resourcemonitor']['disklimit'] = {}
                            new_deployment[field]['resourcemonitor']['disklimit']['feature'] = get_field_from_xml(deployment[field]['resourcemonitor']['disklimit']['feature'], 'dict', 'disklimit')
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'dr'):
            try:
                if (deployment[field] is not None):
                    new_deployment[field] = {}
                    new_deployment[field]['id'] = int(deployment[field]['id'])
                    new_deployment[field]['listen'] = parse_bool_string(deployment[field]['listen'])
                    if ('port' in deployment[field]):
                        new_deployment[field]['port'] = int(deployment[field]['port'])
                    if (('connection' in deployment[field]) and (deployment[field]['connection'] is not None) and ('source' in deployment[field]['connection'])):
                        new_deployment[field]['connection'] = {}
                        new_deployment[field]['connection']['source'] = str(deployment[field]['connection']['source'])
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        elif (field == 'users'):
            try:
                if (deployment[field] is not None):
                    new_deployment[field] = {}
                    if (type(deployment[field]['user']) is list):
                        new_deployment[field]['user'] = []
                        new_deployment[field]['user'] = get_field_from_xml(deployment[field]['user'], 'list', 'user')
                    else:
                        new_deployment[field]['user'] = []
                        new_deployment[field]['user'] = get_field_from_xml(deployment[field]['user'], 'dict', 'user')
            except Exception as err:
                if is_upload:
                    return handle_errors(field, err)
                else:
                    print_errors(field, err)
        else:
            new_deployment[field] = convert_field_required_format(deployment, field)
    return new_deployment
