def validate_server_ports_dict(member, databases, isDict):
    arr = ['http-listener', 'admin-listener', 'internal-listener', 'replication-listener', 'zookeeper-listener', 'client-listener']
    specified_port_values = {'http-listener': HTTPListener.get_port(member['http-listener']), 'admin-listener': HTTPListener.get_port(member['admin-listener']), 'replication-listener': HTTPListener.get_port(member['replication-listener']), 'client-listener': HTTPListener.get_port(member['client-listener']), 'zookeeper-listener': HTTPListener.get_port(member['zookeeper-listener']), 'internal-listener': HTTPListener.get_port(member['internal-listener']), }
    for option in arr:
        value = specified_port_values[option]
        for port_key in specified_port_values.keys():
            if ((option != port_key) and (value is not None) and (specified_port_values[port_key] == value)):
                return 'Duplicate port'
