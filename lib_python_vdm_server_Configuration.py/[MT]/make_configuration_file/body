def make_configuration_file():
    '\n    Prepare the xml content\n    :return: xml content\n    '
    main_header = Element('voltdeploy')
    db_top = SubElement(main_header, 'databases')
    server_top = SubElement(main_header, 'members')
    deployment_top = SubElement(main_header, 'deployments')
    for (key, value) in HTTPListener.Global.DATABASES.items():
        db_elem = SubElement(db_top, 'database')
        for (k, val) in value.items():
            if isinstance(val, bool):
                if (not value):
                    db_elem.attrib[k] = 'false'
                else:
                    db_elem.attrib[k] = 'true'
            else:
                db_elem.attrib[k] = str(val)
    for (key, value) in HTTPListener.Global.SERVERS.items():
        server_elem = SubElement(server_top, 'member')
        for (k, v) in value.items():
            if isinstance(v, bool):
                if (not value):
                    server_elem.attrib[k] = 'false'
                else:
                    server_elem.attrib[k] = 'true'
            else:
                server_elem.attrib[k] = str(v)
    for (key, value) in HTTPListener.Global.DEPLOYMENT.items():
        deployment_elem = SubElement(deployment_top, 'deployment')
        for (k, val) in value.items():
            if (type(val) is dict):
                DeploymentConfig.handle_deployment_dict(deployment_elem, k, val, False)
            elif (type(val) is list):
                DeploymentConfig.handle_deployment_list(deployment_elem, k, val)
            elif (value is not None):
                deployment_elem.attrib[k] = str(val)
    return tostring(main_header, encoding='UTF-8')
