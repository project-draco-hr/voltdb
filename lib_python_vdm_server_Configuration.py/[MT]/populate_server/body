def populate_server(servers, databases, log):
    success = True
    if (type(servers) is dict):
        member_json = get_field_from_xml(servers, 'dict')
        req = HTTPListener.DictClass()
        req.json = {}
        req.json = member_json[0]
        inputs = ServerInputs(req)
        if (not inputs.validate()):
            success = False
            sys.stdout.write(str(inputs.errors))
            log.error('Error while reloading configuration: %s', str(inputs.errors))
        else:
            result = validate_server_ports_dict(member_json[0], databases, True)
            if (result is not None):
                success = False
                log.error('Error while reloading configuration: %s', result)
        if (success is True):
            HTTPListener.Global.SERVERS = {member_json[0]['id']: member_json[0], }
    else:
        member_json = get_field_from_xml(servers, 'list')
        for member in member_json:
            req = HTTPListener.DictClass()
            req.json = {}
            req.json = member
            inputs = ServerInputs(req)
            if (not inputs.validate()):
                success = False
                sys.stdout.write(str(inputs.errors))
                log.error('Error while reloading configuration: %s', str(inputs.errors))
            result = validate_server_ports_list(member_json, databases, False)
            if (result is not None):
                success = False
                log.error('Error while reloading configuration: %s', result)
        if (success is True):
            HTTPListener.Global.SERVERS = {}
            for member in member_json:
                HTTPListener.Global.SERVERS[member['id']] = member
