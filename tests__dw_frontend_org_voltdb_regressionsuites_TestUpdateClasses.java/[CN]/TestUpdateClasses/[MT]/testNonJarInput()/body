{
  System.out.println("\n\n-----\n testNonJarInput \n-----\n\n");
  String pathToCatalog=Configuration.getPathToCatalogForTest("updateclasses.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("updateclasses.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("-- Don't care");
  builder.setUseDDLSchema(true);
  boolean success=builder.compile(pathToCatalog,2,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  try {
    VoltDB.Configuration config=new VoltDB.Configuration();
    config.m_pathToCatalog=pathToCatalog;
    config.m_pathToDeployment=pathToDeployment;
    startSystem(config);
    ClientResponse resp;
    try {
      resp=m_client.callProcedure("@UpdateClasses",Encoder.hexEncode("This is not a pipe"),null);
      System.out.println(((ClientResponseImpl)resp).toJSONString());
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
    }
    resp=m_client.callProcedure("@SystemCatalog","CLASSES");
    System.out.println(resp.getResults()[0]);
    assertEquals(0,resp.getResults()[0].getRowCount());
  }
  finally {
    teardownSystem();
  }
}
