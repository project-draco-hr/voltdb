{
  ImmutableList.Builder<ImmutableSet<E>> axesBuilder=new ImmutableList.Builder<ImmutableSet<E>>(sets.size());
  for (  Set<? extends E> set : sets) {
    ImmutableSet<E> copy=ImmutableSet.copyOf(set);
    if (copy.isEmpty()) {
      return ImmutableSet.of();
    }
    axesBuilder.add(copy);
  }
  final ImmutableList<ImmutableSet<E>> axes=axesBuilder.build();
  ImmutableList<List<E>> listAxes=new ImmutableList<List<E>>(){
    @Override public int size(){
      return axes.size();
    }
    @Override public List<E> get(    int index){
      return axes.get(index).asList();
    }
    @Override boolean isPartialView(){
      return true;
    }
  }
;
  return new CartesianSet<E>(axes,new CartesianList<E>(listAxes));
}
