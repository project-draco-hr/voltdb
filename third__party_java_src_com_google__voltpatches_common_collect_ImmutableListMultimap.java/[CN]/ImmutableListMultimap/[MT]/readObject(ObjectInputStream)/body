{
  stream.defaultReadObject();
  int keyCount=stream.readInt();
  if (keyCount < 0) {
    throw new InvalidObjectException("Invalid key count " + keyCount);
  }
  ImmutableMap.Builder<Object,ImmutableList<Object>> builder=ImmutableMap.builder();
  int tmpSize=0;
  for (int i=0; i < keyCount; i++) {
    Object key=stream.readObject();
    int valueCount=stream.readInt();
    if (valueCount <= 0) {
      throw new InvalidObjectException("Invalid value count " + valueCount);
    }
    ImmutableList.Builder<Object> valuesBuilder=ImmutableList.builder();
    for (int j=0; j < valueCount; j++) {
      valuesBuilder.add(stream.readObject());
    }
    builder.put(key,valuesBuilder.build());
    tmpSize+=valueCount;
  }
  ImmutableMap<Object,ImmutableList<Object>> tmpMap;
  try {
    tmpMap=builder.build();
  }
 catch (  IllegalArgumentException e) {
    throw (InvalidObjectException)new InvalidObjectException(e.getMessage()).initCause(e);
  }
  FieldSettersHolder.MAP_FIELD_SETTER.set(this,tmpMap);
  FieldSettersHolder.SIZE_FIELD_SETTER.set(this,tmpSize);
}
