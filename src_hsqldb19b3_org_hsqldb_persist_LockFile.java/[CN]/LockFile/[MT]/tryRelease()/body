{
  boolean released=!locked;
  if (released) {
    return true;
  }
  stopHeartbeat();
  doOptionalReleaseActions();
  UnexpectedFileIOException closeRAFReason=null;
  FileSecurityException securityReason=null;
  try {
    try {
      closeRAF();
    }
 catch (    UnexpectedFileIOException ex) {
      closeRAFReason=ex;
    }
    try {
      Thread.sleep(100);
    }
 catch (    Exception ex) {
    }
    try {
      released=file.delete();
    }
 catch (    SecurityException ex) {
      securityReason=new FileSecurityException(this,"tryRelease",ex);
    }
  }
  finally {
    this.locked=false;
  }
  if (closeRAFReason != null) {
    throw closeRAFReason;
  }
 else   if (securityReason != null) {
    throw securityReason;
  }
  return released;
}
