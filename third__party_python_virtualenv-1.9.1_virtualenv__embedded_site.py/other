"Append module search paths for third-party packages to sys.path.\n\n****************************************************************\n* This module is automatically imported during initialization. *\n****************************************************************\n\nIn earlier versions of Python (up to 1.5a3), scripts or modules that\nneeded to use site-specific modules would place ``import site''\nsomewhere near the top of their code.  Because of the automatic\nimport, this is no longer necessary (but code that does it still\nworks).\n\nThis will append site-specific paths to the module search path.  On\nUnix, it starts with sys.prefix and sys.exec_prefix (if different) and\nappends lib/python<version>/site-packages as well as lib/site-python.\nIt also supports the Debian convention of\nlib/python<version>/dist-packages.  On other platforms (mainly Mac and\nWindows), it uses just sys.prefix (and sys.exec_prefix, if different,\nbut this is unlikely).  The resulting directories, if they exist, are\nappended to sys.path, and also inspected for path configuration files.\n\nFOR DEBIAN, this sys.path is augmented with directories in /usr/local.\nLocal addons go into /usr/local/lib/python<version>/site-packages\n(resp. /usr/local/lib/site-python), Debian addons install into\n/usr/{lib,share}/python<version>/dist-packages.\n\nA path configuration file is a file whose name has the form\n<package>.pth; its contents are additional directories (one per line)\nto be added to sys.path.  Non-existing directories (or\nnon-directories) are never added to sys.path; no directory is added to\nsys.path more than once.  Blank lines and lines beginning with\n'#' are skipped. Lines starting with 'import' are executed.\n\nFor example, suppose sys.prefix and sys.exec_prefix are set to\n/usr/local and there is a directory /usr/local/lib/python2.X/site-packages\nwith three subdirectories, foo, bar and spam, and two path\nconfiguration files, foo.pth and bar.pth.  Assume foo.pth contains the\nfollowing:\n\n  # foo package configuration\n  foo\n  bar\n  bletch\n\nand bar.pth contains:\n\n  # bar package configuration\n  bar\n\nThen the following directories are added to sys.path, in this order:\n\n  /usr/local/lib/python2.X/site-packages/bar\n  /usr/local/lib/python2.X/site-packages/foo\n\nNote that bletch is omitted because it doesn't exist; bar precedes foo\nbecause bar.pth comes alphabetically before foo.pth; and spam is\nomitted because it is not mentioned in either path configuration file.\n\nAfter these path manipulations, an attempt is made to import a module\nnamed sitecustomize, which can perform arbitrary additional\nsite-specific customizations.  If this import fails with an\nImportError exception, it is silently ignored.\n\n"
import sys
import os
try:
    import __builtin__ as builtins
except ImportError:
    import builtins
try:
    set
except NameError:
    from sets import Set as set
PREFIXES = [sys.prefix, sys.exec_prefix]
ENABLE_USER_SITE = None
USER_SITE = None
USER_BASE = None
_is_64bit = ((getattr(sys, 'maxsize', None) or getattr(sys, 'maxint')) > (2 ** 32))
_is_pypy = hasattr(sys, 'pypy_version_info')
_is_jython = (sys.platform[:4] == 'java')
if _is_jython:
    ModuleType = type(os)
main()
if (__name__ == '__main__'):
    _script()
