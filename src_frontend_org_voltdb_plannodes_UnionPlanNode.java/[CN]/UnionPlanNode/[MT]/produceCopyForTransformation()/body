{
  UnionPlanNode copy=new UnionPlanNode(m_unionType);
  super.produceCopyForTransformation(copy);
  copy.m_unionType=this.m_unionType;
  assert(m_children.size() > 1);
  for (  AbstractPlanNode child : m_children) {
    AbstractPlanNode childCopy=null;
    if (child instanceof SeqScanPlanNode) {
      childCopy=new SeqScanPlanNode();
    }
 else     if (child instanceof IndexScanPlanNode) {
      childCopy=new IndexScanPlanNode();
    }
 else     if (child instanceof NestLoopPlanNode) {
      childCopy=new NestLoopPlanNode();
    }
 else     if (child instanceof NestLoopIndexPlanNode) {
      childCopy=new NestLoopIndexPlanNode();
    }
 else     if (child instanceof UnionPlanNode) {
      childCopy=new UnionPlanNode();
    }
 else {
      throw new RuntimeException("Unsupported statement type in UNION");
    }
    child.produceCopyForTransformation(childCopy);
  }
  return copy;
}
