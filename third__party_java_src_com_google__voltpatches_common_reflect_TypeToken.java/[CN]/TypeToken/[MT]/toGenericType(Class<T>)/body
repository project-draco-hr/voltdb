{
  if (cls.isArray()) {
    Type arrayOfGenericType=Types.newArrayType(toGenericType(cls.getComponentType()).runtimeType);
    @SuppressWarnings("unchecked") TypeToken<? extends T> result=(TypeToken<? extends T>)of(arrayOfGenericType);
    return result;
  }
  TypeVariable<Class<T>>[] typeParams=cls.getTypeParameters();
  if (typeParams.length > 0) {
    @SuppressWarnings("unchecked") TypeToken<? extends T> type=(TypeToken<? extends T>)of(Types.newParameterizedType(cls,typeParams));
    return type;
  }
 else {
    return of(cls);
  }
}
