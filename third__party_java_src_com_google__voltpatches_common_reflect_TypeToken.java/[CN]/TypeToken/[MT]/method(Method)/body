{
  checkArgument(of(method.getDeclaringClass()).isAssignableFrom(this),"%s not declared by %s",method,this);
  return new Invokable.MethodInvokable<T>(method){
    @Override Type getGenericReturnType(){
      return resolveType(super.getGenericReturnType()).getType();
    }
    @Override Type[] getGenericParameterTypes(){
      return resolveInPlace(super.getGenericParameterTypes());
    }
    @Override Type[] getGenericExceptionTypes(){
      return resolveInPlace(super.getGenericExceptionTypes());
    }
    @Override public TypeToken<T> getOwnerType(){
      return TypeToken.this;
    }
  }
;
}
