def _TestOutFile(self, test_name, expected_xml):
    gtest_prog_path = gtest_test_utils.GetTestExecutablePath(test_name)
    command = [gtest_prog_path, ('--gtest_output=xml:%s' % self.output_dir_)]
    p = gtest_test_utils.Subprocess(command, working_dir=gtest_test_utils.GetTempDir())
    self.assert_(p.exited)
    self.assertEquals(0, p.exit_code)
    output_file_name1 = (test_name + '.xml')
    output_file1 = os.path.join(self.output_dir_, output_file_name1)
    output_file_name2 = ('lt-' + output_file_name1)
    output_file2 = os.path.join(self.output_dir_, output_file_name2)
    self.assert_((os.path.isfile(output_file1) or os.path.isfile(output_file2)), output_file1)
    expected = minidom.parseString(expected_xml)
    if os.path.isfile(output_file1):
        actual = minidom.parse(output_file1)
    else:
        actual = minidom.parse(output_file2)
    self.NormalizeXml(actual.documentElement)
    self.AssertEquivalentNodes(expected.documentElement, actual.documentElement)
    expected.unlink()
    actual.unlink()
