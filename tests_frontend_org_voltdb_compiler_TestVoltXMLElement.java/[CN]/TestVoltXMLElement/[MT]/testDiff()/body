{
  VoltXMLElement first=makeNamedElement("element","element");
  VoltXMLElement changedChild1=makeNamedElement("child","changedchild1");
  first.children.add(changedChild1);
  changedChild1.attributes.put("deleteme","noreally");
  VoltXMLElement changedChild2=makeNamedElement("child","changedchild2");
  first.children.add(changedChild2);
  VoltXMLElement changedGrandchild=makeNamedElement("child","changedgrandchild");
  changedChild2.children.add(changedGrandchild);
  changedGrandchild.children.add(makeNamedElement("child","doomeddescendent"));
  first.attributes.put("deleted","doesntmatter");
  first.attributes.put("remains","doesntmatter");
  first.attributes.put("changes","oldvalue");
  first.children.add(makeNamedElement("child","deletedchild"));
  first.children.add(makeNamedElement("child","unchangedchild"));
  VoltXMLElement second=first.duplicate();
  second.attributes.remove("deleted");
  second.attributes.put("added","addedval");
  second.attributes.put("changes","newvalue");
  second.children.add(makeNamedElement("child","addedchild"));
  second.children.remove(second.findChild("child","deletedchild"));
  second.findChild("child","changedchild1").attributes.remove("deleteme");
  VoltXMLElement temp=second.findChild("child","changedchild2").findChild("child","changedgrandchild");
  temp.children.remove(temp.findChild("child","doomeddescendent"));
  VoltXMLDiff diff=VoltXMLElement.computeDiff(first,second);
  Map<String,String> addedAtt=diff.getAddedAttributes();
  assertEquals(1,addedAtt.size());
  assertTrue(addedAtt.keySet().contains("added"));
  assertEquals("addedval",addedAtt.get("added"));
  Map<String,String> changedAtt=diff.getChangedAttributes();
  assertEquals(1,changedAtt.size());
  assertTrue(changedAtt.keySet().contains("changes"));
  assertEquals("newvalue",changedAtt.get("changes"));
  Set<String> removedAtt=diff.getRemovedAttributes();
  assertEquals(1,removedAtt.size());
  assertTrue(removedAtt.contains("deleted"));
  List<VoltXMLElement> added=diff.getAddedNodes();
  assertEquals(1,added.size());
  assertTrue(findNamedNode(added,"addedchild") != null);
  List<VoltXMLElement> removed=diff.getRemovedNodes();
  assertEquals(1,removed.size());
  assertTrue(findNamedNode(removed,"deletedchild") != null);
  Map<String,VoltXMLDiff> changed=diff.getChangedNodes();
  assertEquals(2,changed.size());
  assertTrue(changed.containsKey("childchangedchild1"));
  VoltXMLDiff child1=changed.get("childchangedchild1");
  assertTrue(child1.getRemovedAttributes().contains("deleteme"));
  assertTrue(changed.containsKey("childchangedchild2"));
  VoltXMLDiff child2=changed.get("childchangedchild2");
  assertTrue(child2.getChangedNodes().containsKey("childchangedgrandchild"));
  VoltXMLDiff grandchild=child2.getChangedNodes().get("childchangedgrandchild");
  assertTrue(findNamedNode(grandchild.getRemovedNodes(),"doomeddescendent") != null);
  VoltXMLElement third=first.duplicate();
  third.applyDiff(diff);
  System.out.println(first.toMinString());
  System.out.println(second.toMinString());
  System.out.println(third.toMinString());
  assertEquals(second.toMinString(),third.toMinString());
}
