{
  assert(catalog != null);
  assert(pathToCatalogJar != null);
  this.pathToCatalogJar=pathToCatalogJar;
  if (catalog == null)   throw new RuntimeException("Can't create CatalogContext with null catalog.");
  if (pathToCatalogJar == null)   throw new RuntimeException("Can't create CatalogContext with null jar path.");
  if (pathToCatalogJar.startsWith(NO_PATH) == false)   try {
    m_jarfile=new InMemoryJarfile(pathToCatalogJar);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
 else   m_jarfile=null;
  this.catalog=catalog;
  cluster=catalog.getClusters().get("cluster");
  database=cluster.getDatabases().get("database");
  procedures=database.getProcedures();
  authSystem=new AuthSystem(database,cluster.getSecurityenabled());
  sites=cluster.getSites();
  siteTracker=new SiteTracker(cluster.getSites());
  numberOfNodes=cluster.getHosts().size();
  int execSiteCount=0;
  for (  Site site : sites) {
    if (site.getPartition() != null) {
      assert(site.getIsexec());
      execSiteCount++;
    }
  }
  numberOfExecSites=execSiteCount;
  numberOfPartitions=cluster.getPartitions().size();
  catalogVersion=version;
}
