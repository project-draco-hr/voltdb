{
  Preconditions.checkArgument(user != null && !user.trim().isEmpty(),"specified empty or null user");
  Preconditions.checkArgument(host != null && !host.trim().isEmpty(),"specified empty or null host");
  Preconditions.checkArgument(port > 1,"specified invalid port");
  m_host=host;
  if (log == null)   m_log=sftpLog;
 else   m_log=log;
  JSch jsch=new JSch();
  if (key != null && !key.trim().isEmpty()) {
    try {
      jsch.addIdentity(key);
    }
 catch (    JSchException jsex) {
      throw new SFTPException("add identity file " + key,jsex);
    }
  }
  try {
    m_session=jsch.getSession(user,host,port);
    m_session.setTimeout(15000);
    m_session.setConfig("StrictHostKeyChecking","no");
    m_session.setDaemonThread(true);
    if (password != null && !password.trim().isEmpty()) {
      m_session.setPassword(password);
    }
  }
 catch (  JSchException jsex) {
    throw new SFTPException("create a JSch session",jsex);
  }
  try {
    m_session.connect();
  }
 catch (  JSchException jsex) {
    throw new SFTPException("connect a JSch session",jsex);
  }
  ChannelSftp channel;
  try {
    channel=(ChannelSftp)m_session.openChannel("sftp");
  }
 catch (  JSchException jsex) {
    throw new SFTPException("create an SFTP channel",jsex);
  }
  try {
    channel.connect();
  }
 catch (  JSchException jsex) {
    throw new SFTPException("open an SFTP channel",jsex);
  }
  m_channel=channel;
}
