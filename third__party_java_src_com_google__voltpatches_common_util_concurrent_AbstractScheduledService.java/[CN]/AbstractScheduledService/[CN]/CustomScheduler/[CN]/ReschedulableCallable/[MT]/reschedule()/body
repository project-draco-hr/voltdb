{
  Schedule schedule;
  try {
    schedule=CustomScheduler.this.getNextSchedule();
  }
 catch (  Throwable t) {
    service.notifyFailed(t);
    return;
  }
  Throwable scheduleFailure=null;
  lock.lock();
  try {
    if (currentFuture == null || !currentFuture.isCancelled()) {
      currentFuture=executor.schedule(this,schedule.delay,schedule.unit);
    }
  }
 catch (  Throwable e) {
    scheduleFailure=e;
  }
 finally {
    lock.unlock();
  }
  if (scheduleFailure != null) {
    service.notifyFailed(scheduleFailure);
  }
}
