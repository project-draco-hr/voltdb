{
  ddl=SQLLexer.stripComments(ddl);
  Matcher matcher=HSQL_DDL_PREPROCESSOR.matcher(ddl);
  if (matcher.find()) {
    String verbString=matcher.group("verb");
    HSQLDDLInfo.Verb verb=HSQLDDLInfo.Verb.get(verbString);
    if (verb == null) {
      return null;
    }
    String nounString=matcher.group("object");
    HSQLDDLInfo.Noun noun=HSQLDDLInfo.Noun.get(nounString);
    if (noun == null) {
      return null;
    }
    String name=matcher.group("name");
    if (name == null) {
      return null;
    }
    String secondName=matcher.group("subject");
    if (secondName != null) {
      secondName=secondName.toLowerCase();
    }
    boolean cascade=false;
    boolean ifexists=false;
    if (verb != HSQLDDLInfo.Verb.CREATE) {
      matcher=DDL_IFEXISTS_OR_CASCADE_CHECK.matcher(ddl);
      if (matcher.matches()) {
        ifexists=matcher.group("ie") != null;
        cascade=matcher.group("c") != null;
      }
    }
    return new HSQLDDLInfo(verb,noun,name.toLowerCase(),secondName,cascade,ifexists);
  }
  return null;
}
