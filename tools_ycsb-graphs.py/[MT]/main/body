def main():
    build_tag = None
    master_tag = None
    if (len(sys.argv) < 2):
        usage()
        exit((-1))
    path = sys.argv[1]
    if (not os.path.exists(path)):
        print path, ' save path does not exist'
        exit((-1))
    if (len(sys.argv) >= 3):
        build_tag = str(sys.argv[2])
    if (len(sys.argv) >= 4):
        master_tag = str(sys.argv[3])
    conn = FastSerializer(STATS_SERVER, 21212)
    latestAnticache = getLatestKitBuildTag(conn, build_tag, 'YCSB-Anticache-%')
    print ('workload kit:' + latestAnticache)
    (stats, mindate, maxdate) = get_stats(conn, latestAnticache)
    workBuckets = getBucketsByWorkload(stats, mindate, maxdate)
    if (master_tag != None):
        latestMaster = getLatestKitBuildTag(conn, master_tag, 'YCSB-%-master')
        print ('master kit:' + latestMaster)
        (masterstats, mastermindate, mastermaxdate) = get_stats(conn, latestMaster)
        masterWorkBuckets = getBucketsByWorkload(masterstats, mindate, maxdate)
    conn.close()
    if (master_tag != None):
        for build in workBuckets:
            for workload in workBuckets[build]:
                for mbuild in masterWorkBuckets:
                    if (workload in masterWorkBuckets[mbuild]):
                        workBuckets[build][workload]['master'] = masterWorkBuckets[mbuild][workload]['master']
        plotByWorkload(workBuckets, path, title=((latestMaster + ' vs ') + latestAnticache))
    else:
        plotByWorkload(workBuckets, path, title=latestAnticache)
