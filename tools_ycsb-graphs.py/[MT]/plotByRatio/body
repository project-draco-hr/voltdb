def plotByRatio(buckets):
    for build in buckets:
        location = 0
        subplotlocations = {}
        sblocation = 0
        numcols = len(buckets[build])
        fig = plt.figure(figsize=(70, 20))
        fig.suptitle('Zipfian Distribution', fontsize=28, fontweight='bold')
        for ratio in sorted(buckets[build]):
            if (ratio in subplotlocations):
                sblocation = subplotlocations[ratio]
            else:
                location = (location + 1)
                subplotlocations[ratio] = location
            sb = plt.subplot(1, numcols, subplotlocations[ratio])
            sb.invert_xaxis()
            plt.xlabel('Zipfian Value', fontsize=20)
            plt.ylabel('Txns/Sec', fontsize=20)
            sb.set_title((('Ratio ' + ratio) + ': Throughput'), fontsize=30)
            sb.grid(True)
            legendlist = []
            for workload in sorted(buckets[build][ratio]):
                legendlist.append(workload)
                statsraw = buckets[build][ratio][workload]
                stats = np.array(statsraw)
                statslist = stats[stats[:, 0].argsort()]
                x = statslist[:, 0]
                y = statslist[:, 1]
                sb.plot(x, y, '-', linewidth=10, label=workload, solid_capstyle='round', solid_joinstyle='round', aa=True)
            plt.legend(legendlist, loc='best')
        fig.savefig((build + '-ratio.png'))
        fig.clear()
        plt.close(fig)
    plt.close('all')
