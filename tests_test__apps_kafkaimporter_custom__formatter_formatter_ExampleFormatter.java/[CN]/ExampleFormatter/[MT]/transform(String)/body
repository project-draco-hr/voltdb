{
  Object[] objs={"","","","",""};
  Object[] badobjs1={"abc","def","123","","this one is ok"};
  Object[] badobjs2={"","","","","",""};
  JSONParser parser=new JSONParser();
  JSONObject jsonObj=null;
  Object seq=null;
  Object instance_id=null;
  Object event_type_id=null;
  Object event_date=null;
  Object trans=null;
  String percentErrors=m_prop.getProperty("errorrate","1").trim();
  int badinject=1;
  try {
    badinject=Integer.parseInt(percentErrors);
  }
 catch (  NumberFormatException e1) {
    e1.printStackTrace();
    badinject=1;
  }
  try {
    Object obj=parser.parse(sourceData);
    jsonObj=(JSONObject)obj;
    seq=jsonObj.get("seq");
    instance_id=jsonObj.get("instance_id");
    event_type_id=jsonObj.get("event_type_id");
    event_date=jsonObj.get("event_date");
    trans=jsonObj.get("trans");
    objs[0]=seq;
    objs[1]=instance_id;
    objs[2]=event_type_id;
    objs[3]=event_date;
    objs[4]=trans;
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  double r=Math.random();
  if (r < (badinject / 100.0)) {
    if (r < 1.0 / 3.0)     return badobjs1;
 else     if (r >= 1.0 / 3.0 && r < 2.0 / 3.0)     return badobjs2;
    throw new FormatException();
  }
  return objs;
}
