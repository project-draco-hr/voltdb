def mergeTargets(base, build, doc):
    retval = []
    basemap = {}
    for target in base:
        basemap[target.getAttribute('name')] = target
    buildmap = {}
    for target in build:
        buildmap[target.getAttribute('name')] = target
    for target in build:
        name = target.getAttribute('name')
        depends = target.getAttribute('depends')
        deplist = []
        if (depends != None):
            deplist = depends.split(',')
            deplist = [s.strip() for s in deplist]
        if (name in basemap):
            basetarget = basemap[name]
            specialDep = ('basebuild.' + name)
            if (specialDep in deplist):
                if (len(deplist) == 1):
                    target.removeAttribute('depends')
                else:
                    deplist.remove(specialDep)
                    deplist = deplist.join(', ')
                    target.setAttribute('depends', deplist)
                firstchild = target.childNodes.item(0)
                for i in range(basetarget.childNodes.length):
                    child = basetarget.childNodes.item(i)
                    clone = cloneNode(doc, child)
                    target.insertBefore(clone, firstchild)
            if (not target.hasAttribute('description')):
                if basetarget.hasAttribute('description'):
                    value = basetarget.getAttribute('description')
                    target.setAttribute('description', value)
            del basemap[name]
    for target in base:
        name = target.getAttribute('name')
        if (name in basemap):
            if (name == 'export'):
                continue
            retval.append(target)
    for target in build:
        retval.append(target)
    return retval
