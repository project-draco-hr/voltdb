{
  Matcher matcher=RecallToken.matcher(statement);
  if (matcher.matches()) {
    String commandWordTerminator=matcher.group(1);
    String lineNumberText=matcher.group(2);
    String error;
    if (OneWhitespace.matcher(commandWordTerminator).matches()) {
      String trailings=matcher.group(3) + ";" + matcher.group(4);
      if (trailings.equals(";")) {
        try {
          int line=Integer.parseInt(lineNumberText) - 1;
          if (line < 0 || line > lineMax) {
            throw new NumberFormatException();
          }
          return new ParseRecallResults(line);
        }
 catch (        NumberFormatException e) {
          error="Invalid RECALL line number argument: '" + lineNumberText + "'";
        }
      }
 else {
        error="Invalid RECALL line number argument: '" + lineNumberText + " "+ trailings+ "'";
      }
    }
 else     if (commandWordTerminator.equals("") || commandWordTerminator.equals(";")) {
      error="Incomplete RECALL command. RECALL expects a line number argument.";
    }
 else {
      error="Invalid RECALL command: a space and line number are required after 'recall'";
    }
    return new ParseRecallResults(error);
  }
  return null;
}
