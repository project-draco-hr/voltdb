{
  final String SafeParamStringValuePattern="#(SQL_PARSER_SAFE_PARAMSTRING)";
  paramText=paramText.trim();
  ArrayList<String> originalString=new ArrayList<String>();
  Matcher stringMatcher=SingleQuotedStringContainingParameterSeparators.matcher(paramText);
  while (stringMatcher.find()) {
    originalString.add(stringMatcher.group());
    paramText=stringMatcher.replaceFirst(SafeParamStringValuePattern);
    stringMatcher=SingleQuotedStringContainingParameterSeparators.matcher(paramText);
  }
  ArrayList<String> params=new ArrayList<String>();
  int subCount=0;
  int neededSubs=originalString.size();
  for (  String fragment : paramText.split("[\\s,]+")) {
    if (fragment.isEmpty()) {
      continue;
    }
    if (subCount < neededSubs) {
      while (fragment.indexOf(SafeParamStringValuePattern) > -1) {
        fragment=fragment.replace(SafeParamStringValuePattern,originalString.get(subCount));
        ++subCount;
      }
    }
    params.add(fragment);
  }
  assert(subCount == neededSubs);
  return params;
}
