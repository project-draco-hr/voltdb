'A script to prepare version informtion for use the gtest Info.plist file.\n\n  This script extracts the version information from the configure.ac file and\n  uses it to generate a header file containing the same information. The\n  #defines in this header file will be included in during the generation of\n  the Info.plist of the framework, giving the correct value to the version\n  shown in the Finder.\n\n  This script makes the following assumptions (these are faults of the script,\n  not problems with the Autoconf):\n    1. The AC_INIT macro will be contained within the first 1024 characters\n       of configure.ac\n    2. The version string will be 3 integers separated by periods and will be\n       surrounded by squre brackets, "[" and "]" (e.g. [1.0.1]). The first\n       segment represents the major version, the second represents the minor\n       version and the third represents the fix version.\n    3. No ")" character exists between the opening "(" and closing ")" of\n       AC_INIT, including in comments and character strings.\n'
import sys
import re
if (len(sys.argv) < 3):
    print 'Usage: versiongenerate.py input_dir output_dir'
    sys.exit(1)
else:
    input_dir = sys.argv[1]
    output_dir = sys.argv[2]
config_file = open(('%s/configure.ac' % input_dir), 'r')
buffer_size = 1024
opening_string = config_file.read(buffer_size)
config_file.close()
version_expression = re.compile('AC_INIT\\(.*?\\[(\\d+)\\.(\\d+)\\.(\\d+)\\].*?\\)', re.DOTALL)
version_values = version_expression.search(opening_string)
major_version = version_values.group(1)
minor_version = version_values.group(2)
fix_version = version_values.group(3)
file_data = ('//\n// DO NOT MODIFY THIS FILE (but you can delete it)\n//\n// This file is autogenerated by the versiongenerate.py script. This script\n// is executed in a "Run Script" build phase when creating gtest.framework. This\n// header file is not used during compilation of C-source. Rather, it simply\n// defines some version strings for substitution in the Info.plist. Because of\n// this, we are not not restricted to C-syntax nor are we using include guards.\n//\n\n#define GTEST_VERSIONINFO_SHORT %s.%s\n#define GTEST_VERSIONINFO_LONG %s.%s.%s\n\n' % (major_version, minor_version, major_version, minor_version, fix_version))
version_file = open(('%s/Version.h' % output_dir), 'w')
version_file.write(file_data)
version_file.close()
