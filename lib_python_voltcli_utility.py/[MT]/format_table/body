def format_table(data_rows, caption=None, headings=None, indent=0):
    '\n    Format a tabular display including an optional caption, optional column\n    headings, and rows of data cells. Aligns the headings and data cells.\n    Headings and data rows must be iterable. Each data row must provide\n    iterable cells.  For now it only handles stringized data and right\n    alignment. Returns the table-formatted string.\n    '
    output = []
    sindent = (' ' * indent)
    if caption:
        output.append(('%s-- %s --\n' % (sindent, caption)))
    rows = []
    if headings:
        rows.append(headings)
        widths = []
        for row in (rows + data_rows):
            if (len(widths) < len(row)):
                widths += ([0] * (len(row) - len(widths)))
            for i in range(len(row)):
                widths[i] = max(widths[i], len(str(row[i])))
        rows.append([('-' * widths[i]) for i in range(len(widths))])
    rows.extend(data_rows)
    widths = []
    for row in rows:
        icolumn = 0
        for column in row:
            width = len(str(column))
            if (len(widths) == icolumn):
                widths.append(width)
            else:
                widths[icolumn] = max(widths[icolumn], width)
            icolumn += 1
    fmt = ('%s%s' % (sindent, '  '.join([('%%-%ds' % width) for width in widths])))
    for row in rows:
        output.append((fmt % normalize_list(row, len(widths), '')))
    return '\n'.join(output)
