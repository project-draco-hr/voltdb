def format_table(tuples, caption=None, headings=None, indent=0, separator=' '):
    '\n    Format a table, i.e. tuple list, including an optional caption, optional\n    column headings, and rows of data cells. Aligns the headings and data\n    cells.  Headings and data rows must be iterable. Each data row must provide\n    iterable cells.  For now it only handles stringized data and right\n    alignment. Returns the table-formatted string.\n    '
    output = []
    sindent = (' ' * indent)
    if caption:
        output.append(('\n%s-- %s --\n' % (sindent, caption)))
    rows = []
    if headings:
        rows.append(headings)
        widths = []
        for row in (rows + tuples):
            if (len(widths) < len(row)):
                widths += ([0] * (len(row) - len(widths)))
            for i in range(len(row)):
                widths[i] = max(widths[i], len(str(row[i])))
        rows.append([('-' * widths[i]) for i in range(len(widths))])
    rows.extend(tuples)
    widths = []
    for row in rows:
        icolumn = 0
        for column in row:
            width = len(str(column))
            if (len(widths) == icolumn):
                widths.append(width)
            else:
                widths[icolumn] = max(widths[icolumn], width)
            icolumn += 1
    fmt = ('%s%s' % (sindent, separator.join([('%%-%ds' % width) for width in widths])))
    for row in rows:
        output.append((fmt % normalize_list(row, len(widths), '')))
    return '\n'.join(output)
