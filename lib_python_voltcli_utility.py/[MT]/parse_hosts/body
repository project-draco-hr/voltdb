def parse_hosts(host_string, min_hosts=None, max_hosts=None, default_port=None):
    '\n    Split host string on commas, extract optional port for each and return list\n    of host objects. Check against minimum/maximum quantities if specified.\n    '


    class Host(object):

        def __init__(self, host, port):
            self.host = host
            self.port = port
    hosts = []
    for host_port in host_string.split(','):
        split_host = host_port.split(':')
        host = split_host[0]
        if (len(split_host) > 2):
            abort(('Bad HOST:PORT format "%s" - too many colons.' % host_port))
        if (len(split_host) == 1):
            if default_port:
                port = default_port
            else:
                port = None
        else:
            try:
                port = int(split_host[1])
            except ValueError as e:
                abort(('Bad port value "%s" for host: %s' % (split_host[1], host_port)))
        hosts.append(Host(host, port))
    if ((min_hosts is not None) and (len(hosts) < min_hosts)):
        abort(('Too few hosts in host string "%s". The minimum is %d.' % (host_string, min_hosts)))
    if ((max_hosts is not None) and (len(hosts) > max_hosts)):
        abort(('Too many hosts in host string "%s". The maximum is %d.' % (host_string, max_hosts)))
    return hosts
