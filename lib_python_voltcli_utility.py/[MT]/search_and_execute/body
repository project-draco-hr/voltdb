def search_and_execute(scan_dirs, **syms):
    '\n    Look for python source files in a named subdirectory of a set of base\n    directories. Execute all discovered source files and pass in the symbols\n    provided.\n    A typical usage will be to supply decorators among the symbols which can\n    mark discoverable functions in user code. The decorator will be called when\n    the source file is executed which serves as an opportunity to keep track of\n    the discovered functions.\n    '
    processed_dirs = set()
    for scan_dir in scan_dirs:
        if (scan_dir not in processed_dirs):
            processed_dirs.add(scan_dir)
            if os.path.exists(scan_dir):
                for modpath in glob.glob(os.path.join(scan_dir, '*.py')):
                    debug(('Executing module "%s"...' % modpath))
                    execfile(modpath, syms)
