def __init__(self, name, description, output=None):
    "\n        Constructor. The optional 'output_dir' keyword specifies an override\n        to the default ~/.command_name output directory.\n        "
    self.name = name
    self.description = description
    self.output_dir = output
    if (self.output_dir is None):
        self.output_dir = get_state_directory()
    pid = os.path.join(self.output_dir, ('%s.pid' % name))
    out = os.path.join(self.output_dir, ('%s.out' % name))
    err = os.path.join(self.output_dir, ('%s.err' % name))
    for path in (out, err):
        if os.path.exists(path):
            try:
                os.remove(path)
            except (IOError, OSError) as e:
                abort(('Unable to remove the existing output file "%s".' % path), e)
    daemon.Daemon.__init__(self, pid, stdout=out, stderr=err)
    self.purge_defunct()
