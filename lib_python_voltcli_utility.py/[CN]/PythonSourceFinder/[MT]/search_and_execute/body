def search_and_execute(self, **syms):
    for scan_loc in self.scan_locs:
        if scan_loc.package:
            if (scan_loc.package not in self.manifests):
                try:
                    manifest_raw = pkgutil.get_data(scan_loc.package, Global.manifest_path)
                    self.manifests[scan_loc.package] = manifest_raw.split('\n')
                except (IOError, OSError) as e:
                    abort(('Failed to load package %s.' % Global.manifest_path), e)
            for path in self.manifests[scan_loc.package]:
                if ((os.path.dirname(path) == scan_loc.path) and path.endswith('.py')):
                    debug(('Executing package module "%s"...' % path))
                    try:
                        code = pkgutil.get_data(scan_loc.package, path)
                    except (IOError, OSError) as e:
                        abort(('Failed to load package resource "%s".' % path), e)
                    syms_tmp = copy.copy(syms)
                    exec code in syms_tmp
        elif os.path.exists(scan_loc.path):
            for modpath in glob.glob(os.path.join(scan_loc.path, '*.py')):
                debug(('Executing module "%s"...' % modpath))
                syms_tmp = copy.copy(syms)
                execfile(modpath, syms_tmp)
