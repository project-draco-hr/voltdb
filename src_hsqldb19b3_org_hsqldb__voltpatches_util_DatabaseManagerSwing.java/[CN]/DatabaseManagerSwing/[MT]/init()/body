{
  javax.swing.AbstractButton btn;
  fMain=this;
  main();
  for (int i=0; i < localActionList.size(); i++) {
    btn=(javax.swing.AbstractButton)localActionList.get(i);
    btn.setEnabled(false);
  }
  Connection c=null;
  boolean auto=false;
  if (getParameter("jdbcDriver") != null) {
    auto=true;
    defDriver=getParameter("jdbcDriver");
  }
  if (getParameter("jdbcUrl") != null) {
    auto=true;
    defURL=getParameter("jdbcUrl");
  }
  if (getParameter("jdbcUser") != null) {
    auto=true;
    defUser=getParameter("jdbcUser");
  }
  if (getParameter("jdbcPassword") != null) {
    auto=true;
    defPassword=getParameter("jdbcPassword");
  }
  try {
    setWaiting("Initializing");
    c=(auto ? ConnectionDialogSwing.createConnection(defDriver,defURL,defUser,defPassword) : ConnectionDialogSwing.createConnection(jframe,"Connect"));
  }
 catch (  Exception e) {
    CommonSwing.errorMessage(e);
  }
 finally {
    setWaiting(null);
  }
  if (c != null) {
    connect(c);
  }
  if (getParameter("loadSampleData") != null && getParameter("loadSampleData").equals("true")) {
    insertTestData();
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException ie) {
    }
    ;
    refreshTree();
  }
  if (getParameter("schemaFilter") != null) {
    schemaFilter=getParameter("schemaFilter");
  }
}
