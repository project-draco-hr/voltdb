{
  m_hostId=hostId;
  Map<Integer,List<Long>> hostsToSites=new HashMap<Integer,List<Long>>();
  Map<Integer,List<Integer>> hostsToPartitions=new HashMap<Integer,List<Integer>>();
  Map<Integer,List<Long>> partitionsToSites=new HashMap<Integer,List<Long>>();
  Map<Long,Integer> sitesToPartitions=new HashMap<Long,Integer>();
  Map<Integer,List<Long>> hostsToInitiators=new HashMap<Integer,List<Long>>();
  Map<MailboxType,List<Long>> otherHSIds=new HashMap<MailboxType,List<Long>>();
  Map<MailboxType,Map<Integer,List<Long>>> hostsToOtherHSIds=new HashMap<MailboxType,Map<Integer,List<Long>>>();
  for (  Entry<MailboxType,List<MailboxNodeContent>> e : mailboxes.entrySet()) {
    if (e.getKey().equals(MailboxType.ExecutionSite)) {
      populateSites(e.getValue(),hostsToSites,hostsToPartitions,partitionsToSites,sitesToPartitions);
    }
 else     if (e.getKey().equals(MailboxType.Initiator)) {
      populateInitiators(e.getValue(),hostsToInitiators);
    }
    if (e.getKey().equals(MailboxType.StatsAgent)) {
      populateStatsAgents(e.getValue());
    }
 else {
      populateOtherHSIds(e.getKey(),e.getValue(),otherHSIds,hostsToOtherHSIds);
    }
  }
  m_hostsToSitesImmutable=MiscUtils.unmodifiableMapCopy(hostsToSites);
  m_hostsToPartitionsImmutable=MiscUtils.unmodifiableMapCopy(hostsToPartitions);
  m_partitionsToSitesImmutable=MiscUtils.unmodifiableMapCopy(partitionsToSites);
  m_sitesToPartitionsImmutable=Collections.unmodifiableMap(sitesToPartitions);
  m_hostsToInitiatorsImmutable=MiscUtils.unmodifiableMapCopy(hostsToInitiators);
  m_otherHSIdsImmutable=MiscUtils.unmodifiableMapCopy(otherHSIds);
  Map<MailboxType,Map<Integer,List<Long>>> hostsToOtherHSIdsReplacement=new HashMap<MailboxType,Map<Integer,List<Long>>>();
  for (  Map.Entry<MailboxType,Map<Integer,List<Long>>> e : hostsToOtherHSIds.entrySet()) {
    hostsToOtherHSIds.put(e.getKey(),MiscUtils.unmodifiableMapCopy(e.getValue()));
  }
  m_hostsToOtherHSIdsImmutable=Collections.unmodifiableMap(hostsToOtherHSIdsReplacement);
  m_allSitesArray=new long[m_allSites.size()];
  int ii=0;
  for (  Long site : m_allSites) {
    m_allSitesArray[ii++]=site;
  }
}
