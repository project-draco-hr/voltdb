{
  File baseDH=new File(m_clientPath,"-1");
  if (!baseDH.exists() || !baseDH.isDirectory() || !baseDH.canRead()|| !baseDH.canExecute()|| !baseDH.canWrite())   return;
  File[] files=baseDH.listFiles(clientFileNameFilter);
  if (files.length == 0)   return;
  Arrays.sort(files,clientFileNameComparator);
  long[] rec=new long[3];
  for (  File f : files) {
    try (BufferedReader in=new BufferedReader(new InputStreamReader(new FileInputStream(f)))){
      String line=in.readLine();
      while (line != null) {
        int recColumns=splitClientTrace(line,rec);
        if (recColumns == rec.length) {
          long rowid=rec[0];
          long txid=rec[1];
          if (txid < 0) {
            m_clientTxnIdOrphans.add(rowid);
          }
        }
 else         if (line != null) {
          System.out.println("WARN read malformed trace " + line + " in "+ f);
        }
      }
    }
  finally {
      f.delete();
    }
  }
}
