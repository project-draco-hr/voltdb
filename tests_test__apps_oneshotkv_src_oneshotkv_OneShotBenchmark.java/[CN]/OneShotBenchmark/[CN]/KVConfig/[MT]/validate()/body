{
  if (duration <= 0)   exitWithMessageAndUsage("duration must be > 0");
  if (warmup < 0)   exitWithMessageAndUsage("warmup must be >= 0");
  if (displayinterval <= 0)   exitWithMessageAndUsage("displayinterval must be > 0");
  if (poolsize <= 0)   exitWithMessageAndUsage("poolsize must be > 0");
  if (getputratio < 0)   exitWithMessageAndUsage("getputratio must be >= 0");
  if (getputratio > 1)   exitWithMessageAndUsage("getputratio must be <= 1");
  if (keysize <= 0)   exitWithMessageAndUsage("keysize must be > 0");
  if (keysize > 250)   exitWithMessageAndUsage("keysize must be <= 250");
  if (minvaluesize <= 0)   exitWithMessageAndUsage("minvaluesize must be > 0");
  if (maxvaluesize <= 0)   exitWithMessageAndUsage("maxvaluesize must be > 0");
  if (entropy <= 0)   exitWithMessageAndUsage("entropy must be > 0");
  if (entropy > 127)   exitWithMessageAndUsage("entropy must be <= 127");
  if (threads < 0)   exitWithMessageAndUsage("threads must be => 0");
  if (mpthreads < 0)   exitWithMessageAndUsage("mpthreads must be => 0");
  if (mpgetputratio < 0)   exitWithMessageAndUsage("mpgetputratio must be >= 0");
  if (mpgetputratio > 1)   exitWithMessageAndUsage("mpgetputratio must be <= 1");
  if (mpputpartitions < 0)   exitWithMessageAndUsage("mpputpartitions must be => 0");
  if (mpthreads > 0 && mpgetputratio < 1.0 && mpputoptimistic) {
    preload=true;
  }
}
