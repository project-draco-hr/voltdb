def test_upload_errors(self):
    '\n        Check the errors while uploading files.\n        '
    response = requests.get(__db_url__)
    value = response.json()
    if value:
        db_length = len(value['databases'])
        last_db_id = value['databases'][(db_length - 1)]['id']
        res = requests.put(((__db_url__ + str(last_db_id)) + '/deployment/'), files={'file': open('test-files/images.png', 'rb'), })
        assert (res.status_code == 200)
        result = json.loads(res.content)
        self.assertEqual(result['status'], 'failure')
        self.assertEqual(result['error'], 'Invalid file type.')
        res = requests.put(((__db_url__ + str(last_db_id)) + '/deployment/'), files={'file': open('test-files/Invalid.xml', 'rb'), })
        assert (res.status_code == 200)
        result = json.loads(res.content)
        self.assertEqual(result['status'], 'failure')
        self.assertEqual(result['error'], 'Invalid file content.')
        res = requests.put(((__db_url__ + str(last_db_id)) + '/deployment/'), files={'file': open('test-files/Sample.xml', 'rb'), })
        assert (res.status_code == 200)
        result = json.loads(res.content)
        self.assertEqual(result['status'], 'failure')
        self.assertEqual(result['error'], 'Invalid file content.')
        res = requests.put(((__db_url__ + str(last_db_id)) + '/deployment/'), files={'file': open('test-files/deployment.xml', 'rb'), })
        assert (res.status_code == 200)
        result = json.loads(res.content)
        self.assertEqual(result['status'], 'success')
    else:
        print 'The database list is empty'
