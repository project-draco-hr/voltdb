{
synchronized (map) {
    StringBuffer buffer=new StringBuffer();
    String key=null;
    String value=null;
    int b;
    int totalLength=0;
    while ((b=in.read()) >= 0) {
switch ((char)b) {
case '&':
        value=buffer.length() == 0 ? "" : buffer.toString();
      buffer.setLength(0);
    if (key != null) {
      map.add(key,value);
    }
 else     if (value != null && value.length() > 0) {
      map.add(value,"");
    }
  key=null;
value=null;
break;
case '=':
if (key != null) {
buffer.append((char)b);
break;
}
key=buffer.toString();
buffer.setLength(0);
break;
case '+':
buffer.append(' ');
break;
case '%':
int dh=in.read();
int dl=in.read();
if (dh < 0 || dl < 0) break;
buffer.append((char)((TypeUtil.convertHexDigit((byte)dh) << 4) + TypeUtil.convertHexDigit((byte)dl)));
break;
default :
buffer.append((char)b);
break;
}
if (maxLength >= 0 && (++totalLength > maxLength)) throw new IllegalStateException("Form too large");
}
if (key != null) {
value=buffer.length() == 0 ? "" : buffer.toString();
buffer.setLength(0);
map.add(key,value);
}
 else if (buffer.length() > 0) {
map.add(buffer.toString(),"");
}
}
}
