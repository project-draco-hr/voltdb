{
  if (charset == null || StringUtil.__UTF8.equalsIgnoreCase(charset)) {
    decodeUtf8To(in,map,maxLength);
    return;
  }
  if (StringUtil.__ISO_8859_1.equals(charset)) {
    decode88591To(in,map,maxLength);
    return;
  }
  if (StringUtil.__UTF16.equalsIgnoreCase(charset)) {
    decodeUtf16To(in,map,maxLength);
    return;
  }
synchronized (map) {
    String key=null;
    String value=null;
    int c;
    int digit=0;
    int digits=0;
    int totalLength=0;
    ByteArrayOutputStream2 output=new ByteArrayOutputStream2();
    int size=0;
    while ((c=in.read()) > 0) {
switch ((char)c) {
case '&':
        size=output.size();
      value=size == 0 ? "" : output.toString(charset);
    output.setCount(0);
  if (key != null) {
    map.add(key,value);
  }
 else   if (value != null && value.length() > 0) {
    map.add(value,"");
  }
key=null;
value=null;
break;
case '=':
if (key != null) {
output.write(c);
break;
}
size=output.size();
key=size == 0 ? "" : output.toString(charset);
output.setCount(0);
break;
case '+':
output.write(' ');
break;
case '%':
digits=2;
break;
default :
if (digits == 2) {
digit=TypeUtil.convertHexDigit((byte)c);
digits=1;
}
 else if (digits == 1) {
output.write((digit << 4) + TypeUtil.convertHexDigit((byte)c));
digits=0;
}
 else output.write(c);
break;
}
totalLength++;
if (maxLength >= 0 && totalLength > maxLength) throw new IllegalStateException("Form too large");
}
size=output.size();
if (key != null) {
value=size == 0 ? "" : output.toString(charset);
output.setCount(0);
map.add(key,value);
}
 else if (size > 0) map.add(output.toString(charset),"");
}
}
