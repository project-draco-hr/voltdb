{
  String method=req.getMethod();
  if (method.equals(METHOD_GET)) {
    long lastModified=getLastModified(req);
    if (lastModified == -1) {
      doGet(req,resp);
    }
 else {
      long ifModifiedSince=req.getDateHeader(HEADER_IFMODSINCE);
      if (ifModifiedSince < (lastModified / 1000 * 1000)) {
        maybeSetLastModified(resp,lastModified);
        doGet(req,resp);
      }
 else {
        resp.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
      }
    }
  }
 else   if (method.equals(METHOD_HEAD)) {
    long lastModified=getLastModified(req);
    maybeSetLastModified(resp,lastModified);
    doHead(req,resp);
  }
 else   if (method.equals(METHOD_POST)) {
    doPost(req,resp);
  }
 else   if (method.equals(METHOD_PUT)) {
    doPut(req,resp);
  }
 else   if (method.equals(METHOD_DELETE)) {
    doDelete(req,resp);
  }
 else   if (method.equals(METHOD_OPTIONS)) {
    doOptions(req,resp);
  }
 else   if (method.equals(METHOD_TRACE)) {
    doTrace(req,resp);
  }
 else {
    String errMsg=lStrings.getString("http.method_not_implemented");
    Object[] errArgs=new Object[1];
    errArgs[0]=method;
    errMsg=MessageFormat.format(errMsg,errArgs);
    resp.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,errMsg);
  }
}
