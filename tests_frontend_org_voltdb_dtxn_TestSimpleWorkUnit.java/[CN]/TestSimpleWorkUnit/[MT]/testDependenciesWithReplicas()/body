{
  setUpSites(2,2,2);
  System.out.println(m_voltdb.getCatalogContext().catalog.serialize());
  int multi_dep=5 | DtxnConstants.MULTIPARTITION_DEPENDENCY;
  WorkUnit w=new WorkUnit(m_voltdb.getSiteTracker(),work,new int[]{4,multi_dep},0L,new long[]{MiscUtils.getHSIdFromHostAndSite(0,1),MiscUtils.getHSIdFromHostAndSite(1,2),MiscUtils.getHSIdFromHostAndSite(1,3)},false);
  assertFalse(w.allDependenciesSatisfied());
  assertEquals(w.getDependency(4).size(),0);
  assertEquals(w.getDependency(5).size(),0);
  w.putDependency(4,0,t1,st);
  assertFalse(w.allDependenciesSatisfied());
  w.putDependency(multi_dep,0,t2,st);
  assertFalse(w.allDependenciesSatisfied());
  w.putDependency(multi_dep,MiscUtils.getHSIdFromHostAndSite(0,1),t2,st);
  assertFalse(w.allDependenciesSatisfied());
  w.putDependency(multi_dep,MiscUtils.getHSIdFromHostAndSite(1,2),t2,st);
  assertFalse(w.allDependenciesSatisfied());
  w.putDependency(multi_dep,MiscUtils.getHSIdFromHostAndSite(1,3),t2,st);
  assertTrue(w.allDependenciesSatisfied());
  assertEquals(1,w.getDependency(4).size());
  assertEquals(t1,w.getDependency(4).get(0));
  assertEquals(2,w.getDependency(multi_dep).size());
  assertEquals(t2,w.getDependency(multi_dep).get(0));
}
