{
  ClientConfig config=new ClientConfig();
  config.setReconnectOnConnectionLoss(true);
  Client client=ClientFactory.createClient(config);
  client.createConnection("localhost");
  tearDown();
  for (int i=0; (i < 40) && (client.getConnectedHostList().size() > 0); i++) {
    Thread.sleep(500);
  }
  assertTrue(client.getConnectedHostList().isEmpty());
  Thread.sleep(2000);
  setUp();
  boolean failed=true;
  for (int i=0; i < 40; i++) {
    if (client.getConnectedHostList().size() > 0) {
      failed=false;
      break;
    }
    Thread.sleep(500);
  }
  if (failed) {
    fail("Client should have been reconnected");
  }
  tearDown();
  for (int i=0; (i < 40) && (client.getConnectedHostList().size() > 0); i++) {
    Thread.sleep(500);
  }
  assertTrue(client.getConnectedHostList().isEmpty());
  client.close();
  Map<Thread,StackTraceElement[]> stMap=Thread.getAllStackTraces();
  for (  Entry<Thread,StackTraceElement[]> e : stMap.entrySet()) {
    StackTraceElement[] st=e.getValue();
    Thread t=e.getKey();
    if (t == Thread.currentThread()) {
      continue;
    }
    for (    StackTraceElement ste : st) {
      if (ste.getClassName().toLowerCase().contains("voltdb.client")) {
        System.err.println(ste.getClassName().toLowerCase());
        fail("Something failed to clean up.");
      }
    }
  }
}
