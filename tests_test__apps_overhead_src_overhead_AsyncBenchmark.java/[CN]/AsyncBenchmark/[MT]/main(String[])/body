{
  try {
    apph.add("displayinterval","display_interval_in_seconds","Interval for performance feedback, in seconds.",10).add("duration","run_duration_in_seconds","Benchmark duration, in seconds.",120).add("servers","comma_separated_server_list","List of VoltDB servers to connect to.","localhost").add("port","port_number","Client port to connect to on cluster nodes.",21212).add("resultsize","result_size","Size of the result value returned by each operation",0).add("paramsize","param_size","Size of the op parameter if the op supports arbitrary size params",0).add("operation","operation","The procedure to invoke","NoArgs").add("ratelimit","rate_limit","Rate limit to start from (number of transactions per second).",900000).setArguments(args);
    long displayInterval=apph.longValue("displayinterval");
    duration=apph.longValue("duration");
    String servers=apph.stringValue("servers");
    int port=apph.intValue("port");
    resultSize=apph.intValue("resultsize");
    paramSize=apph.intValue("paramsize");
    long rateLimit=apph.longValue("ratelimit");
    final String csv=apph.stringValue("statsfile");
    final String op=apph.stringValue("operation");
    apph.validate("duration",(duration > 0)).validate("displayinterval",(displayInterval > 0)).validate("resultsize",(resultSize >= 0)).validate("paramsize",(paramSize >= 0)).validate("ratelimit",(rateLimit > 0));
    apph.printActualUsage();
    Con=ClientConnectionPool.getWithRetry(servers,port);
    timer=new Timer();
    timer.scheduleAtFixedRate(new TimerTask(){
      @Override public void run(){
        System.out.print(Con.getStatistics(op));
      }
    }
,displayInterval * 1000l,displayInterval * 1000l);
    limiter=new RateLimiter(rateLimit);
    if (op.substring(0,6).equalsIgnoreCase("noargs")) {
      runNoArgs(op.endsWith("RW") ? false : true);
    }
 else     if (op.substring(0,13).equalsIgnoreCase("BinaryPayload")) {
      runBinaryPayload(op.endsWith("RW") ? false : true);
    }
    timer.cancel();
    System.out.println("\n\n-------------------------------------------------------------------------------------\n" + " System Statistics\n" + "-------------------------------------------------------------------------------------\n\n");
    System.out.print(Con.getStatistics(op).toString(false));
    System.out.println("\n\n-------------------------------------------------------------------------------------\n" + " Detailed Statistics\n" + "-------------------------------------------------------------------------------------\n\n");
    System.out.print(Con.getStatistics().toString(false));
    Con.saveStatistics(csv);
  }
 catch (  org.voltdb.client.NoConnectionsException x) {
    System.out.println("Exception: " + x);
    System.out.println("\n\n-------------------------------------------------------------------------------------\n");
    System.out.print("Lost connection - will try to reconnect ... \n");
    Con.close();
    timer.cancel();
    try {
      Con=ClientConnectionPool.getWithRetry(apph.stringValue("servers"),apph.intValue("port"));
    }
 catch (    Exception e) {
      System.out.println("Another exception, I guess " + e);
    }
  }
catch (  Exception x) {
    System.out.println("Exception: " + x);
    x.printStackTrace();
    System.exit(1);
  }
}
