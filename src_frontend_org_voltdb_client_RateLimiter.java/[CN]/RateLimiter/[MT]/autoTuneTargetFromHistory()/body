{
  double recentLatency=0, mediumTermLatency=0;
  if (m_prevInternalLatencyAvgs.size() > 0) {
    int i=0;
    for (    double value : m_prevInternalLatencyAvgs) {
      if (i < RECENT_HISTORY_SIZE)       recentLatency+=value;
      mediumTermLatency+=value;
      ++i;
    }
    recentLatency/=Math.min(m_prevInternalLatencyAvgs.size(),RECENT_HISTORY_SIZE);
    mediumTermLatency/=m_prevInternalLatencyAvgs.size();
  }
  if ((mediumTermLatency > m_latencyTarget) && (recentLatency > m_latencyTarget)) {
    m_maxOutstandingTxns-=Math.max(0.1 * m_maxOutstandingTxns,MINIMUM_MOVEMENT);
  }
 else   if ((mediumTermLatency < m_latencyTarget) && (recentLatency > m_latencyTarget)) {
    --m_maxOutstandingTxns;
  }
 else   if ((mediumTermLatency > m_latencyTarget) && (recentLatency < m_latencyTarget)) {
    m_maxOutstandingTxns++;
  }
 else {
    m_maxOutstandingTxns+=Math.max(0.1 * m_maxOutstandingTxns,MINIMUM_MOVEMENT);
  }
  if (m_maxOutstandingTxns <= 0) {
    m_maxOutstandingTxns=1;
  }
}
