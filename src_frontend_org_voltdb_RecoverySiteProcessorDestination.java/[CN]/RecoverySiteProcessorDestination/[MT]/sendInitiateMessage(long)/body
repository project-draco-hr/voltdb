{
  ServerSocketChannel ssc=ServerSocketChannel.open();
  ssc.configureBlocking(false);
  InetAddress addr=InetAddress.getByName(VoltDB.instance().getConfig().m_selectedRejoinInterface);
  InetSocketAddress sockAddr=new InetSocketAddress(addr,0);
  ssc.socket().bind(sockAddr);
  final int port=ssc.socket().getLocalPort();
  final byte address[]=ssc.socket().getInetAddress().getAddress();
  RecoveryMessage recoveryMessage=new RecoveryMessage(m_HSId,txnId,address,port);
  recoveryLog.trace("Sending recovery initiate request before txnid " + txnId + " from site "+ MiscUtils.hsIdToString(m_HSId)+ " to "+ MiscUtils.hsIdToString(m_sourceHSId));
  try {
    m_mailbox.send(m_sourceHSId,recoveryMessage);
  }
 catch (  MessagingException e) {
    throw new RuntimeException(e);
  }
  final long startTime=System.currentTimeMillis();
  while (System.currentTimeMillis() - startTime < 5000) {
    try {
      m_sc=ssc.accept();
      if (m_sc != null) {
        break;
      }
    }
 catch (    IOException e) {
      ssc.close();
    }
    Thread.yield();
  }
  if (m_sc == null) {
    VoltDB.crashLocalVoltDB("Timed out waiting for connection from source partition",false,null);
  }
  ssc.close();
  m_sc.configureBlocking(true);
  m_sc.socket().setTcpNoDelay(true);
  m_iodaemon=new IODaemon(m_sc);
  processNextInitiateResponse(txnId);
  return;
}
