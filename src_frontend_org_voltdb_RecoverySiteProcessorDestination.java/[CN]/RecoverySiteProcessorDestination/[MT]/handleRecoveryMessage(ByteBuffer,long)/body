{
  RecoveryMessageType type=RecoveryMessageType.values()[message.get(messageTypeOffset)];
  assert(type == RecoveryMessageType.ScanTuples || type == RecoveryMessageType.Complete);
  message.getLong(HSIdOffset);
  final int blockIndex=message.getInt(blockIndexOffset);
  final int tableId=message.getInt(tableIdOffset);
  RejoinDataAckMessage ackMessage=new RejoinDataAckMessage(blockIndex);
  if (type == RecoveryMessageType.ScanTuples) {
    if (m_toggleProfiling.tryAcquire()) {
      m_engine.toggleProfiler(1);
    }
    m_bytesReceived+=message.remaining();
    long startTime=System.currentTimeMillis();
    message.position(messageTypeOffset);
    m_engine.processRecoveryMessage(message,pointer);
    long endTime=System.currentTimeMillis();
    m_timeSpentHandlingData+=endTime - startTime;
    recoveryLog.trace("Received tuple data at site " + CoreUtils.hsIdToString(m_HSId) + " for table "+ m_tables.get(tableId).m_name);
  }
 else   if (type == RecoveryMessageType.Complete) {
    message.position(messageTypeOffset + 5);
    RecoveryTable table=m_tables.remove(tableId);
    recoveryLog.info("Received completion message at site " + CoreUtils.hsIdToString(m_HSId) + " for table "+ table.m_name);
    if (m_tables.isEmpty()) {
      m_mb.send(m_recoverySourceHSId,ackMessage);
      return;
    }
  }
 else {
    VoltDB.crashLocalVoltDB("Received an unexpect message of type " + type,false,null);
  }
  m_mb.send(m_recoverySourceHSId,ackMessage);
  recoveryLog.trace("Writing ack for block " + blockIndex + " from "+ CoreUtils.hsIdToString(m_HSId));
}
