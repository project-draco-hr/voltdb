{
  String mySchema="create table BLAH (" + "clm_integer integer not null, " + "clm_tinyint tinyint default 0, "+ "clm_smallint smallint default 0, "+ "clm_bigint bigint default 0, "+ "clm_string varchar(20) default null, "+ "clm_decimal decimal default null, "+ "clm_float float default null, "+ "clm_timestamp timestamp default null, "+ "PRIMARY KEY(clm_integer) "+ "); "+ "create table BLAH2 ("+ "clm_integer integer not null, "+ "clm_string varchar(20) default null, "+ "clm_decimal decimal default null, "+ "clm_float float default null, "+ "clm_timestamp timestamp default null, "+ "PRIMARY KEY(clm_integer) "+ "); ";
  TimestampType currentTime=new TimestampType();
  Object[][] myData1={{1,1,1,11111111,"first",1.10,1.11,currentTime},{2,1,1,11111111,"first",1.10,1.11,currentTime},{3,1,1,11111111,"first",1.10,1.11,currentTime},{4,1,1,11111111,"first",1.10,1.11,currentTime},{5,1,1,11111111,"first",1.10,1.11,currentTime},{6,1,1,11111111,"first",1.10,1.11,currentTime},{7,1,1,11111111,"first",1.10,1.11,currentTime},{8,1,1,11111111,"first",1.10,1.11,currentTime},{9,1,1,11111111,"first",1.10,1.11,currentTime},{10,1,1,11111111,"first",1.10,1.11,currentTime},{11,1,1,11111111,"first",1.10,1.11,currentTime},{12,1,1,11111111,"first",1.10,1.11,currentTime},{13,1,1,11111111,"first",1.10,1.11,currentTime},{14,1,1,11111111,"first",1.10,1.11,currentTime},{15,1,1,11111111,"first",1.10,1.11,currentTime},{16,1,1,11111111,"first",1.10,1.11,currentTime},{17,1,1,11111111,"first",1.10,1.11,currentTime}};
  int myBatchSize1=200;
  Integer[] failures1={};
  ArrayList<Integer> expectedFailures1=new ArrayList<Integer>(Arrays.asList(failures1));
  Object[][] myData2={{1,"first",1.10,1.11,currentTime},{2,"first",1.10,1.11,currentTime},{3,"first",1.10,1.11,currentTime},{4,"first",1.10,1.11,currentTime},{5,"first",1.10,1.11,currentTime},{6,"first",1.10,1.11,currentTime},{7,"first",1.10,1.11,currentTime},{8,"first",1.10,1.11,currentTime},{9,"first",1.10,1.11,currentTime},{10,"first",1.10,1.11,currentTime},{11,"first",1.10,1.11,currentTime},{12,"first",1.10,1.11,currentTime},{13,"first",1.10,1.11,currentTime},{14,"first",1.10,1.11,currentTime},{15,"first",1.10,1.11,currentTime}};
  int myBatchSize2=200;
  Integer[] failures2={};
  ArrayList<Integer> expectedFailures2=new ArrayList<Integer>(Arrays.asList(failures2));
  test_multiplexing(mySchema,true,true,true,"BLAH",myData1,myBatchSize1,expectedFailures1,false,"BLAH2",myData2,myBatchSize2,expectedFailures2,false);
}
