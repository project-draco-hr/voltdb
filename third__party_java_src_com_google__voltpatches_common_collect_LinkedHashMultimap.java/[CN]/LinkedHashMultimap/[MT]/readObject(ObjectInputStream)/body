{
  stream.defaultReadObject();
  multimapHeaderEntry=new ValueEntry<K,V>(null,null,0,null);
  succeedsInMultimap(multimapHeaderEntry,multimapHeaderEntry);
  valueSetCapacity=stream.readInt();
  int distinctKeys=stream.readInt();
  Map<K,Collection<V>> map=new LinkedHashMap<K,Collection<V>>(Maps.capacity(distinctKeys));
  for (int i=0; i < distinctKeys; i++) {
    @SuppressWarnings("unchecked") K key=(K)stream.readObject();
    map.put(key,createCollection(key));
  }
  int entries=stream.readInt();
  for (int i=0; i < entries; i++) {
    @SuppressWarnings("unchecked") K key=(K)stream.readObject();
    @SuppressWarnings("unchecked") V value=(V)stream.readObject();
    map.get(key).add(value);
  }
  setMap(map);
}
