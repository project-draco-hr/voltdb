{
  m_config.deleteDirectory(new File("/tmp/snapshotdir1"));
  m_config.deleteDirectory(new File("/tmp/snapshotdir2"));
  try {
    m_config.createDirectory(new File("/tmp/snapshotdir1"));
    m_config.createDirectory(new File("/tmp/snapshotdir2"));
    Client client=getClient();
    String newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-enable_snapshot.jar");
    String deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-enable_snapshot.xml");
    VoltTable[] results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
    assertTrue(results.length == 1);
    Thread.sleep(5000);
    for (    File f : m_config.listFiles(new File("/tmp/snapshotdir1"))) {
      assertTrue(f.getName().startsWith("foo1"));
    }
    newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-change_snapshot.jar");
    deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-change_snapshot.xml");
    results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
    assertTrue(results.length == 1);
    Thread.sleep(5000);
    for (    File f : m_config.listFiles(new File("/tmp/snapshotdir2"))) {
      assertTrue(f.getName().startsWith("foo2"));
    }
    newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-change_snapshot_dir_not_exist.jar");
    deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-change_snapshot_dir_not_exist.xml");
    results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
    assertTrue(results.length == 1);
    System.out.println("Waiting for failed snapshots");
    Thread.sleep(5000);
    newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.jar");
    deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.xml");
    results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
    assertTrue(results.length == 1);
    Thread.sleep(5000);
    for (    File f : m_config.listFiles(new File("/tmp/snapshotdir2"))) {
      assertTrue(f.getName().startsWith("foo2"));
    }
    newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.jar");
    deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.xml");
    results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
    assertTrue(results.length == 1);
    for (    File f : m_config.listFiles(new File("/tmp/snapshotdir2"))) {
      f.delete();
    }
    Thread.sleep(5000);
    assertEquals(0,m_config.listFiles(new File("/tmp/snapshotdir2")).size());
    newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-enable_snapshot.jar");
    deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-enable_snapshot.xml");
    results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
    assertTrue(results.length == 1);
    Thread.sleep(5000);
    for (    File f : m_config.listFiles(new File("/tmp/snapshotdir1"))) {
      assertTrue(f.getName().startsWith("foo1"));
    }
    newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.jar");
    deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.xml");
    results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
    assertTrue(results.length == 1);
    Thread.sleep(1000);
    m_config.deleteDirectory(new File("/tmp/snapshotdir1"));
    m_config.deleteDirectory(new File("/tmp/snapshotdir2"));
    m_config.createDirectory(new File("/tmp/snapshotdir1"));
    m_config.createDirectory(new File("/tmp/snapshotdir2"));
    Thread.sleep(5000);
    assertTrue(m_config.listFiles(new File("/tmp/snapshotdir1")).isEmpty());
    assertTrue(m_config.listFiles(new File("/tmp/snapshotdir2")).isEmpty());
  }
  finally {
    deleteDirectory(new File("/tmp/snapshotdir1"));
    deleteDirectory(new File("/tmp/snapshotdir2"));
  }
}
