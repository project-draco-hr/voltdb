{
  Client client=getClient();
  loadSomeData(client,0,10);
  client.drain();
  assertTrue(callbackSuccess);
  try {
    client.callProcedure("@AdHoc","insert into O1 values (1, 1, 'foo', 'foobar');");
    fail();
  }
 catch (  ProcCallException e) {
  }
  try {
    client.callProcedure("InsertO1",new Integer(100),new Integer(200),"foo","bar");
    fail();
  }
 catch (  ProcCallException e) {
  }
  String newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-addtables.jar");
  String deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-addtables.xml");
  VoltTable[] results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
  assertTrue(results.length == 1);
  ClientResponse callProcedure=client.callProcedure("@AdHoc","insert into O1 values (1, 1, 'foo', 'foobar');");
  assertTrue(callProcedure.getResults().length == 1);
  assertTrue(callProcedure.getStatus() == ClientResponse.SUCCESS);
  callProcedure=client.callProcedure("@AdHoc","insert into O2 values (1, 1, 'foo', 'foobar');");
  assertTrue(callProcedure.getResults().length == 1);
  assertTrue(callProcedure.getStatus() == ClientResponse.SUCCESS);
  callProcedure=client.callProcedure("@AdHoc","select * from O1");
  VoltTable result=callProcedure.getResults()[0];
  result.advanceRow();
  assertTrue(result.get(2,VoltType.STRING).equals("foo"));
  loadSomeData(client,20,10);
  client.drain();
  assertTrue(callbackSuccess);
  callProcedure=client.callProcedure("InsertO1",new Integer(100),new Integer(200),"foo","bar");
  assertTrue(callProcedure.getResults().length == 1);
  assertTrue(callProcedure.getStatus() == ClientResponse.SUCCESS);
  newCatalogURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.jar");
  deploymentURL=Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.xml");
  results=client.callProcedure("@UpdateApplicationCatalog",newCatalogURL,deploymentURL).getResults();
  assertTrue(results.length == 1);
  try {
    client.callProcedure("@AdHoc","insert into O1 values (1, 1, 'foo', 'foobar');");
    fail();
  }
 catch (  ProcCallException e) {
  }
  try {
    client.callProcedure("InsertO1",new Integer(100),new Integer(200),"foo","bar");
    fail();
  }
 catch (  ProcCallException e) {
  }
  loadSomeData(client,30,10);
  client.drain();
  assertTrue(callbackSuccess);
}
