{
  for (int i=0; i <= totalTransactions; ++i) {
    boolean rollback=rand.nextBoolean();
    boolean rollback_all=false;
    boolean readOnly=rand.nextBoolean();
    long txnid=i + firstTxnId;
    long safe_txnid=txnid;
    int initiator=selectRandomInitiator(rand);
    int partition=i % PARTITION_COUNT;
    int wheelOfDestiny=rand.nextInt(100);
    if (i == totalTransactions) {
      System.out.println("Queueing final heartbeat.");
      int offset=0;
      for (      int inid : getInitiatorIds()) {
        createHeartBeat(txnid + offset,txnid + offset,inid);
        ++offset;
      }
    }
 else     if (wheelOfDestiny < 50) {
      createSPInitiation(readOnly,txnid,safe_txnid,initiator,partition);
    }
 else     if (wheelOfDestiny < 70) {
      int numberOfBatches=rand.nextInt(4) + 1;
      List<Integer> participants=new ArrayList<Integer>();
      int coordinator=selectCoordinatorAndParticipants(rand,partition,initiator,participants);
      createMPInitiation(rollback,rollback_all,readOnly,numberOfBatches,txnid,safe_txnid,initiator,partition,coordinator,participants);
    }
 else {
      createHeartBeat(txnid,safe_txnid,initiator);
    }
  }
}
