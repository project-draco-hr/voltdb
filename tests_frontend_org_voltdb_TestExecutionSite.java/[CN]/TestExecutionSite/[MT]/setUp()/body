{
  super.setUp();
  Procedure proc=null;
  m_voltdb=new MockVoltDB();
  m_voltdb.setFaultDistributor(new FaultDistributor());
  m_voltdb.addHost(host1);
  m_voltdb.addHost(host2);
  m_voltdb.addSite(initiator1,host1,0,false);
  m_voltdb.addSite(initiator2,host2,0,false);
  m_voltdb.addPartition(0);
  m_voltdb.addSite(site1,host1,0,true);
  m_voltdb.addPartition(1);
  m_voltdb.addSite(site2,host2,1,true);
  proc=m_voltdb.addProcedureForTest(MockSPVoltProcedure.class.getName());
  proc.setReadonly(false);
  proc.setSinglepartition(true);
  proc=m_voltdb.addProcedureForTest(MockROSPVoltProcedure.class.getName());
  proc.setReadonly(true);
  proc.setSinglepartition(true);
  proc=m_voltdb.addProcedureForTest(MockMPVoltProcedure.class.getName());
  proc.setReadonly(false);
  proc.setSinglepartition(false);
  VoltDB.replaceVoltDBInstanceForTest(m_voltdb);
  m_mboxes[site1]=new MockMailbox(new LinkedBlockingQueue<VoltMessage>());
  m_mboxes[site2]=new MockMailbox(new LinkedBlockingQueue<VoltMessage>());
  m_sites[site1]=new ExecutionSite(m_voltdb,m_mboxes[site1],site1);
  m_sites[site2]=new ExecutionSite(m_voltdb,m_mboxes[site2],site2);
  MockMailbox.registerMailbox(site1,m_mboxes[site1]);
  MockMailbox.registerMailbox(site2,m_mboxes[site2]);
}
