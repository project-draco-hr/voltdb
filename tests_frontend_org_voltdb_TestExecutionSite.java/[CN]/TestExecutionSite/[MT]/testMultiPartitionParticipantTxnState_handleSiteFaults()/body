{
  StoredProcedureInvocation spi=new StoredProcedureInvocation();
  spi.setClientHandle(25);
  spi.setProcName("johnisgreat");
  spi.setParams("commit",57,"gooniestoo");
  InitiateTaskMessage mn=new InitiateTaskMessage(-1,0,-1,false,false,spi,Long.MIN_VALUE);
  MultiPartitionParticipantTxnState ts=new MultiPartitionParticipantTxnState(m_mboxes[0],m_sites[0],mn);
  HashSet<Integer> failedSites=new HashSet<Integer>();
  failedSites.add(1);
  failedSites.add(2);
  failedSites.add(3);
  failedSites.add(5);
  ts.handleSiteFaults(failedSites);
  int[] nonCoordinatingSites=ts.getNonCoordinatingSites();
  assertEquals(4,nonCoordinatingSites.length);
  assertEquals(4,nonCoordinatingSites[0]);
  ts=new MultiPartitionParticipantTxnState(m_mboxes[0],m_sites[0],mn);
  failedSites.clear();
  failedSites.add(1);
  ts.handleSiteFaults(failedSites);
  nonCoordinatingSites=ts.getNonCoordinatingSites();
  assertEquals(7,nonCoordinatingSites.length);
  assertEquals(2,nonCoordinatingSites[0]);
  assertEquals(3,nonCoordinatingSites[1]);
  assertEquals(4,nonCoordinatingSites[2]);
  assertEquals(5,nonCoordinatingSites[3]);
  assertEquals(6,nonCoordinatingSites[4]);
  assertEquals(7,nonCoordinatingSites[5]);
  assertEquals(8,nonCoordinatingSites[6]);
  ts=new MultiPartitionParticipantTxnState(m_mboxes[0],m_sites[0],mn);
  failedSites.clear();
  failedSites.add(9);
  failedSites.add(10);
  ts.handleSiteFaults(failedSites);
  nonCoordinatingSites=ts.getNonCoordinatingSites();
  assertEquals(8,nonCoordinatingSites.length);
  for (int i=0; i < 8; i++) {
    assertEquals(i + 1,nonCoordinatingSites[i]);
  }
}
