{
  final boolean readOnly=false, singlePartition=false;
  Thread es1;
  final StoredProcedureInvocation tx1_spi=new StoredProcedureInvocation();
  tx1_spi.setProcName("org.voltdb.TestExecutionSite$MockMPVoltProcedure");
  tx1_spi.setParams(new Integer(0));
  final InitiateTaskMessage tx1_mn_1=new InitiateTaskMessage(initiator1,site1,1000,readOnly,singlePartition,tx1_spi,Long.MAX_VALUE);
  tx1_mn_1.setNonCoordinatorSites(new int[]{site2});
  final MultiPartitionParticipantTxnState tx1_1=new MultiPartitionParticipantTxnState(m_mboxes[site1],m_sites[site1],tx1_mn_1);
  int callcheck=MockMPVoltProcedure.m_called;
  assertFalse(tx1_1.isDone());
  m_sites[site1].m_transactionsById.put(tx1_1.txnId,tx1_1);
  es1=new Thread(new Runnable(){
    public void run(){
      m_sites[site1].recursableRun(tx1_1);
    }
  }
);
  es1.start();
  m_voltdb.killSite(site2);
  m_mboxes[site1].deliver(new ExecutionSite.ExecutionSiteNodeFailureMessage(host2));
  es1.join();
  assertTrue(tx1_1.isDone());
  assertFalse(tx1_1.didRollback());
  assertEquals(null,m_sites[site1].m_transactionsById.get(tx1_1.txnId));
  assertEquals((++callcheck),MockMPVoltProcedure.m_called);
}
