{
  assert(destinationCount > 0);
  assert(destinationCount <= destinations.length);
  assert(destinationCount <= VoltMessage.MAX_DESTINATIONS_PER_HOST);
  if (destinationCount == 0) {
    return;
  }
  m_connection.writeStream().enqueue(new DeferredSerialization(){
    @Override public final BBContainer serialize(    final DBBPool pool) throws IOException {
      final BBContainer outContainer=message.serialize(pool);
      ByteBuffer out=outContainer.b;
      int len=out.limit() - VoltMessage.HEADER_SIZE;
      int headerlen=4 + 4 + 4 * destinationCount;
      out.position(VoltMessage.HEADER_SIZE - headerlen - 4);
      out.mark();
      out.putInt(headerlen + len);
      out.putInt(mailboxId);
      out.putInt(destinationCount);
      for (int i=0; i < destinationCount; i++) {
        out.putInt(destinations[i]);
      }
      out.reset();
      return outContainer;
    }
    @Override public final void cancel(){
      message.cancel();
    }
  }
);
}
