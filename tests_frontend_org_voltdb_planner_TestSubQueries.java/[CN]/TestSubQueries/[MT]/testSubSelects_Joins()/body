{
  AbstractPlanNode pn;
  List<AbstractPlanNode> planNodes;
  AbstractPlanNode nlpn;
  planNodes=compileToFragments("select A, C FROM (SELECT A FROM R1) T1, (SELECT C FROM P1) T2 WHERE T1.A = T2.C ");
  assertTrue(planNodes.size() == 2);
  pn=planNodes.get(0);
  assertTrue(pn instanceof SendPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  pn=planNodes.get(1);
  assertTrue(pn instanceof SendPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  pn=nlpn.getChild(0);
  checkSimpleSubSelects(pn,"T1","A");
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"R1","A");
  pn=nlpn.getChild(1);
  checkSimpleSubSelects(pn,"T2","C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"P1","C");
  planNodes=compileToFragments("SELECT A, C FROM R1 LEFT JOIN (SELECT A, C FROM R2) T1 ON T1.C = R1.C ");
  assertTrue(planNodes.size() == 1);
  pn=planNodes.get(0).getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(JoinType.LEFT,((NestLoopPlanNode)nlpn).getJoinType());
  pn=nlpn.getChild(0);
  checkSimpleSubSelects(pn,"R1","A","C");
  pn=nlpn.getChild(1);
  checkSimpleSubSelects(pn,"T1","C");
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"R2","A","C");
  planNodes=compileToFragments("SELECT A, C FROM R1 LEFT JOIN (SELECT A, C FROM P1) T1 ON T1.C = R1.C ");
  assertTrue(planNodes.size() == 2);
  pn=planNodes.get(0).getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  nlpn=planNodes.get(1).getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(JoinType.LEFT,((NestLoopPlanNode)nlpn).getJoinType());
  pn=nlpn.getChild(0);
  checkSimpleSubSelects(pn,"R1","A","C");
  pn=nlpn.getChild(1);
  checkSimpleSubSelects(pn,"T1","C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"P1","A","C");
}
