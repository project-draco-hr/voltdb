{
  AbstractPlanNode pn;
  List<AbstractPlanNode> lpn=compileToFragments("select A, C FROM (SELECT A, C FROM P1) T1 ");
  assertTrue(lpn.size() == 2);
  pn=lpn.get(0).getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  pn=lpn.get(1).getChild(0);
  checkSimpleSubSelects(pn,"T1","A","C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"P1","A","C");
  lpn=compileToFragments("select A, C FROM (SELECT A, C FROM P1 WHERE A = 3) T1 ");
  assertTrue(lpn.size() == 2);
  pn=lpn.get(0).getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  pn=lpn.get(1).getChild(0);
  checkSimpleSubSelects(pn,"T1","A","C");
  pn=pn.getChild(0);
  checkIndexedSubSelects(pn,"P1","SYS_IDX_P1_PK_TREE","A","C");
  lpn=compileToFragments("select A FROM (SELECT A, C FROM P1 WHERE A > 3) T1 ");
  assertTrue(lpn.size() == 2);
  pn=lpn.get(0).getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  pn=lpn.get(1).getChild(0);
  checkSimpleSubSelects(pn,"T1","A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  checkIndexedSubSelects(pn,"P1","SYS_IDX_P1_PK_TREE","A","C");
}
