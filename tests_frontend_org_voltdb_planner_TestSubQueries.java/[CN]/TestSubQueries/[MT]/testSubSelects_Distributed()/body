{
  AbstractPlanNode pn;
  pn=compileForSinglePartition("select A FROM (SELECT A, C FROM P1 WHERE A > 3) T1");
  System.out.println(pn.toExplainPlanString());
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"T1","A");
  pn=pn.getChild(0);
  checkIndexedSubSelects(pn,"P1","SYS_IDX_P1_PK_TREE","A","C");
  List<AbstractPlanNode> lpn;
  lpn=compileToFragments("select A, C FROM (SELECT A, C FROM P1) T1 ");
  assertTrue(lpn.size() == 2);
  pn=lpn.get(0).getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  pn=lpn.get(1).getChild(0);
  checkSeqScanSubSelects(pn,"T1","A","C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"P1","A","C");
  lpn=compileToFragments("select A FROM (SELECT A, C FROM P1 WHERE A > 3) T1 ");
  assertTrue(lpn.size() == 2);
  pn=lpn.get(0).getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  pn=lpn.get(1).getChild(0);
  checkSeqScanSubSelects(pn,"T1","A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=pn.getChild(0);
  checkIndexedSubSelects(pn,"P1","SYS_IDX_P1_PK_TREE","A","C");
  lpn=compileToFragments("select A FROM (SELECT A FROM P1 WHERE A = 3) T1 ");
  assertTrue(lpn.size() == 1);
  pn=lpn.get(0);
  assertTrue(pn instanceof SendPlanNode);
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"T1","A");
  pn=pn.getChild(0);
  checkIndexedSubSelects(pn,"P1","SYS_IDX_P1_PK_TREE","A");
  assertEquals(((IndexScanPlanNode)pn).getInlinePlanNodes().size(),1);
  assertNotNull(((IndexScanPlanNode)pn).getInlinePlanNode(PlanNodeType.PROJECTION));
  lpn=compileToFragments("select A, C FROM (SELECT A, C FROM P1 WHERE A = 3) T1 ");
  assertTrue(lpn.size() == 1);
  pn=lpn.get(0);
  assertTrue(pn instanceof SendPlanNode);
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"T1","A","C");
  pn=pn.getChild(0);
  checkIndexedSubSelects(pn,"P1","SYS_IDX_P1_PK_TREE","A","C");
  assertEquals(((IndexScanPlanNode)pn).getInlinePlanNodes().size(),1);
  assertNotNull(((IndexScanPlanNode)pn).getInlinePlanNode(PlanNodeType.PROJECTION));
}
