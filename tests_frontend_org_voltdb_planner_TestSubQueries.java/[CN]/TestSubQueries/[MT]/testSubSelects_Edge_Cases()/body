{
  AbstractPlanNode pn;
  pn=compile("select T1.A FROM (SELECT A FROM R1) T1, (SELECT A FROM R2)T2 ");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  checkOutputSchema("T1",pn,"A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof NestLoopPlanNode);
  checkOutputSchema(pn,"A","A");
  checkSeqScanSubSelects(pn.getChild(0),"T1","A");
  checkSeqScanSubSelects(pn.getChild(0).getChild(0),"R1","A");
  checkSeqScanSubSelects(pn.getChild(1),"T2","A");
  checkSeqScanSubSelects(pn.getChild(1).getChild(0),"R2","A");
  pn=compile("select T2.A FROM (SELECT A FROM R1) T1, (SELECT A FROM R2)T2 ");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  checkOutputSchema("T2",pn,"A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof NestLoopPlanNode);
  checkOutputSchema(pn,"A","A");
  checkSeqScanSubSelects(pn.getChild(0),"T1","A");
  checkSeqScanSubSelects(pn.getChild(0).getChild(0),"R1","A");
  checkSeqScanSubSelects(pn.getChild(1),"T2","A");
  checkSeqScanSubSelects(pn.getChild(1).getChild(0),"R2","A");
  pn=compile("select A FROM (SELECT A FROM R1) T1, (SELECT A FROM R2) T2 ");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  checkOutputSchema("T1",pn,"A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof NestLoopPlanNode);
  checkOutputSchema(pn,"A","A");
  checkSeqScanSubSelects(pn.getChild(0),"T1","A");
  checkSeqScanSubSelects(pn.getChild(0).getChild(0),"R1","A");
  checkSeqScanSubSelects(pn.getChild(1),"T2","A");
  checkSeqScanSubSelects(pn.getChild(1).getChild(0),"R2","A");
  pn=compile("SELECT 1, * FROM (select * from R1) T1, R2 T2 WHERE T2.A < 3737632230784348203");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=compile("SELECT 2, * FROM (select * from R1) T1, R2 T2 WHERE CASE WHEN T2.A > 44 THEN T2.C END < 44 + 10");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  pn=compile("SELECT -8, T2.C FROM (select * from R1) T1, R1 T2 WHERE (T2.C + 5 ) > 44");
  pn=pn.getChild(0);
  System.out.println(pn.toExplainPlanString());
  assertTrue(pn instanceof ProjectionPlanNode);
}
