{
  AbstractPlanNode pn;
  pn=compile("select T1.A FROM (SELECT A FROM R1) T1, (SELECT A FROM R2)T2 ");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  checkOutputSchema("T1",pn,"A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof NestLoopPlanNode);
  checkOutputSchema(pn,"A","A");
  checkSimpleSubSelects(pn.getChild(0),"T1","A");
  checkSimpleSubSelects(pn.getChild(0).getChild(0),"R1","A");
  checkSimpleSubSelects(pn.getChild(1),"T2","A");
  checkSimpleSubSelects(pn.getChild(1).getChild(0),"R2","A");
  pn=compile("select T2.A FROM (SELECT A FROM R1) T1, (SELECT A FROM R2)T2 ");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  checkOutputSchema("T2",pn,"A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof NestLoopPlanNode);
  checkOutputSchema(pn,"A","A");
  checkSimpleSubSelects(pn.getChild(0),"T1","A");
  checkSimpleSubSelects(pn.getChild(0).getChild(0),"R1","A");
  checkSimpleSubSelects(pn.getChild(1),"T2","A");
  checkSimpleSubSelects(pn.getChild(1).getChild(0),"R2","A");
  pn=compile("select A FROM (SELECT A FROM R1) T1, (SELECT A FROM R2)T2 ");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  checkOutputSchema("T1",pn,"A");
  pn=pn.getChild(0);
  assertTrue(pn instanceof NestLoopPlanNode);
  checkOutputSchema(pn,"A","A");
  checkSimpleSubSelects(pn.getChild(0),"T1","A");
  checkSimpleSubSelects(pn.getChild(0).getChild(0),"R1","A");
  checkSimpleSubSelects(pn.getChild(1),"T2","A");
  checkSimpleSubSelects(pn.getChild(1).getChild(0),"R2","A");
}
