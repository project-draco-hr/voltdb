{
  AbstractPlanNode pn;
  List<AbstractPlanNode> planNodes;
  AbstractPlanNode nlpn;
  planNodes=compileToFragments("SELECT -8, T1.NUM FROM R4 T0, " + "(select max(RATIO) RATIO, sum(NUM) NUM, DESC from P4 group by DESC) T1 " + "WHERE (T1.NUM + 5 ) > 44");
  assertEquals(2,planNodes.size());
  pn=planNodes.get(0);
  assertTrue(pn instanceof SendPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(JoinType.INNER,((NestLoopPlanNode)nlpn).getJoinType());
  pn=nlpn.getChild(0);
  checkIndexedSubSelects(pn,"R4",primaryKeyIndexName("R4"));
  pn=nlpn.getChild(1);
  checkSeqScanSubSelects(pn,"T1","NUM");
  pn=pn.getChild(0);
  assertTrue(pn instanceof AggregatePlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ReceivePlanNode);
  pn=planNodes.get(1);
  assertTrue(pn instanceof SendPlanNode);
  pn=pn.getChild(0);
  assertTrue(pn instanceof AggregatePlanNode);
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"P4");
}
