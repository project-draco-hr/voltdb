{
  AbstractPlanNode pn;
  pn=compile("select A, C FROM (SELECT A FROM R1) T1, (SELECT C FROM R2) T2 WHERE A = C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  AbstractPlanNode nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(2,nlpn.getChildCount());
  pn=nlpn.getChild(0);
  checkSimpleSubSelects(pn,"T1",null,"A");
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"R1",null,"A");
  pn=nlpn.getChild(1);
  checkSimpleSubSelects(pn,"T2",null,"C");
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"R2",null,"C");
  pn=compile("select A, C FROM (SELECT A FROM R1), (SELECT C FROM R2) WHERE A = C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(2,nlpn.getChildCount());
  pn=nlpn.getChild(0);
  checkSimpleSubSelects(pn,SYSTEM_SUBQUERY,null,"A");
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"R1",null,"A");
  pn=nlpn.getChild(1);
  checkSimpleSubSelects(pn,SYSTEM_SUBQUERY,null,"C");
  pn=pn.getChild(0);
  checkSimpleSubSelects(pn,"R2",null,"C");
}
