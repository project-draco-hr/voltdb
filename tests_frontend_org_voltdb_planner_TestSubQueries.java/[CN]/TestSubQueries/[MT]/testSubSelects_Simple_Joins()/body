{
  AbstractPlanNode pn;
  AbstractPlanNode nlpn;
  pn=compile("select A, C FROM (SELECT A FROM R1) T1, (SELECT C FROM R2) T2 WHERE T1.A = T2.C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(2,nlpn.getChildCount());
  pn=nlpn.getChild(0);
  checkSeqScanSubSelects(pn,"T1","A");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R1","A");
  pn=nlpn.getChild(1);
  checkSeqScanSubSelects(pn,"T2","C");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R2","C");
  pn=compile("select A, C FROM (SELECT A FROM R1) T1, (SELECT C FROM R2) T2 WHERE A = C");
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(2,nlpn.getChildCount());
  pn=nlpn.getChild(0);
  checkSeqScanSubSelects(pn,"T1","A");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R1","A");
  pn=nlpn.getChild(1);
  checkSeqScanSubSelects(pn,"T2","C");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R2","C");
}
