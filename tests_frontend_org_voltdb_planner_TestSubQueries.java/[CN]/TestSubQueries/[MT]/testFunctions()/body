{
  AbstractPlanNode pn;
  String tbName="T1";
  pn=compile("select ABS(C) FROM (SELECT A, C FROM R1) T1");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,tbName,"C1");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R1","A","C");
  pn=compile("select A1, ABS(C) FROM (SELECT A A1, C FROM R1) T1");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,tbName,"A1","C2");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R1","A","C");
  pn=compile("select A1 + 3, ABS(C) FROM (SELECT A A1, C FROM R1) T1");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,tbName,"C1","C2");
  assertEquals(((SeqScanPlanNode)pn).getInlinePlanNodes().size(),1);
  assertNotNull(((SeqScanPlanNode)pn).getInlinePlanNode(PlanNodeType.PROJECTION));
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R1","A","C");
  pn=compile("select A1 + 3, ABS(C) FROM (SELECT A A1, C FROM R1) T1 WHERE ABS(A1) > 3");
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,tbName,"C1","C2");
  assertEquals(((SeqScanPlanNode)pn).getInlinePlanNodes().size(),1);
  assertNotNull(((SeqScanPlanNode)pn).getInlinePlanNode(PlanNodeType.PROJECTION));
  pn=pn.getChild(0);
  checkSeqScanSubSelects(pn,"R1","A","C");
}
