{
  FileInputStream fstream=null;
  DataInputStream in=null;
  String strLine=null;
  long totalLines=0;
  try {
    for (long workspaceId=1; workspaceId < 6; workspaceId++) {
      System.out.println(String.format("Loading workspaceId %d",workspaceId));
      long lines_per_workspaceId=lines;
      long countoflines=0;
      while (countoflines < lines_per_workspaceId) {
        ++countoflines;
        totalLines++;
        strLine=String.format("%d|%d|N|aaaa|%d|bbbb|cccc|dddd|eeee|ffff|Y|gggg|hhhh|jjjj|kkkk|llll|mmmm|US|01012000|nnnn|01022000|oooo|pppp|Y|qqqq|rrrr|ssss|N|tttt|2222|uuuu|01032000|vvvv|01042000|100.01|xxxx|1|2|3|4|5|6|Y|5555|01052000|yyyy|zzzz|AAAA|BBBB|CCCC|7777",workspaceId,countoflines,countoflines);
        Object[] parameterargs=getEachLine(strLine);
        try {
          myApp.callProcedure(new MyAsyncCallback(),"InsertT",parameterargs);
        }
 catch (        NoConnectionsException e) {
          e.printStackTrace();
        }
        if ((countoflines % 50000) == 0) {
          System.out.printf("On Line %,d\n",countoflines);
        }
      }
    }
  }
 catch (  Exception exp) {
    exp.printStackTrace();
  }
 finally {
    System.out.println("This is the last line" + strLine);
    System.out.println("Count of lines " + totalLines);
    if (in != null) {
      in.close();
    }
    if (fstream != null) {
      fstream.close();
    }
  }
}
