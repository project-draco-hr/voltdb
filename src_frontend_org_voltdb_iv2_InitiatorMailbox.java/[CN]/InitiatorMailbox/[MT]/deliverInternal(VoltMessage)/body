{
  assert(lockingVows());
  logRxMessage(message);
  boolean canDeliver=m_scheduler.sequenceForReplay(message);
  if (message instanceof DumpMessage) {
    hostLog.warn("Received DumpMessage at " + CoreUtils.hsIdToString(m_hsId));
    m_scheduler.dump();
  }
  if (message instanceof Iv2RepairLogRequestMessage) {
    handleLogRequest(message);
    return;
  }
 else   if (message instanceof Iv2RepairLogResponseMessage) {
    m_algo.deliver(message);
    return;
  }
 else   if (message instanceof RejoinMessage) {
    m_joinProducer.deliver((RejoinMessage)message);
    return;
  }
  m_repairLog.deliver(message);
  if (canDeliver) {
    m_scheduler.deliver(message);
  }
}
