{
  ClientStats stats=fullStatsContext.fetchAndResetBaseline().getStats();
  double execTimeInMicroSec=0.0;
  System.out.print(HORIZONTAL_RULE);
  System.out.println(" Results");
  System.out.println(HORIZONTAL_RULE);
  System.out.printf("Average throughput: %,9d txns/sec\n",stats.getTxnThroughput());
  VoltTable procStats=client.callProcedure("@Statistics","procedureprofile",0).getResults()[0];
  while (procStats.advanceRow()) {
    String procName=procStats.getString("PROCEDURE");
    if (procName.equals(procedure)) {
      execTimeInMicroSec=(procStats.getLong("AVG") / 1000.0);
      System.out.printf("Average execution time: %,9f usec\n",execTimeInMicroSec);
      break;
    }
  }
  fw.append(String.format("%s,%d,-1,%d,0,0,0,%.2f,0,0,0,0,0,0\n",suffix,stats.getStartTimestamp(),stats.getTxnThroughput(),execTimeInMicroSec));
  String[] procArray=procedure.split("_");
  if (procArray[procArray.length - 1].equals("insert")) {
    DiffRetVals ret=diffWriter(insertThroughput,(double)stats.getTxnThroughput(),insertExecute,execTimeInMicroSec,"Insert Diff",stats,fw);
    insertThroughput=ret.throughput;
    insertExecute=ret.execute;
  }
 else   if (procArray[procArray.length - 1].equals("update") && procArray[1].equals("group")) {
    DiffRetVals ret=diffWriter(updateGroupThroughput,(double)stats.getTxnThroughput(),updateGroupExecute,execTimeInMicroSec,"Update Grp Diff",stats,fw);
    updateGroupThroughput=ret.throughput;
    updateGroupExecute=ret.execute;
  }
 else   if (procArray[procArray.length - 1].equals("update") && procArray[1].equals("value")) {
    DiffRetVals ret=diffWriter(updateValueThroughput,(double)stats.getTxnThroughput(),updateValueExecute,execTimeInMicroSec,"Update Sum Diff",stats,fw);
    updateValueThroughput=ret.throughput;
    updateValueExecute=ret.execute;
  }
 else {
    DiffRetVals ret=diffWriter(deleteThroughput,(double)stats.getTxnThroughput(),deleteExecute,execTimeInMicroSec,"Delete Diff",stats,fw);
    deleteThroughput=ret.throughput;
    deleteExecute=ret.execute;
  }
}
