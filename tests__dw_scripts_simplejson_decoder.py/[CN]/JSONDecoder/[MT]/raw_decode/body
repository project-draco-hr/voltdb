def raw_decode(self, s, **kw):
    '\n        Decode a JSON document from ``s`` (a ``str`` or ``unicode`` beginning\n        with a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n\n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n        '
    kw.setdefault('context', self)
    try:
        (obj, end) = self._scanner.iterscan(s, **kw).next()
    except StopIteration:
        raise ValueError('No JSON object could be decoded')
    return (obj, end)
