def prepare_params(self, attribute_groups):
    self.__type = attribute_groups[BaseGenerator.TYPE_PATTERN_GROUP]
    if (not self.__type):
        print 'Generator parse error -- invalid type'
        assert self.__type
    min = attribute_groups[BaseGenerator.MIN_VALUE_PATTERN_GROUP]
    max = attribute_groups[BaseGenerator.MAX_VALUE_PATTERN_GROUP]
    self.__value_generator = ConstantGenerator.TYPES[self.__type]()
    if ((min != None) and (max != None)):
        self.__value_generator.set_min_max(int(min), int(max))
    nullpct = attribute_groups[BaseGenerator.NULL_PCT_PATTERN_GROUP]
    if nullpct:
        self.__value_generator.set_nullpct(int(nullpct))
