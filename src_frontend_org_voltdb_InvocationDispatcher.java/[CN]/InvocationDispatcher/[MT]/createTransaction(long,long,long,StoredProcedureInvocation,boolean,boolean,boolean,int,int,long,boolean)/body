{
  assert(!isSinglePartition || (partition >= 0));
  final ClientInterfaceHandleManager cihm=m_cihm.get(connectionId);
  Long initiatorHSId=null;
  boolean isShortCircuitRead=false;
  if (isSinglePartition && !isEveryPartition) {
    if (isReadOnly && (m_defaultConsistencyReadLevel == ReadLevel.FAST)) {
      initiatorHSId=m_localReplicas.get().get(partition);
    }
    if (initiatorHSId != null) {
      isShortCircuitRead=true;
    }
 else {
      initiatorHSId=m_cartographer.getHSIdForSinglePartitionMaster(partition);
    }
  }
 else {
    initiatorHSId=m_cartographer.getHSIdForMultiPartitionInitiator();
    if (isReadOnly) {
      isShortCircuitRead=true;
    }
  }
  if (initiatorHSId == null) {
    hostLog.error("Failed to find master initiator for partition: " + Integer.toString(partition) + ". Transaction not initiated.");
    return false;
  }
  long handle=cihm.getHandle(isSinglePartition,partition,invocation.getClientHandle(),messageSize,nowNanos,invocation.getProcName(),initiatorHSId,isReadOnly,isShortCircuitRead);
  Iv2InitiateTaskMessage workRequest=new Iv2InitiateTaskMessage(m_siteId,initiatorHSId,Iv2InitiateTaskMessage.UNUSED_TRUNC_HANDLE,txnId,uniqueId,isReadOnly,isSinglePartition,invocation,handle,connectionId,isForReplay);
  Iv2Trace.logCreateTransaction(workRequest);
  m_mailbox.send(initiatorHSId,workRequest);
  return true;
}
