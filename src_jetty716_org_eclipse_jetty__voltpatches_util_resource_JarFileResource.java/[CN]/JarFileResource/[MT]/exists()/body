{
  if (_exists)   return true;
  if (_urlString.endsWith("!/")) {
    String file_url=_urlString.substring(4,_urlString.length() - 2);
    try {
      return newResource(file_url).exists();
    }
 catch (    Exception e) {
      Log.ignore(e);
      return false;
    }
  }
  boolean check=checkConnection();
  if (_jarUrl != null && _path == null) {
    _directory=check;
    return true;
  }
 else {
    JarFile jarFile=null;
    if (check)     jarFile=_jarFile;
 else {
      try {
        JarURLConnection c=(JarURLConnection)((new URL(_jarUrl)).openConnection());
        c.setUseCaches(getUseCaches());
        jarFile=c.getJarFile();
      }
 catch (      Exception e) {
        Log.ignore(e);
      }
    }
    if (jarFile != null && _entry == null && !_directory) {
      Enumeration e=jarFile.entries();
      while (e.hasMoreElements()) {
        JarEntry entry=(JarEntry)e.nextElement();
        String name=entry.getName().replace('\\','/');
        if (name.equals(_path)) {
          _entry=entry;
          _directory=_path.endsWith("/");
          break;
        }
 else         if (_path.endsWith("/")) {
          if (name.startsWith(_path)) {
            _directory=true;
            break;
          }
        }
 else         if (name.startsWith(_path) && name.length() > _path.length() && name.charAt(_path.length()) == '/') {
          _directory=true;
          break;
        }
      }
    }
  }
  _exists=(_directory || _entry != null);
  return _exists;
}
