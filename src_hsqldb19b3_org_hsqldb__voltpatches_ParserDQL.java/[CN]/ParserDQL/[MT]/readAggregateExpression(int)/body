{
  int type=ParserDQL.getExpressionType(tokenT);
  boolean distinct=false;
  boolean all=false;
  if (token.tokenType == Tokens.DISTINCT) {
    distinct=true;
    read();
  }
 else   if (token.tokenType == Tokens.ALL) {
    all=true;
    read();
  }
  Expression e=XreadValueExpression();
switch (type) {
case OpTypes.COUNT:
    if (e.getType() == OpTypes.MULTICOLUMN) {
      if (((ExpressionColumn)e).tableName != null) {
        throw unexpectedToken();
      }
      e.opType=OpTypes.ASTERISK;
      break;
    }
 else {
      break;
    }
case OpTypes.STDDEV_POP:
case OpTypes.STDDEV_SAMP:
case OpTypes.VAR_POP:
case OpTypes.VAR_SAMP:
case OpTypes.APPROX_COUNT_DISTINCT:
  if (all || distinct) {
    throw Error.error(ErrorCode.X_42582,all ? Tokens.T_ALL : Tokens.T_DISTINCT);
  }
break;
default :
if (e.getType() == OpTypes.ASTERISK) {
throw unexpectedToken();
}
}
Expression aggregateExp=new ExpressionAggregate(type,distinct,e);
return aggregateExp;
}
