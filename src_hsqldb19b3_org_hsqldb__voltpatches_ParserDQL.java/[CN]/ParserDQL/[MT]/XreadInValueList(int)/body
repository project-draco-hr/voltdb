{
  List<Expression> rowList=new ArrayList<>();
  while (true) {
    Expression row=XreadValueExpression();
    if (row.getType() == OpTypes.ROW) {
      if (row.nodes.length != degree) {
        throw unexpectedToken();
      }
      for (      Expression value : row.nodes) {
        if (value.getType() == OpTypes.ROW) {
          throw unexpectedToken();
        }
      }
    }
 else     if (degree != 1) {
      throw unexpectedToken();
    }
 else {
      row=new Expression(OpTypes.ROW,new Expression[]{row});
    }
    rowList.add(row);
    if (token.tokenType != Tokens.COMMA) {
      break;
    }
    read();
  }
  Expression[] rowArray=new Expression[rowList.size()];
  rowList.toArray(rowArray);
  return new Expression(OpTypes.TABLE,rowArray);
}
