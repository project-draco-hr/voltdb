{
  HsqlArrayList list=new HsqlArrayList();
  while (true) {
    Expression e=XreadValueExpression();
    if (e.getType() != OpTypes.ROW) {
      e=new Expression(OpTypes.ROW,new Expression[]{e});
    }
    list.add(e);
    if (token.tokenType == Tokens.COMMA) {
      read();
      continue;
    }
    break;
  }
  Expression[] array=new Expression[list.size()];
  list.toArray(array);
  Expression e=new Expression(OpTypes.TABLE,array);
  for (int i=0; i < array.length; i++) {
    if (array[i].getType() != OpTypes.ROW) {
      array[i]=new Expression(OpTypes.ROW,new Expression[]{array[i]});
    }
    Expression[] args=array[i].nodes;
    if (args.length != degree) {
      throw unexpectedToken();
    }
    for (int j=0; j < degree; j++) {
      if (args[j].getType() == OpTypes.ROW) {
        throw unexpectedToken();
      }
    }
  }
  return e;
}
