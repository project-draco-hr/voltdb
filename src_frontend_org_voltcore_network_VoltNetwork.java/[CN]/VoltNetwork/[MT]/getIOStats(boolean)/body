{
  Callable<Map<Long,Pair<String,long[]>>> task=new Callable<Map<Long,Pair<String,long[]>>>(){
    @Override public Map<Long,Pair<String,long[]>> call() throws Exception {
      if (LatencyWatchdog.isEnable())       LatencyWatchdog.pet();
      return getIOStatsImpl(interval);
    }
  }
;
  FutureTask<Map<Long,Pair<String,long[]>>> ft=new FutureTask<Map<Long,Pair<String,long[]>>>(task);
  m_tasks.offer(ft);
  m_selector.wakeup();
  return ft;
}
