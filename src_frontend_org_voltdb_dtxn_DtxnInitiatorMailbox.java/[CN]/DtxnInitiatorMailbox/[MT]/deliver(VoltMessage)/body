{
  if (message instanceof CoalescedHeartbeatMessage) {
    demuxCoalescedHeartbeatMessage((CoalescedHeartbeatMessage)message);
    return;
  }
  ClientResponseImpl toSend=null;
  InFlightTxnState state=null;
synchronized (m_initiator) {
    if (message instanceof HeartbeatResponseMessage) {
      HeartbeatResponseMessage hrm=(HeartbeatResponseMessage)message;
      m_safetyState.updateLastSeenTxnIdFromExecutorBySiteId(hrm.getExecHSId(),hrm.getLastReceivedTxnId(),hrm.isBlocked());
      return;
    }
    assert(message instanceof InitiateResponseMessage);
    final InitiateResponseMessage r=(InitiateResponseMessage)message;
    state=m_pendingTxns.get(r.getTxnId());
    assert(m_hsId == r.getInitiatorHSId());
    if (r.isRecovering()) {
      toSend=state.addFailedOrRecoveringResponse(r.getCoordinatorHSId());
    }
 else {
      toSend=state.addResponse(r.getCoordinatorHSId(),r.getClientResponseData());
    }
    if (state.hasAllResponses()) {
      m_initiator.reduceBackpressure(state.messageSize);
      m_pendingTxns.remove(r.getTxnId());
      assert(state.hasSentResponse());
    }
  }
  if (toSend != null) {
    if (!state.isReadOnly)     ResponseSampler.offerResponse(this.getHSId(),state.txnId,state.invocation,toSend);
    enqueueResponse(toSend,state);
  }
}
