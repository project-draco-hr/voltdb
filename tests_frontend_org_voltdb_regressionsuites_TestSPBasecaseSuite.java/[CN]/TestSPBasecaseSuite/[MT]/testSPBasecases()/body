{
  final Client client=this.getClient();
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P1.insert",i,Integer.toHexString(i));
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    assertTrue(resp.getResults()[0].asScalarLong() == 1);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P1.select",i);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    VoltTable vt=resp.getResults()[0];
    assertTrue(vt.advanceRow());
    assertTrue(vt.getLong(0) == i);
  }
  for (int i=0; i < 10; i++) {
    try {
      client.callProcedure("P1.insert",i,Integer.toHexString(i));
    }
 catch (    ProcCallException pce) {
      continue;
    }
    assertTrue("Failed to catch expected exception.",false);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P1.select",i);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    VoltTable vt=resp.getResults()[0];
    assertTrue(vt.advanceRow());
    assertTrue(vt.getLong(0) == i);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P1.update",i,"STR" + Integer.toHexString(i),i);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    assertTrue(resp.getResults()[0].asScalarLong() == 1);
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P1.select",i);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    VoltTable vt=resp.getResults()[0];
    assertTrue(vt.advanceRow());
    assertTrue(vt.getString(1).equals("STR" + Integer.toHexString(i)));
  }
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("P1.delete",i);
    assertTrue(resp.getStatus() == ClientResponse.SUCCESS);
    assertTrue(resp.getResults()[0].asScalarLong() == 1);
  }
}
