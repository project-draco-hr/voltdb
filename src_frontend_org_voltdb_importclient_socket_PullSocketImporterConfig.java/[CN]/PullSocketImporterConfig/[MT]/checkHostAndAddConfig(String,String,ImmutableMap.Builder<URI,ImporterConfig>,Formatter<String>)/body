{
  Matcher mtc=HOST_RE.matcher(hspec);
  if (!mtc.matches()) {
    throw new IllegalArgumentException(String.format("Address spec %s is malformed",hspec));
  }
  int port=Integer.parseInt(mtc.group("port"));
  int tail=port;
  if (mtc.group("tail") != null) {
    tail=Integer.parseInt(mtc.group("tail"));
  }
  if (port > tail) {
    throw new IllegalArgumentException(String.format("Invalid port range in address spec %s",hspec));
  }
  for (int p=port; p <= tail; ++p) {
    InetAddress a;
    try {
      a=InetAddress.getByName(mtc.group("host"));
    }
 catch (    UnknownHostException e) {
      throw new IllegalArgumentException(String.format("Failed to resolve host %s",mtc.group("host")),e);
    }
    InetSocketAddress sa=new InetSocketAddress(a,p);
    PullSocketImporterConfig config=new PullSocketImporterConfig(URI.create("tcp://" + sa.getHostString() + ":"+ sa.getPort()+ "/"),procedure,formatter);
    builder.put(config.getResourceID(),config);
  }
}
