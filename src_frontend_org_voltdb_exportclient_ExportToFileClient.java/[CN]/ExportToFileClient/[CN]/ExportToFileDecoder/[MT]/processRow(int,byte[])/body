{
  Object[] row=null;
  try {
    row=decodeRow(rowData);
  }
 catch (  IOException e) {
    m_logger.error("Unable to decode row for table: " + m_source.tableName);
    return false;
  }
  try {
    String[] fields=new String[m_tableSchema.size()];
    for (int i=m_firstfield; i < m_tableSchema.size(); i++) {
      if (row[i] == null) {
        fields[i]="NULL";
      }
 else       if (m_tableSchema.get(i) == VoltType.STRING) {
        fields[i]=(String)row[i];
      }
 else       if (m_tableSchema.get(i) == VoltType.TIMESTAMP) {
        TimestampType timestamp=(TimestampType)row[i];
        fields[i]=m_sdf.format(timestamp.asApproximateJavaDate());
        fields[i]+=String.valueOf(timestamp.getUSec());
      }
 else {
        fields[i]=row[i].toString();
      }
    }
    m_writer.writeNext(fields);
  }
 catch (  Exception x) {
    x.printStackTrace();
    return false;
  }
  return true;
}
