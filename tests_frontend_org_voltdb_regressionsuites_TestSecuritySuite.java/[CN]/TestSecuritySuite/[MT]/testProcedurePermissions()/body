{
  Client client;
  boolean exceptionThrown;
  m_username="user1";
  client=getClient();
  exceptionThrown=false;
  try {
    client.callProcedure("DoNothing1",1);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown);
  client.callProcedure("DoNothing2",1);
  client.callProcedure("DoNothing3",1);
  m_username="user2";
  client=getClient();
  exceptionThrown=false;
  try {
    client.callProcedure("DoNothing1",1);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown);
  exceptionThrown=false;
  try {
    client.callProcedure("DoNothing2",1);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown);
  client.callProcedure("DoNothing3",1);
  m_username="user3";
  client=getClient();
  exceptionThrown=false;
  try {
    client.callProcedure("DoNothing1",1);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown);
  exceptionThrown=false;
  try {
    client.callProcedure("DoNothing2",1);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown);
  exceptionThrown=false;
  try {
    client.callProcedure("DoNothing3",1);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown);
  try {
    client.callProcedure("RyanLikesTheYankees",1);
  }
 catch (  ProcCallException e) {
    assertFalse(e.getMessage().contains("lost before a response was received"));
    e.printStackTrace();
    exceptionThrown=true;
  }
  assertTrue(exceptionThrown);
  String procusers[]={"user4","userWithAllProc"};
  for (  String user : procusers) {
    m_username=user;
    client=getClient();
    client.callProcedure("DoNothing1",1);
    client.callProcedure("DoNothing2",1);
    client.callProcedure("DoNothing3",1);
    try {
      client.callProcedure("RyanLikesTheYankees",1);
    }
 catch (    ProcCallException e) {
      assertFalse(e.getMessage().contains("lost before a response was received"));
      e.printStackTrace();
      exceptionThrown=true;
    }
    assertTrue(exceptionThrown);
  }
}
