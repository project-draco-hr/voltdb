{
  if (b == null) {
    throw new NullPointerException();
  }
 else   if (off < 0 || len < 0 || len > b.length - off) {
    throw new IndexOutOfBoundsException();
  }
 else   if (len == 0) {
    return 0;
  }
  int consumed=0;
  while (consumed < len) {
    if (cBuffer == null) {
      getNextBuffer(true);
      if (cBuffer == null) {
        assert m_eof;
        assert(m_available == 0);
        return (consumed > 0) ? consumed : -1;
      }
    }
    assert(cBuffer != null);
    final int maxread=java.lang.Math.min(cBuffer.remaining(),(len - consumed));
    cBuffer.get(b,(off + consumed),maxread);
    consumed+=maxread;
    m_available-=maxread;
    assert(m_available > -1);
    if (!cBuffer.hasRemaining()) {
      cBuffer=null;
      cContainer.discard();
      cContainer=null;
    }
  }
  return consumed;
}
