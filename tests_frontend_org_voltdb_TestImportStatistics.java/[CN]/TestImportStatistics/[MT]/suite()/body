{
  LocalCluster config;
  Map<String,String> additionalEnv=new HashMap<String,String>();
  String bundleLocation=System.getProperty("user.dir") + "/bundles";
  System.out.println("Bundle location is: " + bundleLocation);
  additionalEnv.put("voltdbbundlelocation",bundleLocation);
  final MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestImportStatistics.class);
  VoltProjectBuilder project=new VoltProjectBuilder();
  project.setUseDDLSchema(true);
  project.addSchema(TestSQLTypesSuite.class.getResource("sqltypessuite-import-ddl.sql"));
  project.addProcedures(TestStatsProcedure7.class);
  project.addProcedures(TestStatsProcedure11.class);
  Properties props=new Properties();
  props.putAll(ImmutableMap.<String,String>of("port","7001","decode","true","procedure","TestImportStatistics$TestStatsProcedure7"));
  project.addImport(true,"custom","csv","socketstream.jar",props);
  project.addPartitionInfo("importTable","PKEY");
  props=new Properties();
  props.putAll(ImmutableMap.<String,String>of("port","7002","decode","true","procedure","TestImportStatistics$TestStatsProcedure11"));
  project.addImport(true,"custom","csv","socketstream.jar",props);
  project.addPartitionInfo("importTable","PKEY");
  props=new Properties();
  props.putAll(ImmutableMap.<String,String>of("port","6060","procedure","log_events.insert","log-event-table","log_events"));
  project.addImport(true,"custom",null,"log4jsocketimporter.jar",props);
  config=new LocalCluster("import-stats-ddl-cluster-rep.jar",4,1,0,BackendTarget.NATIVE_EE_JNI,LocalCluster.FailureState.ALL_RUNNING,true,false,additionalEnv);
  config.setHasLocalServer(false);
  boolean compile=config.compile(project);
  assertTrue(compile);
  builder.addServerConfig(config);
  return builder;
}
