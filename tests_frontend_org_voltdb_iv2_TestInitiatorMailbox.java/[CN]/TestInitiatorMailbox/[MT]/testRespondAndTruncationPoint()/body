{
  createElectionNodes(2,true);
  mb.start(2);
  generateTasks(true);
  VoltTable[] results=new VoltTable[]{new VoltTable(new ColumnInfo("T",VoltType.BIGINT))};
  for (int i=0; i < 1000; i++) {
    InitiateTaskMessage task=new InitiateTaskMessage(100,100,i,0,0,false,true,null);
    InitiateResponseMessage remoteResponse=new InitiateResponseMessage(task);
    ClientResponseImpl resp=new ClientResponseImpl(ClientResponse.SUCCESS,results,"");
    remoteResponse.setResults(resp);
    mb.deliver(remoteResponse);
  }
  assertEquals(-1,((PrimaryRole)mb.role).lastRespondedTxnId);
  InitiateTaskMessage localTask;
  while ((localTask=(InitiateTaskMessage)mb.recv()) != null) {
    InitiateResponseMessage localResponse=new InitiateResponseMessage(localTask);
    ClientResponseImpl resp=new ClientResponseImpl(ClientResponse.SUCCESS,results,"");
    localResponse.setResults(resp);
    mb.deliver(localResponse);
  }
  ArgumentCaptor<InitiateResponseMessage> responseCaptor1=ArgumentCaptor.forClass(InitiateResponseMessage.class);
  verify(hm,times(1000)).send(anyLong(),responseCaptor1.capture());
  List<InitiateResponseMessage> allValues=responseCaptor1.getAllValues();
  for (  InitiateResponseMessage resp : allValues) {
    assertTrue(resp.getTxnId() < 1000);
  }
  assertEquals(999,((PrimaryRole)mb.role).lastRespondedTxnId);
  reset(hm);
  for (int i=1000; i < 3000; i++) {
    InitiateTaskMessage task=new InitiateTaskMessage(100,100,i,0,0,false,true,null);
    InitiateResponseMessage remoteResponse=new InitiateResponseMessage(task);
    ClientResponseImpl resp=new ClientResponseImpl(ClientResponse.SUCCESS,results,"");
    remoteResponse.setResults(resp);
    mb.deliver(remoteResponse);
  }
  ArgumentCaptor<InitiateResponseMessage> responseCaptor2=ArgumentCaptor.forClass(InitiateResponseMessage.class);
  verify(hm,times(2000)).send(anyLong(),responseCaptor2.capture());
  List<InitiateResponseMessage> remainingResponses=responseCaptor2.getAllValues();
  for (  InitiateResponseMessage resp : remainingResponses) {
    assertTrue(Long.toString(resp.getTxnId()),resp.getTxnId() >= 1000);
    assertTrue(resp.getTxnId() < 3000);
  }
  assertEquals(2999,((PrimaryRole)mb.role).lastRespondedTxnId);
}
