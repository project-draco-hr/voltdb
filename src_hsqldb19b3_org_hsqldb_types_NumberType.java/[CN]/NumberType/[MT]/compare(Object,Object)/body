{
  if (a == b) {
    return 0;
  }
  if (a == null) {
    return -1;
  }
  if (b == null) {
    return 1;
  }
switch (typeCode) {
case Types.TINYINT:
case Types.SQL_SMALLINT:
case Types.SQL_INTEGER:
{
      if (b instanceof Integer) {
        int ai=((Number)a).intValue();
        int bi=((Number)b).intValue();
        return (ai > bi) ? 1 : (bi > ai ? -1 : 0);
      }
 else       if (b instanceof Double) {
        double ai=((Number)a).doubleValue();
        double bi=((Number)b).doubleValue();
        return (ai > bi) ? 1 : (bi > ai ? -1 : 0);
      }
 else       if (b instanceof BigDecimal) {
        BigDecimal ad=convertToDecimal(a);
        int i=ad.compareTo((BigDecimal)b);
        return (i == 0) ? 0 : (i < 0 ? -1 : 1);
      }
    }
case Types.SQL_BIGINT:
{
    if (b instanceof Long) {
      long longa=((Number)a).longValue();
      long longb=((Number)b).longValue();
      return (longa > longb) ? 1 : (longb > longa ? -1 : 0);
    }
 else     if (b instanceof Double) {
      BigDecimal ad=BigDecimal.valueOf(((Number)a).longValue());
      BigDecimal bd=new BigDecimal(((Double)b).doubleValue());
      int i=ad.compareTo(bd);
      return (i == 0) ? 0 : (i < 0 ? -1 : 1);
    }
 else     if (b instanceof BigDecimal) {
      BigDecimal ad=BigDecimal.valueOf(((Number)a).longValue());
      int i=ad.compareTo((BigDecimal)b);
      return (i == 0) ? 0 : (i < 0 ? -1 : 1);
    }
  }
case Types.SQL_REAL:
case Types.SQL_FLOAT:
case Types.SQL_DOUBLE:
{
  double ad=((Number)a).doubleValue();
  double bd=((Number)b).doubleValue();
  return (ad > bd) ? 1 : (bd > ad ? -1 : 0);
}
case Types.SQL_NUMERIC:
case Types.SQL_DECIMAL:
{
BigDecimal bd=convertToDecimal(b);
int i=((BigDecimal)a).compareTo(bd);
return (i == 0) ? 0 : (i < 0 ? -1 : 1);
}
default :
throw Error.runtimeError(ErrorCode.U_S0500,"NumberType");
}
}
