{
  String value="";
switch (colType) {
case Types.BIT:
case Types.JAVA_OBJECT:
    value=handleObject(rs.getObject(colIndex));
  break;
case Types.BOOLEAN:
boolean b=rs.getBoolean(colIndex);
value=Boolean.valueOf(b).toString();
break;
case NCLOB:
case Types.CLOB:
Clob c=rs.getClob(colIndex);
if (c != null) {
value=read(c);
}
break;
case Types.BIGINT:
value=handleLong(rs,colIndex);
break;
case Types.DECIMAL:
case Types.DOUBLE:
case Types.FLOAT:
case Types.REAL:
case Types.NUMERIC:
value=handleBigDecimal(rs.getBigDecimal(colIndex));
break;
case Types.INTEGER:
case Types.TINYINT:
case Types.SMALLINT:
value=handleInteger(rs,colIndex);
break;
case Types.DATE:
value=handleDate(rs,colIndex);
break;
case Types.TIME:
value=handleTime(rs.getTime(colIndex));
break;
case Types.TIMESTAMP:
value=handleTimestamp(rs.getTimestamp(colIndex));
break;
case NVARCHAR:
case NCHAR:
case LONGNVARCHAR:
case Types.LONGVARCHAR:
case Types.VARCHAR:
case Types.CHAR:
value=rs.getString(colIndex);
break;
default :
value="";
}
if (value == null) {
value="";
}
return value;
}
