{
  String token;
  String[] tokens;
  int i;
  i=s.indexOf(" ");
  if (i < 0) {
    token=s;
    s="";
  }
 else {
    token=s.substring(0,i);
    s=s.substring(i).trim();
  }
  tokens=tokenize(s);
  if (token.compareToIgnoreCase("compile") == 0) {
    int nodes;
    int partitions;
    String host;
    if (tokens[0] == null) {
      errormessage("You must specify an input file name.");
      return (true);
    }
    if (tokens[1] == null) {
      errormessage("You must specify an output file name.");
      return (true);
    }
    if (tokens[2] == null) {
      host="localhost";
    }
 else {
      host=tokens[2];
    }
    if (tokens[3] == null) {
      nodes=1;
    }
 else {
      try {
        nodes=Integer.parseInt(tokens[4]);
      }
 catch (      Exception e) {
        errormessage("Number of nodes is not a valid number.");
        return (true);
      }
    }
    if (tokens[4] == null) {
      partitions=1;
    }
 else {
      try {
        partitions=Integer.parseInt(tokens[4]);
      }
 catch (      Exception e) {
        errormessage("Number of partitions is not a valid number.");
        return (true);
      }
    }
    voltCompile(tokens[0],tokens[1],host,nodes,partitions);
    return (true);
  }
  if ((token.compareToIgnoreCase("start") == 0) || (token.compareToIgnoreCase("startup") == 0)) {
    voltLoad(tokens[0]);
    return (true);
  }
  if (token.compareToIgnoreCase("connect") == 0) {
    String host=tokens[0];
    String username=tokens[1];
    String password=tokens[2];
    if (host == null) {
      host="localhost";
    }
    if (username == null) {
      username="";
    }
    if (password == null) {
      password="";
    }
    voltConnect(host,username,password);
    return (true);
  }
  if (token.compareToIgnoreCase("shutdown") == 0) {
    voltShutdown();
    return (true);
  }
  if ((token.compareToIgnoreCase("select") == 0) || (token.compareToIgnoreCase("insert") == 0) || (token.compareToIgnoreCase("update") == 0)|| (token.compareToIgnoreCase("delete") == 0)) {
    voltAdHoc(token + " " + s);
    return (true);
  }
  if (token.compareToIgnoreCase("save") == 0) {
    debugmsg(token.toUpperCase());
    return (true);
  }
  if (token.compareToIgnoreCase("restore") == 0) {
    debugmsg(token.toUpperCase());
    return (true);
  }
  if (token.compareToIgnoreCase("help") == 0) {
    helpsystem(tokens[0]);
    return (true);
  }
  if (token.compareToIgnoreCase("exit") == 0) {
    return false;
  }
  errormessage("%ERROR - unrecognized command: " + token.toUpperCase());
  return true;
}
