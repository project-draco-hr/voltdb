{
  try {
    VoltTable result=client.callProcedure("@Statistics","PLANNER",0).getResults()[0];
    while (result.advanceRow()) {
      String hostname=result.getString("HOSTNAME");
      long siteId=result.getLong("SITE_ID");
      long partitionId=result.getLong("PARTITION_ID");
      long hits1=result.getLong("CACHE1_HITS");
      long hits2=result.getLong("CACHE2_HITS");
      long level1=result.getLong("CACHE1_LEVEL");
      long level2=result.getLong("CACHE2_LEVEL");
      long misses=result.getLong("CACHE_MISSES");
      long total=hits1 + hits2 + misses;
      double hitpc1=(100.0 * hits1) / total;
      double hitpc2=(100.0 * hits2) / total;
      long planTimeMin=(result.getLong("PLAN_TIME_MIN") + 500) / 1000;
      long planTimeMax=(result.getLong("PLAN_TIME_MAX") + 500) / 1000;
      long planTimeAvg=(result.getLong("PLAN_TIME_AVG") + 500) / 1000;
      long failures=result.getLong("FAILURES");
      System.out.printf("           HOSTNAME: %s\n",hostname);
      if (siteId == -1) {
        System.out.printf("               SITE: (global)\n");
      }
 else {
        System.out.printf("               SITE: %d\n",siteId);
        System.out.printf("          PARTITION: %d\n",partitionId);
      }
      System.out.printf("        TOTAL PLANS: %d\n",total);
      System.out.printf("       CACHE MISSES: %d\n",misses);
      System.out.printf(" LEVEL 1 CACHE HITS: %d (%.1f%%)\n",hits1,hitpc1);
      System.out.printf("LEVEL 1 CACHE LEVEL: %d\n",level1);
      if (siteId == -1) {
        System.out.printf(" LEVEL 2 CACHE HITS: %d (%.1f%%)\n",hits2,hitpc2);
        System.out.printf("LEVEL 2 CACHE LEVEL: %d\n",level2);
      }
      System.out.printf("      PLAN TIME MIN: %d ms\n",planTimeMin);
      System.out.printf("      PLAN TIME MAX: %d ms\n",planTimeMax);
      System.out.printf("      PLAN TIME AVG: %d ms\n",planTimeAvg);
      System.out.printf("           FAILURES: %d\n\n",failures);
    }
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
  }
}
