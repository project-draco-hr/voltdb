{
  System.out.print(HORIZONTAL_RULE);
  System.out.println(" Setup & Initialization");
  System.out.println(HORIZONTAL_RULE);
  System.out.printf("Reading configuration file '%s'...\n",configPath);
  TestConfiguration testConfig=configureTests(configPath,nQueriesPerTest);
  connect(this.cliConfig.servers);
  System.out.print(HORIZONTAL_RULE);
  System.out.println("Starting Benchmark");
  System.out.println(HORIZONTAL_RULE);
  this.benchmarkStartTS=System.currentTimeMillis();
  long queryElapsedMS=0;
  schedulePeriodicStats();
  if (this.cliConfig.runJoins) {
    System.out.println("\nRunning join benchmark...");
    for (    String joinQuery : new JoinGenerator(testConfig.joinTests)) {
      long startTS=System.currentTimeMillis();
      this.client.callProcedure(new NullCallback(),"@AdHoc",joinQuery);
      queryElapsedMS+=(System.currentTimeMillis() - startTS);
      this.queriesProcessed++;
    }
  }
  if (this.cliConfig.runProjections) {
    System.out.println("\nRunning projection benchmark...");
    for (    String projectionQuery : new ProjectionGenerator(testConfig.projectionTests)) {
      long startTS=System.currentTimeMillis();
      this.client.callProcedure(new NullCallback(),"@AdHoc",projectionQuery);
      queryElapsedMS+=(System.currentTimeMillis() - startTS);
      this.queriesProcessed++;
    }
  }
  printStatistics();
  System.out.println("");
  long totalElapsedMS=System.currentTimeMillis() - this.benchmarkStartTS;
  this.timer.cancel();
  this.client.drain();
  printResults(totalElapsedMS,queryElapsedMS);
  this.client.close();
}
