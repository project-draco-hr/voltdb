{
  try {
    String simpleSchema="CREATE TABLE foo (\n" + "    bar BIGINT NOT NULL,\n" + "    PRIMARY KEY (bar)\n"+ ");";
    File schemaFile=VoltProjectBuilder.writeStringToTempFile(simpleSchema);
    String schemaPath=schemaFile.getPath();
    schemaPath=URLEncoder.encode(schemaPath,"UTF-8");
    VoltProjectBuilder builder=new VoltProjectBuilder();
    builder.addSchema(schemaPath);
    builder.addPartitionInfo("foo","bar");
    builder.addProcedures(DelayProc.class);
    builder.setHTTPDPort(8095);
    boolean success=builder.compile(Configuration.getPathToCatalogForTest("json.jar"));
    assertTrue(success);
    VoltDB.Configuration config=new VoltDB.Configuration();
    config.m_pathToCatalog=config.setPathToCatalogForTest("json.jar");
    config.m_pathToDeployment=builder.getPathToDeployment();
    server=new ServerThread(config);
    server.start();
    server.waitForInitialization();
    String jdep=getUrlOverJSON("http://localhost:8095/deployment",null,null,null,200,"application/json");
    assertTrue(jdep.contains("cluster"));
    String xdep=getUrlOverJSON("http://localhost:8095/deployment/download",null,null,null,200,"text/xml");
    assertTrue(xdep.contains("<deployment>"));
    assertTrue(xdep.contains("</deployment>"));
    String pdep=postUrlOverJSON("http://localhost:8095/deployment/",null,null,null,200,"application/json",null);
    assertTrue(pdep.contains("Failed"));
    Map<String,String> params=new HashMap<>();
    params.put("deployment",jdep);
    pdep=postUrlOverJSON("http://localhost:8095/deployment/",null,null,null,200,"application/json",params);
    assertTrue(pdep.contains("Deployment Updated"));
    ObjectMapper mapper=new ObjectMapper();
    DeploymentType deptype=mapper.readValue(jdep,DeploymentType.class);
    if (deptype.getHeartbeat() == null) {
      HeartbeatType hb=new HeartbeatType();
      hb.setTimeout(99);
      deptype.setHeartbeat(hb);
    }
 else {
      deptype.getHeartbeat().setTimeout(99);
    }
    String ndeptype=mapper.writeValueAsString(deptype);
    params.put("deployment",ndeptype);
    pdep=postUrlOverJSON("http://localhost:8095/deployment/",null,null,null,200,"application/json",params);
    System.out.println("POST result is: " + pdep);
    assertTrue(pdep.contains("Deployment Updated"));
    jdep=getUrlOverJSON("http://localhost:8095/deployment",null,null,null,200,"application/json");
    assertTrue(jdep.contains("cluster"));
    deptype=mapper.readValue(jdep,DeploymentType.class);
    int nto=deptype.getHeartbeat().getTimeout();
    assertEquals(nto,99);
  }
  finally {
    if (server != null) {
      server.shutdown();
      server.join();
    }
    server=null;
  }
}
