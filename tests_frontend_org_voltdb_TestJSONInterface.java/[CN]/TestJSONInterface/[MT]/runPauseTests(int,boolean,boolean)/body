{
  ParameterSet pset;
  String responseJSON;
  Response response;
  pset=ParameterSet.fromArrayNoCopy(pkStart++,"hello");
  responseJSON=callProcOverJSON("fooinsert",pset,null,null,false,useAdmin);
  response=responseFromJSON(responseJSON);
  if (paused && !useAdmin) {
    assertEquals(ClientResponse.SERVER_UNAVAILABLE,response.status);
    assertTrue(response.statusString.contains("is paused"));
    pkStart--;
  }
 else {
    assertEquals(ClientResponse.SUCCESS,response.status);
    assertEquals(1L,response.results[0].fetchRow(0).getLong(0));
  }
  pset=ParameterSet.emptyParameterSet();
  responseJSON=callProcOverJSON("foocount",pset,null,null,false,useAdmin);
  response=responseFromJSON(responseJSON);
  assertEquals(ClientResponse.SUCCESS,response.status);
  assertEquals(pkStart,response.results[0].fetchRow(0).getLong(0));
  pset=ParameterSet.fromArrayNoCopy("insert into foo values (" + (pkStart++) + ", 'adhochello')");
  responseJSON=callProcOverJSON("@AdHoc",pset,null,null,false,useAdmin);
  response=responseFromJSON(responseJSON);
  if (paused && !useAdmin) {
    assertEquals(ClientResponse.SERVER_UNAVAILABLE,response.status);
    assertTrue(response.statusString.contains("is paused"));
    pkStart--;
  }
 else {
    assertEquals(ClientResponse.SUCCESS,response.status);
  }
  pset=ParameterSet.fromArrayNoCopy("select count(*) from foo");
  responseJSON=callProcOverJSON("@AdHoc",pset,null,null,false,useAdmin);
  response=responseFromJSON(responseJSON);
  assertEquals(ClientResponse.SUCCESS,response.status);
  assertEquals(pkStart,response.results[0].fetchRow(0).getLong(0));
  return pkStart;
}
