{
  URL jsonAPIURL=new URL("http://localhost:8095/api/1.0/");
  String paramsInJSON=pset.toJSONString();
  System.out.println(paramsInJSON);
  HashMap<String,String> params=new HashMap<String,String>();
  params.put("Procedure",procName);
  params.put("Parameters",paramsInJSON);
  String varString=getHTTPVarString(params);
  varString=getHTTPVarString(params);
  HttpURLConnection conn=(HttpURLConnection)jsonAPIURL.openConnection();
  conn.setDoOutput(true);
  conn.setRequestMethod("POST");
  OutputStreamWriter out=new OutputStreamWriter(conn.getOutputStream());
  out.write(varString);
  out.close();
  BufferedReader in=null;
  try {
    if (conn.getInputStream() != null) {
      in=new BufferedReader(new InputStreamReader(conn.getInputStream()));
    }
  }
 catch (  IOException e) {
    if (conn.getErrorStream() != null) {
      in=new BufferedReader(new InputStreamReader(conn.getErrorStream()));
    }
  }
  if (in == null) {
    throw new Exception("Unable to read response from server");
  }
  StringBuffer decodedString=new StringBuffer();
  String line;
  while ((line=in.readLine()) != null) {
    decodedString.append(line);
  }
  in.close();
  int responseCode=conn.getResponseCode();
  String response=decodedString.toString();
  assertEquals(200,responseCode);
  return response;
}
