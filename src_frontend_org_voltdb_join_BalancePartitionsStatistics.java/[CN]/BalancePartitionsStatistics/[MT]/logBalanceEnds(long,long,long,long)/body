{
  final long balanceEnd=System.nanoTime();
  if (balanceEnd > balanceStart) {
    lastBalanceDuration=balanceEnd - balanceStart;
  }
  final long now=System.nanoTime();
  final long aSecondAgo=now - TimeUnit.SECONDS.toNanos(1);
  bytesTransferredInLastSec.put(now,bytesTransferred);
  throughput+=bytesTransferred;
  while (bytesTransferredInLastSec.firstKey() < aSecondAgo) {
    throughput-=bytesTransferredInLastSec.pollFirstEntry().getValue();
  }
  lastTransferTimeMS=transferTimeMS;
  overallStats=overallStats.update(balanceEnd,lastBalanceDuration,rangeSizeMoved,rowsTransferred,bytesTransferred,1);
  intervalStats=intervalStats.update(balanceEnd,lastBalanceDuration,rangeSizeMoved,rowsTransferred,bytesTransferred,1);
  markStatsPoint();
  if (now - lastReportTime > logIntervalNanos && now != lastReportTime) {
    lastReportTime=now;
    endInterval();
  }
}
