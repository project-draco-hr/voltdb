{
  helpLoadFromJSONObject(jobj,db);
  m_joinType=JoinType.get(jobj.getString(Members.JOIN_TYPE.name()));
  m_preJoinPredicate=AbstractExpression.fromJSONChild(jobj,Members.PRE_JOIN_PREDICATE.name());
  m_joinPredicate=AbstractExpression.fromJSONChild(jobj,Members.JOIN_PREDICATE.name());
  m_wherePredicate=AbstractExpression.fromJSONChild(jobj,Members.WHERE_PREDICATE.name());
  if (!jobj.isNull(Members.OUTPUT_SCHEMA_PRE_AGG.name())) {
    m_outputSchemaPreInlineAgg=new NodeSchema();
    m_hasSignificantOutputSchema=true;
    JSONArray jarray=jobj.getJSONArray(Members.OUTPUT_SCHEMA_PRE_AGG.name());
    int size=jarray.length();
    for (int i=0; i < size; i++) {
      m_outputSchemaPreInlineAgg.addColumn(SchemaColumn.fromJSONObject(jarray.getJSONObject(i)));
    }
  }
}
