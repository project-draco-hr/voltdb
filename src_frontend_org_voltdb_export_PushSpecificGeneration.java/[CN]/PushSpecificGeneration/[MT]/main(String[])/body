{
  try {
    if (args.length != 2) {
      System.out.println("Usage: draingen deployment.xml dir-where-where-generations-are");
      System.exit(1);
    }
    DeploymentType dep=CatalogUtil.getDeployment(new FileInputStream(new File(args[0])));
    ExportConfigurationType exportConfiguration=dep.getExport().getConfiguration().get(0);
    String exportClientClassName=null;
switch (exportConfiguration.getType()) {
case FILE:
      exportClientClassName="org.voltdb.exportclient.ExportToFileClient";
    break;
case JDBC:
  exportClientClassName="org.voltdb.exportclient.JDBCExportClient";
break;
case KAFKA:
exportClientClassName="org.voltdb.exportclient.kafka.KafkaExportClient";
break;
case RABBITMQ:
exportClientClassName="org.voltdb.exportclient.RabbitMQExportClient";
break;
case HTTP:
exportClientClassName="org.voltdb.exportclient.HttpExportClient";
break;
case ELASTICSEARCH:
exportClientClassName="org.voltdb.exportclient.ElasticSearchHttpExportClient";
break;
case CUSTOM:
exportClientClassName=exportConfiguration.getExportconnectorclass();
if (exportConfiguration.isEnabled()) {
try {
CatalogUtil.class.getClassLoader().loadClass(exportClientClassName);
}
 catch (ClassNotFoundException ex) {
String msg="Custom Export failed to configure, failed to load" + " export plugin class: " + exportConfiguration.getExportconnectorclass() + " Disabling export.";
throw new CatalogUtil.DeploymentCheckException(msg);
}
}
break;
}
StandaloneExportManager.initialize(0,args[1],exportClientClassName,dep.getExport().getConfiguration().get(0).getProperty());
int maxPart=dep.getCluster().getSitesperhost();
System.out.println("Please wait...|");
while (true) {
System.out.print(".");
Thread.yield();
Thread.sleep(1000);
long sz=0;
for (int i=0; i < maxPart; i++) {
sz+=StandaloneExportManager.getQueuedExportBytes(i,"");
}
if (sz <= 0 && StandaloneExportManager.shouldExit()) {
break;
}
}
}
 catch (Exception ex) {
ex.printStackTrace();
}
 finally {
StandaloneExportManager.instance().shutdown();
}
}
