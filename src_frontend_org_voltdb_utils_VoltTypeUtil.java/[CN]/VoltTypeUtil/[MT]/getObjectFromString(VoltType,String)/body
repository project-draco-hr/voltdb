{
  Object ret=null;
switch (type) {
case TINYINT:
case SMALLINT:
case INTEGER:
case BIGINT:
    ret=Long.valueOf(value);
  break;
case FLOAT:
ret=Double.valueOf(value);
break;
case STRING:
ret=value;
break;
case DECIMAL:
case VARBINARY:
if (value != null) {
throw new RuntimeException("Only NULL default values for DECIMAL " + "and VARBINARY columns are supported right now");
}
break;
case TIMESTAMP:
{
try {
ret=new TimestampType(Long.parseLong(value));
}
 catch (NumberFormatException e) {
Date date=new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy").parse(value);
ret=new TimestampType(date.getTime() * 1000);
}
break;
}
default :
LOG.severe("ERROR: Unable to generate random value for invalid ValueType '" + type + "'");
}
return (ret);
}
