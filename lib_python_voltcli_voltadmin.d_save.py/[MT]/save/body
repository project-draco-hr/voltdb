@VOLT.Command(bundles=VOLT.AdminBundle(), description='Save a VoltDB database snapshot.', options=(VOLT.BooleanOption('-n', '--non-blocking', 'nonblocking', 'do not wait for snapshot to complete', default=False), VOLT.EnumOption('-f', '--format', 'format', 'snapshot format', 'native', 'csv', default='native')), arguments=(VOLT.StringArgument('directory', 'the local snapshot directory path'), VOLT.StringArgument('nonce', 'the unique snapshot identifier (nonce)')))
def save(runner):
    uri = ('file://%s' % os.path.realpath(runner.opts.directory))
    if runner.opts.nonblocking:
        blocking = 'false'
    else:
        blocking = 'true'
    json_opts = [('{uripath:"%s",nonce:"%s",block:%s,format:"%s"}' % (uri, runner.opts.nonce, blocking, runner.opts.format))]
    utility.debug(('@SnapshotSave "%s"' % json_opts))
    columns = [VOLT.FastSerializer.VOLTTYPE_STRING]
    response = runner.call_proc('@SnapshotSave', columns, json_opts)
    print response.table(0).format_table(caption='Snapshot Save Results')
