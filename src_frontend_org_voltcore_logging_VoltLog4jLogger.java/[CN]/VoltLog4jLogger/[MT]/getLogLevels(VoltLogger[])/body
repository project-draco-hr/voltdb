{
  long logLevels=0;
  if (m_logger != null) {
    Logger[] loggers=new Logger[voltloggers.length];
    for (int i=0; i < voltloggers.length; i++)     loggers[i]=((VoltLog4jLogger)voltloggers[i].m_logger).m_logger;
    for (int ii=0; ii < loggers.length; ii++) {
      final int level=loggers[ii].getEffectiveLevel().toInt();
switch (level) {
case org.apache.log4j.Level.TRACE_INT:
        logLevels|=trace << (ii * 3);
      break;
case org.apache.log4j.Level.ALL_INT:
    logLevels|=all << (ii * 3);
  break;
case org.apache.log4j.Level.DEBUG_INT:
logLevels|=debug << (ii * 3);
break;
case org.apache.log4j.Level.ERROR_INT:
logLevels|=error << (ii * 3);
break;
case org.apache.log4j.Level.FATAL_INT:
logLevels|=fatal << (ii * 3);
break;
case org.apache.log4j.Level.INFO_INT:
logLevels|=info << (ii * 3);
break;
case org.apache.log4j.Level.OFF_INT:
logLevels|=off << (ii * 3);
break;
case org.apache.log4j.Level.WARN_INT:
logLevels|=warn << (ii * 3);
break;
default :
throw new RuntimeException("Unhandled log level " + level);
}
}
}
return logLevels;
}
