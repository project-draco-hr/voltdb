{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestQueryTimeout.class);
  VoltProjectBuilder project=new VoltProjectBuilder();
  final String literalSchema="CREATE TABLE R1 ( " + "phone_number INTEGER NOT NULL, " + "state VARCHAR(2) NOT NULL, "+ "contestant_number INTEGER NOT NULL);"+ "CREATE TABLE P1 ( "+ "phone_number INTEGER NOT NULL, "+ "state VARCHAR(2) NOT NULL, "+ "contestant_number INTEGER NOT NULL);"+ "PARTITION TABLE P1 ON COLUMN phone_number;"+ "";
  try {
    project.addLiteralSchema(literalSchema);
  }
 catch (  IOException e) {
    assertFalse(true);
  }
  project.addProcedures(PROCEDURES);
  project.setQueryTimeout(TIMEOUT);
  UserInfo users[]=new UserInfo[]{new UserInfo("adminUser","password",new String[]{"AdMINISTRATOR"}),new UserInfo("userWithAllProc","password",new String[]{"GroupWithAllProcPerm"})};
  project.addUsers(users);
  RoleInfo groups[]=new RoleInfo[]{new RoleInfo("GroupWithAllProcPerm",true,true,false,true,true,true)};
  project.addRoles(groups);
  project.setSecurityEnabled(true,false);
  boolean success;
  config=new LocalCluster("querytimeout-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("querytimeout-cluster.jar",2,3,1,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  return builder;
}
