{
  StandaloneExportDataProcessor newProcessor=null;
  StandaloneExportDataProcessor oldProcessor=null;
  boolean doexit=false;
synchronized (StandaloneExportManager.this) {
    boolean installNewProcessor=false;
    if (m_generations.containsKey(drainedGeneration.m_timestamp)) {
      m_generations.remove(drainedGeneration.m_timestamp);
      m_generationGhosts.add(drainedGeneration.m_timestamp);
      installNewProcessor=true;
      exportLog.info("Finished draining generation " + drainedGeneration.m_timestamp);
    }
 else {
      exportLog.warn("Finished draining a generation that is not known to export generations.");
    }
    try {
      if (m_loaderClass != null && !m_generations.isEmpty() && installNewProcessor) {
        exportLog.info("Creating connector " + m_loaderClass);
        final Class<?> loaderClass=Class.forName(m_loaderClass);
        StandaloneExportGeneration nextGeneration=m_generations.firstEntry().getValue();
        newProcessor=(StandaloneExportDataProcessor)loaderClass.newInstance();
        newProcessor.addLogger(exportLog);
        newProcessor.setExportGeneration(nextGeneration);
        newProcessor.setProcessorConfig(m_processorConfig);
        newProcessor.readyForData();
        nextGeneration.kickOffLeaderElection();
        oldProcessor=m_processor.getAndSet(newProcessor);
      }
 else {
        exportLog.info("Finished all generation after: " + drainedGeneration.m_timestamp);
        doexit=true;
      }
    }
 catch (    Exception e) {
      VoltDB.crashLocalVoltDB("Error creating next export processor",true,e);
    }
  }
  if (oldProcessor != null) {
    oldProcessor.shutdown();
  }
  if (doexit) {
    m_exit.set(true);
  }
}
