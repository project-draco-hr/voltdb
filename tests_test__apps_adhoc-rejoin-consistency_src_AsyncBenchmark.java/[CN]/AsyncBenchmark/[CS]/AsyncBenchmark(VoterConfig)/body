{
  this.config=config;
  vemTestHome=System.getenv("VEMTEST_HOME");
  System.err.printf("VEMTEST_HOME: %s\n",vemTestHome);
  if (vemTestHome == "" || vemTestHome == null) {
    System.err.println("ERROR VEMTEST_HOME is not set");
    System.exit(1);
  }
  try {
    testCase=Tests.valueOf(config.testcase);
  }
 catch (  Exception e) {
    if (!config.testcase.equalsIgnoreCase("ALL")) {
      System.err.printf("ERROR Unknown testcase: %s\n",config.testcase);
      System.exit(1);
    }
  }
  ClientConfig clientConfig=new ClientConfig(config.user,config.password,new StatusListener());
  if (config.autotune) {
    clientConfig.enableAutoTune();
    clientConfig.setAutoTuneTargetInternalLatency(config.latencytarget);
  }
 else {
    clientConfig.setMaxTransactionsPerSecond(config.ratelimit);
  }
  client=ClientFactory.createClient(clientConfig);
  periodicStatsContext=client.createStatsContext();
  fullStatsContext=client.createStatsContext();
  System.out.print(HORIZONTAL_RULE);
  System.out.println(" Command Line Configuration");
  System.out.println(HORIZONTAL_RULE);
  System.out.println(config.getConfigDumpString());
  Signal.handle(new Signal("TERM"),new SignalHandler(){
    public void handle(    Signal sig){
      System.err.println("Received SIGTERM signal. Will teardown.");
      runBenchmark=false;
      timer.cancel();
      benchmarkThread.interrupt();
    }
  }
);
  Signal.handle(new Signal("INT"),new SignalHandler(){
    public void handle(    Signal sig){
      System.err.println("Received SIGINT signal. Will teardown.");
      runBenchmark=false;
      timer.cancel();
      benchmarkThread.interrupt();
    }
  }
);
}
