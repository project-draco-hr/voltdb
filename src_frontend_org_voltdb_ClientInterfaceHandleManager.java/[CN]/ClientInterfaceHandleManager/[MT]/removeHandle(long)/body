{
  final boolean readOnly=getReadBit(ciHandle);
  ciHandle=unsetReadBit(ciHandle);
  assert(m_expectedThreadId == Thread.currentThread().getId());
  int partitionId=getPartIdFromHandle(ciHandle);
  PartitionData partitionStuff=m_partitionStuff.get(partitionId);
  if (partitionStuff == null) {
    return false;
  }
  Deque<Iv2InFlight> perPartDeque=readOnly ? partitionStuff.m_reads : partitionStuff.m_writes;
  Iterator<Iv2InFlight> iter=perPartDeque.iterator();
  while (iter.hasNext()) {
    Iv2InFlight inflight=iter.next();
    if (inflight.m_ciHandle == ciHandle) {
      iter.remove();
      m_outstandingTxns--;
      m_acg.reduceBackpressure(inflight.m_messageSize);
      return true;
    }
  }
  return false;
}
