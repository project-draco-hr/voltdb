{
  AbstractPlanNode pn=compile("select r2.c, (select d from r1 where r1.c = ? ) scalar from r2");
  pn=pn.getChild(0);
  assertTrue(pn instanceof AbstractScanPlanNode);
  AbstractPlanNode proj=pn.getInlinePlanNode(PlanNodeType.PROJECTION);
  NodeSchema schema=proj.getOutputSchema();
  assertEquals(2,schema.size());
  SchemaColumn col=schema.getColumns().get(1);
  assertTrue(col != null);
  assertEquals("SCALAR",col.getColumnName());
  AbstractExpression colExpr=col.getExpression();
  assertEquals(ExpressionType.VALUE_SCALAR,colExpr.getExpressionType());
  assertTrue(colExpr.getLeft() instanceof AbstractSubqueryExpression);
  AbstractSubqueryExpression subqueryExpr=(AbstractSubqueryExpression)colExpr.getLeft();
  AbstractPlanNode subquery=subqueryExpr.getSubqueryNode();
  assertEquals(PlanNodeType.SEQSCAN,subquery.getPlanNodeType());
  AbstractExpression pred=((SeqScanPlanNode)subquery).getPredicate();
  assertEquals(ExpressionType.VALUE_PARAMETER,pred.getRight().getExpressionType());
}
