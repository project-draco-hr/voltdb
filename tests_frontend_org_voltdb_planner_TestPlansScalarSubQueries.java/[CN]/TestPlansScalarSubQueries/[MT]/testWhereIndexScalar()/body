{
{
    AbstractPlanNode pn=compile("select r5.c from r5 where r5.a = (select r1.a from r1 where r1.a = ?);");
    pn=pn.getChild(0);
    assertTrue(pn instanceof IndexScanPlanNode);
    assertNull(((IndexScanPlanNode)pn).getEndExpression());
    AbstractExpression pred=((IndexScanPlanNode)pn).getPredicate();
    assertEquals(ExpressionType.SELECT_SUBQUERY,pred.getRight().getExpressionType());
  }
{
    AbstractPlanNode pn=compile("select r5.c from r5 where (select r1.a from r1 where r1.a = ?) < r5.a;");
    pn=pn.getChild(0);
    assertTrue(pn instanceof IndexScanPlanNode);
    List<AbstractExpression> exprs=((IndexScanPlanNode)pn).getSearchKeyExpressions();
    assertEquals(0,exprs.size());
    assertNotNull(((IndexScanPlanNode)pn).getPredicate());
  }
{
    AbstractPlanNode pn=compile("select r5.c from r5 where r5.a IN (select r1.a from r1);");
    pn=pn.getChild(0);
    assertTrue(pn instanceof IndexScanPlanNode);
    AbstractExpression pred=((IndexScanPlanNode)pn).getPredicate();
    assertEquals(ExpressionType.OPERATOR_EXISTS,pred.getExpressionType());
    assertEquals(ExpressionType.SELECT_SUBQUERY,pred.getLeft().getExpressionType());
  }
{
    AbstractPlanNode pn=compile("select r5.c from r5 where  r5.a = ANY (select r1.a from r1);");
    pn=pn.getChild(0);
    assertTrue(pn instanceof IndexScanPlanNode);
    AbstractExpression expr=((IndexScanPlanNode)pn).getPredicate();
    assertEquals(ExpressionType.OPERATOR_EXISTS,expr.getExpressionType());
    assertEquals(ExpressionType.SELECT_SUBQUERY,expr.getLeft().getExpressionType());
  }
{
    AbstractPlanNode pn=compile("select r5.c from r5 where  r5.a = ANY (select r1.a from r1 limit 3 offset 4);");
    pn=pn.getChild(0);
    assertTrue(pn instanceof IndexScanPlanNode);
    AbstractExpression expr=((IndexScanPlanNode)pn).getPredicate();
    assertEquals(ExpressionType.COMPARE_EQUAL,expr.getExpressionType());
    assertEquals(ExpressionType.SELECT_SUBQUERY,expr.getRight().getExpressionType());
  }
{
    AbstractPlanNode pn=compile("select r5.c from r5 where  r5.a > ALL (select r1.a from r1);");
    pn=pn.getChild(0);
    assertTrue(pn instanceof IndexScanPlanNode);
    AbstractExpression expr=((IndexScanPlanNode)pn).getPredicate();
    assertEquals(ExpressionType.SELECT_SUBQUERY,expr.getRight().getExpressionType());
  }
}
