@staticmethod
def delete(database_id, server_id):
    '\n        Delete the server with specified server_id.\n        Args:\n            server_id (int): The first parameter.\n        Returns:\n            True if the server is deleted otherwise the error message.\n        '
    database = [database for database in Global.DATABASES if (database['id'] == database_id)]
    if (len(database) == 0):
        return make_response(jsonify({'statusstring': ('No database found for id: %u' % database_id), }), 404)
    else:
        members = database[0]['members']
    if (server_id in members):
        server = [server for server in Global.SERVERS if (server['id'] == server_id)]
        if (len(server) == 0):
            return make_response(jsonify({'statusstring': ('No server found for id: %u in database %u' % (server_id, database_id)), }), 404)
        current_database = [database for database in Global.DATABASES if (database['id'] == database_id)]
        current_database[0]['members'].remove(server_id)
        Global.DELETED_HOSTNAME = server[0]['hostname']
        Global.SERVERS.remove(server[0])
        sync_configuration()
        Configuration.write_configuration_file()
        return jsonify({'result': True, })
    else:
        return make_response(jsonify({'statusstring': ('No server found for id: %u in database %u' % (server_id, database_id)), }), 404)
