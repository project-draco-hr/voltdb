@staticmethod
def delete(server_id):
    '\n        Delete the server with specified server_id.\n        Args:\n            server_id (int): The first parameter.\n        Returns:\n            True if the server is deleted otherwise the error message.\n        '
    if ((not request.json) or (not ('dbId' in request.json))):
        abort(400)
    database_id = request.json['dbId']
    server = [server for server in SERVERS if (server['id'] == server_id)]
    if (len(server) == 0):
        abort(404)
    current_database = [database for database in DATABASES if (database['id'] == database_id)]
    current_database[0]['members'].remove(server_id)
    for database in DATABASES:
        if (database['id'] == database_id):
            continue
        if (server_id in database['members']):
            return jsonify({'success': 'Server deleted from given member list only. Server cannot be deleted completely since it is referred by database.', })
    SERVERS.remove(server[0])
    sync_configuration()
    make_configuration_file()
    return jsonify({'result': True, })
