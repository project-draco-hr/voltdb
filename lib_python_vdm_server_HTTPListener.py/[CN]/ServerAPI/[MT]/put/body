@staticmethod
def put(server_id):
    '\n        Update the server with specified server_id.\n        Args:\n            server_id (int): The first parameter.\n        Returns:\n            Information of server with specified server_id after being updated\n            otherwise the error message.\n        '
    inputs = ServerInputs(request)
    if (not inputs.validate()):
        return jsonify(success=False, errors=inputs.errors)
    current_server = [server for server in Global.SERVERS if (server['id'] == server_id)]
    if (len(current_server) == 0):
        abort(404)
    current_server[0]['name'] = request.json.get('name', current_server[0]['name'])
    current_server[0]['hostname'] = request.json.get('hostname', current_server[0]['hostname'])
    current_server[0]['description'] = request.json.get('description', current_server[0]['description'])
    current_server[0]['enabled'] = request.json.get('enabled', current_server[0]['enabled'])
    current_server[0]['admin-listener'] = request.json.get('admin-listener', current_server[0]['admin-listener'])
    current_server[0]['internal-listener'] = request.json.get('internal-listener', current_server[0]['internal-listener'])
    current_server[0]['http-listener'] = request.json.get('http-listener', current_server[0]['http-listener'])
    current_server[0]['zookeeper-listener'] = request.json.get('zookeeper-listener', current_server[0]['zookeeper-listener'])
    current_server[0]['replication-listener'] = request.json.get('replication-listener', current_server[0]['replication-listener'])
    current_server[0]['client-listener'] = request.json.get('client-listener', current_server[0]['client-listener'])
    current_server[0]['internal-interface'] = request.json.get('internal-interface', current_server[0]['internal-interface'])
    current_server[0]['external-interface'] = request.json.get('external-interface', current_server[0]['external-interface'])
    current_server[0]['public-interface'] = request.json.get('public-interface', current_server[0]['public-interface'])
    current_server[0]['placement-group'] = request.json.get('placement-group', current_server[0]['placement-group'])
    sync_configuration()
    write_configuration_file()
    return jsonify({'server': current_server[0], 'status': 1, })
