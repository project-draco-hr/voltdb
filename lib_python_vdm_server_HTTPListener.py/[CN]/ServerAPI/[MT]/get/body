@staticmethod
def get(database_id, server_id):
    '\n        Gets the information of the server with specified server_id. If the server_id is\n        not specified, then it returns the information of all the servers.\n        Args:\n            server_id (int): The first parameter. Defaults to None.\n        Returns:\n            server or list of servers.\n        '
    database = [database for database in Global.DATABASES if (database['id'] == database_id)]
    if (len(database) == 0):
        return make_response(jsonify({'statusstring': ('No database found for id: %u' % database_id), }), 404)
    else:
        members = database[0]['members']
    if (server_id in members):
        get_configuration()
        if (server_id is None):
            return jsonify({'servers': [make_public_server(x) for x in Global.SERVERS], })
        else:
            server = [server for server in Global.SERVERS if (server['id'] == server_id)]
            if (not server):
                abort(404)
            return jsonify({'server': make_public_server(server[0]), })
    else:
        return jsonify({'statusstring': ("Given server with id, %u doesn't belong to database with id, %u" % (server_id, database_id)), })
