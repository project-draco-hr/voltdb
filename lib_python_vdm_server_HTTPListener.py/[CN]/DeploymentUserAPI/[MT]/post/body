@staticmethod
def post(database_id):
    '\n        #     Add user information with specified username.\n        #     Args:\n        #         user (string): The first parameter.\n        #     Returns:\n        #         Deployment user object of added deployment user.\n        #     '
    inputs = UserInputs(request)
    if (not inputs.validate()):
        return jsonify(success=False, errors=inputs.errors)
    user = [(v if (type(v) is list) else [v]) for v in Global.DEPLOYMENT_USERS.values()]
    if ((request.json['name'] in [d['name'] for item in user for d in item]) and (d['databaseid'] == database_id)):
        return make_response(jsonify({'error': 'user name already exists', }), 404)
    if (not Global.DEPLOYMENT_USERS):
        user_id = 1
    else:
        user_id = (len(Global.DEPLOYMENT_USERS) + 1)
    try:
        Global.DEPLOYMENT_USERS[user_id] = {'userid': user_id, 'databaseid': database_id, 'name': request.json['name'], 'password': urllib.unquote(str(request.json['password']).encode('ascii')).decode('utf-8'), 'roles': request.json['roles'], 'plaintext': True, }
    except Exception as err:
        print err
    sync_configuration()
    Configuration.write_configuration_file()
    return jsonify({'user': Global.DEPLOYMENT_USERS.get(user_id), 'status': 1, 'statusstring': 'User Created', })
