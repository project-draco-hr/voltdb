@staticmethod
def put(username, database_id):
    '\n        Add user information with specified username.\n        Args:\n            user (string): The first parameter.\n        Returns:\n            Deployment user object of added deployment user.\n        '
    inputs = UserInputs(request)
    if (not inputs.validate()):
        return jsonify(success=False, errors=inputs.errors)
    current_user = Global.DEPLOYMENT_USERS.get(username)
    if (current_user is not None):
        if (len(current_user) != 0):
            return make_response(jsonify({'error': 'Duplicate Username', 'success': False, }), 404)
    deployment_user = map_deployment_users(request, username)
    if (Global.DEPLOYMENT[database_id]['users'] is None):
        Global.DEPLOYMENT[database_id]['users'] = {}
        Global.DEPLOYMENT[database_id]['users']['user'] = []
    try:
        Global.DEPLOYMENT[database_id]['users']['user'].append({'name': deployment_user['name'], 'roles': deployment_user['roles'], 'plaintext': deployment_user['plaintext'], })
    except Exception as err:
        print err
    sync_configuration()
    Configuration.write_configuration_file()
    return jsonify({'user': deployment_user, 'status': 1, })
