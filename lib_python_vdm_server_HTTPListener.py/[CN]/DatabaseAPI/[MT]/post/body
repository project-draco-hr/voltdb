@staticmethod
def post():
    '\n        Saves the database.\n        Returns:\n            Information and the status of database if it is saved otherwise the error message.\n        '
    inputs = DatabaseInputs(request)
    if (not inputs.validate()):
        return jsonify(success=False, errors=inputs.errors)
    database = [database for database in DATABASES if (database['name'] == request.json['name'])]
    if (len(database) != 0):
        return make_response(jsonify({'error': 'database name already exists', }), 404)
    if (not DATABASES):
        database_id = 1
    else:
        database_id = (DATABASES[(-1)]['id'] + 1)
    database = {'id': database_id, 'name': request.json['name'], 'deployment': request.json.get('deployment', ''), 'members': [], }
    DATABASES.append(database)
    with open('server/deployment.json') as json_file:
        deployment = json.load(json_file)
        deployment['databaseid'] = database_id
    DEPLOYMENT.append(deployment)
    return (jsonify({'database': database, 'status': 1, }), 201)
