@staticmethod
def post():
    '\n        Saves the database.\n        Returns:\n            Information and the status of database if it is saved otherwise the error message.\n        '
    sync_configuration()
    Configuration.write_configuration_file()
    inputs = DatabaseInputs(request)
    if (not inputs.validate()):
        return jsonify(success=False, errors=inputs.errors)
    database = [database for database in Global.DATABASES if (database['name'] == request.json['name'])]
    if (len(database) != 0):
        return make_response(jsonify({'error': 'database name already exists', }), 404)
    if (not Global.DATABASES):
        database_id = 1
    else:
        database_id = (Global.DATABASES[(-1)]['id'] + 1)
    database = {'id': database_id, 'name': request.json['name'], 'members': [], }
    Global.DATABASES.append(database)
    app_root = os.path.dirname(os.path.abspath(__file__))
    with open(os.path.join(app_root, 'deployment.json')) as json_file:
        deployment = json.load(json_file)
        deployment['databaseid'] = database_id
        is_pro_version(deployment)
    Global.DEPLOYMENT.append(deployment)
    sync_configuration()
    Configuration.write_configuration_file()
    return (jsonify({'database': database, 'status': 1, }), 201)
