@staticmethod
def get(database_id, server_id):
    database = Global.DATABASES.get(database_id)
    if (not database):
        return make_response(jsonify({'status': 404, 'statusString': 'Not found', }), 404)
    else:
        server = Global.SERVERS.get(server_id)
        if (len(database['members']) == 0):
            return jsonify({'status': 200, 'statusString': 'OK', 'statusString': 'errorNoMembers', })
        if (not server):
            return make_response(jsonify({'status': 404, 'statusString': 'Not found', }), 404)
        elif (server_id not in database['members']):
            return make_response(jsonify({'status': 404, 'statusString': 'Not found', }), 404)
        else:
            try:
                if (not server['client-listener']):
                    client_port = 21212
                    client_host = str(server['hostname'])
                else:
                    client_listener = server['client-listener']
                    if (':' in client_listener):
                        arr_client = client_listener.split(':', 2)
                        client_port = int(arr_client[1])
                        client_host = str(arr_client[0])
                    else:
                        client_port = int(client_listener)
                        client_host = str(server['hostname'])
                client = voltdbclient.FastSerializer(client_host, client_port)
                proc = voltdbclient.VoltProcedure(client, '@Ping')
                response = proc.call()
                success = ''
                try:
                    success = Log.get_error_log_details()
                except:
                    pass
                return jsonify({'status': 200, 'statusString': 'OK', 'serverStatus': {'status': 'running', 'details': success, }, })
                success = ''
                try:
                    success = Log.get_error_log_details()
                except:
                    pass
                voltProcess = voltdbserver.VoltDatabase(database_id)
                if voltProcess.Get_Voltdb_Process(database_id).isProcessRunning:
                    return jsonify({'status': 200, 'statusString': 'OK', 'serverStatus': {'status': 'running', 'details': success, }, })
                else:
                    return jsonify({'status': 200, 'statusString': 'OK', 'serverStatus': {'status': 'stopped', 'details': success, }, })
            except:
                voltProcess = voltdbserver.VoltDatabase(database_id)
                error = ''
                try:
                    error = Log.get_error_log_details()
                except:
                    pass
                if voltProcess.Get_Voltdb_Process(database_id).isProcessRunning:
                    return jsonify({'status': 200, 'statusString': 'OK', 'serverStatus': {'status': 'stalled', 'details': error, }, })
                else:
                    return jsonify({'status': 200, 'statusString': 'OK', 'serverStatus': {'status': 'stopped', 'details': error, }, })
