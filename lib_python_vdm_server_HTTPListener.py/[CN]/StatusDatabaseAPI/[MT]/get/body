@staticmethod
def get(database_id):
    serverDetails = []
    status = []
    result = get_configuration()
    has_stalled = False
    has_stopped = False
    has_run = False
    if (len(result['vdm']['members']) == 0):
        return jsonify({'status': 'errorNoMembers', })
    for member in result['vdm']['members']:
        url = ('http://%s:%u/api/1.0/databases/%u/servers/%u/status/' % (member['hostname'], __PORT__, database_id, member['id']))
        try:
            response = requests.get(url)
        except:
            return jsonify({'status': 'error', 'hostname': member['hostname'], })
        if (response.json()['status'] == 'stalled'):
            if (not has_stalled):
                has_stalled = True
        elif (response.json()['status'] == 'running'):
            if (not has_run):
                has_run = True
        elif (response.json()['status'] == 'stopped'):
            if (not has_stopped):
                has_stopped = True
    serverDetails.append({member['hostname']: response.json(), })
    if has_stalled:
        status.append({'status': 'stalled', })
    elif ((has_run == True) and has_stopped):
        status.append({'status': 'stalled', })
    elif ((not has_stalled) and (not has_stopped) and has_run):
        status.append({'status': 'running', })
    elif (has_stopped and (not has_stalled) and (not has_run)):
        status.append({'status': 'stopped', })
    return jsonify({'status': status, 'serverDetails': serverDetails, })
