@staticmethod
def put(database_id):
    '\n        Stops the specified VoltDB\n        Args:\n            database_id (int): The id of the database that should be stopped\n        Returns:\n            Status string indicating if the stop request was sent successfully\n        '
    if ('force' in request.args):
        is_force = request.args.get('force').lower()
    else:
        is_force = 'false'
    if (is_force == 'true'):
        server = voltdbserver.VoltDatabase(database_id)
        response = server.stop_database(database_id)
        resp_json = json.loads(response.data)
        return make_response(jsonify({'status': 200, 'statusString': resp_json['statusString'], }))
    else:
        try:
            server = voltdbserver.VoltDatabase(database_id)
            response = server.kill_database()
            resp_json = json.loads(json.loads(response.data)['statusString'])
            resp_status = {}
            for value in resp_json:
                resp_status[value] = {'status': json.loads(resp_json[value])['statusString'], }
            return make_response(jsonify({'status': 200, 'statusString': str(resp_status), }), 200)
        except Exception as err:
            print traceback.format_exc()
            return make_response(jsonify({'status': 500, 'statusString': str(err), }), 500)
