def get_deployment_from_xml(deployment_xml, is_list):
    new_deployment = {}
    deployments = []
    if (is_list is 'list'):
        for deployment in deployment_xml:
            new_deployment = {}
            for field in deployment:
                if (field == 'export'):
                    if (deployment[field] is not None):
                        if (type(deployment[field]['configuration']) is list):
                            new_deployment[field] = get_deployment_export_field(deployment[field]['configuration'], 'list')
                        else:
                            new_deployment[field] = get_deployment_export_field(deployment[field]['configuration'], 'dict')
                    else:
                        new_deployment[field] = deployment[field]
                elif (field == 'import'):
                    if (deployment[field] is not None):
                        if (type(deployment[field]['configuration']) is list):
                            new_deployment[field] = get_deployment_export_field(deployment[field]['configuration'], 'list')
                        else:
                            new_deployment[field] = get_deployment_export_field(deployment[field]['configuration'], 'dict')
                    else:
                        new_deployment[field] = deployment[field]
                elif (field == 'admin-mode'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['adminstartup'] = parse_bool_string(deployment[field]['adminstartup'])
                        new_deployment[field]['port'] = int(deployment[field]['port'])
                    except Exception as err:
                        print ('Failed to get deployment: ' % str(err))
                elif (field == 'cluster'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['hostcount'] = int(deployment[field]['hostcount'])
                        new_deployment[field]['kfactor'] = int(deployment[field]['kfactor'])
                        new_deployment[field]['sitesperhost'] = int(deployment[field]['sitesperhost'])
                        new_deployment[field]['elastic'] = str(deployment[field]['elastic'])
                        new_deployment[field]['schema'] = str(deployment[field]['schema'])
                    except Exception as err:
                        print str(err)
                elif (field == 'commandlog'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                        new_deployment[field]['synchronous'] = parse_bool_string(deployment[field]['synchronous'])
                        new_deployment[field]['logsize'] = int(deployment[field]['logsize'])
                        new_deployment[field]['frequency'] = {}
                        new_deployment[field]['frequency']['transactions'] = int(deployment[field]['frequency']['transactions'])
                        new_deployment[field]['frequency']['time'] = int(deployment[field]['frequency']['time'])
                    except Exception as err:
                        print str(err)
                elif (field == 'heartbeat'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['timeout'] = int(deployment[field]['timeout'])
                    except Exception as err:
                        print str(err)
                elif (field == 'httpd'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['port'] = int(deployment[field]['port'])
                        new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                        new_deployment[field]['jsonapi'] = {}
                        new_deployment[field]['jsonapi']['enabled'] = parse_bool_string(deployment[field]['jsonapi']['enabled'])
                    except Exception as err:
                        print str(err)
                elif (field == 'partition-detection'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                        new_deployment[field]['snapshot'] = {}
                        new_deployment[field]['snapshot']['prefix'] = parse_bool_string(deployment[field]['snapshot']['prefix'])
                    except Exception as err:
                        print str(err)
                elif (field == 'security'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                        new_deployment[field]['provider'] = str(deployment[field]['provider'])
                    except Exception as err:
                        print str(err)
                elif (field == 'snapshot'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                        new_deployment[field]['frequency'] = str(deployment[field]['frequency'])
                        new_deployment[field]['prefix'] = str(deployment[field]['prefix'])
                        new_deployment[field]['retain'] = int(deployment[field]['retain'])
                    except Exception as err:
                        print str(err)
                elif (field == 'systemsettings'):
                    try:
                        new_deployment[field] = {}
                        new_deployment[field]['elastic'] = {}
                        new_deployment[field]['elastic']['duration'] = int(deployment[field]['elastic']['duration'])
                        new_deployment[field]['elastic']['throughput'] = int(deployment[field]['elastic']['throughput'])
                        new_deployment[field]['query'] = {}
                        new_deployment[field]['query']['timeout'] = int(deployment[field]['query']['timeout'])
                        new_deployment[field]['snapshot'] = {}
                        new_deployment[field]['snapshot']['priority'] = int(deployment[field]['snapshot']['priority'])
                        new_deployment[field]['temptables'] = {}
                        new_deployment[field]['temptables']['maxsize'] = int(deployment[field]['temptables']['maxsize'])
                        if (deployment[field]['resourcemonitor'] is None):
                            new_deployment[field]['resourcemonitor'] = deployment[field]['resourcemonitor']
                        else:
                            new_deployment[field]['resourcemonitor'] = {}
                            new_deployment[field]['resourcemonitor']['memorylimit'] = deployment[field]['resourcemonitor']['memorylimit']
                            if (type(new_deployment[field]['resourcemonitor']['memorylimit']) is list):
                                new_deployment[field]['resourcemonitor']['disklimit'] = get_deployment_properties(deployment[field]['resourcemonitor']['disklimit'], 'list')
                            else:
                                new_deployment[field]['resourcemonitor']['disklimit'] = get_deployment_properties(deployment[field]['resourcemonitor']['disklimit'], 'dict')
                    except Exception as err:
                        print str(err)
                elif (field == 'dr'):
                    try:
                        if (deployment[field] is not None):
                            new_deployment[field] = {}
                            new_deployment[field]['id'] = int(deployment[field]['id'])
                            new_deployment[field]['enabled'] = parse_bool_string(deployment[field]['enabled'])
                            new_deployment[field]['type'] = str(deployment[field]['type'])
                            if ('connection' not in deployment[field]):
                                new_deployment[field]['connection'] = {}
                                new_deployment[field]['connection']['source'] = deployment[field]['connection']['source']
                                new_deployment[field]['connection']['servers'] = deployment[field]['connection']['servers']
                    except Exception as err:
                        print str(err)
                elif (field == 'users'):
                    if (deployment[field] is not None):
                        new_deployment[field] = {}
                        if (type(deployment[field]['user']) is list):
                            new_deployment[field]['user'] = []
                            new_deployment[field]['user'] = get_deployment_properties(deployment[field]['user'], 'list')
                        else:
                            new_deployment[field]['user'] = []
                            new_deployment[field]['user'] = get_deployment_properties(deployment[field]['user'], 'dict')
                else:
                    new_deployment[field] = convert_deployment_field_required_format(deployment, field)
            deployments.append(new_deployment)
    else:
        for field in deployment_xml:
            if (field == 'export'):
                if (deployment_xml[field] is not None):
                    if (type(deployment_xml[field]['configuration']) is list):
                        new_deployment[field] = get_deployment_export_field(deployment_xml[field]['configuration'], 'list')
                    else:
                        new_deployment[field] = get_deployment_export_field(deployment_xml[field]['configuration'], 'dict')
                else:
                    new_deployment[field] = deployment_xml[field]
            elif (field == 'import'):
                if (deployment_xml[field] is not None):
                    if (type(deployment_xml[field]['configuration']) is list):
                        new_deployment[field] = get_deployment_export_field(deployment_xml[field]['configuration'], 'list')
                    else:
                        new_deployment[field] = get_deployment_export_field(deployment_xml[field]['configuration'], 'dict')
                else:
                    new_deployment[field] = deployment_xml[field]
            elif (field == 'admin-mode'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['adminstartup'] = parse_bool_string(deployment_xml[field]['adminstartup'])
                    new_deployment[field]['port'] = int(deployment_xml[field]['port'])
                except Exception as err:
                    print str(err)
            elif (field == 'cluster'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['hostcount'] = int(deployment_xml[field]['hostcount'])
                    new_deployment[field]['kfactor'] = int(deployment_xml[field]['kfactor'])
                    new_deployment[field]['sitesperhost'] = int(deployment_xml[field]['sitesperhost'])
                    new_deployment[field]['elastic'] = str(deployment_xml[field]['elastic'])
                    new_deployment[field]['schema'] = str(deployment_xml[field]['schema'])
                except Exception as err:
                    print str(err)
            elif (field == 'commandlog'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['enabled'] = parse_bool_string(deployment_xml[field]['enabled'])
                    new_deployment[field]['synchronous'] = parse_bool_string(deployment_xml[field]['synchronous'])
                    new_deployment[field]['logsize'] = int(deployment_xml[field]['logsize'])
                    new_deployment[field]['frequency'] = {}
                    new_deployment[field]['frequency']['transactions'] = int(deployment_xml[field]['frequency']['transactions'])
                    new_deployment[field]['frequency']['time'] = int(deployment_xml[field]['frequency']['time'])
                except Exception as err:
                    print str(err)
            elif (field == 'heartbeat'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['timeout'] = int(deployment_xml[field]['timeout'])
                except Exception as err:
                    print str(err)
            elif (field == 'httpd'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['port'] = int(deployment_xml[field]['port'])
                    new_deployment[field]['enabled'] = parse_bool_string(deployment_xml[field]['enabled'])
                    new_deployment[field]['jsonapi'] = {}
                    new_deployment[field]['jsonapi']['enabled'] = parse_bool_string(deployment_xml[field]['jsonapi']['enabled'])
                except Exception as err:
                    print str(err)
            elif (field == 'partition-detection'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['enabled'] = parse_bool_string(deployment_xml[field]['enabled'])
                    new_deployment[field]['snapshot'] = {}
                    new_deployment[field]['snapshot']['prefix'] = parse_bool_string(deployment_xml[field]['snapshot']['prefix'])
                except Exception as err:
                    print str(err)
            elif (field == 'security'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['enabled'] = parse_bool_string(deployment_xml[field]['enabled'])
                    new_deployment[field]['provider'] = str(deployment_xml[field]['provider'])
                except Exception as err:
                    print str(err)
            elif (field == 'snapshot'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['enabled'] = parse_bool_string(deployment_xml[field]['enabled'])
                    new_deployment[field]['frequency'] = str(deployment_xml[field]['frequency'])
                    new_deployment[field]['prefix'] = str(deployment_xml[field]['prefix'])
                    new_deployment[field]['retain'] = int(deployment_xml[field]['retain'])
                except Exception as err:
                    print str(err)
            elif (field == 'systemsettings'):
                try:
                    new_deployment[field] = {}
                    new_deployment[field]['elastic'] = {}
                    new_deployment[field]['elastic']['duration'] = int(deployment_xml[field]['elastic']['duration'])
                    new_deployment[field]['elastic']['throughput'] = int(deployment_xml[field]['elastic']['throughput'])
                    new_deployment[field]['query'] = {}
                    new_deployment[field]['query']['timeout'] = int(deployment_xml[field]['query']['timeout'])
                    new_deployment[field]['snapshot'] = {}
                    new_deployment[field]['snapshot']['priority'] = int(deployment_xml[field]['snapshot']['priority'])
                    new_deployment[field]['temptables'] = {}
                    new_deployment[field]['temptables']['maxsize'] = int(deployment_xml[field]['temptables']['maxsize'])
                    if (deployment_xml[field]['resourcemonitor'] is None):
                        new_deployment[field]['resourcemonitor'] = deployment_xml[field]['resourcemonitor']
                    else:
                        new_deployment[field]['resourcemonitor'] = {}
                        new_deployment[field]['resourcemonitor']['memorylimit'] = deployment_xml[field]['resourcemonitor']['memorylimit']
                        if (type(new_deployment[field]['resourcemonitor']['memorylimit']) is list):
                            new_deployment[field]['resourcemonitor']['disklimit'] = get_deployment_properties(deployment_xml[field]['resourcemonitor']['disklimit'], 'list')
                        else:
                            new_deployment[field]['resourcemonitor']['disklimit'] = get_deployment_properties(deployment_xml[field]['resourcemonitor']['disklimit'], 'dict')
                except Exception as err:
                    print str(err)
            elif (field == 'dr'):
                try:
                    if (deployment_xml[field] is not None):
                        new_deployment[field] = {}
                        new_deployment[field]['id'] = int(deployment_xml[field]['id'])
                        new_deployment[field]['enabled'] = parse_bool_string(deployment_xml[field]['enabled'])
                        new_deployment[field]['type'] = str(deployment_xml[field]['type'])
                        if ('connection' not in deployment_xml[field]):
                            new_deployment[field]['connection'] = {}
                            new_deployment[field]['connection']['source'] = deployment_xml[field]['connection']['source']
                            new_deployment[field]['connection']['servers'] = deployment_xml[field]['connection']['servers']
                except Exception as err:
                    print str(err)
            else:
                new_deployment[field] = convert_deployment_field_required_format(deployment_xml, field)
        deployments.append(new_deployment)
    return deployments
