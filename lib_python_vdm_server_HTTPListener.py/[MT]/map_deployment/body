def map_deployment(request, database_id):
    '\n    Map the deployment information from request to deployment object in required format.\n    Args:\n        request (request object): The first parameter.\n        database_id (int): The second parameter\n    Returns:\n        Deployment object in required format.\n    '
    deployment = Global.DEPLOYMENT.get(database_id)
    if (('cluster' in request.json) and ('elastic' in request.json['cluster'])):
        deployment['cluster']['elastic'] = request.json['cluster']['elastic']
    if (('cluster' in request.json) and ('schema' in request.json['cluster'])):
        deployment['cluster']['schema'] = request.json['cluster']['schema']
    if (('cluster' in request.json) and ('sitesperhost' in request.json['cluster'])):
        deployment['cluster']['sitesperhost'] = request.json['cluster']['sitesperhost']
    if (('cluster' in request.json) and ('kfactor' in request.json['cluster'])):
        deployment['cluster']['kfactor'] = request.json['cluster']['kfactor']
    if (('admin-mode' in request.json) and ('adminstartup' in request.json['admin-mode'])):
        deployment['admin-mode']['adminstartup'] = request.json['admin-mode']['adminstartup']
    if (('admin-mode' in request.json) and ('port' in request.json['admin-mode'])):
        deployment['admin-mode']['port'] = request.json['admin-mode']['port']
    if (('commandlog' in request.json) and ('adminstartup' in request.json['commandlog'])):
        deployment['commandlog']['adminstartup'] = request.json['commandlog']['adminstartup']
    if (('commandlog' in request.json) and ('frequency' in request.json['commandlog']) and ('time' in request.json['commandlog']['frequency'])):
        deployment['commandlog']['frequency']['time'] = request.json['commandlog']['frequency']['time']
    if (('commandlog' in request.json) and ('frequency' in request.json['commandlog']) and ('transactions' in request.json['commandlog']['frequency'])):
        deployment['commandlog']['frequency']['transactions'] = request.json['commandlog']['frequency']['transactions']
    if (('commandlog' in request.json) and ('enabled' in request.json['commandlog'])):
        deployment['commandlog']['enabled'] = request.json['commandlog']['enabled']
    if (('commandlog' in request.json) and ('logsize' in request.json['commandlog'])):
        deployment['commandlog']['logsize'] = request.json['commandlog']['logsize']
    if (('commandlog' in request.json) and ('synchronous' in request.json['commandlog'])):
        deployment['commandlog']['synchronous'] = request.json['commandlog']['synchronous']
    if (('heartbeat' in request.json) and ('timeout' in request.json['heartbeat'])):
        deployment['heartbeat']['timeout'] = request.json['heartbeat']['timeout']
    if (('httpd' in request.json) and ('enabled' in request.json['httpd'])):
        deployment['httpd']['enabled'] = request.json['httpd']['enabled']
    if (('httpd' in request.json) and ('jsonapi' in request.json['httpd']) and ('enabled' in request.json['httpd']['jsonapi'])):
        deployment['httpd']['jsonapi']['enabled'] = request.json['httpd']['jsonapi']['enabled']
    if (('httpd' in request.json) and ('port' in request.json['httpd'])):
        deployment['httpd']['port'] = request.json['httpd']['port']
    if (('partition-detection' in request.json) and ('enabled' in request.json['partition-detection'])):
        deployment['partition-detection']['enabled'] = request.json['partition-detection']['enabled']
    if (('partition-detection' in request.json) and ('snapshot' in request.json['partition-detection']) and ('prefix' in request.json['partition-detection']['snapshot'])):
        deployment['partition-detection']['snapshot']['prefix'] = request.json['partition-detection']['snapshot']['prefix']
    if (('paths' in request.json) and ('commandlog' in request.json['paths']) and ('path' in request.json['paths']['commandlog'])):
        deployment['paths']['commandlog']['path'] = request.json['paths']['commandlog']['path']
    if (('paths' in request.json) and ('commandlogsnapshot' in request.json['paths']) and ('path' in request.json['paths']['commandlogsnapshot'])):
        deployment['paths']['commandlogsnapshot']['path'] = request.json['paths']['commandlogsnapshot']['path']
    if (('paths' in request.json) and ('droverflow' in request.json['paths']) and ('path' in request.json['paths']['droverflow'])):
        deployment['paths']['droverflow']['path'] = request.json['paths']['droverflow']['path']
    if (('paths' in request.json) and ('exportoverflow' in request.json['paths']) and ('path' in request.json['paths']['exportoverflow'])):
        deployment['paths']['exportoverflow']['path'] = request.json['paths']['exportoverflow']['path']
    if (('paths' in request.json) and ('snapshots' in request.json['paths']) and ('path' in request.json['paths']['snapshots'])):
        deployment['paths']['snapshots']['path'] = request.json['paths']['snapshots']['path']
    if (('paths' in request.json) and ('voltdbroot' in request.json['paths']) and ('path' in request.json['paths']['voltdbroot'])):
        deployment['paths']['voltdbroot']['path'] = request.json['paths']['voltdbroot']['path']
    if (('security' in request.json) and ('enabled' in request.json['security'])):
        deployment['security']['enabled'] = request.json['security']['enabled']
    if (('security' in request.json) and ('frequency' in request.json['security'])):
        deployment['security']['frequency'] = request.json['security']['frequency']
    if (('security' in request.json) and ('provider' in request.json['security'])):
        deployment['security']['provider'] = request.json['security']['provider']
    if (('snapshot' in request.json) and ('enabled' in request.json['snapshot'])):
        deployment['snapshot']['enabled'] = request.json['snapshot']['enabled']
    if (('snapshot' in request.json) and ('frequency' in request.json['snapshot'])):
        deployment['snapshot']['frequency'] = request.json['snapshot']['frequency']
    if (('snapshot' in request.json) and ('prefix' in request.json['snapshot'])):
        deployment['snapshot']['prefix'] = request.json['snapshot']['prefix']
    if (('snapshot' in request.json) and ('retain' in request.json['snapshot'])):
        deployment['snapshot']['retain'] = request.json['snapshot']['retain']
    if (('systemsettings' in request.json) and ('elastic' in request.json['systemsettings']) and ('duration' in request.json['systemsettings']['elastic'])):
        deployment['systemsettings']['elastic']['duration'] = request.json['systemsettings']['elastic']['duration']
    if (('systemsettings' in request.json) and ('elastic' in request.json['systemsettings']) and ('throughput' in request.json['systemsettings']['elastic'])):
        deployment['systemsettings']['elastic']['throughput'] = request.json['systemsettings']['elastic']['throughput']
    if (('systemsettings' in request.json) and ('query' in request.json['systemsettings']) and ('timeout' in request.json['systemsettings']['query'])):
        deployment['systemsettings']['query']['timeout'] = request.json['systemsettings']['query']['timeout']
    if (('systemsettings' in request.json) and ('temptables' in request.json['systemsettings']) and ('maxsize' in request.json['systemsettings']['temptables'])):
        deployment['systemsettings']['temptables']['maxsize'] = request.json['systemsettings']['temptables']['maxsize']
    if (('systemsettings' in request.json) and ('snapshot' in request.json['systemsettings']) and ('priority' in request.json['systemsettings']['snapshot'])):
        deployment['systemsettings']['snapshot']['priority'] = request.json['systemsettings']['snapshot']['priority']
    if (('systemsettings' in request.json) and ('resourcemonitor' in request.json['systemsettings'])):
        if (('resourcemonitor' not in deployment['systemsettings']) or (deployment['systemsettings']['resourcemonitor'] is None)):
            deployment['systemsettings']['resourcemonitor'] = {}
        if ('memorylimit' in request.json['systemsettings']['resourcemonitor']):
            deployment['systemsettings']['resourcemonitor']['memorylimit'] = {}
            if (('systemsettings' in request.json) and ('resourcemonitor' in request.json['systemsettings']) and ('memorylimit' in request.json['systemsettings']['resourcemonitor']) and ('size' in request.json['systemsettings']['resourcemonitor']['memorylimit'])):
                if (request.json['systemsettings']['resourcemonitor']['memorylimit']['size'] != ''):
                    deployment['systemsettings']['resourcemonitor']['memorylimit']['size'] = request.json['systemsettings']['resourcemonitor']['memorylimit']['size']
                else:
                    deployment['systemsettings']['resourcemonitor']['memorylimit'] = {}
    if (('systemsettings' in request.json) and ('resourcemonitor' in request.json['systemsettings'])):
        if (('resourcemonitor' not in deployment['systemsettings']) or (deployment['systemsettings']['resourcemonitor'] is None)):
            deployment['systemsettings']['resourcemonitor'] = {}
        if ('disklimit' in request.json['systemsettings']['resourcemonitor']):
            deployment['systemsettings']['resourcemonitor']['disklimit'] = {}
            if ('feature' in request.json['systemsettings']['resourcemonitor']['disklimit']):
                deployment['systemsettings']['resourcemonitor']['disklimit']['feature'] = []
                if request.json['systemsettings']['resourcemonitor']['disklimit']['feature']:
                    for feature in request.json['systemsettings']['resourcemonitor']['disklimit']['feature']:
                        deployment['systemsettings']['resourcemonitor']['disklimit']['feature'].append({'name': feature['name'], 'size': feature['size'], })
                else:
                    deployment['systemsettings']['resourcemonitor']['disklimit'] = {}
    if (('systemsettings' in deployment) and ('resourcemonitor' in deployment['systemsettings'])):
        result = False
        if (('memorylimit' in deployment['systemsettings']['resourcemonitor']) and deployment['systemsettings']['resourcemonitor']['memorylimit']):
            result = True
        if (('disklimit' in deployment['systemsettings']['resourcemonitor']) and deployment['systemsettings']['resourcemonitor']['disklimit']):
            result = True
        if (result == False):
            deployment['systemsettings']['resourcemonitor'] = {}
    if ('import' in request.json):
        if (('import' not in deployment) or (deployment['import'] is None) or (deployment['import'] == 'None')):
            deployment['import'] = {}
    if (('import' in request.json) and ('configuration' in request.json['import'])):
        deployment['import']['configuration'] = []
        i = 0
        for configuration in request.json['import']['configuration']:
            deployment['import']['configuration'].append({'enabled': configuration['enabled'], 'module': configuration['module'], 'type': configuration['type'], 'format': configuration['format'], 'property': [], })
            if ('property' in configuration):
                for property in configuration['property']:
                    deployment['import']['configuration'][i]['property'].append({'name': property['name'], 'value': property['value'], })
                i += 1
    if ('export' in request.json):
        if (('export' not in deployment) or (deployment['export'] is None) or (deployment['import'] == 'None')):
            deployment['export'] = {}
    if (('export' in request.json) and ('configuration' in request.json['export'])):
        try:
            deployment['export']['configuration'] = []
        except Exception as err:
            print err
        i = 0
        for configuration in request.json['export']['configuration']:
            deployment['export']['configuration'].append({'enabled': configuration['enabled'], 'stream': configuration['stream'], 'type': configuration['type'], 'exportconnectorclass': configuration['exportconnectorclass'], 'property': [], })
            if ('property' in configuration):
                for property in configuration['property']:
                    deployment['export']['configuration'][i]['property'].append({'name': property['name'], 'value': property['value'], })
                i += 1
    if (('users' in request.json) and ('user' in request.json['users'])):
        deployment['users'] = {}
        deployment['users']['user'] = []
        for user in request.json['users']['user']:
            deployment['users']['user'].append({'name': user['name'], 'roles': user['roles'], 'password': user['password'], 'plaintext': user['plaintext'], })
    if ('dr' in request.json):
        if (('dr' not in deployment) or (deployment['dr'] is None)):
            deployment['dr'] = {}
    if (('dr' in request.json) and ('connection' in request.json['dr'])):
        if (not hasattr(deployment['dr'], 'connection')):
            deployment['dr']['connection'] = {}
    if (('dr' in request.json) and ('connection' in request.json['dr']) and ('source' not in request.json['dr']['connection'])):
        deployment['dr']['connection'] = None
    if (('dr' in request.json) and ('id' in request.json['dr'])):
        deployment['dr']['id'] = request.json['dr']['id']
    if (('dr' in request.json) and ('listen' in request.json['dr'])):
        deployment['dr']['listen'] = request.json['dr']['listen']
    if (('dr' in request.json) and request.json['dr']):
        if ('port' in request.json['dr']):
            deployment['dr']['port'] = request.json['dr']['port']
        else:
            deployment['dr']['port'] = None
    if (('dr' in request.json) and ('connection' in request.json['dr']) and ('source' in request.json['dr']['connection'])):
        deployment['dr']['connection']['source'] = request.json['dr']['connection']['source']
    if (('dr' in request.json) and (not request.json['dr'])):
        deployment['dr'] = {}
    if (('dr' in request.json) and ('connection' in request.json['dr']) and (not request.json['dr']['connection'])):
        deployment['dr']['connection'] = {}
    return deployment
