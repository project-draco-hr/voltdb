def map_deployment(request, database_id):
    '\n    Map the deployment information from request to deployment object in required format.\n    Args:\n        request (request object): The first parameter.\n        database_id (int): The second parameter\n    Returns:\n        Deployment object in required format.\n    '
    deployment = filter((lambda t: (t['databaseid'] == database_id)), DEPLOYMENT)
    if (('cluster' in request.json) and ('elastic' in request.json['cluster'])):
        deployment[0]['cluster']['elastic'] = request.json['cluster']['elastic']
    if (('cluster' in request.json) and ('schema' in request.json['cluster'])):
        deployment[0]['cluster']['schema'] = request.json['cluster']['schema']
    if (('cluster' in request.json) and ('sitesperhost' in request.json['cluster'])):
        deployment[0]['cluster']['sitesperhost'] = request.json['cluster']['sitesperhost']
    if (('cluster' in request.json) and ('kfactor' in request.json['cluster'])):
        deployment[0]['cluster']['kfactor'] = request.json['cluster']['kfactor']
    if (('adminMode' in request.json) and ('adminstartup' in request.json['adminMode'])):
        deployment[0]['adminMode']['adminstartup'] = request.json['adminMode']['adminstartup']
    if (('adminMode' in request.json) and ('port' in request.json['adminMode'])):
        deployment[0]['adminMode']['port'] = request.json['adminMode']['port']
    if (('commandlog' in request.json) and ('adminstartup' in request.json['commandlog'])):
        deployment[0]['commandlog']['adminstartup'] = request.json['commandlog']['adminstartup']
    if (('commandlog' in request.json) and ('frequency' in request.json['commandlog']) and ('time' in request.json['commandlog']['frequency'])):
        deployment[0]['commandlog']['frequency']['time'] = request.json['commandlog']['frequency']['time']
    if (('commandlog' in request.json) and ('frequency' in request.json['commandlog']) and ('transactions' in request.json['commandlog']['frequency'])):
        deployment[0]['commandlog']['frequency']['transactions'] = request.json['commandlog']['frequency']['transactions']
    if (('commandlog' in request.json) and ('enabled' in request.json['commandlog'])):
        deployment[0]['commandlog']['enabled'] = request.json['commandlog']['enabled']
    if (('commandlog' in request.json) and ('logsize' in request.json['commandlog'])):
        deployment[0]['commandlog']['logsize'] = request.json['commandlog']['logsize']
    if (('commandlog' in request.json) and ('synchronous' in request.json['commandlog'])):
        deployment[0]['commandlog']['synchronous'] = request.json['commandlog']['synchronous']
    if (('heartbeat' in request.json) and ('timeout' in request.json['heartbeat'])):
        deployment[0]['heartbeat']['timeout'] = request.json['heartbeat']['timeout']
    if (('httpd' in request.json) and ('enabled' in request.json['httpd'])):
        deployment[0]['httpd']['enabled'] = request.json['httpd']['enabled']
    if (('httpd' in request.json) and ('jsonapi' in request.json['httpd']) and ('enabled' in request.json['httpd']['jsonapi'])):
        deployment[0]['httpd']['jsonapi']['enabled'] = request.json['httpd']['jsonapi']['enabled']
    if (('httpd' in request.json) and ('port' in request.json['httpd'])):
        deployment[0]['httpd']['port'] = request.json['httpd']['port']
    if (('partitionDetection' in request.json) and ('enabled' in request.json['partitionDetection'])):
        deployment[0]['partitionDetection']['enabled'] = request.json['partitionDetection']['enabled']
    if (('partitionDetection' in request.json) and ('snapshot' in request.json['partitionDetection']) and ('prefix' in request.json['partitionDetection']['snapshot'])):
        deployment[0]['partitionDetection']['snapshot']['prefix'] = request.json['partitionDetection']['snapshot']['prefix']
    if (('paths' in request.json) and ('commandlog' in request.json['paths']) and ('path' in request.json['paths']['commandlog'])):
        deployment[0]['paths']['commandlog']['path'] = request.json['paths']['commandlog']['path']
    if (('paths' in request.json) and ('commandlogsnapshot' in request.json['paths']) and ('path' in request.json['paths']['commandlogsnapshot'])):
        deployment[0]['paths']['commandlogsnapshot']['path'] = request.json['paths']['commandlogsnapshot']['path']
    if (('paths' in request.json) and ('droverflow' in request.json['paths']) and ('path' in request['paths']['droverflow'])):
        deployment[0]['paths']['droverflow']['path'] = request.json['paths']['droverflow']['path']
    if (('paths' in request.json) and ('exportoverflow' in request.json['paths']) and ('path' in request.json['paths']['exportoverflow'])):
        deployment[0]['paths']['exportoverflow']['path'] = request.json['paths']['exportoverflow']['path']
    if (('paths' in request.json) and ('snapshots' in request.json['paths']) and ('path' in request.json['paths']['snapshots'])):
        deployment[0]['paths']['snapshots']['path'] = request.json['paths']['snapshots']['path']
    if (('paths' in request.json) and ('voltdbroot' in request.json['paths']) and ('path' in request.json['paths']['voltdbroot'])):
        deployment[0]['paths']['voltdbroot']['path'] = request.json['paths']['voltdbroot']['path']
    if (('security' in request.json) and ('enabled' in request.json['security'])):
        deployment[0]['security']['enabled'] = request.json['security']['enabled']
    if (('security' in request.json) and ('frequency' in request.json['security'])):
        deployment[0]['security']['frequency'] = request.json['security']['frequency']
    if (('security' in request.json) and ('provider' in request.json['security'])):
        deployment[0]['security']['provider'] = request.json['security']['provider']
    if (('snapshot' in request.json) and ('enabled' in request.json['snapshot'])):
        deployment[0]['snapshot']['enabled'] = request.json['snapshot']['enabled']
    if (('snapshot' in request.json) and ('frequency' in request.json['snapshot'])):
        deployment[0]['snapshot']['frequency'] = request.json['snapshot']['frequency']
    if (('snapshot' in request.json) and ('prefix' in request.json['snapshot'])):
        deployment[0]['snapshot']['prefix'] = request.json['snapshot']['prefix']
    if (('snapshot' in request.json) and ('retain' in request.json['snapshot'])):
        deployment[0]['snapshot']['retain'] = request.json['snapshot']['retain']
    if (('systemsettings' in request.json) and ('elastic' in request.json['systemsettings']) and ('duration' in request.json['systemsettings']['elastic'])):
        deployment[0]['systemsettings']['elastic']['duration'] = request.json['systemsettings']['elastic']['duration']
    if (('systemsettings' in request.json) and ('elastic' in request.json['systemsettings']) and ('throughput' in request.json['systemsettings']['elastic'])):
        deployment[0]['systemsettings']['elastic']['throughput'] = request.json['systemsettings']['elastic']['throughput']
    if (('systemsettings' in request.json) and ('query' in request.json['systemsettings']) and ('timeout' in request.json['systemsettings']['query'])):
        deployment[0]['systemsettings']['query']['timeout'] = request.json['systemsettings']['query']['timeout']
    if (('systemsettings' in request.json) and ('temptables' in request.json['systemsettings']) and ('maxsize' in request.json['systemsettings']['temptables'])):
        deployment[0]['systemsettings']['temptables']['maxsize'] = request.json['systemsettings']['temptables']['maxsize']
    if (('systemsettings' in request.json) and ('snapshot' in request.json['systemsettings']) and ('priority' in request.json['systemsettings']['snapshot'])):
        deployment[0]['systemsettings']['snapshot']['priority'] = request.json['systemsettings']['snapshot']['priority']
    if (('systemsettings' in request.json) and ('resourcemonitor' in request.json['systemsettings']) and ('disklimit' in request.json['systemsettings']['resourcemonitor']) and ('feature' in request.json['systemsettings']['resourcemonitor']['disklimit']) and ('name' in request.json['systemsettings']['resourcemonitor']['disklimit']['feature'])):
        deployment[0]['systemsettings']['resourcemonitor']['disklimit']['feature']['name'] = request.json['systemsettings']['resourcemonitor']['disklimit']['feature']['name']
    if (('systemsettings' in request.json) and ('resourcemonitor' in request.json['systemsettings']) and ('disklimit' in request.json['systemsettings']['resourcemonitor']) and ('feature' in request.json['systemsettings']['resourcemonitor']['disklimit']) and ('size' in request.json['systemsettings']['resourcemonitor']['disklimit']['feature'])):
        deployment[0]['systemsettings']['resourcemonitor']['disklimit']['feature']['size'] = request.json['systemsettings']['resourcemonitor']['disklimit']['feature']['size']
    if (('systemsettings' in request.json) and ('resourcemonitor' in request.json['systemsettings']) and ('memorylimit' in request.json['systemsettings']['resourcemonitor']) and ('size' in request.json['systemsettings']['resourcemonitor']['memorylimit'])):
        deployment[0]['systemsettings']['resourcemonitor']['memorylimit']['size'] = request.json['systemsettings']['resourcemonitor']['memorylimit']['size']
    if (('import' in request.json) and ('configuration' in request.json['import'])):
        deployment[0]['import']['configuration'] = []
        i = 0
        for configuration in request.json['import']['configuration']:
            deployment[0]['import']['configuration'].append({'enabled': configuration['enabled'], 'module': configuration['module'], 'type': configuration['type'], 'property': [], })
            if ('property' in configuration):
                for property in configuration['property']:
                    deployment[0]['import']['configuration'][i]['property'].append({'name': property['name'], 'value': property['value'], })
                i += 1
    if (('export' in request.json) and ('configuration' in request.json['export'])):
        deployment[0]['export']['configuration'] = []
        i = 0
        for configuration in request.json['export']['configuration']:
            deployment[0]['export']['configuration'].append({'enabled': configuration['enabled'], 'stream': configuration['stream'], 'type': configuration['type'], 'exportconnectorclass': configuration['exportconnectorclass'], 'property': [], })
            if ('property' in configuration):
                print len(configuration['property'])
                for property in configuration['property']:
                    deployment[0]['export']['configuration'][i]['property'].append({'name': property['name'], 'value': property['value'], })
                i += 1
    if (('heap' in request.json) and ('maxjavaheap' in request.json['heap'])):
        deployment[0]['heap']['maxjavaheap'] = request.json['heap']['maxjavaheap']
    if (('users' in request.json) and ('user' in request.json['users'])):
        deployment[0]['users'] = {}
        deployment[0]['users']['user'] = []
        for user in request.json['users']['user']:
            deployment[0]['users']['user'].append({'name': user['name'], 'roles': user['roles'], 'password': user['password'], 'plaintext': user['plaintext'], })
    if ('dr' in request.json):
        if (deployment[0]['dr'] is None):
            deployment[0]['dr'] = {}
    if (('dr' in request.json) and ('connection' in request.json['dr'])):
        if (not hasattr(deployment[0]['dr'], 'connection')):
            deployment[0]['dr']['connection'] = {}
    if (('dr' in request.json) and ('id' in request.json['dr'])):
        deployment[0]['dr']['id'] = request.json['dr']['id']
    if (('dr' in request.json) and ('type' in request.json['dr'])):
        deployment[0]['dr']['type'] = request.json['dr']['type']
    if (('dr' in request.json) and ('enabled' in request.json['dr'])):
        deployment[0]['dr']['enabled'] = request.json['dr']['enabled']
    if (('dr' in request.json) and ('connection' in request.json['dr']) and ('source' in request.json['dr']['connection'])):
        deployment[0]['dr']['connection']['source'] = request.json['dr']['connection']['source']
    if (('dr' in request.json) and ('connection' in request.json['dr']) and ('servers' in request.json['dr']['connection'])):
        deployment[0]['dr']['connection']['servers'] = request.json['dr']['connection']['servers']
    if (('dr' in request.json) and (not request.json['dr'])):
        deployment[0]['dr'] = {}
    if (('dr' in request.json) and ('connection' in request.json['dr']) and (not request.json['dr']['connection'])):
        deployment[0]['dr']['connection'] = {}
    return deployment[0]
