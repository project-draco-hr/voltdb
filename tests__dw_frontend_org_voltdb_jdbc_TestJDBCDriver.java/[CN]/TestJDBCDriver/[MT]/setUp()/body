{
  String ddl="CREATE TABLE TT(A1 INTEGER NOT NULL, A2_ID INTEGER, PRIMARY KEY(A1));" + "CREATE TABLE ORDERS(A1 INTEGER NOT NULL, A2_ID INTEGER, PRIMARY KEY(A1));" + "CREATE TABLE ORDER_THIS(A1 INTEGER NOT NULL, A2 INTEGER, PRIMARY KEY(A1));"+ "CREATE TABLE LAST(A1 INTEGER NOT NULL, A2_ID INTEGER, PRIMARY KEY(A1));"+ "CREATE TABLE STEAL_THIS_TABLE(A1 INTEGER NOT NULL, A2_ID INTEGER, PRIMARY KEY(A1));"+ "CREATE TABLE BLAST_IT(A1 INTEGER NOT NULL, A2 INTEGER, PRIMARY KEY(A1));"+ "CREATE TABLE ROBBIE_MUSTOE(A1 INTEGER NOT NULL, A2_ID INTEGER, PRIMARY KEY(A1));"+ "CREATE TABLE CUSTOMER(A1 INTEGER NOT NULL, A2_ID INTEGER, A3 INTEGER, A4 INTEGER, "+ "A5_0 INTEGER, A6 INTEGER, A7_ID INTEGER, A8 INTEGER, A9 INTEGER, "+ "A10 INTEGER, A11 INTEGER, A12_ID INTEGER, A13 INTEGER, A14 INTEGER, "+ "A15 INTEGER, A16 INTEGER, A17_ID INTEGER, A18 INTEGER, A19 INTEGER, "+ "A20 INTEGER, A21 INTEGER, A22_ID INTEGER, A23 INTEGER, A24_ID INTEGER, "+ "A25 INTEGER, A26_MIDDLE INTEGER, "+ "PRIMARY KEY(A1));"+ "CREATE TABLE NUMBER_NINE(A1 INTEGER NOT NULL, A2 INTEGER, A3_BIN VARBINARY, PRIMARY KEY(A1));"+ "CREATE TABLE WAREHOUSE(A1 INTEGER NOT NULL, A2 INTEGER, A3 INTEGER, A4_ID INTEGER, "+ "A5 INTEGER, A6 INTEGER, A7 INTEGER, A8 INTEGER, W_ID INTEGER, "+ "PRIMARY KEY(A1));"+ "CREATE TABLE ALL_TYPES(A1 TINYINT NOT NULL, A2 SMALLINT, A3 INTEGER, A4 BIGINT, "+ "A5 FLOAT, A6 VARCHAR(10), A7 VARBINARY(10), A8 TIMESTAMP, "+ "A9 DECIMAL, PRIMARY KEY(A1));"+ "CREATE UNIQUE INDEX UNIQUE_ORDERS_HASH ON ORDERS (A1, A2_ID); "+ "CREATE INDEX IDX_ORDERS_HASH ON ORDERS (A2_ID);";
  pb=new VoltProjectBuilder();
  pb.addLiteralSchema(ddl);
  pb.addSchema(TestClientFeatures.class.getResource("clientfeatures.sql"));
  pb.addProcedures(ArbitraryDurationProc.class);
  pb.addPartitionInfo("TT","A1");
  pb.addPartitionInfo("ORDERS","A1");
  pb.addPartitionInfo("LAST","A1");
  pb.addPartitionInfo("BLAST_IT","A1");
  pb.addPartitionInfo("ROBBIE_MUSTOE","A1");
  pb.addPartitionInfo("CUSTOMER","A1");
  pb.addPartitionInfo("NUMBER_NINE","A1");
  pb.addStmtProcedure("InsertA","INSERT INTO TT VALUES(?,?);","TT.A1: 0");
  pb.addStmtProcedure("SelectB","SELECT * FROM TT;");
  pb.addStmtProcedure("SelectC","SELECT * FROM ALL_TYPES;");
  boolean success=pb.compile(Configuration.getPathToCatalogForTest("jdbcdrivertest.jar"),3,1,0);
  assert(success);
  MiscUtils.copyFile(pb.getPathToDeployment(),Configuration.getPathToCatalogForTest("jdbcdrivertest.xml"));
  testjar=Configuration.getPathToCatalogForTest("jdbcdrivertest.jar");
  startServer();
}
