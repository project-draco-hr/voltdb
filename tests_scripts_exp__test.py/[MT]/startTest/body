def startTest(testSuiteList):
    retCode = {}
    for e in testSuiteList:
        retCode[e] = {}
        os.chdir(testSuiteList[e])
        currDir = os.getcwd()
        service = elem2Test[e]
        msg = ('===--->>> Start to test this suite: %s' % e)
        logFileS = (('/tmp/' + e) + '_server')
        logFileC = (('/tmp/' + e) + '_client')
        msg1 = msg2 = None
        execThisService(service, logFileS, logFileC)
        if (e == 'helloworld'):
            (result, msg1) = assertHelloWorld(e, logFileC)
            retCode[e]['status'] = result
            retCode[e]['msg'] = ((((msg + '\n') + sepLineS) + '\n') + msg1)
        elif (e == 'voter'):
            (result, msg1) = assertClient(e, logFileC)
            if (result == False):
                (result, msg2) = assertVoter(e, logFileC)
                retCode[e]['msg'] = ((((((((msg + '\n') + sepLineS) + '\n') + msg1) + '\n') + sepLineS) + '\n') + msg2)
            else:
                retCode[e]['msg'] = ((((msg + '\n') + sepLineS) + '\n') + msg1)
            retCode[e]['status'] = result
        elif ((e == 'voltkv') or (e == 'voltcache')):
            (result, msg1) = assertClient(e, logFileC)
            if (result == False):
                (result, msg2) = assertVotekv_Votecache(e, logFileC)
                retCode[e]['msg'] = ((((((((msg + '\n') + sepLineS) + '\n') + msg1) + '\n') + sepLineS) + '\n') + msg2)
            else:
                retCode[e]['msg'] = ((((msg + '\n') + sepLineS) + '\n') + msg1)
            retCode[e]['status'] = result
        else:
            print ("e = '%s' ==-->> to be implemented..." % e)
            retCode[e]['status'] = False
            retCode[e]['msg'] = ("e = '%s' ==-->> to be implemented..." % e)
        os.chdir(origDir)
    return retCode
