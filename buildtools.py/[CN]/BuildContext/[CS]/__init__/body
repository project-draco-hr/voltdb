def __init__(self, args):
    self.CPPFLAGS = ''
    self.EXTRAFLAGS = ''
    self.LDFLAGS = ''
    self.JNIEXT = ''
    self.JNILIBFLAGS = ''
    self.JNIBINFLAGS = ''
    self.SOFLAGS = ''
    self.SOEXT = ''
    self.IGNORE_SYS_PREFIXES = ()
    self.INPUT_PREFIX = ''
    self.THIRD_PARTY_INPUT_PREFIX = ''
    self.OUTPUT_PREFIX = ''
    self.TEST_PREFIX = ''
    self.INPUT = {}
    self.INPUT_INCLUDES = {}
    self.INPUT_CPPFLAGS = {}
    self.INPUT_LIBS = ''
    self.THIRD_PARTY_INPUT = {}
    self.THIRD_PARTY_INCLUDES = {}
    self.THIRD_PARTY_CPPFLAGS = {}
    self.THIRD_PARTY_LIBS = ''
    self.TESTS = {}
    self.PLATFORM = os.uname()[0]
    self.LEVEL = 'DEBUG'
    self.TARGET = 'BUILD'
    self.NM = '/usr/bin/nm'
    self.NMFLAGS = '-n'
    self.COVERAGE = False
    self.PROFILE = False
    self.CC = 'gcc'
    self.CXX = 'g++'
    for arg in [x.strip().upper() for x in args]:
        if (arg in ['DEBUG', 'RELEASE', 'MEMCHECK', 'MEMCHECK_NOFREELIST']):
            self.LEVEL = arg
        if (arg in ['BUILD', 'CLEAN', 'TEST', 'VOLTRUN', 'VOLTDBIPC']):
            self.TARGET = arg
        if (arg in ['COVERAGE']):
            self.COVERAGE = True
        if (arg in ['PROFILE']):
            self.PROFILE = True
    buildLocal = os.path.join(os.path.dirname(__file__), 'build.local')
    if os.path.exists(buildLocal):
        execfile(buildLocal, dict(BUILD=self))
