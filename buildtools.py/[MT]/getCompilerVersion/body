def getCompilerVersion():
    vinfo = output = Popen(['gcc', '-v'], stderr=PIPE).communicate()[1]
    compiler_name = 'gcc'
    major = 0
    minor = 0
    patch = 0
    vvector = [0, 0, 0]
    if (output.find('clang') != (-1)):
        compiler_name = 'clang'
        tokens = ['based on LLVM ', 'Apple LLVM version ', 'clang version ']
        for token in tokens:
            pos = vinfo.find(token)
            if (pos != (-1)):
                print 'found clang!!'
                pos += len(token)
                vinfo = vinfo[pos:(pos + 3)]
                vvector = vinfo.split('[.]')
                print ('vvector = %s' % vvector)
                break
    else:
        vinfo = vinfo.strip().split('\n')
        vinfo = vinfo[(-1)]
        vinfo = vinfo.split()[2]
        vvector = vinfo.split('.')
    vlen = len(vvector)
    if (vlen > 0):
        major = int(vvector[0])
        if (vlen > 1):
            minor = int(vvector[1])
            if (vlen > 2):
                patch = int(vvector[2])
    print ('[%s, %d, %d, %d]' % (compiler_name, major, minor, patch))
    return (compiler_name, major, minor, patch)
