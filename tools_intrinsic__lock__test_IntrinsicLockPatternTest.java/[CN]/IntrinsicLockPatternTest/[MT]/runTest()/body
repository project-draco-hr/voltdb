{
  while (true) {
    for (int i=0; i < CAP / 4; ++i) {
synchronized (m_tasks) {
        m_tasks.offer(new Poller());
        m_tasks.notify();
      }
    }
    System.out.printf(".");
    boolean shouldSleep=false;
synchronized (m_tasks) {
      if (m_tasks.size() > CAP / 2) {
        shouldSleep=true;
      }
    }
    if (shouldSleep) {
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
}
