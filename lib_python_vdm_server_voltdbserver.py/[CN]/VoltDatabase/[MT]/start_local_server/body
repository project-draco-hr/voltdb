def start_local_server(self, sid, pause, add_server=False):
    '\n        start a local server process. Add if add_server is true else just start the server.\n        '
    config_path = os.path.realpath(self.get_volt_server_data_folder(sid))
    server = HTTPListener.Global.SERVERS.get(sid)
    if (not server):
        return 1
    primary = self.get_first_hostname()
    voltdb_dir = get_voltdb_dir()
    verb = 'start'
    if server:
        url = ('http://%s:%u/api/1.0/databases/%u/status/' % (server['hostname'], HTTPListener.__PORT__, self.database_id))
        response = requests.get(url)
        is_running = response.json()['dbStatus']['status']
        server_ip = ''
        if (is_running == 'running'):
            for value in response.json()['dbStatus']['serverStatus']:
                for key in value:
                    status = value[key]['status']
                    if ((status == 'running') and (key != server['hostname'])):
                        server_ip = key
    if (add_server and (server_ip != '')):
        verb = 'add'
    host_count = self.get_host_count()
    host_list = self.get_host_list()
    if (verb == 'start'):
        if (pause.lower() == 'true'):
            voltdb_cmd = ['nohup', os.path.join(voltdb_dir, 'voltdb'), verb, '--pause', '-H', host_list, '-D', config_path]
        else:
            voltdb_cmd = ['nohup', os.path.join(voltdb_dir, 'voltdb'), verb, '-H', host_list, '-D', config_path]
    elif (verb == 'add'):
        voltdb_cmd = ['nohup', os.path.join(voltdb_dir, 'voltdb'), 'start', '--add', ('--host=' + server_ip), '-D', config_path]
    else:
        voltdb_cmd = ['nohup', os.path.join(voltdb_dir, 'voltdb'), verb, '-H', host_list, '-D', config_path]
    self.build_network_options(server, voltdb_cmd)
    G.OUTFILE_COUNTER = (G.OUTFILE_COUNTER + 1)
    outfilename = os.path.realpath(os.path.join(HTTPListener.Global.CONFIG_PATH, ('voltserver.output.%s.%u' % (G.OUTFILE_TIME, G.OUTFILE_COUNTER))))
    server_data_path = self.get_volt_server_data_folder(sid)
    HTTPListener.Global.VOLT_SERVER_PATH = server_data_path
    voltserver = self.run_voltserver_process(voltdb_cmd, outfilename, server_data_path, self.database_id)
    initialized = False
    rfile = open(outfilename, 'r')
    endtime = (time.time() + 2)
    while (((endtime - time.time()) > 0) and (voltserver.returncode is None) and (not initialized)):
        time.sleep(0.5)
        voltserver.poll()
        initialized = ('Server completed initialization' in rfile.readline())
    rfile.close()
    if (voltserver.returncode is None):
        return 0
    else:
        return 1
