def check_other_database_status(self, current_database_id):
    result = True
    database = HTTPListener.Global.DATABASES[current_database_id]
    SERVERS = []
    for id in database['members']:
        SERVERS.append(HTTPListener.Global.SERVERS[id])
    for server in SERVERS:
        for (key, value) in HTTPListener.Global.DATABASES.iteritems():
            if (key != current_database_id):
                url = ('http://%s:%u/api/1.0/databases/%u/status/' % (HTTPListener.__IP__, HTTPListener.__PORT__, key))
                response = requests.get(url)
                if (response.json()['status'] != 404):
                    if (response.json()['dbStatus']['status'] == 'running'):
                        for id in value['members']:
                            if (HTTPListener.Global.SERVERS[id]['hostname'] == server['hostname']):
                                if ((HTTPListener.Global.SERVERS[id]['client-listener'] == server['client-listener']) or (HTTPListener.Global.SERVERS[id]['admin-listener'] == server['admin-listener']) or (HTTPListener.Global.SERVERS[id]['zookeeper-listener'] == server['zookeeper-listener']) or (HTTPListener.Global.SERVERS[id]['http-listener'] == server['http-listener']) or (HTTPListener.Global.SERVERS[id]['internal-listener'] == server['internal-listener']) or (HTTPListener.Global.SERVERS[id]['replication-listener'] == server['replication-listener'])):
                                    return False
                    else:
                        result = True
    return result
