def kill_database(self):
    '\n        Stops voltdb cluster for this database\n        '
    members = []
    server_status = {}
    current_database = HTTPListener.Global.DATABASES.get(self.database_id)
    if (not current_database):
        abort(404)
    else:
        members = current_database['members']
    if (not members):
        return create_response('No servers configured for the database', 500)
    server_id = members[0]
    server = HTTPListener.Global.SERVERS.get(server_id)
    if (not server):
        return create_response(('Server details not found for id ' + server_id), 404)
    for server_id in members:
        server = HTTPListener.Global.SERVERS.get(server_id)
        curr = server
        try:
            url = ('http://%s:%u/api/1.0/databases/%u/servers/%u/%s?force=false' % (curr['hostname'], HTTPListener.__PORT__, self.database_id, server_id, 'stop'))
            response = requests.put(url)
            server_status[curr['hostname']] = response.text
        except Exception as err:
            print traceback.format_exc()
            server_status[curr['hostname']] = response.text
    return create_response(json.dumps(server_status), 200)
