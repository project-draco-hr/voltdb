{
  m_returningToPromptAfterError=false;
  List<String> multiLineStatementBuffer=new ArrayList<>();
  List<String> parsedQueries=new ArrayList<>();
  StringBuilder query=new StringBuilder();
  boolean isRecall=false;
  boolean executeImmediate=false;
  while (!executeImmediate) {
    String prompt=isRecall ? "" : ((RecallableSessionLines.size() + 1) + "> ");
    isRecall=false;
    String line=lineInputReader.readLine(prompt);
    assert(line != null);
    executeImmediate=SQLParser.isSemiColonTerminated(line);
    if (multiLineStatementBuffer.isEmpty()) {
      if (SQLParser.isExitCommand(line)) {
        return null;
      }
      ParseRecallResults recallParseResults=SQLParser.parseRecallStatement(line,RecallableSessionLines.size() - 1);
      if (recallParseResults != null) {
        if (recallParseResults.error == null) {
          line=RecallableSessionLines.get(recallParseResults.line);
          lineInputReader.putString(line);
          lineInputReader.flush();
          isRecall=true;
        }
 else {
          System.out.printf("%d> %s\n%d",RecallableSessionLines.size(),recallParseResults.error);
        }
        executeImmediate=false;
        continue;
      }
      RecallableSessionLines.add(line);
      if (executesAsSimpleDirective(line)) {
        executeImmediate=false;
        continue;
      }
      if (SQLParser.isGoCommand(line)) {
        executeImmediate=true;
        line=";";
      }
      line=handleTranslatedCommands(line);
      if (line == null) {
        executeImmediate=false;
        continue;
      }
      File file=SQLParser.parseFileStatement(line);
      if (file != null) {
        line=readScriptFile(file);
        if (m_returningToPromptAfterError) {
          query=new StringBuilder();
          m_returningToPromptAfterError=false;
          executeImmediate=false;
          continue;
        }
      }
    }
 else {
      RecallableSessionLines.add(line);
    }
    query.append(line);
    query.append("\n");
  }
  parsedQueries=SQLParser.parseQuery(query.toString());
  return parsedQueries;
}
