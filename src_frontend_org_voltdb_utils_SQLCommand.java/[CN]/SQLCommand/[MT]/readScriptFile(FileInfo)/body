{
  BufferedReader script=null;
  try {
    script=new BufferedReader(new FileReader(fileInfo.getFile()));
  }
 catch (  FileNotFoundException e) {
    System.err.println("Script file '" + fileInfo + "' could not be found.");
    stopOrContinue(e);
    return null;
  }
  try {
    List<QueryInfo> queryBatchList=new ArrayList<SQLCommand.QueryInfo>();
    StringBuilder query=new StringBuilder();
    String line;
    while ((line=script.readLine()) != null) {
      if (SQLParser.parseRecallStatement(line,RecallableSessionLines.size() - 1) != null || SQLParser.isExitCommand(line) || SQLParser.isGoCommand(line)) {
        continue;
      }
      line=handleTranslatedCommands(line);
      if (line == null) {
        continue;
      }
      FileInfo nestedFileInfo=SQLParser.parseFileStatement(line);
      if (nestedFileInfo != null) {
        if (fileInfo.isBatch()) {
          stopOrContinue(new RuntimeException("Not supported nested FILE command in a batch"));
          return null;
        }
        List<QueryInfo> contentInfo=readScriptFile(nestedFileInfo);
        if (contentInfo == null || contentInfo.isEmpty()) {
          if (m_returningToPromptAfterError) {
            return null;
          }
          continue;
        }
        updateQueryBatch(queryBatchList,query,contentInfo);
        query=new StringBuilder();
      }
 else {
        query.append(line + "\n");
      }
    }
    if (query.length() > 0) {
      if (fileInfo.isBatch()) {
        assert(queryBatchList.isEmpty());
        queryBatchList.add(new QueryInfo(query,fileInfo.getFile().getName()));
      }
 else {
        queryBatchList.add(new QueryInfo(query));
      }
    }
    return queryBatchList;
  }
 catch (  Exception x) {
    stopOrContinue(x);
    return null;
  }
 finally {
    if (script != null) {
      try {
        script.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
