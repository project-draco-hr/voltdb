{
  for (Node child=columnsNode.getFirstChild(); child != null; child=child.getNextSibling()) {
    if (child.getNodeType() != Node.ELEMENT_NODE)     continue;
    assert(child.getNodeName().equals("column"));
    Column col=null;
    NamedNodeMap attrs=child.getAttributes();
    Node node=attrs.getNamedItem("table");
    assert(node != null);
    assert(node.getNodeValue().equalsIgnoreCase(table.getTypeName()));
    node=attrs.getNamedItem("name");
    assert(node != null);
    col=table.getColumns().getIgnoreCase(node.getNodeValue().trim());
    AbstractExpression expr=null;
    for (Node subChild=child.getFirstChild(); subChild != null; subChild=subChild.getNextSibling()) {
      if (subChild.getNodeType() != Node.ELEMENT_NODE)       continue;
      expr=parseExpressionTree(subChild,db);
      ExpressionUtil.assignLiteralConstantTypesRecursively(expr,VoltType.get((byte)col.getType()));
      ExpressionUtil.assignOutputValueTypesRecursively(expr);
    }
    assert(expr != null);
    columns.put(col,expr);
  }
}
