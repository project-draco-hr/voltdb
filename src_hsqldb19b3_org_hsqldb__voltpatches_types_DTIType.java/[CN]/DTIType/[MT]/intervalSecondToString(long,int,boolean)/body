{
  StringBuffer sb=new StringBuffer(64);
  if (seconds < 0) {
    seconds=-seconds;
    sb.append('-');
  }
 else   if (signed) {
    sb.append('+');
  }
  for (int i=startPartIndex; i <= endPartIndex; i++) {
    int factor=DTIType.yearToSecondFactors[i];
    long part=seconds / factor;
    if (i == startPartIndex) {
      int startDigits=precision == 0 ? 2 : (int)precision;
      int zeros=(int)startDigits - getPrecisionExponent(part);
    }
 else     if (part < 10) {
      sb.append('0');
    }
    sb.append(part);
    seconds%=factor;
    if (i < endPartIndex) {
      sb.append((char)DTIType.yearToSecondSeparators[i]);
    }
  }
  if (scale != 0) {
    sb.append((char)DTIType.yearToSecondSeparators[DTIType.INTERVAL_FRACTION_PART_INDEX - 1]);
  }
  for (int i=0; i < scale; i++) {
    int digit=nanos / DTIType.precisionFactors[i];
    nanos-=digit * DTIType.precisionFactors[i];
    sb.append(digit);
  }
  return sb.toString();
}
