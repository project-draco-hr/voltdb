{
  VoltTable[] retval=null;
  try {
    SimpleDateFormat sdf=new SimpleDateFormat("MMddyyyy");
    Long emptylong=new Long(0);
    Long s_pk=emptylong;
    if ((S_PK != null) && (!"".equals(S_PK))) {
      s_pk=Long.parseLong(S_PK);
    }
    Long bigint1=emptylong;
    if ((BIGINT1 != null) && (!"".equals(BIGINT1.trim()))) {
      bigint1=Long.parseLong(BIGINT1);
    }
    BigDecimal decimal1=null;
    if ((DECIMAL1 != null) && (!"".equals(DECIMAL1))) {
      decimal1=new BigDecimal(DECIMAL1);
    }
    TimestampType ts1=null;
    TimestampType ts2=null;
    if ((TS1 != null) && (!"".equals(TS1))) {
      Date tempdate=null;
      try {
        tempdate=sdf.parse(TS1);
        ts1=new TimestampType(tempdate.getTime() * 1000);
      }
 catch (      ParseException e) {
        e.printStackTrace();
      }
    }
    if ((TS2 != null) && (!"".equals(TS2))) {
      Date tempdate=null;
      try {
        tempdate=sdf.parse(TS2);
        ts2=new TimestampType(tempdate.getTime() * 1000);
      }
 catch (      ParseException e) {
        e.printStackTrace();
      }
    }
    TimestampType ts3=null;
    if ((TS3 != null) && (!"".equals(TS3))) {
      Date tempdate=null;
      try {
        tempdate=sdf.parse(TS3);
        ts3=new TimestampType(tempdate.getTime() * 1000);
      }
 catch (      ParseException e) {
        e.printStackTrace();
      }
    }
    TimestampType ts5=null;
    if ((TS5 != null) && (!"".equals(TS5))) {
      Date tempdate=null;
      try {
        tempdate=sdf.parse(TS5);
        ts5=new TimestampType(tempdate.getTime() * 1000);
      }
 catch (      ParseException e) {
        e.printStackTrace();
      }
    }
    TimestampType ts4=null;
    if ((TS4 != null) && (!"".equals(TS4))) {
      Date tempdate=null;
      try {
        tempdate=sdf.parse(TS4);
        ts4=new TimestampType(tempdate.getTime() * 1000);
      }
 catch (      ParseException e) {
        e.printStackTrace();
      }
    }
    Integer bigint8=null;
    if ((BIGINT8 != null) && (!"".equals(BIGINT8))) {
      bigint8=Integer.parseInt(BIGINT8);
    }
    Integer int1=null;
    if ((INT1 != null) && (!"".equals(INT1))) {
      int1=Integer.parseInt(INT1);
    }
    voltQueueSQL(sql,T_PK1,T_PK2,V1,V2,s_pk,V3,V4,V5,V6,V7,V8,V9,V10,V11,V12,V13,V14,V15,ts1,V16,ts2,V17,V18,V19,V20,V21,V22,V23,V24,bigint1,T_PK3,ts3,V25,ts4,decimal1,V26,V27,bigint8,ts5,V28,V29,V30,V31,V32,int1);
    retval=voltExecuteSQL();
  }
 catch (  Exception exp) {
    System.out.println("Problem in run method of InsertT procedure");
    System.out.println("T_PK1 is " + T_PK1 + " T_PK2 is "+ T_PK2);
  }
  return retval;
}
