{
  testResizedTable();
  ByteBuffer view=t.getBuffer();
  int position=view.position();
  view.position(0);
  ByteBuffer copy=ByteBuffer.allocateDirect(view.limit());
  copy.put(view);
  copy.position(position);
  VoltTable tDirect=PrivateVoltTableFactory.createVoltTableFromBuffer(copy,true);
  byte compressedBytes[]=tDirect.getCompressedBytes();
  ByteBuffer tempBuf=ByteBuffer.allocate(t.getSerializedSize());
  t.flattenToBuffer(tempBuf);
  byte uncompressedBytes[]=tempBuf.array().clone();
  assertTrue(uncompressedBytes.length > compressedBytes.length);
  compressedBytes=tDirect.getCompressedBytesAsync().get();
  assertTrue(uncompressedBytes.length > compressedBytes.length);
  byte decompressedBytes[]=CompressionService.decompressBytes(compressedBytes);
  VoltTable vt=PrivateVoltTableFactory.createVoltTableFromBuffer(ByteBuffer.wrap(decompressedBytes),true);
  tempBuf=ByteBuffer.allocate(vt.getSerializedSize());
  vt.flattenToBuffer(tempBuf);
  byte[] bytesForComparison=tempBuf.array().clone();
  assertTrue(java.util.Arrays.equals(bytesForComparison,uncompressedBytes));
}
