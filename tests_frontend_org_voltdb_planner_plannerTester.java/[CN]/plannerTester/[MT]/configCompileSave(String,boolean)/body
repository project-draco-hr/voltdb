{
  if (!setUp(config)) {
    return;
  }
  int size=m_stmts.size();
  for (int i=0; i < size; i++) {
    String query=m_stmts.get(i);
    String joinOrder=null;
    if (query.startsWith("JOIN:")) {
      String[] splitLine=query.split(":");
      joinOrder=splitLine[1];
      query=splitLine[2];
    }
    try {
      List<AbstractPlanNode> pnList=s_singleton.compileWithJoinOrderToFragments(query,joinOrder);
      AbstractPlanNode pn=pnList.get(0);
      if (pnList.size() == 2) {
        assert(pnList.get(1) instanceof SendPlanNode);
        if (!pn.reattachFragment(pnList.get(1))) {
          System.err.println("Receive plan node not found in reattachFragment.");
        }
      }
      writePlanToFile(pn,m_workPath,config + ".plan" + i,m_stmts.get(i));
      if (isSave) {
        writePlanToFile(pn,m_baselinePath,config + ".plan" + i,m_stmts.get(i));
      }
    }
 catch (    PlanningErrorException ex) {
      System.err.printf("Planning error, line %d: %s\n",i,ex.getMessage());
    }
  }
  if (isSave) {
    System.out.println("Baseline files generated at: " + m_baselinePath);
  }
}
