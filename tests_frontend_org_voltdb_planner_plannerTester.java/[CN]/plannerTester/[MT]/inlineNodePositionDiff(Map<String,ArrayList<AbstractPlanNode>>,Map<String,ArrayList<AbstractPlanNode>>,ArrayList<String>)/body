{
  Set<String> typeWholeSet=new HashSet<String>();
  typeWholeSet.addAll(inlineNodesPosMap1.keySet());
  typeWholeSet.addAll(inlineNodesPosMap2.keySet());
  for (  String planNodeTypeStr : typeWholeSet) {
    if (!inlineNodesPosMap1.containsKey(planNodeTypeStr) && inlineNodesPosMap2.containsKey(planNodeTypeStr)) {
      diffPair strPair=new diffPair(null,inlineNodesPosMap2.get(planNodeTypeStr).toString());
      messages.add("Inline " + planNodeTypeStr + " diff: \n"+ strPair.toString());
    }
 else     if (inlineNodesPosMap1.containsKey(planNodeTypeStr) && !inlineNodesPosMap2.containsKey(planNodeTypeStr)) {
      diffPair strPair=new diffPair(inlineNodesPosMap1.get(planNodeTypeStr).toString(),null);
      messages.add("Inline " + planNodeTypeStr + " diff: \n"+ strPair.toString());
    }
 else {
      diffPair strPair=new diffPair(inlineNodesPosMap1.get(planNodeTypeStr).toString(),inlineNodesPosMap2.get(planNodeTypeStr).toString());
      if (!strPair.equals()) {
        messages.add("Inline " + planNodeTypeStr + " diff: \n"+ strPair.toString());
      }
    }
  }
}
