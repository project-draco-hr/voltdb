{
  for (int ii=0; ii < column_types.length; ii++) {
    String schema="create table t(id " + column_types[ii] + " not null, num integer not null);\n"+ "create index idx_t_id_hash on t(id);\n"+ "create index idx_t_idnum_hash on t(id,num);";
    VoltCompiler c=compileSchemaForDDLTest(schema,can_be_hash[ii]);
    if (can_be_hash[ii]) {
      assertFalse(c.hasErrors());
      Table tbl=assertTableT(c);
      assertEquals(IndexType.HASH_TABLE.getValue(),tbl.getIndexes().getIgnoreCase("idx_t_id_hash").getType());
      assertEquals(IndexType.HASH_TABLE.getValue(),tbl.getIndexes().getIgnoreCase("idx_t_idnum_hash").getType());
    }
 else {
      assertTrue(c.hasErrors());
    }
  }
}
