{
  if (Float.parseFloat(System.getProperty("java.specification.version")) < 1.7) {
    return;
  }
  Database db=goodDDLAgainstSimpleSchema("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE Foo AS ###\n"+ "    stmt = new SQLStmt('SELECT PKEY, DESCR FROM PKEY_INTEGER WHERE PKEY = ?')\n"+ "    transactOn = { int key -> \n"+ "        voltQueueSQL(stmt,key)\n"+ "        voltExecuteSQL(true)\n"+ "    }\n"+ "### LANGUAGE GROOVY;\n"+ "PARTITION PROCEDURE Foo ON TABLE PKEY_INTEGER COLUMN PKEY;");
  Procedure proc=db.getProcedures().get("Foo");
  assertNotNull(proc);
  db=goodDDLAgainstSimpleSchema("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE Foo AS ###\n"+ "    // #\n"+ "    // ##\n"+ "    stmt = new SQLStmt('SELECT PKEY, DESCR FROM PKEY_INTEGER WHERE PKEY = ?')\n"+ "    transactOn = { int key -> \n"+ "        def str = '# ## # ##'\n"+ "        voltQueueSQL(stmt,key)\n"+ "        voltExecuteSQL(true)\n"+ "    }\n"+ "### LANGUAGE GROOVY;\n"+ "PARTITION PROCEDURE Foo ON TABLE PKEY_INTEGER COLUMN PKEY;");
  proc=db.getProcedures().get("Foo");
  assertNotNull(proc);
  db=goodDDLAgainstSimpleSchema("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE   \n"+ "PROCEDURE     Foo    \n"+ "  AS   \n"+ "###\n"+ "    stmt = new SQLStmt('SELECT PKEY, DESCR FROM PKEY_INTEGER WHERE PKEY = ?')\n"+ "    transactOn = { int key -> \n"+ "        voltQueueSQL(stmt,key)\n"+ "        voltExecuteSQL(true)\n"+ "    }\n"+ "###\n"+ "   LANGUAGE   \n"+ "GROOVY;\n"+ "PARTITION PROCEDURE Foo ON TABLE PKEY_INTEGER COLUMN PKEY;");
  proc=db.getProcedures().get("Foo");
  assertNotNull(proc);
}
