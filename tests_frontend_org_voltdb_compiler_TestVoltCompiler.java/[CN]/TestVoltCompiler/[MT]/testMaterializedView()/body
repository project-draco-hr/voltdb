{
  String schema="create table books (cash integer default 23 NOT NULL, title varchar(10) default 'foo', PRIMARY KEY(cash));\n" + "partition table books on column cash;\n" + "create table foo (cash integer not null);\n"+ "create view matt (title, cash, num, foo) as select title, cash, count(*), sum(cash) from books group by title, cash;\n"+ "create view matt2 (title, cash, num, foo) as select books.title, books.cash, count(*), sum(books.cash) from books join foo on books.cash = foo.cash group by books.title, books.cash;";
  File schemaFile=VoltProjectBuilder.writeStringToTempFile(schema);
  String schemaPath=schemaFile.getPath();
  String simpleProject="<?xml version=\"1.0\"?>\n" + "<project>" + "<database name='database'>"+ "<schemas><schema path='" + schemaPath + "' /></schemas>"+ "<procedures><procedure class='org.voltdb.compiler.procedures.AddBook' /></procedures>"+ "</database>"+ "</project>";
  File projectFile=VoltProjectBuilder.writeStringToTempFile(simpleProject);
  String projectPath=projectFile.getPath();
  VoltCompiler compiler=new VoltCompiler();
  assertTrue(compiler.compileWithProjectXML(projectPath,testout_jar));
  Catalog c1=compiler.getCatalog();
  String catalogContents=VoltCompilerUtils.readFileFromJarfile(testout_jar,"catalog.txt");
  Catalog c2=new Catalog();
  c2.execute(catalogContents);
  assertTrue(c2.serialize().equals(c1.serialize()));
}
