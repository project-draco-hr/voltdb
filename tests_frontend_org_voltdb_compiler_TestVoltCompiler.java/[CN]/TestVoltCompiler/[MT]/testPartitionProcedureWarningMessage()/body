{
  String ddl="CREATE TABLE PKEY_BIGINT ( PKEY BIGINT NOT NULL, NUM INTEGER, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_BIGINT ON COLUMN PKEY;" + "create procedure myTestProc as select num from PKEY_BIGINT where pkey = ? order by 1;";
  File schemaFile=VoltProjectBuilder.writeStringToTempFile(ddl);
  String schemaPath=schemaFile.getPath();
  String simpleProject="<?xml version=\"1.0\"?>\n" + "<project>" + "<database name='database'>"+ "<schemas>"+ "<schema path='" + schemaPath + "' />"+ "</schemas>"+ "</database>"+ "</project>";
  File projectFile=VoltProjectBuilder.writeStringToTempFile(simpleProject);
  String projectPath=projectFile.getPath();
  VoltCompiler compiler=new VoltCompiler();
  assertTrue(compiler.compileWithProjectXML(projectPath,testout_jar));
  String expectedWarning="This procedure myTestProc would benefit from being partitioned, by adding a " + "'PARTITION ON TABLE PKEY_BIGINT COLUMN PKEY PARAMETER 0' clause to the " + "CREATE PROCEDURE statement. or using a separate PARTITION PROCEDURE statement";
  boolean findMatched=false;
  for (  Feedback fb : compiler.m_warnings) {
    System.out.println(fb.getStandardFeedbackLine());
    if (fb.getStandardFeedbackLine().contains(expectedWarning)) {
      findMatched=true;
      break;
    }
  }
  assertTrue(findMatched);
}
