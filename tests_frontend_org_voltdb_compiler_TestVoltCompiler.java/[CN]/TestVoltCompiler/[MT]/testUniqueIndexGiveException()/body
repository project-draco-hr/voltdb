{
  String msgP="does not include the partitioning column";
  String msgR="use UNIQUE instead of ASSUMEUNIQUE";
  String schema0="create table t0 (id bigint not null, name varchar(32) not null, age integer,  primary key (id));\n" + "CREATE UNIQUE INDEX user_index0 ON t0 (name) ;";
  checkValidUnique(schema0,null);
  checkValidUnique(schema0.replace("UNIQUE","ASSUMEUNIQUE"),msgR);
  String schema1="create table t0 (id bigint not null, name varchar(32) not null, age integer);\n" + "PARTITION TABLE t0 ON COLUMN id;\n" + "CREATE UNIQUE INDEX user_index1 ON t0 (id) ;";
  checkValidUnique(schema1,null);
  checkValidUnique(schema1.replace("UNIQUE","ASSUMEUNIQUE"),null);
  String schema2="create table t0 (id bigint not null, name varchar(32) not null, age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN id;\n" + "CREATE UNIQUE INDEX user_index2 ON t0 (id) ;";
  checkValidUnique(schema2,null);
  checkValidUnique(schema2.replace("UNIQUE","ASSUMEUNIQUE"),null);
  String schema3="create table t0 (id bigint not null, name varchar(32) not null, age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN id;\n" + "CREATE UNIQUE INDEX user_index3 ON t0 (id, age) ;";
  checkValidUnique(schema3,null);
  checkValidUnique(schema3.replace("UNIQUE","ASSUMEUNIQUE"),null);
  String schema4="create table t0 (id bigint not null, name varchar(32) not null, age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN id;\n" + "CREATE UNIQUE INDEX user_index4 ON t0 (id, abs(age)) ;";
  checkValidUnique(schema4,null);
  checkValidUnique(schema4.replace("UNIQUE","ASSUMEUNIQUE"),null);
  String schema6="create table t0 (id bigint not null, name varchar(32) not null, age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN name;\n" + "CREATE UNIQUE INDEX user_index6 ON t0 (name) ;";
  checkValidUnique(schema6,msgP);
  checkValidUnique(schema6.replace("UNIQUE","ASSUMEUNIQUE"),msgP);
  String schema7="create table t0 (id bigint not null, name varchar(32) not null, age integer);\n" + "PARTITION TABLE t0 ON COLUMN id;\n" + "CREATE UNIQUE INDEX user_index7 ON t0 (name) ;";
  checkValidUnique(schema7,msgP);
  checkValidUnique(schema7.replace("UNIQUE","ASSUMEUNIQUE"),null);
  String schema8="create table t0 (id bigint not null, name varchar(32), age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN id;\n" + "CREATE UNIQUE INDEX user_index8 ON t0 (name) ;";
  checkValidUnique(schema8,msgP);
  checkValidUnique(schema8.replace("UNIQUE","ASSUMEUNIQUE"),null);
  String schema9="create table t0 (id bigint not null, name varchar(32), age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN id;\n" + "CREATE UNIQUE INDEX user_index9 ON t0 (abs(age)) ;";
  checkValidUnique(schema9,msgP);
  checkValidUnique(schema9.replace("UNIQUE","ASSUMEUNIQUE"),null);
  String schema10="create table t0 (id bigint not null, name varchar(32) not null, age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN name;\n" + "CREATE UNIQUE INDEX user_index10 ON t0 (substr(name, 1, 2 )) ;";
  checkValidUnique(schema10,msgP);
  checkValidUnique(schema10.replace("UNIQUE","ASSUMEUNIQUE"),msgP);
  String schema12="create table t0 (id bigint not null, name varchar(32) not null, age integer,  primary key (id));\n" + "PARTITION TABLE t0 ON COLUMN name;\n" + "CREATE UNIQUE INDEX user_index12 ON t0 (age) ;";
  checkValidUnique(schema12,msgP);
  checkValidUnique(schema12.replace("UNIQUE","ASSUMEUNIQUE"),msgP);
}
