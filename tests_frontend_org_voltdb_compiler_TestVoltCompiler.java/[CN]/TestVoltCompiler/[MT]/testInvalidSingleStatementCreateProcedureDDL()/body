{
  ArrayList<Feedback> fbs;
  String expectedError;
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE Foo AS BANBALOO pkey FROM PKEY_INTEGER;"+ "PARTITION PROCEDURE Foo ON TABLE PKEY_INTEGER COLUMN PKEY;");
  expectedError="Failed to plan for statement (sql) BANBALOO pkey FROM PKEY_INTEGER";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE Foo AS SELEC pkey FROM PKEY_INTEGER;"+ "PARTITION PROCEDURE Foo ON TABLE PKEY_INTEGER COLUMN PKEY PARAMETER 0;");
  expectedError="Failed to plan for statement (sql) SELEC pkey FROM PKEY_INTEGER";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE Foo AS DELETE FROM PKEY_INTEGER WHERE PKEY = ?;"+ "PARTITION PROCEDURE Foo ON TABLE PKEY_INTEGER COLUMN PKEY PARAMETER 2;");
  expectedError="PartitionInfo specifies invalid parameter index for procedure: Foo";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE Foo AS DELETE FROM PKEY_INTEGER;"+ "PARTITION PROCEDURE Foo ON TABLE PKEY_INTEGER COLUMN PKEY;");
  expectedError="PartitionInfo specifies invalid parameter index for procedure: Foo";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE 7Foo AS DELETE FROM PKEY_INTEGER WHERE PKEY = ?;"+ "PARTITION PROCEDURE 7Foo ON TABLE PKEY_INTEGER COLUMN PKEY;");
  expectedError="Unknown indentifier in DDL: \"" + "CREATE PROCEDURE 7Foo AS DELETE FROM PKEY_INTEGER WHERE PKEY = ?" + "\" contains invalid identifier \"7Foo\"";
  assertTrue(isFeedbackPresent(expectedError,fbs));
}
