{
class Tester {
    VoltCompiler compiler=new VoltCompiler();
    String baseDDL="create table books (cash integer default 23 not null, " + "title varchar(3) default 'foo', " + "primary key(cash));\n"+ "partition table books on column cash";
    void runtest(    String ddl){
      runtest(ddl,null);
    }
    void runtest(    String ddl,    String expectedError){
      String schema=String.format("%s;\n%s;",baseDDL,ddl);
      boolean success=compileDDL(schema,compiler);
      checkCompilerErrorMessages(expectedError,compiler,success);
    }
  }
  Tester tester=new Tester();
  tester.runtest("create procedure " + "partition on table books column cash " + "from class org.voltdb.compiler.procedures.NotAnnotatedAddBook");
  tester.runtest("create procedure " + "partition on table books column cash " + "from class org.voltdb.compiler.procedures.AddBook","has partition properties defined both in class");
  tester.runtest("create role r1;\n" + "create procedure " + "allow r1 "+ "partition on table books column cash "+ "from class org.voltdb.compiler.procedures.NotAnnotatedAddBook");
  tester.runtest("create role r1;\n" + "create procedure " + "partition on table books column cash "+ "allow r1 "+ "from class org.voltdb.compiler.procedures.NotAnnotatedAddBook");
  tester.runtest("create procedure Foo " + "PARTITION on table books COLUMN cash PARAMETER 0 " + "AS select * from books where cash = ?");
  tester.runtest("create role r1;\n" + "create procedure Foo " + "allow r1 "+ "PARTITION on table books COLUMN cash PARAMETER 0 "+ "AS select * from books where cash = ?");
  tester.runtest("create role r1;\n" + "create procedure Foo " + "PARTITION on table books COLUMN cash PARAMETER 0 "+ "allow r1 "+ "AS select * from books where cash = ?");
  tester.runtest("create role admin;\n" + "CREATE TABLE T26 (age BIGINT NOT NULL, gender TINYINT);\n" + "PARTITION TABLE T26 ON COLUMN age;\n"+ "CREATE TABLE T26a (age BIGINT NOT NULL, gender TINYINT);\n"+ "PARTITION TABLE T26a ON COLUMN age;\n"+ "CREATE PROCEDURE p4 ALLOW admin PARTITION ON TABLE T26 COLUMN age PARAMETER 0 AS SELECT COUNT(*) FROM T26 WHERE age = ?;\n"+ "CREATE PROCEDURE PARTITION ON TABLE T26a COLUMN age ALLOW admin FROM CLASS org.voltdb_testprocs.fullddlfeatures.testCreateProcFromClassProc");
  tester.runtest("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, DESCR VARCHAR(128), PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE Foo PARTITION ON TABLE PKEY_INTEGER COLUMN PKEY AS ###\n"+ "    stmt = new SQLStmt('SELECT PKEY, DESCR FROM PKEY_INTEGER WHERE PKEY = ?')\n"+ "    transactOn = { int key -> \n"+ "        voltQueueSQL(stmt,key)\n"+ "        voltExecuteSQL(true)\n"+ "    }\n"+ "### LANGUAGE GROOVY");
  tester.runtest("create procedure " + "partition on table books column cash " + "partition on table books column cash "+ "from class org.voltdb.compiler.procedures.NotAnnotatedAddBook","Only one PARTITION clause is allowed for CREATE PROCEDURE");
  tester.runtest("create role r1;\n" + "create role r2;\n" + "create procedure "+ "allow r1 "+ "allow r2 "+ "from class org.voltdb.compiler.procedures.AddBook");
}
