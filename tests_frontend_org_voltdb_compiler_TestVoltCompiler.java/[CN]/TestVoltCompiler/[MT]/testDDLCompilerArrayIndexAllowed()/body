{
  for (int i=0; i < column_types.length; i++) {
    final String s="create table t(id " + column_types[i] + " not null, num integer not null);\n"+ "create index idx_t_id_array on t(id);\n"+ "create index idx_t_idnum_array on t(id,num);";
    VoltCompiler c=compileForDDLTest(getPathForSchema(s),can_be_array[i]);
    if (can_be_array[i]) {
      assertFalse(c.hasErrors());
      Database d=c.m_catalog.getClusters().get("cluster").getDatabases().get("database");
      assertEquals(IndexType.ARRAY.getValue(),d.getTables().getIgnoreCase("t").getIndexes().getIgnoreCase("idx_t_id_array").getType());
      assertEquals(IndexType.ARRAY.getValue(),d.getTables().getIgnoreCase("t").getIndexes().getIgnoreCase("idx_t_idnum_array").getType());
    }
 else {
      assertTrue(c.hasErrors());
    }
  }
}
