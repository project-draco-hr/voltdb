{
  String schema="create table books (cash integer default 23 NOT NULL, title varbinary(10) default NULL, PRIMARY KEY(cash));" + "partition table books on column cash;";
  File schemaFile=VoltProjectBuilder.writeStringToTempFile(schema);
  String schemaPath=schemaFile.getPath();
  String simpleProject="<?xml version=\"1.0\"?>\n" + "<project>" + "<database name='database'>"+ "<schemas><schema path='" + schemaPath + "' /></schemas>"+ "<procedures>"+ "<procedure class='get'><sql>select * from books;</sql></procedure>"+ "<procedure class='i1'><sql>insert into books values(5, 'AA');</sql></procedure>"+ "<procedure class='i2'><sql>insert into books values(5, ?);</sql></procedure>"+ "<procedure class='s1'><sql>update books set title = 'bb';</sql></procedure>"+ "</procedures>"+ "</database>"+ "</project>";
  File projectFile=VoltProjectBuilder.writeStringToTempFile(simpleProject);
  String projectPath=projectFile.getPath();
  VoltCompiler compiler=new VoltCompiler();
  assertTrue(compiler.compileWithProjectXML(projectPath,testout_jar));
  Catalog c1=compiler.getCatalog();
  String catalogContents=VoltCompilerUtils.readFileFromJarfile(testout_jar,"catalog.txt");
  Catalog c2=new Catalog();
  c2.execute(catalogContents);
  assertTrue(c2.serialize().equals(c1.serialize()));
}
