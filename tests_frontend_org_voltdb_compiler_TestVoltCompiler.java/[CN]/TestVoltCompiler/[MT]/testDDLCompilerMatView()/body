{
  String ddl;
  ddl="create table t(id integer not null, num integer, wage integer);\n" + "create view my_view1 (num, total) " + "as select num, count(*) from (select num from t) subt group by num; \n";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW1\" with subquery sources is not supported.");
  ddl="create table t1(id integer not null, num integer, wage integer);\n" + "create table t2(id integer not null, num integer, wage integer);\n" + "create view my_view1 (id, num, total) "+ "as select t1.id, t2.num, count(*) from t1 join t2 on t1.id = t2.id group by t1.id, t2.num; \n";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW1\" has 2 sources. Only one source table is allowed.");
  ddl="create table t1(id integer not null, num integer, wage integer);\n" + "create table t2(id integer not null, num integer, wage integer);\n" + "create view my_view1 (id, num, total) "+ "as select t1.id, st2.num, count(*) from t1 join (select id ,num from t2) st2 on t1.id = st2.id group by t1.id, st2.num; \n";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW1\" with subquery sources is not supported.");
  ddl="create table t(id integer not null, num integer);\n" + "create view my_view as select num, count(*) from t group by num order by num;";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW\" with ORDER BY clause is not supported.");
  ddl="create table t(id integer not null, num integer, wage integer);\n" + "create view my_view1 (num, total, sumwage) " + "as select num, count(*), sum(wage) from t group by num; \n"+ "create view my_view2 (num, total, sumwage) "+ "as select num, count(*), sum(sumwage) from my_view1 group by num; ";
  checkDDLErrorMessage(ddl,"A materialized view (MY_VIEW2) can not be defined on another view (MY_VIEW1)");
  ddl="create table t(id integer not null, num integer);\n" + "create view my_view as select num, count(*) from t group by num limit 1;";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW\" with LIMIT or OFFSET clause is not supported.");
  ddl="create table t(id integer not null, num integer);\n" + "create view my_view as select num, count(*) from t group by num limit 1 offset 10;";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW\" with LIMIT or OFFSET clause is not supported.");
  ddl="create table t(id integer not null, num integer);\n" + "create view my_view as select num, count(*) from t group by num offset 10;";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW\" with LIMIT or OFFSET clause is not supported.");
  ddl="create table t(id integer not null, num integer);\n" + "create view my_view as select num, count(*) from t group by num having count(*) > 3;";
  checkDDLErrorMessage(ddl,"Materialized view \"MY_VIEW\" with HAVING clause is not supported.");
  String errorMsg="In database, the materialized view is automatically " + "partitioned based on its source table. Invalid PARTITION statement on view table MY_VIEW.";
  ddl="create table t(id integer not null, num integer not null);\n" + "partition table t on column num;\n" + "create view my_view as select num, count(*) from t group by num;\n"+ "partition table my_view on column num;";
  checkDDLErrorMessage(ddl,errorMsg);
  ddl="create table t(id integer not null, num integer not null);\n" + "partition table t on column num;" + "create view my_view as select num, count(*) as ct from t group by num;"+ "partition table my_view on column ct;";
  checkDDLErrorMessage(ddl,errorMsg);
  ddl="create table t(id integer not null, num integer not null);\n" + "create view my_view as select num, count(*) from t group by num;" + "partition table my_view on column num;";
  checkDDLErrorMessage(ddl,errorMsg);
}
