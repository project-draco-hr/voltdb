{
  List<Pair<String,String>> testList=Arrays.asList(Pair.of("select WAGE from t where ID = 2;","Unexpected compilation failure"),Pair.of("select WAGE from t where ID = 1 limit (select DEPT from r1 where ID = 2);\n","Expected compilation failure: subquery in limit."),Pair.of("select WAGE from t where ID = 1 limit 1 offset (select DEPT from r1 where ID = 2);\n","Expected compilation failure: subquery in offset"),Pair.of("select WAGE from t where ID = 1 order by (select DEPT from r1 where ID = 2);\n","Expected compilation failure: subquery in order by"),Pair.of("create index tidx on t ( id ) where exists ( select id = 1 from t) ;\n","Expected compilation failure: scalar subquery in partial index."),Pair.of("create index tidx on t ( id ) where ( select id > 1 from t) ;\n","Expected compilation failure: scalar subquery in partial index."),Pair.of("create index tidx on t ( select WAGE from t where id = 1 );\n","Expected compilation failure: scalar subquery in index."));
  for (  Pair<String,String> pair : testList) {
    String ddl="create table t ( ID integer, WAGE integer, DEPT integer );\n";
    String dql=pair.getLeft();
    String msg=pair.getRight();
    if (dql.startsWith("select")) {
      dql="create procedure ALPHA as " + dql;
    }
    final File ddlFile=VoltProjectBuilder.writeStringToTempFile(ddl + dql);
    final VoltCompiler compiler=new VoltCompiler();
    assertEquals(msg,msg.startsWith("Unexpected"),compiler.compileFromDDL(testout_jar,ddlFile.getPath()));
  }
}
