{
  Database db=goodDDLAgainstSimpleSchema("create role r1;","create procedure p1 allow r1 as select * from books;");
  Procedure proc=db.getProcedures().get("p1");
  assertNotNull(proc);
  CatalogMap<GroupRef> groups=proc.getAuthgroups();
  assertEquals(1,groups.size());
  assertNotNull(groups.get("r1"));
  db=goodDDLAgainstSimpleSchema("create role r1;","create role r2;","create procedure p1 allow r1, r2 as select * from books;");
  proc=db.getProcedures().get("p1");
  assertNotNull(proc);
  groups=proc.getAuthgroups();
  assertEquals(2,groups.size());
  assertNotNull(groups.get("r1"));
  assertNotNull(groups.get("r2"));
  db=goodDDLAgainstSimpleSchema("create role r1;","create procedure allow r1 from class org.voltdb.compiler.procedures.AddBook;");
  proc=db.getProcedures().get("AddBook");
  assertNotNull(proc);
  groups=proc.getAuthgroups();
  assertEquals(1,groups.size());
  assertNotNull(groups.get("r1"));
  db=goodDDLAgainstSimpleSchema("create role r1;","create role r2;","create procedure allow r1,r2 from class org.voltdb.compiler.procedures.AddBook;");
  proc=db.getProcedures().get("AddBook");
  assertNotNull(proc);
  groups=proc.getAuthgroups();
  assertEquals(2,groups.size());
  assertNotNull(groups.get("r1"));
  assertNotNull(groups.get("r2"));
  db=goodDDLAgainstSimpleSchema("create role r1;","create procedure allow r1,r1 from class org.voltdb.compiler.procedures.AddBook;");
  proc=db.getProcedures().get("AddBook");
  assertNotNull(proc);
  groups=proc.getAuthgroups();
  assertEquals(1,groups.size());
  assertNotNull(groups.get("r1"));
}
