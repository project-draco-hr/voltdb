{
  ArrayList<Feedback> fbs;
  String expectedError;
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NonExistentPartitionParamInteger;"+ "PARTITION PROCEDURE NonExistentPartitionParamInteger ON 'PKEY_INTEGER.PKEY: 0';");
  expectedError="Cannot load class for procedure: org.voltdb.compiler.procedures.NonExistentPartitionParamInteger";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "PARTITION PROCEDURE NotDefinedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: 0';");
  expectedError="Partition in referencing an undefined procedure \"NotDefinedPartitionParamInteger\"";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.PartitionParamInteger;"+ "PARTITION PROCEDURE PartitionParamInteger ON 'PKEY_WHAAAT.PKEY: 0';");
  expectedError="PartitionParamInteger has partition properties defined both in class " + "\"org.voltdb.compiler.procedures.PartitionParamInteger\" and in the schema defintion file(s)";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_WHAAAT.PKEY: 0';");
  expectedError="PartitionInfo for procedure " + "org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger refers to a column " + "in schema which can't be found.";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PSURROGATE: 0';");
  expectedError="PartitionInfo for procedure " + "org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger refers to a column " + "in schema which can't be found.";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: 8';");
  expectedError="PartitionInfo specifies invalid parameter index for procedure: " + "org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM GLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: 0';");
  expectedError="Bad CREATE PROCEDURE DDL statement: " + "\"CREATE PROCEDURE FROM GLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger\"" + ", expected syntax: \"CREATE PROCEDURE FROM CLASS <class-name>\"";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger FOR 'PKEY_INTEGER.PKEY: 0';");
  expectedError="Bad PARTITION DDL statement: \"PARTITION PROCEDURE " + "NotAnnotatedPartitionParamInteger FOR 'PKEY_INTEGER.PKEY: 0'\", " + "expected syntax: PARTITION PROCEDURE <procedure> ON "+ "'<table>.<column>: <parameter-index-no>'";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER,PKEY, 0';");
  expectedError="Bad PARTITION DDL statement: \"PARTITION PROCEDURE " + "NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER,PKEY, 0'\", " + "expected syntax: PARTITION PROCEDURE <procedure> ON "+ "'<table>.<column>: <parameter-index-no>'";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: hello';");
  expectedError="Bad PARTITION DDL statement: \"PARTITION PROCEDURE " + "NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: hello'\", " + "expected syntax: PARTITION PROCEDURE <procedure> ON "+ "'<table>.<column>: <parameter-index-no>'";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE FROM CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROGEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: hello';");
  expectedError="Bad PARTITION DDL statement: " + "\"PARTITION PROGEDURE NotAnnotatedPartitionParamInteger ON " + "'PKEY_INTEGER.PKEY: hello'\", expected syntax: \"PARTITION TABLE <table> "+ "ON COLUMN <column>\" or \"PARTITION PROCEDURE <procedure> ON "+ "'<table>.<column>: <parameter-index-no>'\"";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "CREATE PROCEDURE OUTOF CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: hello';");
  expectedError="Bad CREATE PROCEDURE DDL statement: " + "\"CREATE PROCEDURE OUTOF CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger\"" + ", expected syntax: \"CREATE PROCEDURE FROM CLASS <class-name>\"";
  assertTrue(isFeedbackPresent(expectedError,fbs));
  fbs=checkInvalidProcedureDDL("CREATE TABLE PKEY_INTEGER ( PKEY INTEGER NOT NULL, PRIMARY KEY (PKEY) );" + "PARTITION TABLE PKEY_INTEGER ON COLUMN PKEY;" + "MAKE PROCEDURE OUTOF CLASS org.voltdb.compiler.procedures.NotAnnotatedPartitionParamInteger;"+ "PARTITION PROCEDURE NotAnnotatedPartitionParamInteger ON 'PKEY_INTEGER.PKEY: hello';");
  expectedError="DDL Error: \"unexpected token: MAKE\" in statement starting on lineno: 1";
  assertTrue(isFeedbackPresent(expectedError,fbs));
}
