{
  VoltCompiler compiler=new VoltCompiler();
  boolean success=compileDDL(ddl,compiler);
  checkCompilerErrorMessages(expectedMessage,compiler,success);
  if (success) {
    Catalog cat=compiler.getCatalog();
    Table tbl=cat.getClusters().get("cluster").getDatabases().get("database").getTables().getIgnoreCase(tblName);
    if (expectedLimit != -1) {
      assertEquals(expectedLimit,tbl.getTuplelimit());
    }
 else {
      assertEquals(Integer.MAX_VALUE,tbl.getTuplelimit());
    }
    Statement stmt=null;
    try {
      stmt=tbl.getTuplelimitdeletestmt().iterator().next();
    }
 catch (    NoSuchElementException nse) {
    }
    if (expectedStmt == null) {
      assertTrue("Did not expect to find a LIMIT DELETE statement, but found this one:\n" + (stmt != null ? stmt.getSqltext() : ""),stmt == null);
    }
 else {
      assertTrue("Expected to find LIMIT DELETE statement, found none",stmt != null);
      String sql=stmt.getSqltext();
      if (sql.endsWith(";")) {
        sql=sql.substring(0,sql.length() - 1);
      }
      assertEquals("Did not find the LIMIT DELETE statement that we expected",expectedStmt,sql);
    }
  }
}
