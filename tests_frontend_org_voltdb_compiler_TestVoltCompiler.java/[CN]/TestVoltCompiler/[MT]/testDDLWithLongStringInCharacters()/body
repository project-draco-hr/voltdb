{
  int length=VoltType.MAX_VALUE_LENGTH_IN_CHARACTERS + 10;
  final String simpleSchema1="create table books (cash integer default 23, " + "title varchar(" + length + ") default 'foo', PRIMARY KEY(cash));";
  final File schemaFile=VoltProjectBuilder.writeStringToTempFile(simpleSchema1);
  final String schemaPath=schemaFile.getPath();
  final String simpleProject="<?xml version=\"1.0\"?>\n" + "<project>" + "<database name='database'>"+ "<schemas>"+ "<schema path='" + schemaPath + "' />"+ "</schemas>"+ "</database>"+ "</project>";
  final File projectFile=VoltProjectBuilder.writeStringToTempFile(simpleProject);
  final String projectPath=projectFile.getPath();
  final VoltCompiler compiler=new VoltCompiler();
  final boolean success=compiler.compileWithProjectXML(projectPath,testout_jar);
  assertTrue(success);
  assertEquals(1,compiler.m_warnings.size());
  String warningMsg=compiler.m_warnings.get(0).getMessage();
  assertTrue(warningMsg.contains("The size of VARCHAR column TITLE in table BOOKS greater than " + "262144 will be enforced as byte counts rather than UTF8 character counts. " + "To eliminate this warning, specify \"VARCHAR(262154 BYTES)"));
  Database db=compiler.getCatalog().getClusters().get("cluster").getDatabases().get("database");
  Column var=db.getTables().get("BOOKS").getColumns().get("TITLE");
  assertTrue(var.getInbytes());
}
