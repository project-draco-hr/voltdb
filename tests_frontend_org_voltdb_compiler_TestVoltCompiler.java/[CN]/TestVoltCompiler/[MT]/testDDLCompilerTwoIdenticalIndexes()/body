{
  String schema;
  VoltCompiler c;
  schema="create table t(id integer not null, num integer not null);\n" + "create index idx_t_idnum1 on t(id,num);\n" + "create index idx_t_idnum2 on t(id,num);";
  c=compileSchemaForDDLTest(schema,true);
  assertFalse(c.hasErrors());
  assertTrue(c.hasErrorsOrWarnings());
  schema="create table t(id integer not null, num integer not null);\n" + "create index idx_t_idnum1 on t(id) where num > 3;\n" + "create index idx_t_idnum2 on t(id) where num > 3;";
  c=compileSchemaForDDLTest(schema,true);
  assertFalse(c.hasErrors());
  assertTrue(c.hasErrorsOrWarnings());
  schema="create table t(id integer not null, num integer not null);\n" + "create unique index idx_t_idnum1 on t(id) where num > 3;\n" + "create unique index idx_t_idnum2 on t(id) where num > 3;";
  c=compileSchemaForDDLTest(schema,true);
  assertFalse(c.hasErrors());
  assertTrue(c.hasErrorsOrWarnings());
  schema="create table t(id integer not null, num integer not null);\n" + "create index idx_t_idnum1 on t(id) where abs(num) > 3;\n" + "create index idx_t_idnum2 on t(id) where abs(num) > 3;";
  c=compileSchemaForDDLTest(schema,true);
  assertFalse(c.hasErrors());
  assertTrue(c.hasErrorsOrWarnings());
  schema="create table t(id integer not null, num integer not null);\n" + "create unique index idx_t_idnum1 on t(id) where abs(num) > 3;\n" + "create unique index idx_t_idnum2 on t(id) where abs(num) > 3;";
  c=compileSchemaForDDLTest(schema,true);
  assertFalse(c.hasErrors());
  assertTrue(c.hasErrorsOrWarnings());
}
