{
  byte[] config=hashinator.pGetCurrentConfig().configBytes;
  Map<Integer,Integer> tokens=deserializeElasticConfig(config);
  for (  Map.Entry<Integer,Integer> entry : tokens.entrySet()) {
    int token=entry.getKey();
    int pid=entry.getValue();
    if (pid == partition) {
      boolean foundRange=false;
      for (      Map.Entry<Integer,Integer> rangeEntry : range.entrySet()) {
        int start=rangeEntry.getKey();
        int end=rangeEntry.getValue();
        if (start <= token && token < end) {
          foundRange=true;
          break;
        }
 else         if (end < start && (start <= token || token < end)) {
          foundRange=true;
          break;
        }
      }
      assertTrue(foundRange);
    }
  }
}
