{
  byte configBytes[]=LegacyHashinator.getConfigureBytes(1);
  ExecutionEngine ee=new ExecutionEngineJNI(1,1,0,0,"",100,HashinatorType.LEGACY,configBytes);
  for (int i=0; i < 5; i++) {
    int partitionCount=r.nextInt(1000) + 1;
    long[] values=new long[]{Long.MIN_VALUE,Long.MAX_VALUE,Long.MAX_VALUE - 1,Long.MIN_VALUE + 1};
    configBytes=LegacyHashinator.getConfigureBytes(partitionCount);
    TheHashinator.initialize(LegacyHashinator.class,configBytes);
    for (    long valueToHash : values) {
      int eehash=ee.hashinate(valueToHash,HashinatorType.LEGACY,configBytes);
      int javahash=TheHashinator.hashinateLong(valueToHash);
      if (eehash != javahash) {
        System.out.printf("Hash of %d with %d partitions => EE: %d, Java: %d\n",valueToHash,partitionCount,eehash,javahash);
      }
      assertEquals(eehash,javahash);
      assertTrue(eehash < partitionCount);
      assertTrue(eehash >= 0);
    }
  }
  try {
    ee.release();
  }
 catch (  Exception e) {
  }
}
