{
  byte configBytes[]=TheHashinator.getConfigureBytes(1);
  ExecutionEngine ee=new ExecutionEngineJNI(1,1,0,0,"",100,new HashinatorConfig(hashinatorType,configBytes,0,0),false);
  for (int i=0; i < 1500; i++) {
    final int partitionCount=r.nextInt(1000) + 1;
    configBytes=TheHashinator.getConfigureBytes(partitionCount);
    TheHashinator.initialize(TheHashinator.getConfiguredHashinatorClass(),configBytes);
    final long valueToHash=r.nextLong();
    final int javahash=TheHashinator.getPartitionForParameter(VoltType.typeFromObject(valueToHash).getValue(),valueToHash);
    final int eehash=ee.hashinate(valueToHash,TheHashinator.getCurrentConfig());
    if (eehash != javahash) {
      System.out.printf("Mismatched hash of (%s) %d with %d partitions => EE: %d, Java: %d\n",VoltType.typeFromObject(valueToHash).toSQLString(),valueToHash,partitionCount,eehash,javahash);
    }
    assertEquals(eehash,javahash);
    assertTrue(eehash < partitionCount);
    assertTrue(eehash > -1);
  }
  try {
    ee.release();
  }
 catch (  Exception e) {
  }
}
