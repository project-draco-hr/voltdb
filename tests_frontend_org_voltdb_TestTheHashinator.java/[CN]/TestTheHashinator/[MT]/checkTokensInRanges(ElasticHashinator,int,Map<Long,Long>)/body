{
  byte[] config=hashinator.pGetCurrentConfig().getSecond();
  Map<Long,Integer> tokens=deserializeElasticConfig(config);
  for (  Map.Entry<Long,Integer> entry : tokens.entrySet()) {
    long token=entry.getKey();
    int pid=entry.getValue();
    if (pid == partition) {
      boolean foundRange=false;
      for (      Map.Entry<Long,Long> rangeEntry : range.entrySet()) {
        long start=rangeEntry.getKey();
        long end=rangeEntry.getValue();
        if (start <= token && token < end) {
          foundRange=true;
          break;
        }
 else         if (end < start && (start <= token || token < end)) {
          foundRange=true;
          break;
        }
      }
      assertTrue(foundRange);
    }
  }
}
