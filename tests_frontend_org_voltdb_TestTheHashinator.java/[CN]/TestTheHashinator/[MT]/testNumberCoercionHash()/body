{
  System.out.println("=======================");
  System.out.println("NUMBER COERCION");
  for (int i=0; i < 1500; i++) {
    int partitionCount=r.nextInt(1000) + 1;
    byte[] configBytes=TheHashinator.getConfigureBytes(partitionCount);
    long longToHash=r.nextLong();
    String stringToHash=Long.toString(longToHash);
    byte[] bufToHash;
    ByteBuffer buf=ByteBuffer.allocate(8);
    buf.order(ByteOrder.LITTLE_ENDIAN);
    buf.putLong(longToHash);
    bufToHash=buf.array();
    TheHashinator.initialize(TheHashinator.getConfiguredHashinatorClass(),configBytes);
    int longHash=TheHashinator.getPartitionForParameter(VoltType.BIGINT.getValue(),longToHash);
    int stringHash=TheHashinator.getPartitionForParameter(VoltType.BIGINT.getValue(),stringToHash);
    int bufHash=TheHashinator.getPartitionForParameter(VoltType.BIGINT.getValue(),bufToHash);
    assertEquals(longHash,stringHash);
    assertEquals(stringHash,bufHash);
    assertTrue(longHash < partitionCount);
    assertTrue(longHash >= 0);
  }
}
