{
  ElasticHashinator hashinator=new ElasticHashinator(ElasticHashinator.getConfigureBytes(partitionCount,ElasticHashinator.DEFAULT_TOTAL_TOKENS),false);
  Map<Integer,Integer> range1=hashinator.pGetRanges(partitionToCheck);
  assertTrue(ElasticHashinator.DEFAULT_TOTAL_TOKENS / partitionCount == range1.size() || 1 + ElasticHashinator.DEFAULT_TOTAL_TOKENS / partitionCount == range1.size());
  long previous=Integer.MIN_VALUE;
  for (  long k : range1.keySet()) {
    assertTrue(k >= previous);
    previous=k;
  }
  checkRangeBoundaries(hashinator,partitionToCheck,range1);
  checkTokensInRanges(hashinator,partitionToCheck,range1);
  assertTrue(hashinator.pGetRanges(partitionCount + 1).isEmpty());
  return range1;
}
