{
  TreeMap<Integer,Integer> tokensToAdd=Maps.newTreeMap();
  tokensToAdd.put(token,partition);
  dut=dut.addTokens(tokensToAdd);
  SortedMapDifference<Integer,Integer> diff=Maps.difference(initialTokens,dut.getTokens());
  assertTrue(diff.entriesOnlyOnLeft().isEmpty());
  if (hasIntermediateToken) {
    assertTrue(diff.entriesDiffering().isEmpty());
    assertEquals(partition,diff.entriesOnlyOnRight().size());
    assertEquals(token,diff.entriesOnlyOnRight().firstKey().intValue());
  }
 else {
    assertTrue(diff.entriesOnlyOnRight().isEmpty());
    assertEquals(1,diff.entriesDiffering().size());
    assertEquals(initialTokens.firstKey(),diff.entriesDiffering().firstKey());
    assertEquals(partition,diff.entriesDiffering().get(initialTokens.firstKey()).rightValue().intValue());
  }
  return dut;
}
