{
  ExecutionEngine ee=new ExecutionEngineJNI(1,1,0,0,"",100,hashinatorType,getConfigBytes(2));
  final byte configBytes[]=getConfigBytes(2);
  TheHashinator.initialize(getHashinatorClass(),configBytes);
  int jHash=TheHashinator.getPartitionForParameter(VoltType.TINYINT.getValue(),new Byte(VoltType.NULL_TINYINT));
  int cHash=ee.hashinate(VoltType.NULL_TINYINT,hashinatorType,configBytes);
  assertEquals(0,jHash);
  assertEquals(jHash,cHash);
  System.out.println("jhash " + jHash + " chash "+ cHash);
  jHash=TheHashinator.getPartitionForParameter(VoltType.SMALLINT.getValue(),new Short(VoltType.NULL_SMALLINT));
  cHash=ee.hashinate(VoltType.NULL_SMALLINT,hashinatorType,configBytes);
  assertEquals(0,jHash);
  assertEquals(jHash,cHash);
  System.out.println("jhash " + jHash + " chash "+ cHash);
  jHash=TheHashinator.getPartitionForParameter(VoltType.INTEGER.getValue(),new Integer(VoltType.NULL_INTEGER));
  cHash=ee.hashinate(VoltType.NULL_INTEGER,hashinatorType,configBytes);
  assertEquals(0,jHash);
  assertEquals(jHash,cHash);
  System.out.println("jhash " + jHash + " chash "+ cHash);
  jHash=TheHashinator.getPartitionForParameter(VoltType.BIGINT.getValue(),new Long(VoltType.NULL_BIGINT));
  cHash=ee.hashinate(VoltType.NULL_BIGINT,hashinatorType,configBytes);
  assertEquals(0,jHash);
  assertEquals(jHash,cHash);
  System.out.println("jhash " + jHash + " chash "+ cHash);
  jHash=TheHashinator.getPartitionForParameter(VoltType.STRING.getValue(),VoltType.NULL_STRING_OR_VARBINARY);
  cHash=ee.hashinate(VoltType.NULL_STRING_OR_VARBINARY,hashinatorType,configBytes);
  assertEquals(0,jHash);
  assertEquals(jHash,cHash);
  System.out.println("jhash " + jHash + " chash "+ cHash);
  jHash=TheHashinator.getPartitionForParameter(VoltType.VARBINARY.getValue(),null);
  cHash=ee.hashinate(null,hashinatorType,configBytes);
  assertEquals(0,jHash);
  assertEquals(jHash,cHash);
  System.out.println("jhash " + jHash + " chash "+ cHash);
  try {
    ee.release();
  }
 catch (  Exception e) {
  }
}
