{
  Iterator<Entry<K,Collection<V>>> entryIterator=unfiltered.asMap().entrySet().iterator();
  boolean changed=false;
  while (entryIterator.hasNext()) {
    Entry<K,Collection<V>> entry=entryIterator.next();
    K key=entry.getKey();
    Collection<V> collection=filterCollection(entry.getValue(),new ValuePredicate(key));
    if (!collection.isEmpty() && predicate.apply(Maps.immutableEntry(key,collection))) {
      if (collection.size() == entry.getValue().size()) {
        entryIterator.remove();
      }
 else {
        collection.clear();
      }
      changed=true;
    }
  }
  return changed;
}
