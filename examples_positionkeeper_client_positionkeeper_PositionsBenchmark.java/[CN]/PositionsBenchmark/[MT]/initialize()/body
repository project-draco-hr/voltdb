{
  for (int e=0; e < 5; e++) {
    client.callProcedure(new BenchmarkCallback("EXC.insert"),"EXC.insert",e);
  }
  System.out.println("  loaded 5 records into EXC");
  for (int s=0; s < numSecs; s++) {
    client.callProcedure(new BenchmarkCallback("SEC.insert"),"SEC.insert",s,rand.nextInt(5));
    prices[s]=rand.nextInt(100);
  }
  System.out.println("  loaded " + numSecs + " records into SEC");
  for (int t=0; t < config.traders; t++) {
    client.callProcedure(new BenchmarkCallback("CNT.insert"),"CNT.insert",t);
  }
  System.out.println("  loaded " + config.traders + " records into CNT");
  for (int t=0; t < config.traders; t++) {
    List<Integer> secs=new ArrayList<Integer>();
    while (secs.size() < config.secpercnt) {
      int sec=rand.nextInt(numSecs);
      if (!secs.contains(sec))       secs.add(sec);
    }
    for (int i=0; i < config.secpercnt; i++) {
      positions[t][i]=secs.get(i);
    }
  }
  System.out.println("  initialized client with array of " + config.traders * config.secpercnt + " possible positions");
}
