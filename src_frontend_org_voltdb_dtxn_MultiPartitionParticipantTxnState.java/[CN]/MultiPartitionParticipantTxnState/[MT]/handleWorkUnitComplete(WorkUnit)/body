{
  for (  int depId : w.getDependencyIds()) {
    m_missingDependencies.remove(depId);
  }
  if ((w.shouldResumeProcedure()) && (m_readyWorkUnits.peekLast() != null) && (m_readyWorkUnits.peekLast().shouldResumeProcedure())) {
    ArrayDeque<WorkUnit> deque=new ArrayDeque<WorkUnit>();
    while ((m_readyWorkUnits.peekLast() != null) && (m_readyWorkUnits.peekLast().shouldResumeProcedure())) {
      deque.add(m_readyWorkUnits.pollLast());
    }
    deque.add(w);
    while (deque.size() > 0)     m_readyWorkUnits.add(deque.pollLast());
  }
 else {
    m_readyWorkUnits.add(w);
  }
}
