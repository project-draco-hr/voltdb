{
  assert(m_isCoordinator);
  InitiateResponseMessage response=m_site.processInitiateTask(this,itask);
  FragmentTaskMessage ftask=createConcludingFragmentTask();
  ftask.setShouldUndo(response.shouldCommit() == false);
  assert(ftask.isFinalTask() == true);
  try {
    m_mbox.send(m_nonCoordinatingSites,0,ftask);
  }
 catch (  MessagingException e) {
    throw new RuntimeException(e);
  }
  if (!response.shouldCommit()) {
    if (m_missingDependencies != null)     m_missingDependencies.clear();
    if (!isReadOnly) {
      m_site.rollbackTransaction(isReadOnly);
      m_didRollback=true;
    }
  }
  try {
    m_mbox.send(initiatorSiteId,0,response);
  }
 catch (  MessagingException e) {
    throw new RuntimeException(e);
  }
  m_done=true;
}
