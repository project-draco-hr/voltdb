{
  assert(m_isCoordinator);
  m_response=m_site.processInitiateTask(this,itask);
  if (!m_response.shouldCommit()) {
    if (m_missingDependencies != null) {
      m_missingDependencies.clear();
    }
    m_needsRollback=true;
  }
  m_outstandingAcks=new HashSet<Long>();
  if (!isReadOnly()) {
    for (    long hsid : m_nonCoordinatingSites) {
      m_outstandingAcks.add(hsid);
    }
  }
  CompleteTransactionMessage complete_msg=createCompleteTransactionMessage(m_response.shouldCommit() == false,!isReadOnly());
  try {
    m_mbox.send(m_nonCoordinatingSites,complete_msg);
  }
 catch (  MessagingException e) {
    throw new RuntimeException(e);
  }
  if (m_outstandingAcks.size() == 0) {
    try {
      m_mbox.send(initiatorHSId,m_response);
    }
 catch (    MessagingException e) {
      throw new RuntimeException(e);
    }
    m_done=true;
  }
}
