{
  if (lineValues.length != m_columnCount && !m_config.header) {
    return String.format(COLUMN_COUNT_ERROR,lineValues.length,m_columnCount);
  }
  if (lineValues.length != headerlen && m_config.header) {
    return String.format(HEADER_COUNT_ERROR,lineValues.length,headerlen);
  }
  for (int fileCol=0; fileCol < lineValues.length; fileCol++) {
    int i=fileCol;
    if (m_config.header) {
      if (order[fileCol] != null) {
        i=order[fileCol];
      }
 else {
        continue;
      }
    }
    reorderValues[i]=lineValues[fileCol];
    if (reorderValues[i] == null) {
      if (m_config.blank.equalsIgnoreCase("error")) {
        return String.format(BLANK_ERROR,i + 1);
      }
 else       if (m_config.blank.equalsIgnoreCase("empty")) {
        reorderValues[i]=m_blankStrings.get(m_columnTypes[i]);
      }
    }
 else {
      if (m_config.nowhitespace && (reorderValues[i].charAt(0) == ' ' || reorderValues[i].charAt(reorderValues[i].length() - 1) == ' ')) {
        return String.format(WHITESPACE_ERROR,i + 1);
      }
 else {
        reorderValues[i]=reorderValues[i].trim();
      }
      if (!m_config.customNullString.isEmpty()) {
        if (lineValues[i].equals(m_config.customNullString)) {
          reorderValues[i]=null;
        }
      }
 else       if (reorderValues[i].equals("NULL") || reorderValues[i].equals(Constants.CSV_NULL) || reorderValues[i].equals(Constants.QUOTED_CSV_NULL)) {
        reorderValues[i]=null;
      }
    }
  }
  return null;
}
