{
  int number_of_partitions=m_cluster.getPartitions().size();
  Table catalog_table=m_database.getTables().getIgnoreCase(tableName);
  assert(!catalog_table.getIsreplicated());
  int partition_col=catalog_table.getPartitioncolumn().getIndex();
  VoltType partition_type=VoltType.get((byte)catalog_table.getPartitioncolumn().getType());
  VoltTable[] partitioned_tables=new VoltTable[number_of_partitions];
  for (int i=0; i < partitioned_tables.length; i++) {
    partitioned_tables[i]=loadedTable.clone(loadedTable.getUnderlyingBufferSize() / number_of_partitions);
  }
  while (loadedTable.advanceRow()) {
    int partition=0;
    try {
      partition=TheHashinator.hashToPartition(loadedTable.get(partition_col,partition_type));
    }
 catch (    Exception e) {
      e.printStackTrace();
      throw new RuntimeException(e.getMessage());
    }
    partitioned_tables[partition].add(loadedTable);
  }
  return partitioned_tables;
}
