{
  StringBuffer sb;
  Index index;
  Index primaryIndex;
  int[] primaryKey;
  boolean isSeqScan;
  sb=new StringBuffer();
  index=rangeIndex;
  primaryIndex=rangeTable.getPrimaryIndex();
  primaryKey=rangeTable.getPrimaryKey();
  isSeqScan=indexCondition == null;
  String indent=orig_indent + HSQLInterface.XML_INDENT;
  if (index == null)   index=primaryIndex;
  if (index == primaryIndex && primaryKey.length == 0)   isSeqScan=true;
  sb.append(orig_indent + "<tablescan type=\"");
  if (isSeqScan)   sb.append("sequential\" ");
 else   sb.append("index\" ");
  sb.append("table=\"").append(rangeTable.getName().name).append("\"");
  if ((index != null) && (isSeqScan == false)) {
    String indexName=(index.getName() == null ? "UNNAMED" : index.getName().name);
    sb.append(" index=\"").append(indexName).append("\"");
  }
  if (tableAlias != null && !rangeTable.getName().name.equals(tableAlias))   sb.append(" alias=\"").append(tableAlias).append("\"");
  if (isLeftJoin || isRightJoin) {
    sb.append(" isouterjoin=\"true\"");
  }
  sb.append(">\n");
  Expression cond=indexCondition;
  if (indexEndCondition != null) {
    if (cond != null) {
      cond=new ExpressionLogical(OpTypes.AND,cond,indexEndCondition);
    }
 else {
      cond=indexEndCondition;
    }
  }
  if (nonIndexJoinCondition != null) {
    if (cond != null) {
      cond=new ExpressionLogical(OpTypes.AND,cond,nonIndexJoinCondition);
    }
 else {
      cond=nonIndexJoinCondition;
    }
  }
  if (nonIndexWhereCondition != null) {
    if (cond != null) {
      cond=new ExpressionLogical(OpTypes.AND,cond,nonIndexWhereCondition);
    }
 else {
      cond=nonIndexWhereCondition;
    }
  }
  if (indexEndCondition != null) {
    sb.append(indent + "<postexp>\n");
    sb.append(cond.voltGetXML(session,indent + HSQLInterface.XML_INDENT)).append("\n");
    sb.append(indent + "</postexp>\n");
  }
  sb.append(orig_indent + "</tablescan>");
  return sb.toString();
}
