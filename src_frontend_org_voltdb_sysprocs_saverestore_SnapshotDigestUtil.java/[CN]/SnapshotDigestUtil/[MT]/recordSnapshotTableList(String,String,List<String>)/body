{
  final File f=new File(path,nonce + ".digest");
  if (f.exists()) {
    if (!f.delete()) {
      throw new IOException("Unable to write table list file " + f);
    }
  }
  FileOutputStream fos=new FileOutputStream(f);
  StringWriter sw=new StringWriter();
  for (int ii=0; ii < tables.size(); ii++) {
    sw.append(tables.get(ii));
    if (!(ii == (tables.size() - 1))) {
      sw.append(',');
    }
 else {
      sw.append('\n');
    }
  }
  final byte tableListBytes[]=sw.getBuffer().toString().getBytes("UTF-8");
  final CRC32 crc=new CRC32();
  crc.update(tableListBytes);
  ByteBuffer fileBuffer=ByteBuffer.allocate(tableListBytes.length + 4);
  fileBuffer.putInt((int)crc.getValue());
  fileBuffer.put(tableListBytes);
  fileBuffer.flip();
  fos.getChannel().write(fileBuffer);
  fos.getFD().sync();
}
