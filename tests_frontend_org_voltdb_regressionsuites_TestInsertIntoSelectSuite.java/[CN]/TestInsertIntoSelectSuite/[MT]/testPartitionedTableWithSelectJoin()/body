{
  final Client client=getClient();
  initializeTables(client);
  final long partitioningValue=7;
  ClientResponse resp=client.callProcedure("InsertIntoSelectWithJoin",partitioningValue);
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  assertEquals(4,resp.getResults()[0].asScalarLong());
  String selectSp1="select * from source_p1 where bi = " + partitioningValue;
  String selectSp2="select * from source_p2 where bi = " + partitioningValue;
  String selectTarget="select * from target_p";
  resp=client.callProcedure("@AdHoc",selectTarget);
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  VoltTable targetRows=resp.getResults()[0];
  resp=client.callProcedure("@AdHoc",selectSp1);
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  VoltTable sp1Rows=resp.getResults()[0];
  resp=client.callProcedure("@AdHoc",selectSp2);
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  VoltTable sp2Rows=resp.getResults()[0];
  while (targetRows.advanceRow()) {
    assertTrue(sp1Rows.advanceRow());
    assertTrue(sp2Rows.advanceRow());
    assertEquals(sp1Rows.getLong(0),targetRows.getLong(0));
    assertEquals(sp1Rows.getString(1),targetRows.getString(1));
    assertEquals(sp2Rows.getLong(2),targetRows.getLong(2));
    assertEquals(sp2Rows.getLong(3),targetRows.getLong(3));
  }
}
