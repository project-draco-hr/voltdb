{
  VoltServerConfig config=null;
  final MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestInsertIntoSelectSuite.class);
  final VoltProjectBuilder project=new VoltProjectBuilder();
  try {
    project.addLiteralSchema("CREATE TABLE target_p (bi bigint not null," + "vc varchar(100) default '" + vcDefault + "',"+ "ii integer default "+ intDefault+ ","+ "ti tinyint default "+ intDefault+ ");"+ "partition table target_p on column bi;"+ "CREATE TABLE source_p1 (bi bigint not null,"+ "vc varchar(100),"+ "ii integer,"+ "ti tinyint);"+ "partition table source_p1 on column bi;"+ "CREATE TABLE source_p2 (bi bigint not null,"+ "vc varchar(100),"+ "ii integer,"+ "ti tinyint);"+ "partition table source_p2 on column bi;"+ "create procedure insert_p_source_p as insert into target_p (bi, vc, ii, ti) select * from source_p1 where bi = ?;"+ "partition procedure insert_p_source_p on table target_p column bi;"+ "create procedure insert_p_use_defaults as insert into target_p (bi, ti) select bi, ti from source_p1 where bi = ?;"+ "partition procedure insert_p_use_defaults on table target_p column bi;"+ "create procedure insert_p_use_defaults_reorder as insert into target_p (ti, bi) select ti, bi from source_p1 where bi = ?;"+ "partition procedure insert_p_use_defaults_reorder on table target_p column bi;"+ "create procedure CountTargetP as select count(*) from target_p;"+ "create procedure InsertIntoSelectWithJoin as "+ "insert into target_p "+ "select sp1.bi, sp1.vc, sp2.ii, sp2.ti "+ "from source_p1 as sp1 inner join source_p2 as sp2 on sp1.bi = sp2.bi and sp1.ii = sp2.ii "+ "where sp1.bi = ?;"+ "partition procedure InsertIntoSelectWithJoin on table target_p column bi;"+ "");
  }
 catch (  IOException error) {
    fail(error.getMessage());
  }
  config=new LocalCluster("iisf-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  boolean t1=config.compile(project);
  assertTrue(t1);
  builder.addServerConfig(config);
  config=new LocalCluster("iisf-cluster.jar",2,3,1,BackendTarget.NATIVE_EE_JNI);
  boolean t2=config.compile(project);
  assertTrue(t2);
  builder.addServerConfig(config);
  return builder;
}
