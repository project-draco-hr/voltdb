{
  VoltServerConfig config=null;
  final MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestInsertIntoSelectSuite.class);
  final VoltProjectBuilder project=new VoltProjectBuilder();
  try {
    String schema="CREATE TABLE target_p (bi bigint not null," + "vc varchar(100) default '" + vcDefault + "',"+ "ii integer default "+ intDefault+ ","+ "ti tinyint default "+ intDefault+ " not null);"+ "partition table target_p on column bi;"+ "CREATE TABLE source_p1 (bi bigint not null,"+ "vc varchar(100),"+ "ii integer,"+ "ti tinyint);"+ "partition table source_p1 on column bi;"+ "CREATE TABLE source_p2 (bi bigint not null,"+ "vc varchar(100),"+ "ii integer,"+ "ti tinyint);"+ "partition table source_p2 on column bi;"+ "CREATE TABLE source_r (bi bigint not null,"+ "vc varchar(4),"+ "ii integer,"+ "ti tinyint);"+ "create procedure get_all_target_rows as select * from target_p order by bi, vc, ii, ti;"+ "create procedure insert_p_source_p as insert into target_p (bi, vc, ii, ti) select * from source_p1 where bi = ?;"+ "partition procedure insert_p_source_p on table target_p column bi;"+ "create procedure insert_p_use_defaults as insert into target_p (bi, ti) select bi, ti from source_p1 where bi = ?;"+ "partition procedure insert_p_use_defaults on table target_p column bi;"+ "create procedure insert_p_use_defaults_reorder as insert into target_p (ti, bi) select ti, bi from source_p1 where bi = ?;"+ "partition procedure insert_p_use_defaults_reorder on table target_p column bi;"+ "create procedure insert_p_source_p_agg as insert into target_p (bi, vc, ii, ti) "+ "select bi, max(vc), max(ii), min(ti)"+ " from source_p1 where bi = ? group by bi;"+ "partition procedure insert_p_source_p_agg on table target_p column bi;"+ "create procedure insert_p_source_p_cast as insert into target_p (bi, vc, ti, ii) select * from source_p1 where bi = ?;"+ "partition procedure insert_p_source_p_cast on table target_p column bi;"+ "create procedure insert_p_source_p_cast_out_of_range as "+ "insert into target_p (bi, vc, ti, ii) "+ "select * from source_p2 where bi = ?;"+ "partition procedure insert_p_source_p_cast_out_of_range on table target_p column bi;"+ "create procedure insert_p_source_p_nonsensical_cast as insert into target_p (bi, ii, vc, ti) select * from source_p1 where bi = ?;"+ "partition procedure insert_p_source_p_nonsensical_cast on table target_p column bi;"+ "create procedure select_and_insert_into_source as "+ "insert into source_p1 (bi, vc, ti, ii) select bi, vc, ti, 1000 * ii from source_p1 where bi = ? order by bi, ti;"+ "partition procedure select_and_insert_into_source on table source_p1 column bi;"+ "create procedure insert_param_in_select_list as "+ "insert into target_p (bi, vc, ii, ti) "+ "select cast(? as bigint), vc, ii, ti from source_r order by ii;"+ "partition procedure insert_param_in_select_list on table target_p column bi;"+ "create procedure insert_wrong_partition as "+ "insert into target_p (bi, ti) select ti, cast(? as tinyint) from source_r; "+ "partition procedure insert_wrong_partition on table target_p column bi; "+ "create procedure insert_select_violate_constraint as "+ "insert into target_p (bi, ti) "+ "select bi, case ti when 55 then null else ti end from source_p1 where bi = ? order by ti asc;"+ "partition procedure insert_select_violate_constraint on table target_p column bi; "+ "create procedure insert_select_with_join as "+ "insert into target_p "+ "select sp1.bi, sp1.vc, sp2.ii, sp2.ti "+ "from source_p1 as sp1 inner join source_p2 as sp2 on sp1.bi = sp2.bi and sp1.ii = sp2.ii "+ "where sp1.bi = ?;"+ "partition procedure insert_select_with_join on table target_p column bi;"+ "create procedure verify_insert_select_with_join as "+ "select sp1.bi, sp1.vc, sp2.ii, sp2.ti "+ "from source_p1 as sp1 inner join source_p2 as sp2 on sp1.bi = sp2.bi and sp1.ii = sp2.ii "+ "where sp1.bi = ? order by sp1.bi, sp1.vc, sp2.ii, sp2.ti;"+ "create procedure insert_select_join_replicated as "+ "insert into target_p "+ "select sp1.bi, sp1.vc, sr.ii, sr.ti from source_p1 as sp1 inner join source_r as sr on "+ "sr.bi = sp1.bi and sr.ii = sp1.ii where sp1.bi = ?; "+ "partition procedure insert_select_join_replicated on table target_p column bi;"+ "create procedure verify_insert_select_join_replicated as "+ "select sp1.bi, sp1.vc, sr.ii, sr.ti from source_p1 as sp1 inner join source_r as sr on "+ "sr.bi = sp1.bi and sr.ii = sp1.ii where sp1.bi = ?"+ "order by sp1.bi, sp1.vc, sr.ii, sr.ti; "+ "create procedure insert_select_subquery as "+ "insert into target_p "+ "select * "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1) as sp1_subq "+ "where sp1_subq.bi = ?; "+ "partition procedure insert_select_subquery on table target_p column bi;"+ "create procedure verify_insert_select_subquery as "+ "select * "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1) as sp1_subq "+ "where sp1_subq.bi = ? order by bi, vc, ii, ti; "+ "create procedure insert_select_subquery_inner_filter as "+ "insert into target_p "+ "select * "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1 where bi = ?) as sp1_subq; "+ "partition procedure insert_select_subquery_inner_filter on table target_p column bi;"+ "create procedure verify_insert_select_subquery_inner_filter as "+ "select * "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1 where bi = ?) as sp1_subq "+ "order by bi, vc, ii, ti; "+ "create procedure insert_select_subquery_join as "+ "insert into target_p "+ "select sp1_subq.bi, sp1_subq.vc, sp2.ii, sp2.ti "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1) as sp1_subq "+ "inner join source_p2 as sp2 on sp1_subq.bi = sp2.bi and sp1_subq.ii = sp2.ii "+ "where sp1_subq.bi = ?; "+ "partition procedure insert_select_subquery_join on table target_p column bi; "+ "create procedure verify_insert_select_subquery_join as "+ "select sp1_subq.bi, sp1_subq.vc, sp2.ii, sp2.ti "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1) as sp1_subq "+ "inner join source_p2 as sp2 on sp1_subq.bi = sp2.bi and sp1_subq.ii = sp2.ii "+ "where sp1_subq.bi = ? order by sp1_subq.bi, sp1_subq.vc, sp2.ii, sp2.ti; "+ "create procedure insert_select_join_two_subqueries as "+ "insert into target_p "+ "select sp1_subq.bi, sp1_subq.vc, sp2_subq.ii, sp2_subq.ti "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1) as sp1_subq "+ "inner join (select bi, '2nd_subq + ' || vc as vc, ii, ti from source_p2) as sp2_subq "+ "on sp1_subq.bi = sp2_subq.bi and sp1_subq.ii = sp2_subq.ii "+ "where sp1_subq.bi = ?; "+ "partition procedure insert_select_join_two_subqueries on table target_p column bi; "+ "create procedure verify_insert_select_join_two_subqueries as "+ "select sp1_subq.bi, sp1_subq.vc, sp2_subq.ii, sp2_subq.ti "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from source_p1) as sp1_subq "+ "inner join (select bi, '2nd_subq + ' || vc as vc, ii, ti from source_p2) as sp2_subq "+ "on sp1_subq.bi = sp2_subq.bi and sp1_subq.ii = sp2_subq.ii "+ "where sp1_subq.bi = ? "+ "order by sp1_subq.bi, sp1_subq.vc, sp2_subq.ii, sp2_subq.ti; "+ "create procedure insert_select_nested_subqueries  as "+ "insert into target_p "+ "select sp1_subq.bi, sp1_subq.vc, sp2_subq.ii, sp2_subq.ti "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from (select bi, 'nested ' || vc as vc, ii, ti from source_p1) as sp1_subq_subq) as sp1_subq "+ "inner join (select bi, '2nd_subq + ' || vc as vc, ii, ti from source_p2) as sp2_subq "+ "on sp1_subq.bi = sp2_subq.bi and sp1_subq.ii = sp2_subq.ii "+ "where sp1_subq.bi = ?; "+ "partition procedure insert_select_nested_subqueries  on table target_p column bi; "+ "create procedure verify_insert_select_nested_subqueries  as "+ "select sp1_subq.bi, sp1_subq.vc, sp2_subq.ii, sp2_subq.ti "+ "from (select bi, 'subq + ' || vc as vc, ii, ti from (select bi, 'nested ' || vc as vc, ii, ti from source_p1) as sp1_subq_subq) as sp1_subq "+ "inner join (select bi, '2nd_subq + ' || vc as vc, ii, ti from source_p2) as sp2_subq "+ "on sp1_subq.bi = sp2_subq.bi and sp1_subq.ii = sp2_subq.ii "+ "where sp1_subq.bi = ? "+ "order by sp1_subq.bi, sp1_subq.vc, sp2_subq.ii, sp2_subq.ti; "+ "";
    project.addLiteralSchema(schema);
  }
 catch (  IOException error) {
    fail(error.getMessage());
  }
  boolean success;
  config=new LocalCluster("iisf-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("iisf-cluster.jar",2,3,1,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("iisf-hsql.jar",1,1,0,BackendTarget.HSQLDB_BACKEND);
  success=config.compile(project);
  assert(success);
  builder.addServerConfig(config);
  return builder;
}
