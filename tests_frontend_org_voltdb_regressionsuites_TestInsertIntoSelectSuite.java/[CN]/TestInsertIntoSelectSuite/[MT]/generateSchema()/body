{
  StringBuilder sb=new StringBuilder();
  sb.append("CREATE TABLE target_p (bi bigint not null," + "vc varchar(100) default '" + vcDefault + "',"+ "ii integer default "+ intDefault+ ","+ "ti tinyint default "+ intDefault+ " not null);"+ "partition table target_p on column bi;"+ "CREATE TABLE target_r (bi bigint not null,"+ "vc varchar(100) default '"+ vcDefault+ "',"+ "ii integer default "+ intDefault+ ","+ "ti tinyint default "+ intDefault+ " not null);"+ "CREATE TABLE source_p1 (bi bigint not null,"+ "vc varchar(100),"+ "ii integer,"+ "ti tinyint);"+ "partition table source_p1 on column bi;"+ "CREATE TABLE source_p2 (bi bigint not null,"+ "vc varchar(100),"+ "ii integer,"+ "ti tinyint);"+ "partition table source_p2 on column bi;"+ "CREATE TABLE source_r1 (bi bigint not null,"+ "vc varchar(100),"+ "ii integer,"+ "ti tinyint);"+ "CREATE TABLE source_r2 (bi bigint not null,"+ "vc varchar(4),"+ "ii integer,"+ "ti tinyint);");
  sb.append("create procedure get_all_target_p_rows as select * from target_p order by bi, vc, ii, ti;" + "create procedure get_all_target_r_rows as select * from target_r order by bi, vc, ii, ti;" + "create procedure insert_p_source_p as insert into target_p (bi, vc, ii, ti) select * from source_p1 where bi = ?;"+ "partition procedure insert_p_source_p on table target_p column bi;"+ "create procedure insert_p_use_defaults as insert into target_p (bi, ti) select bi, ti from source_p1 where bi = ?;"+ "partition procedure insert_p_use_defaults on table target_p column bi;"+ "create procedure insert_p_use_defaults_reorder as insert into target_p (ti, bi) select ti, bi from source_p1 where bi = ?;"+ "partition procedure insert_p_use_defaults_reorder on table target_p column bi;"+ "create procedure insert_p_source_p_agg as insert into target_p (bi, vc, ii, ti) "+ "select bi, max(vc), max(ii), min(ti)"+ " from source_p1 where bi = ? group by bi;"+ "partition procedure insert_p_source_p_agg on table target_p column bi;"+ "create procedure insert_p_source_p_cast as insert into target_p (bi, vc, ti, ii) select * from source_p1 where bi = ?;"+ "partition procedure insert_p_source_p_cast on table target_p column bi;"+ "create procedure insert_p_source_p_cast_out_of_range as "+ "insert into target_p (bi, vc, ti, ii) "+ "select * from source_p2 where bi = ?;"+ "partition procedure insert_p_source_p_cast_out_of_range on table target_p column bi;"+ "create procedure insert_p_source_p_nonsensical_cast as insert into target_p (bi, ii, vc, ti) select * from source_p1 where bi = ?;"+ "partition procedure insert_p_source_p_nonsensical_cast on table target_p column bi;"+ "create procedure select_and_insert_into_source as "+ "insert into source_p1 (bi, vc, ti, ii) select bi, vc, ti, 1000 * ii from source_p1 where bi = ? order by bi, ti;"+ "partition procedure select_and_insert_into_source on table source_p1 column bi;"+ "create procedure insert_param_in_select_list as "+ "insert into target_p (bi, vc, ii, ti) "+ "select cast(? as bigint), vc, ii, ti from source_r2 order by ii;"+ "partition procedure insert_param_in_select_list on table target_p column bi;"+ "create procedure insert_wrong_partition as "+ "insert into target_p (bi, ti) select ti, cast(? as tinyint) from source_r2; "+ "partition procedure insert_wrong_partition on table target_p column bi; "+ "create procedure insert_select_violate_constraint as "+ "insert into target_p (bi, ti) "+ "select bi, case ti when 55 then null else ti end from source_p1 where bi = ? order by ti asc;"+ "partition procedure insert_select_violate_constraint on table target_p column bi; "+ "");
  for (  String proc : generatedProcedures()) {
    sb.append(proc);
  }
  return sb.toString();
}
