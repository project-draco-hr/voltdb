{
  final Client client=getClient();
  for (int i=0; i < 10; i++) {
    ClientResponse resp=client.callProcedure("SOURCE_P1.insert",i,Integer.toHexString(i),i,i);
    assertEquals(ClientResponse.SUCCESS,resp.getStatus());
    assertEquals(1,resp.getResults()[0].asScalarLong());
  }
  ClientResponse resp;
  resp=client.callProcedure("insert_p_source_p",5);
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  assertEquals(1,resp.getResults()[0].asScalarLong());
  resp=client.callProcedure("CountTargetP");
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  assertEquals(1,resp.getResults()[0].asScalarLong());
  String selectAllSource="select * from source_p1 where bi = 5 order by bi";
  String selectAllTarget="select * from target_p order by bi";
  resp=client.callProcedure("@AdHoc",selectAllSource);
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  VoltTable sourceRows=resp.getResults()[0];
  resp=client.callProcedure("@AdHoc",selectAllTarget);
  assertEquals(ClientResponse.SUCCESS,resp.getStatus());
  VoltTable targetRows=resp.getResults()[0];
  while (sourceRows.advanceRow()) {
    assertEquals(true,targetRows.advanceRow());
    assertEquals(sourceRows.getLong(0),targetRows.getLong(0));
    assertEquals(sourceRows.getString(1),targetRows.getString(1));
    assertEquals(sourceRows.getLong(2),targetRows.getLong(2));
    assertEquals(sourceRows.getLong(3),targetRows.getLong(3));
  }
}
