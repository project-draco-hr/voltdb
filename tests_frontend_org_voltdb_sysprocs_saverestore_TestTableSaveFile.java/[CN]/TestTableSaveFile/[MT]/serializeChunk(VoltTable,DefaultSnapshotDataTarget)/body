{
  FastSerializer fs=new FastSerializer();
  chunk.writeExternal(fs);
  BBContainer c=fs.getBBContainer();
  ByteBuffer b=c.b;
  b.getInt();
  int headerLength=b.getInt();
  b.position(b.position() + headerLength);
  final int rowCount=b.getInt();
  ByteBuffer chunkBuffer=ByteBuffer.allocate(b.remaining() + 16 + target.getHeaderSize());
  chunkBuffer.position(target.getHeaderSize());
  chunkBuffer.mark();
  final CRC32 partitionIdCRC=new CRC32();
  chunkBuffer.putInt(2);
  chunkBuffer.reset();
  byte partitionIdBytes[]=new byte[4];
  chunkBuffer.get(partitionIdBytes);
  partitionIdCRC.update(partitionIdBytes);
  chunkBuffer.putInt((int)partitionIdCRC.getValue());
  final int crcPosition=chunkBuffer.position();
  final CRC32 crc=new CRC32();
  chunkBuffer.position(chunkBuffer.position() + 4);
  chunkBuffer.put(b);
  chunkBuffer.putInt(rowCount);
  chunkBuffer.position(crcPosition + 4);
  crc.update(chunkBuffer.array(),chunkBuffer.position(),chunkBuffer.remaining());
  chunkBuffer.position(crcPosition);
  chunkBuffer.putInt((int)crc.getValue());
  chunkBuffer.position(0);
  target.write(new BBContainer(chunkBuffer,0){
    @Override public void discard(){
    }
  }
);
}
