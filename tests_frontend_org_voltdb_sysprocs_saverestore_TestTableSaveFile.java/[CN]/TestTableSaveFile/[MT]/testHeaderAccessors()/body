{
  final File f=File.createTempFile("foo","bar");
  f.deleteOnExit();
  VoltTable.ColumnInfo columns[]=new VoltTable.ColumnInfo[]{new VoltTable.ColumnInfo("Foo",VoltType.STRING)};
  VoltTable vt=new VoltTable(columns,1);
  DefaultSnapshotDataTarget dsdt=new DefaultSnapshotDataTarget(f,HOST_ID,CLUSTER_NAME,DATABASE_NAME,TABLE_NAME,TOTAL_PARTITIONS,false,new int[]{0,1,2,3,4},vt,CREATE_TIME,VERSION);
  dsdt.close();
  FileInputStream fis=new FileInputStream(f);
  TableSaveFile savefile=new TableSaveFile(fis.getChannel(),3,null);
  ByteBuffer tableHeader=savefile.getTableHeader();
  tableHeader.position(0);
  assertEquals(4 + 1 + 2+ 1+ 4+ 3,tableHeader.remaining());
  assertEquals(tableHeader.getInt(),11);
  assertEquals(tableHeader.get(),Byte.MIN_VALUE);
  assertEquals(tableHeader.getShort(),1);
  assertEquals(tableHeader.get(),VoltType.STRING.getValue());
  assertEquals(tableHeader.getInt(),3);
  byte columnNameBytes[]=new byte[3];
  tableHeader.get(columnNameBytes);
  String columnName=new String(columnNameBytes,"UTF-8");
  assertEquals("Foo",columnName);
  for (int i=0; i < 4; i++) {
    assertEquals(VERSION[i],savefile.getVersionNumber()[i]);
  }
  assertEquals(CREATE_TIME,savefile.getCreateTime());
  assertEquals(HOST_ID,savefile.getHostId());
  assertEquals(CLUSTER_NAME,savefile.getClusterName());
  assertEquals(DATABASE_NAME,savefile.getDatabaseName());
  assertEquals(TABLE_NAME,savefile.getTableName());
  assertFalse(savefile.isReplicated());
  int partitionIds[]=savefile.getPartitionIds();
  for (int ii=0; ii < 5; ii++) {
    assertEquals(ii,partitionIds[ii]);
  }
  assertEquals(TOTAL_PARTITIONS,savefile.getTotalPartitions());
}
