{
  VoltTable.ColumnInfo columnInfo[]=new VoltTable.ColumnInfo[]{new ColumnInfo("RT_ID",VoltType.INTEGER),new ColumnInfo("RT_NAME",VoltType.STRING),new ColumnInfo("RT_INTVAL",VoltType.INTEGER),new ColumnInfo("RT_FLOATVAL",VoltType.FLOAT)};
  VoltTable table=new VoltTable(columnInfo,columnInfo.length);
  final File f=File.createTempFile("foo","bar");
  f.deleteOnExit();
  DefaultSnapshotDataTarget dsdt=new DefaultSnapshotDataTarget(f,HOST_ID,CLUSTER_NAME,DATABASE_NAME,TABLE_NAME,TOTAL_PARTITIONS,false,new int[]{0,1,2,3,4},table,TXN_ID,VERSION1);
  VoltTable currentChunkTable=new VoltTable(columnInfo,columnInfo.length);
  int partitionId=0;
  for (int i=0; i < numberOfItems; i++) {
    if (i % 1000 == 0 && i > 0) {
      serializeChunk(currentChunkTable,dsdt,partitionId++);
      currentChunkTable=new VoltTable(columnInfo,columnInfo.length);
    }
    Object[] row=new Object[]{i,"name_" + i,i,new Double(i)};
    currentChunkTable.addRow(row);
    table.addRow(row);
  }
  serializeChunk(currentChunkTable,dsdt,partitionId++);
  dsdt.close();
  return new Pair<VoltTable,File>(table,f,false);
}
