{
  VoltServerConfig config=null;
  final MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestMaxJoinSuite.class);
  final VoltProjectBuilder project=new VoltProjectBuilder();
  try {
    StringBuilder sb=new StringBuilder();
    for (int i=0; i < 100; i++) {
      sb.append("create table t");
      sb.append(i);
      sb.append("(b1 INTEGER NOT NULL, a2 INTEGER NOT NULL, PRIMARY KEY (b1))");
      project.addLiteralSchema(sb.toString());
      sb.setLength(0);
    }
  }
 catch (  IOException error) {
    fail(error.getMessage());
  }
  config=new LocalCluster("testMax-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  boolean t1=config.compile(project);
  assertTrue(t1);
  builder.addServerConfig(config);
  config=new LocalCluster("testMax-cluster.jar",2,3,1,BackendTarget.NATIVE_EE_JNI);
  boolean t2=config.compile(project);
  assertTrue(t2);
  builder.addServerConfig(config);
  return builder;
}
