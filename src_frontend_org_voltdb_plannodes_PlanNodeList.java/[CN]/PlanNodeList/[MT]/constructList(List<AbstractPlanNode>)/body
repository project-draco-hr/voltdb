{
  List<AbstractPlanNode> execute_list=Collections.synchronizedList(new ArrayList<AbstractPlanNode>());
  Map<AbstractPlanNode,Integer> child_cnts=new HashMap<AbstractPlanNode,Integer>();
  for (  AbstractPlanNode node : planNodes) {
    int num_of_children=node.getChildCount();
    if (num_of_children == 0) {
      execute_list.add(node);
    }
 else {
      child_cnts.put(node,num_of_children);
    }
  }
  List<AbstractPlanNode> list=new ArrayList<AbstractPlanNode>();
  while (!execute_list.isEmpty()) {
    AbstractPlanNode node=execute_list.remove(0);
    list.add(node);
    for (int i=0; i < node.getParentCount(); i++) {
      AbstractPlanNode parent=node.getParent(i);
      int remaining=child_cnts.get(parent) - 1;
      child_cnts.put(parent,remaining);
      if (remaining == 0) {
        execute_list.add(parent);
      }
    }
  }
  if (list.size() != planNodes.size()) {
    throw new Exception("ERROR: The execution list has '" + list.size() + "' PlanNodes but our original tree has '"+ planNodes.size()+ "' PlanNode entries");
  }
  return list;
}
