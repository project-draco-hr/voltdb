{
  if (bd == null) {
    return Arrays.copyOf(NULL_INDICATOR,NULL_INDICATOR.length);
  }
  if (bd.scale() > kDefaultScale) {
    bd=roundToScale(bd,kDefaultScale,getRoundingMode());
  }
  int scale=bd.scale();
  int precision=bd.precision();
  final int precisionMinusScale=precision - scale;
  if (precisionMinusScale > 26) {
    throw new IOException("Precision of " + bd + " to the left of the decimal point is "+ precisionMinusScale+ " and the max is 26");
  }
  final int scaleFactor=kDefaultScale - bd.scale();
  BigInteger unscaledBI=bd.unscaledValue().multiply(scaleFactors[scaleFactor]);
  boolean isNegative=false;
  if (unscaledBI.signum() < 0) {
    isNegative=true;
  }
  final byte unscaledValue[]=unscaledBI.toByteArray();
  if (unscaledValue.length > 16) {
    throw new IOException("Precision of " + bd + " is >38 digits");
  }
  return expandToLength16(unscaledValue,isNegative);
}
