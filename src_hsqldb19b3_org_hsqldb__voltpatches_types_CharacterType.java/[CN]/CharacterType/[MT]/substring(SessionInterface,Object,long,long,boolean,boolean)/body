{
  long end;
  long dataLength=typeCode == Types.SQL_CLOB ? ((ClobData)data).length(session) : ((String)data).length();
  if (trailing) {
    end=dataLength;
    if (length > dataLength) {
      offset=0;
      length=dataLength;
    }
 else {
      offset=dataLength - length;
    }
  }
 else   if (hasLength) {
    end=offset + length;
  }
 else {
    end=dataLength > offset ? dataLength : offset;
  }
  if (end < offset) {
    throw Error.error(ErrorCode.X_22011);
  }
  if (offset > end || end < 0) {
    offset=0;
    end=0;
  }
  if (offset < 0) {
    offset=0;
  }
  if (end > dataLength) {
    end=dataLength;
  }
  length=end - offset;
  if (data instanceof String) {
    return ((String)data).substring((int)offset,(int)(offset + length));
  }
 else   if (data instanceof ClobData) {
    ClobData clob=session.createClob(length);
    String result=((ClobData)data).getSubString(session,offset,(int)length);
    clob.setString(session,0,result);
    return clob;
  }
 else {
    throw Error.runtimeError(ErrorCode.U_S0500,"CharacterType");
  }
}
