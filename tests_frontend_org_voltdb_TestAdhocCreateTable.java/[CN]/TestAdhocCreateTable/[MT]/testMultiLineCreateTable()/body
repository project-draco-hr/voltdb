{
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("--dont care");
  builder.setUseDDLSchema(true);
  boolean success=builder.compile(pathToCatalog,2,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  try {
    startSystem(config);
    ClientResponse resp=m_client.callProcedure("@SystemCatalog","TABLES");
    assertFalse(findTableInSystemCatalogResults("FOO"));
    System.out.println(resp.getResults()[0]);
    try {
      m_client.callProcedure("@AdHoc","create table FOO (\n" + "ID int default 0 not null,\n" + "VAL varchar(32 bytes)\n"+ ");");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("create table should have succeeded");
    }
    resp=m_client.callProcedure("@SystemCatalog","TABLES");
    System.out.println(resp.getResults()[0]);
    assertTrue(findTableInSystemCatalogResults("FOO"));
  }
  finally {
    teardownSystem();
  }
}
