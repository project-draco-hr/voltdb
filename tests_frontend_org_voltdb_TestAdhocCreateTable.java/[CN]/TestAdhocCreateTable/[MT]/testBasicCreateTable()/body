{
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("--dont care");
  builder.setUseAdhocSchema(true);
  boolean success=builder.compile(pathToCatalog,2,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  try {
    startSystem(config);
    assertFalse(findTableInSystemCatalogResults("FOO"));
    try {
      m_client.callProcedure("@AdHoc","create table FOO (ID int default 0, VAL varchar(64 bytes));");
    }
 catch (    ProcCallException pce) {
      fail("create table should have succeeded");
    }
    assertTrue(findTableInSystemCatalogResults("FOO"));
    boolean threw=false;
    try {
      m_client.callProcedure("@AdHoc","create table FOO (ID int default 0, VAL varchar(64 bytes));");
    }
 catch (    ProcCallException pce) {
      threw=true;
    }
    assertTrue("Shouldn't have been able to create table FOO twice.",threw);
  }
  finally {
    teardownSystem();
  }
}
