{
  try {
    m_outstandingWriteTasksLock.lock();
    try {
      while (m_outstandingWriteTasks.get() > 0) {
        m_noMoreOutstandingWriteTasksCondition.await();
      }
    }
  finally {
      m_outstandingWriteTasksLock.unlock();
    }
    m_syncTask.cancel(false);
    ListenableFuture<?> task=m_syncService.submit(new Runnable(){
      @Override public void run(){
      }
    }
);
    try {
      task.get();
    }
 catch (    ExecutionException e) {
      SNAP_LOG.error("Error waiting on snapshot sync task cancellation",e);
    }
    m_channel.force(false);
  }
  finally {
    m_bytesAllowedBeforeSync.release(m_bytesWrittenSinceLastSync.getAndSet(0));
  }
  m_channel.position(8);
  ByteBuffer completed=ByteBuffer.allocate(1);
  if (m_writeFailed || m_reportedSerializationFailure != null) {
    completed.put((byte)0).flip();
  }
 else {
    completed.put((byte)1).flip();
  }
  m_channel.write(completed);
  m_channel.force(false);
  m_channel.close();
  if (m_onCloseHandler != null) {
    m_onCloseHandler.run();
  }
  if (m_reportedSerializationFailure != null) {
    throw m_reportedSerializationFailure;
  }
}
