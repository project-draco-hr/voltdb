def writeJUnitXml(fileobj, suite_name, elapsed_time, stdout, stderr, results):
    'Writes a JUnit test report in XML format to fileobj from results.'
    timestamp = time.time()
    iso_time = time.strftime('%Y-%m-%dT%H:%M:%S', time.gmtime(timestamp))
    tests = 0
    failures = 0
    for result in results:
        if (result.failure is not None):
            failures += 1
        tests += 1
    fileobj.write('<?xml version="1.0" encoding="utf-8"?>\n')
    fileobj.write(('<testsuite errors="0" failures="%d" name="%s" tests="%d" time="%.3f" timestamp="%s">\n' % (failures, suite_name, tests, elapsed_time, iso_time)))
    for result in results:
        fileobj.write(('<testcase classname="%s" name="%s" time="0.000">' % (((suite_name + '.') + result.className), result.name)))
        if (result.failure is not None):
            fileobj.write('<failure message="null" type="junit.framework.AssertionFailedError">')
            fileobj.write(lameXmlEscape(result.failure))
            fileobj.write('</failure>')
        fileobj.write('</testcase>\n')
    fileobj.write('<system-out>')
    fileobj.write(lameXmlEscape(stdout))
    fileobj.write('</system-out>\n')
    fileobj.write('<system-err>')
    fileobj.write(lameXmlEscape(stderr))
    fileobj.write('</system-err>\n')
    fileobj.write('</testsuite>\n')
