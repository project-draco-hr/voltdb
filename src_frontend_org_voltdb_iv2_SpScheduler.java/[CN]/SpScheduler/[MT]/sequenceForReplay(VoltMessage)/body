{
  boolean canDeliver=false;
  long sequenceWithUniqueId=Long.MIN_VALUE;
  boolean commandLog=(message instanceof TransactionInfoBaseMessage && (((TransactionInfoBaseMessage)message).isForReplay()));
  boolean dr=((message instanceof TransactionInfoBaseMessage && ((TransactionInfoBaseMessage)message).isForDRv1()));
  boolean sentinel=message instanceof MultiPartitionParticipantMessage;
  boolean replay=commandLog || sentinel || dr;
  boolean sequenceForReplay=m_isLeader && replay;
  assert(!(commandLog && dr));
  if (commandLog || sentinel) {
    sequenceWithUniqueId=((TransactionInfoBaseMessage)message).getUniqueId();
  }
 else   if (dr) {
    VoltDB.crashLocalVoltDB("DRv1 path should never be called",true,null);
    sequenceWithUniqueId=((TransactionInfoBaseMessage)message).getOriginalTxnId();
  }
  if (sequenceForReplay) {
    InitiateResponseMessage dupe=m_replaySequencer.dedupe(sequenceWithUniqueId,(TransactionInfoBaseMessage)message);
    if (dupe != null) {
      m_mailbox.send(dupe.getInitiatorHSId(),dupe);
    }
 else     if (!m_replaySequencer.offer(sequenceWithUniqueId,(TransactionInfoBaseMessage)message)) {
      canDeliver=true;
    }
 else {
      deliverReadyTxns();
    }
    if (sentinel && !commandLog) {
      MultiPartitionParticipantMessage mppm=(MultiPartitionParticipantMessage)message;
      final InitiateResponseMessage response=new InitiateResponseMessage(mppm);
      ClientResponseImpl clientResponse=new ClientResponseImpl(ClientResponseImpl.UNEXPECTED_FAILURE,new VoltTable[0],ClientResponseImpl.IGNORED_TRANSACTION);
      response.setResults(clientResponse);
      m_mailbox.send(response.getInitiatorHSId(),response);
    }
  }
 else {
    if (replay) {
      m_replaySequencer.updateLastSeenUniqueId(sequenceWithUniqueId,(TransactionInfoBaseMessage)message);
      m_replaySequencer.updateLastPolledUniqueId(sequenceWithUniqueId,(TransactionInfoBaseMessage)message);
    }
    canDeliver=true;
  }
  return canDeliver;
}
