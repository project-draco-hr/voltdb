{
  CompleteTransactionMessage msg=message;
  if (m_isLeader) {
    msg=new CompleteTransactionMessage(m_mailbox.getHSId(),m_mailbox.getHSId(),message);
    advanceTxnEgo();
    msg.setSpHandle(getCurrentTxnId());
    if (m_sendToHSIds.length > 0 && !msg.isReadOnly()) {
      m_mailbox.send(m_sendToHSIds,msg);
    }
  }
 else {
    setMaxSeenTxnId(msg.getSpHandle());
  }
  TransactionState txn=m_outstandingTxns.get(msg.getTxnId());
  if (txn != null) {
    final boolean isSysproc=((FragmentTaskMessage)txn.getNotice()).isSysProcTask();
    if (m_sendToHSIds.length > 0 && !msg.isRestart() && (!msg.isReadOnly() || isSysproc)) {
      DuplicateCounter counter;
      counter=new DuplicateCounter(msg.getCoordinatorHSId(),msg.getTxnId(),m_replicaHSIds,msg);
      safeAddToDuplicateCounterMap(new DuplicateCounterKey(msg.getTxnId(),msg.getSpHandle()),counter);
    }
    Iv2Trace.logCompleteTransactionMessage(msg,m_mailbox.getHSId());
    final CompleteTransactionTask task=new CompleteTransactionTask(m_mailbox,txn,m_pendingTasks,msg,m_drGateway);
    queueOrOfferMPTask(task);
  }
 else {
    final CompleteTransactionResponseMessage resp=new CompleteTransactionResponseMessage(msg);
    resp.m_sourceHSId=m_mailbox.getHSId();
    handleCompleteTransactionResponseMessage(resp);
  }
}
