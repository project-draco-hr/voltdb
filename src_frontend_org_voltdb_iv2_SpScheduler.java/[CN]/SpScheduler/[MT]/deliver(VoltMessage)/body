{
  long sequenceWithTxnId=Long.MIN_VALUE;
  boolean sequenceForCommandLog=(m_isLeader && message instanceof TransactionInfoBaseMessage && (((TransactionInfoBaseMessage)message).isForReplay()));
  boolean sequenceForDR=m_isLeader && ((message instanceof TransactionInfoBaseMessage && ((TransactionInfoBaseMessage)message).isForDR()));
  boolean sequenceForSentinel=m_isLeader && (message instanceof MultiPartitionParticipantMessage);
  assert(!(sequenceForCommandLog && sequenceForDR));
  if (sequenceForCommandLog || sequenceForSentinel) {
    sequenceWithTxnId=((TransactionInfoBaseMessage)message).getTxnId();
  }
 else   if (sequenceForDR) {
    sequenceWithTxnId=((TransactionInfoBaseMessage)message).getOriginalTxnId();
  }
  if (sequenceWithTxnId != Long.MIN_VALUE) {
    if (!m_replaySequencer.offer(sequenceWithTxnId,(TransactionInfoBaseMessage)message)) {
      deliver2(message);
    }
 else {
      deliverReadyTxns();
    }
  }
 else   if (message instanceof Iv2EndOfLogMessage) {
    m_replaySequencer.setEOLReached();
    deliverReadyTxns();
  }
 else {
    deliver2(message);
  }
}
