{
  final String procedureName=message.getStoredProcedureName();
  final ProcedureRunner runner=m_loadedProcs.getProcByName(procedureName);
  if (message.isSinglePartition()) {
    long newSpHandle;
    Iv2InitiateTaskMessage msg=message;
    if (m_isLeader) {
      msg=new Iv2InitiateTaskMessage(message.getInitiatorHSId(),message.getCoordinatorHSId(),message.getTxnId(),message.isReadOnly(),message.isSinglePartition(),message.getStoredProcedureInvocation(),message.getClientInterfaceHandle());
      newSpHandle=m_txnId.incrementAndGet();
      msg.setSpHandle(newSpHandle);
      if (!runner.isEverySite()) {
        msg.setTxnId(newSpHandle);
      }
      replicateIv2InitiateTaskMessage(msg,newSpHandle,m_replicaHSIds);
    }
 else {
      newSpHandle=msg.getSpHandle();
    }
    final SpProcedureTask task=new SpProcedureTask(m_mailbox,runner,newSpHandle,m_pendingTasks,msg);
    m_pendingTasks.offer(task);
    return;
  }
 else {
    throw new RuntimeException("SpScheduler.handleIv2InitiateTaskMessage " + "should never receive multi-partition initiations.");
  }
}
