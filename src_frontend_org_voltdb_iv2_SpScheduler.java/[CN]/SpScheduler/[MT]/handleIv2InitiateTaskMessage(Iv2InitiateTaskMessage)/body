{
  final String procedureName=message.getStoredProcedureName();
  final ProcedureRunner runner=m_loadedProcs.getProcByName(procedureName);
  if (message.isSinglePartition()) {
    long new_txnId=m_txnId.incrementAndGet();
    if (m_replicaHSIds.length > 0) {
      try {
        Iv2InitiateTaskMessage replmsg=new Iv2InitiateTaskMessage(m_mailbox.getHSId(),m_mailbox.getHSId(),message.getTxnId(),message.isReadOnly(),message.isSinglePartition(),message.getStoredProcedureInvocation(),message.getClientInterfaceHandle());
        m_mailbox.send(m_replicaHSIds,replmsg);
      }
 catch (      MessagingException e) {
        hostLog.error("Failed to deliver response from execution site.",e);
      }
      DuplicateCounter counter=new DuplicateCounter(message.getInitiatorHSId(),m_replicaHSIds.length + 1,new_txnId);
    }
    final SpProcedureTask task=new SpProcedureTask(m_mailbox,runner,new_txnId,m_pendingTasks,message);
    m_pendingTasks.offer(task);
    return;
  }
 else {
    throw new RuntimeException("SpScheduler.handleIv2InitiateTaskMessage " + "should never receive multi-partition initiations.");
  }
}
