{
  DuplicateCounter counter=m_duplicateCounters.get(new DuplicateCounterKey(message.getTxnId(),message.getSpHandle()));
  final TransactionState txn=m_outstandingTxns.get(message.getTxnId());
  if (counter != null) {
    int result=counter.offer(message);
    if (result == DuplicateCounter.DONE) {
      if (txn != null && txn.isDone()) {
        setRepairLogTruncationHandle(txn.m_spHandle);
      }
      m_duplicateCounters.remove(new DuplicateCounterKey(message.getTxnId(),message.getSpHandle()));
      FragmentResponseMessage resp=(FragmentResponseMessage)counter.getLastResponse();
      resp.setExecutorSiteId(m_mailbox.getHSId());
      m_mailbox.send(counter.m_destinationId,resp);
    }
 else     if (result == DuplicateCounter.MISMATCH) {
      VoltDB.crashGlobalVoltDB("HASH MISMATCH running multi-part procedure.",true,null);
    }
    return;
  }
  if (m_defaultConsistencyReadLevel == ReadLevel.SAFE && m_isLeader && m_sendToHSIds.length > 0 && message.getRespBufferable() && (txn == null || txn.isReadOnly())) {
    long readTxnId=txn == null ? message.getSpHandle() : txn.m_spHandle;
    m_bufferedReadLog.offer(m_mailbox,message,readTxnId,m_repairLogTruncationHandle);
    return;
  }
  if (txn != null && !txn.isReadOnly() && txn.isDone()) {
    setRepairLogTruncationHandle(txn.m_spHandle);
  }
  m_mailbox.send(message.getDestinationSiteId(),message);
}
