{
  this.rangeVariables=rangeVars;
  this.conditions=conditions;
  this.compileContext=compileContext;
  for (int i=0; i < rangeVars.length; i++) {
    RangeVariable range=rangeVars[i];
    rangeVarSet.add(range);
    if (range.isLeftJoin || range.isRightJoin) {
      hasOuterJoin=true;
    }
  }
  inExpressions=new Expression[rangeVars.length];
  flags=new boolean[rangeVars.length];
  tempJoinExpressions=new HsqlArrayList[rangeVars.length];
  for (int i=0; i < rangeVars.length; i++) {
    tempJoinExpressions[i]=new HsqlArrayList();
  }
  joinExpressions=new HsqlArrayList[rangeVars.length];
  for (int i=0; i < rangeVars.length; i++) {
    joinExpressions[i]=new HsqlArrayList();
  }
  whereExpressions=new HsqlArrayList[rangeVars.length];
  for (int i=0; i < rangeVars.length; i++) {
    whereExpressions[i]=new HsqlArrayList();
  }
}
