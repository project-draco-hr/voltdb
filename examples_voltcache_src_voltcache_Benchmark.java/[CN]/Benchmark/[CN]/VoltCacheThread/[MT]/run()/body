{
  while (warmupComplete.get() == false) {
    if (rand.nextDouble() < config.getputratio) {
      try {
        cache.get(processor.generateRandomKeyForRetrieval());
      }
 catch (      Exception e) {
      }
    }
 else {
      final PayloadProcessor.Pair pair=processor.generateForStore();
      try {
        cache.set(pair.Key,0,0,pair.getStoreValue(),false);
      }
 catch (      Exception e) {
      }
    }
  }
  while (benchmarkComplete.get() == false) {
    if (rand.nextDouble() < config.getputratio) {
      try {
        String key=processor.generateRandomKeyForRetrieval();
        VoltCacheProcBase.Result result=cache.get(key);
        if (result.data.size() == 0)         missedGets.incrementAndGet();
 else {
          final PayloadProcessor.Pair pair=processor.retrieveFromStore(key,result.data.get(key).Value);
          successfulGets.incrementAndGet();
          networkGetData.addAndGet(pair.getStoreValueLength());
          rawGetData.addAndGet(pair.getRawValueLength());
        }
      }
 catch (      Exception e) {
        failedGets.incrementAndGet();
      }
    }
 else {
      final PayloadProcessor.Pair pair=processor.generateForStore();
      try {
        cache.set(pair.Key,0,0,pair.getStoreValue(),false);
        successfulPuts.incrementAndGet();
      }
 catch (      Exception e) {
        failedPuts.incrementAndGet();
      }
      networkPutData.addAndGet(pair.getStoreValueLength());
      rawPutData.addAndGet(pair.getRawValueLength());
    }
  }
}
