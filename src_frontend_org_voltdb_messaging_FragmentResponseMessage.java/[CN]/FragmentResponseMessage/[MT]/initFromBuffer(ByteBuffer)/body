{
  m_executorHSId=buf.getLong();
  m_destinationHSId=buf.getLong();
  m_txnId=buf.getLong();
  m_spHandle=buf.getLong();
  m_status=buf.get();
  m_dirty=buf.get() == 0 ? false : true;
  m_recovering=buf.get() == 0 ? false : true;
  m_dependencyCount=buf.getShort();
  for (int i=0; i < m_dependencyCount; i++)   m_dependencyIds.add(buf.getInt());
  for (int i=0; i < m_dependencyCount; i++) {
    boolean isNull=buf.get() == 0 ? true : false;
    if (isNull) {
      m_dependencies.add(null);
    }
 else {
      m_dependencies.add(PrivateVoltTableFactory.createVoltTableFromSharedBuffer(buf));
    }
  }
  m_exception=SerializableException.deserializeFromBuffer(buf);
  assert(buf.capacity() == buf.position());
}
