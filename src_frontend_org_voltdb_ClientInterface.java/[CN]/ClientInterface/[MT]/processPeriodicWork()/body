{
  final long time=m_initiator.tick();
  m_tickCounter++;
  if (m_tickCounter % 20 == 0) {
    checkForDeadConnections(time);
  }
  long delta=time - m_lastCompilerThreadPoke;
  if (delta > POKE_INTERVAL) {
    m_lastCompilerThreadPoke=time;
    m_asyncCompilerWorkThread.verifyEverthingIsKosher();
  }
  if (m_shouldUpdateCatalog.compareAndSet(true,false)) {
    m_catalogContext.set(VoltDB.instance().getCatalogContext());
    m_asyncCompilerWorkThread.notifyShouldUpdateCatalog();
    if (m_siteId == m_catalogContext.get().siteTracker.getLowestLiveNonExecSiteId()) {
      m_snapshotDaemon.makeActive();
    }
 else {
      m_snapshotDaemon.makeInactive();
    }
  }
  checkForFinishedCompilerWork();
  initiateSnapshotDaemonWork(m_snapshotDaemon.processPeriodicWork(time));
  return;
}
