{
  final long time=EstTime.currentTimeMillis();
  boolean locked=periodicWorkLock.tryLock();
  if (!locked) {
    return;
  }
  try {
    final long delta=time - m_lastTickTime;
    if (delta > TICK_INTERVAL) {
      m_lastTickTime=time;
      m_initiator.tick(time,TICK_INTERVAL);
      m_tickCounter++;
      if (m_tickCounter % 20 == 0) {
        checkForDeadConnections(time);
      }
    }
 else {
    }
    if (m_shouldUpdateCatalog.compareAndSet(true,false)) {
      m_catalogContext.set(VoltDB.instance().getCatalogContext());
      m_asyncCompilerWorkThread.notifyShouldUpdateCatalog();
    }
    checkForFinishedCompilerWork();
    initiateSnapshotDaemonWork(m_snapshotDaemon.processPeriodicWork(time));
  }
  finally {
    periodicWorkLock.unlock();
  }
  return;
}
