{
  final Map<Long,Pair<String,long[]>> client_stats=new HashMap<Long,Pair<String,long[]>>();
  if (m_isIV2Enabled) {
    for (    Map.Entry<Long,ClientInterfaceHandleManager> e : m_cihm.entrySet()) {
      if (e.getKey() > 0) {
        long adminMode=e.getValue().isAdmin ? 1 : 0;
        long readWait=e.getValue().connection.readStream().dataAvailable();
        long writeWait=e.getValue().connection.writeStream().getOutstandingMessageCount();
        long outstandingTxns=e.getValue().getOutstandingTxns();
        client_stats.put(e.getKey(),new Pair<String,long[]>(e.getValue().connection.getHostnameOrIP(),new long[]{adminMode,readWait,writeWait,outstandingTxns}));
      }
    }
  }
 else {
    Map<Long,long[]> inflight_txn_stats=m_initiator.getOutstandingTxnStats();
    for (    Connection c : m_connections) {
      if (!client_stats.containsKey(c.connectionId())) {
        client_stats.put(c.connectionId(),new Pair<String,long[]>(c.getHostnameOrIP(),new long[]{0,c.readStream().dataAvailable(),c.writeStream().getOutstandingMessageCount(),0}));
      }
    }
    for (    Entry<Long,long[]> stat : inflight_txn_stats.entrySet()) {
      if (client_stats.containsKey(stat.getKey())) {
        client_stats.get(stat.getKey()).getSecond()[0]=stat.getValue()[0];
        client_stats.get(stat.getKey()).getSecond()[3]=stat.getValue()[1];
      }
    }
  }
  return client_stats;
}
