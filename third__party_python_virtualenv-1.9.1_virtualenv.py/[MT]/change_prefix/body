def change_prefix(filename, dst_prefix):
    prefixes = [sys.prefix]
    if is_darwin:
        prefixes.extend((os.path.join('/Library/Python', sys.version[:3], 'site-packages'), os.path.join(sys.prefix, 'Extras', 'lib', 'python'), os.path.join('~', 'Library', 'Python', sys.version[:3], 'site-packages'), os.path.join('~', '.local', 'lib', 'python', sys.version[:3], 'site-packages'), os.path.join('~', 'Library', 'Python', sys.version[:3], 'lib', 'python', 'site-packages')))
    if hasattr(sys, 'real_prefix'):
        prefixes.append(sys.real_prefix)
    if hasattr(sys, 'base_prefix'):
        prefixes.append(sys.base_prefix)
    prefixes = list(map(os.path.expanduser, prefixes))
    prefixes = list(map(os.path.abspath, prefixes))
    prefixes = sorted(prefixes, key=len, reverse=True)
    filename = os.path.abspath(filename)
    for src_prefix in prefixes:
        if filename.startswith(src_prefix):
            (_, relpath) = filename.split(src_prefix, 1)
            if (src_prefix != os.sep):
                assert (relpath[0] == os.sep)
                relpath = relpath[1:]
            return join(dst_prefix, relpath)
    assert False, ('Filename %s does not start with any of these prefixes: %s' % (filename, prefixes))
