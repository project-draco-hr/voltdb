def make_relative_path(source, dest, dest_is_directory=True):
    "\n    Make a filename relative, where the filename is dest, and it is\n    being referred to from the filename source.\n\n        >>> make_relative_path('/usr/share/something/a-file.pth',\n        ...                    '/usr/share/another-place/src/Directory')\n        '../another-place/src/Directory'\n        >>> make_relative_path('/usr/share/something/a-file.pth',\n        ...                    '/home/user/src/Directory')\n        '../../../home/user/src/Directory'\n        >>> make_relative_path('/usr/share/a-file.pth', '/usr/share/')\n        './'\n    "
    source = os.path.dirname(source)
    if (not dest_is_directory):
        dest_filename = os.path.basename(dest)
        dest = os.path.dirname(dest)
    dest = os.path.normpath(os.path.abspath(dest))
    source = os.path.normpath(os.path.abspath(source))
    dest_parts = dest.strip(os.path.sep).split(os.path.sep)
    source_parts = source.strip(os.path.sep).split(os.path.sep)
    while (dest_parts and source_parts and (dest_parts[0] == source_parts[0])):
        dest_parts.pop(0)
        source_parts.pop(0)
    full_parts = ((['..'] * len(source_parts)) + dest_parts)
    if (not dest_is_directory):
        full_parts.append(dest_filename)
    if (not full_parts):
        return './'
    return os.path.sep.join(full_parts)
