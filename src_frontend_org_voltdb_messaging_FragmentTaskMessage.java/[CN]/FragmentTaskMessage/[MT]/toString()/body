{
  StringBuilder sb=new StringBuilder();
  sb.append("FRAGMENT_TASK (FROM ");
  sb.append(CoreUtils.hsIdToString(m_coordinatorHSId));
  sb.append(") FOR TXN ");
  sb.append(m_txnId);
  sb.append(", SP HANDLE: ").append(m_spHandle);
  sb.append("\n");
  if (m_isReadOnly)   sb.append("  READ, COORD ");
 else   sb.append("  WRITE, COORD ");
  sb.append(CoreUtils.hsIdToString(m_coordinatorHSId));
  if ((m_fragmentIds != null) && (m_fragmentIds.length > 0)) {
    sb.append("\n");
    sb.append("  FRAGMENT_IDS ");
    for (    long id : m_fragmentIds)     sb.append(id).append(", ");
    sb.setLength(sb.lastIndexOf(", "));
  }
  if ((m_inputDepIds != null) && (m_inputDepIds.length > 0)) {
    sb.append("\n");
    sb.append("  DEPENDENCY_IDS ");
    for (    ArrayList<?> id : m_inputDepIds)     sb.append(id).append(", ");
    sb.setLength(sb.lastIndexOf(", "));
  }
  if (m_isFinal)   sb.append("\n  THIS IS THE FINAL TASK");
  if (m_taskType == USER_PROC) {
    sb.append("\n  THIS IS A USER TASK");
  }
 else   if (m_taskType == SYS_PROC_PER_PARTITION) {
    sb.append("\n  THIS IS A SYSPROC RUNNING PER PARTITION");
  }
 else   if (m_taskType == SYS_PROC_PER_SITE) {
    sb.append("\n  THIS IS A SYSPROC TASK RUNNING PER EXECUTION SITE");
  }
 else {
    sb.append("\n  UNKNOWN FRAGMENT TASK TYPE");
  }
  if (m_shouldUndo)   sb.append("\n  THIS IS AN UNDO REQUEST");
  if ((m_parameterSets != null) && (m_parameterSets.length > 0)) {
    for (    ByteBuffer paramSetBytes : m_parameterSets) {
      FastDeserializer fds=new FastDeserializer(paramSetBytes.asReadOnlyBuffer());
      ParameterSet pset=null;
      try {
        pset=fds.readObject(ParameterSet.class);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
      assert(pset != null);
      sb.append("\n  ").append(pset.toString());
    }
  }
  return sb.toString();
}
