def run_once(name, command, statements):
    global normalize
    server = subprocess.Popen(((command + ' backend=') + name), shell=True)
    client = None
    for i in xrange(10):
        try:
            client = VoltQueryClient('localhost', 21212)
            client.set_quiet(True)
            client.set_timeout(5.0)
            break
        except socket.error:
            time.sleep(1)
    if (client == None):
        return (-1)
    for statement in statements:
        try:
            client.onecmd(('adhoc ' + statement['SQL']))
        except:
            print  >> sys.stderr, ("Error occurred while executing '%s': %s" % (statement['SQL'], sys.exc_info()[1]))
            killer = subprocess.Popen(('kill -9 %d' % server.pid), shell=True)
            killer.communicate()
            if (killer.returncode != 0):
                print  >> sys.stderr, ('Failed to kill the server process %d' % server.pid)
            break
        tables = [normalize(t, statement['SQL']) for t in client.response.tables]
        tablestr = cPickle.dumps(tables, cPickle.HIGHEST_PROTOCOL)
        statement[name] = {'Status': client.response.status, 'Info': client.response.statusString, 'Result': encodestring(tablestr), }
    client.onecmd('shutdown')
    server.communicate()
    return server.returncode
