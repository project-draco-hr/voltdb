def usage():
    print sys.argv[0], 'config output_dir command'
    print '\nconfig\t\tThe configuration file containing the filenames of the schema,\n\t\tthe template, and the normalizer.\noutput_dir\tThe output directory for the HTML reports.\ncommand\t\tThe command to launch the server.\n\nThe schema is merely a Python dictionary which describes the name of the tables\nand the column names and types in those tables. The following is an example of a\nschema description,\n\n\t{\n\t    "T": {\n\t        "columns": (("DESC", FastSerializer.VOLTTYPE_STRING),\n\t                    ("ID", FastSerializer.VOLTTYPE_INTEGER),\n\t                    ("NUM", FastSerializer.VOLTTYPE_INTEGER)),\n\t        "partitions": (),\n\t        "indexes": ("ID")\n\t        }\n\t    }\n\nThis dictionary describes a table called "T" with three columns "DESC", "ID",\nand "NUM".\n\nThe template is a .sql file containing SQL statements to run in the test. The\nSQL statements are templates with place holders which will be substituted with\nreal values when the test is run. An example looks like this,\n\n\tSELECT _variable FROM _table WHERE _variable _cmp _variable LIMIT _value[byte];\n\nA possible SQL statement generated from this template based on the table\ndescription above would be\n\n\tSELECT ID FROM T WHERE ID < NUM LIMIT 3;\n\nThe following place holders are supported,\n\n\t_variable[type]\tWill be replaced with a column name of the given type,\n\t\t\ttype can be int,byte,int16,int32,int64,float,string,\n\t\t\tdate. int is a superset of byte,int16,int32,int64.\n\t\t\tType can be omitted.\n\t_table\t\tWill be replaced with a table name\n\t_value[type]\tWill be replaced with a random value of the given type,\n\t\t\ttype can be id,byte,int16,int32,int64,float,string,date.\n\t\t\tid is unique integer type incremented by 1 each time.\n\t\t\tYou can also specify an integer within a range,\n\t\t\te.g. _value[int:0,100]\n\n\t_cmp\t\tWill be replaced with a comparison operator\n\t_math\t\tWill be replaced with a arithmatic operator\n\t_agg\t\tWill be replaced with an aggregation operator\n\t_singleton\t\tWill be replaced with an operator like NOT\n\t_set\t\tWill be replaced with a set operator\n\t_logic\t\tWill be replaced with a logic operator'
