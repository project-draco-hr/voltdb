{
  buf.put(AGREEMENT_TASK_ID);
  buf.putLong(m_txnId);
  buf.putLong(m_initiatorHSId);
  buf.putLong(m_lastSafeTxnId);
  buf.putLong(m_request.sessionId);
  buf.putInt(m_request.cxid);
  buf.putInt(m_request.type);
  if (m_request.request != null) {
    buf.putInt(m_request.request.remaining());
    buf.put(m_request.request.duplicate());
  }
 else {
    buf.putInt(-1);
  }
  if (m_request.authInfo != null) {
    buf.putInt(m_schemes.size());
    for (    byte bytes[] : m_schemes) {
      buf.putInt(bytes.length);
      buf.put(bytes);
    }
    for (    byte bytes[] : m_ids) {
      buf.putInt(bytes.length);
      buf.put(bytes);
    }
  }
 else {
    buf.putInt(-1);
  }
  assert(buf.capacity() == buf.position());
  buf.limit(buf.position());
  m_ids=null;
  m_schemes=null;
}
