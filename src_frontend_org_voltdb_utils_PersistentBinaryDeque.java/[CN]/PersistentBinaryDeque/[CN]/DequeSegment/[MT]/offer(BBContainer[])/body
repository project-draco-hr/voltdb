{
  int length=0;
  for (  BBContainer obj : objects) {
    length+=obj.b.remaining();
  }
  if (remaining() < length) {
    throw new IOException(m_file + " has insufficient space");
  }
  m_bufferForNumEntries.clear();
  m_bufferForNumEntries.putInt(length).flip();
  while (m_bufferForNumEntries.hasRemaining()) {
    m_fc.write(m_bufferForNumEntries);
  }
  int objectIndex=0;
  for (  BBContainer obj : objects) {
    boolean success=false;
    try {
      while (obj.b.hasRemaining()) {
        m_fc.write(obj.b);
      }
      obj.discard();
      success=true;
      objectIndex++;
    }
  finally {
      if (!success) {
        for (int ii=objectIndex; ii < objects.length; ii++) {
          objects[ii].discard();
        }
      }
    }
  }
  m_sizeInBytes.addAndGet(4 + length);
  incrementNumEntries();
}
