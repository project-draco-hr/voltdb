{
synchronized (PersistentBinaryDeque.this) {
    if (m_closed) {
      throw new IOException("Reader " + m_cursorId + " has been closed");
    }
    assertions();
    moveToValidSegment();
    long size=0;
    boolean inclusive=true;
    if (m_segment.isOpenForReading(m_cursorId)) {
      size=m_segment.getReader(m_cursorId).uncompressedBytesToRead();
      inclusive=false;
    }
    for (    PBDSegment currSegment : m_segments.tailMap(m_segment.segmentId(),inclusive).values()) {
      size+=currSegment.size();
    }
    return size;
  }
}
