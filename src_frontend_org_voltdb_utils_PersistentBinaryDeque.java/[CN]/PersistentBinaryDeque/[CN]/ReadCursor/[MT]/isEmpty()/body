{
synchronized (PersistentBinaryDeque.this) {
    if (m_closed) {
      throw new IOException("Closed");
    }
    assertions();
    moveToValidSegment();
    boolean inclusive=true;
    if (m_segment.isOpenForReading(m_cursorId)) {
      if (m_segment.getReader(m_cursorId).hasMoreEntries())       return false;
      inclusive=false;
    }
    for (    PBDSegment currSegment : m_segments.tailMap(m_segment.segmentId(),inclusive).values()) {
      if (currSegment.getNumEntries() > 0)       return false;
    }
    return true;
  }
}
