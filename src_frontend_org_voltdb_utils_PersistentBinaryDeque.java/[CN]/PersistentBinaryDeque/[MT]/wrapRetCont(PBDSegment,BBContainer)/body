{
  return new BBContainer(retcont.b()){
    @Override public void discard(){
synchronized (PersistentBinaryDeque.this) {
        checkDoubleFree();
        retcont.discard();
        assert(m_closed || m_segments.contains(segment));
        if (m_closed) {
          return;
        }
        try {
          if (segment.isEmpty()) {
            if (segment != m_segments.peekLast()) {
              m_segments.remove(segment);
              if (m_usageSpecificLog.isDebugEnabled()) {
                m_usageSpecificLog.debug("Segment " + segment.file() + " has been closed and deleted after discarding last buffer");
              }
              segment.closeAndDelete();
            }
          }
        }
 catch (        IOException e) {
          LOG.error("Exception closing and deleting PBD segment",e);
        }
      }
    }
  }
;
}
