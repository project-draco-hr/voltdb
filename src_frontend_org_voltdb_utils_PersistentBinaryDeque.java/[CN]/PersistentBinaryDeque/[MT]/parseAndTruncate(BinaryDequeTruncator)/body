{
  assertions();
  if (m_segments.isEmpty()) {
    exportLog.debug("PBD " + m_nonce + " has no finished segments");
    return;
  }
  Long lastSegmentIndex=null;
  BBContainer decompressionBuffer=DBBPool.allocateDirect(1024 * 512);
  try {
    for (    PBDSegment segment : m_segments) {
      SegmentTruncater segmentTruncater=new SegmentTruncater(truncator,lastSegmentIndex,decompressionBuffer,segment).invoke();
      if (segmentTruncater.is())       break;
      decompressionBuffer=segmentTruncater.getDecompressionBuffer();
      lastSegmentIndex=segmentTruncater.getLastSegmentIndex();
    }
  }
  finally {
    decompressionBuffer.discard();
  }
  if (lastSegmentIndex == null) {
    return;
  }
  Iterator<PBDSegment> iterator=m_segments.descendingIterator();
  while (iterator.hasNext()) {
    PBDSegment segment=iterator.next();
    if (segment.m_index <= lastSegmentIndex) {
      break;
    }
    addToNumObjects(-segment.getNumEntries());
    iterator.remove();
    segment.closeAndDelete();
  }
  Long newSegmentIndex=0L;
  if (m_segments.peekLast() != null)   newSegmentIndex=m_segments.peekLast().m_index + 1;
  PBDSegment newSegment=new PBDSegment(newSegmentIndex,new VoltFile(m_path,m_nonce + "." + newSegmentIndex+ ".pbd"));
  newSegment.open(true);
  m_segments.offer(newSegment);
  assertions();
}
