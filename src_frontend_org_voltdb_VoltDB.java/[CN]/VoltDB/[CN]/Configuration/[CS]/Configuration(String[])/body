{
  String arg;
  for (int i=0; i < args.length; ++i) {
    arg=args[i];
    if (arg.equals("noloadlib")) {
      m_noLoadLibVOLTDB=true;
    }
 else     if (arg.equals("ipc")) {
      m_backend=BackendTarget.NATIVE_EE_IPC;
    }
 else     if (arg.equals("jni")) {
      m_backend=BackendTarget.NATIVE_EE_JNI;
    }
 else     if (arg.equals("hsqldb")) {
      m_backend=BackendTarget.HSQLDB_BACKEND;
    }
 else     if (arg.equals("valgrind")) {
      m_backend=BackendTarget.NATIVE_EE_VALGRIND_IPC;
    }
 else     if (arg.equals("polite")) {
      m_profilingLevel=ProcedureProfiler.Level.POLITE;
    }
 else     if (arg.equals("intrusive")) {
      m_profilingLevel=ProcedureProfiler.Level.INTRUSIVE;
    }
 else     if (arg.equals("listenfordumps")) {
      listenForDumpRequests=true;
    }
 else     if (arg.equals("quietadhoc")) {
      m_quietAdhoc=true;
    }
 else     if (arg.equals("port")) {
      m_port=Integer.parseInt(args[++i]);
    }
 else     if (arg.startsWith("port ")) {
      m_port=Integer.parseInt(arg.substring("port ".length()));
    }
 else     if (arg.equals("internalport")) {
      m_internalPort=Integer.parseInt(args[++i]);
    }
 else     if (arg.startsWith("internalport ")) {
      m_internalPort=Integer.parseInt(arg.substring("internalport ".length()));
    }
 else     if (arg.equals("externalinterface")) {
      m_externalInterface=args[++i].trim();
    }
 else     if (arg.startsWith("externalinterface ")) {
      m_externalInterface=arg.substring("externalinterface ".length()).trim();
    }
 else     if (arg.equals("internalinterface")) {
      m_internalInterface=args[++i].trim();
    }
 else     if (arg.startsWith("internalinterface ")) {
      m_internalInterface=arg.substring("internalinterface ".length()).trim();
    }
 else     if (arg.equals("httpadminport")) {
      m_httpAdminPort=Integer.parseInt(args[++i]);
    }
 else     if (arg.startsWith("httpadminport ")) {
      m_httpAdminPort=Integer.parseInt(arg.substring("httpadminport ".length()));
    }
 else     if (arg.equals("catalog")) {
      m_pathToCatalog=args[++i];
    }
 else     if (arg.startsWith("catalog ")) {
      m_pathToCatalog=arg.substring("catalog ".length());
    }
 else     if (arg.equals("deployment")) {
      m_pathToDeployment=args[++i];
    }
 else     if (arg.equalsIgnoreCase("useThreadAffinity")) {
      m_useThreadAffinity=true;
    }
 else     if (arg.equalsIgnoreCase("useWatchdogs")) {
      m_useWatchdogs=true;
    }
 else {
      System.out.println("Unrecognized option to VoltDB: " + arg);
      System.out.println("Usage: org.voltdb.VoltDB catalog <catalog.jar>");
      System.out.println("The _Getting Started With VoltDB_ book explains how to run " + " VoltDB from the command line.");
      System.exit(-1);
    }
  }
}
