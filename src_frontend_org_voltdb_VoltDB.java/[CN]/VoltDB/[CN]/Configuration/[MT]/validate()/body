{
  boolean isValid=true;
  if (m_startAction == null) {
    isValid=false;
    hostLog.fatal("The startup action is missing (either create, recover or rejoin).");
  }
  if (m_leader == null && m_startAction != StartAction.INITIALIZE) {
    isValid=false;
    hostLog.fatal("The hostname is missing.");
  }
  if ((!m_isEnterprise) && (m_startAction.isEnterpriseOnly())) {
    isValid=false;
    hostLog.fatal("VoltDB Community Edition only supports the \"create\" start action.");
    String msg=m_startAction.featureNameForErrorString();
    msg+=" is an Enterprise Edition feature. An evaluation edition is available at http://voltdb.com.";
    hostLog.fatal(msg);
  }
  EnumSet<StartAction> requiresDeployment=EnumSet.complementOf(EnumSet.of(StartAction.REJOIN,StartAction.LIVE_REJOIN,StartAction.JOIN,StartAction.INITIALIZE));
  if (requiresDeployment.contains(m_startAction)) {
    if (m_pathToDeployment != null && m_pathToDeployment.trim().isEmpty()) {
      isValid=false;
      hostLog.fatal("The deployment file location is empty.");
    }
  }
  EnumSet<StartAction> pauseNotAllowed=EnumSet.of(StartAction.JOIN,StartAction.LIVE_REJOIN,StartAction.REJOIN);
  if (m_isPaused && pauseNotAllowed.contains(m_startAction)) {
    isValid=false;
    hostLog.fatal("Starting in paused mode is only allowed when starting using create or recover.");
  }
  if (m_startAction != StartAction.INITIALIZE && m_coordinators.isEmpty()) {
    isValid=false;
    hostLog.fatal("Coordinator hosts are missing");
  }
  if (m_startAction != StartAction.PROBE && m_hostCount != UNDEFINED) {
    isValid=false;
    hostLog.fatal("Option \"hostcount\" may only be specified when the start action is probe");
  }
  if (m_startAction == StartAction.JOIN && !m_enableAdd) {
    isValid=false;
    hostLog.fatal("\"add\" and \"noadd\" options cannot be specified at the same time");
  }
  return isValid;
}
