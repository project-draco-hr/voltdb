{
  wasCrashCalled=true;
  crashMessage=errMsg;
  if (ignoreCrash) {
    return;
  }
  StringBuilder stacktrace_sb=new StringBuilder("Stack trace from crashVoltDB() method:\n");
  Map<Thread,StackTraceElement[]> traces=Thread.getAllStackTraces();
  StackTraceElement[] myTrace=traces.get(Thread.currentThread());
  for (  StackTraceElement ste : myTrace) {
    stacktrace_sb.append(ste.toString()).append("\n");
  }
  try {
    TimestampType ts=new TimestampType(new java.util.Date());
    CatalogContext catalogContext=VoltDB.instance().getCatalogContext();
    String root=catalogContext != null ? catalogContext.cluster.getVoltroot() + File.separator : "";
    PrintWriter writer=new PrintWriter(root + "voltdb_crash" + ts.toString().replace(' ','-')+ ".txt");
    writer.println("Time: " + ts);
    writer.println("Message: " + errMsg);
    writer.println();
    writer.println("Platform Properties:");
    PlatformProperties pp=PlatformProperties.getPlatformProperties();
    String[] lines=pp.toLogLines().split("\n");
    for (    String line : lines) {
      writer.println(line.trim());
    }
    writer.println();
    writer.println("****** Current Thread ****** ");
    writer.println(stacktrace_sb);
    writer.println("****** All Threads ******");
    Iterator<Thread> it=traces.keySet().iterator();
    while (it.hasNext()) {
      Thread key=it.next();
      writer.println();
      StackTraceElement[] st=traces.get(key);
      writer.println("****** " + key + " ******");
      for (      StackTraceElement ste : st)       writer.println(ste);
    }
    writer.close();
  }
 catch (  Throwable err) {
    err.printStackTrace();
  }
  VoltLogger log=null;
  try {
    log=new VoltLogger("HOST");
  }
 catch (  RuntimeException rt_ex) {
  }
  if (log != null) {
    if (t != null)     log.fatal(errMsg,t);
 else     log.fatal(errMsg);
    if (stackTrace)     log.fatal(stacktrace_sb);
  }
  System.err.println("VoltDB has encountered an unrecoverable error and is exiting.");
  System.err.println("The log may contain additional information.");
  System.exit(-1);
}
