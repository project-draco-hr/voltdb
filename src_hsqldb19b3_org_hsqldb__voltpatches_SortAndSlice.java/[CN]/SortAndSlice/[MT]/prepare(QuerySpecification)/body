{
  int orderByColumnCount=exprList.size();
  if (orderByColumnCount == 0) {
    return;
  }
  sortOrder=new int[orderByColumnCount];
  sortDescending=new boolean[orderByColumnCount];
  sortNullsLast=new boolean[orderByColumnCount];
  for (int i=0; i < orderByColumnCount; i++) {
    ExpressionOrderBy sort=(ExpressionOrderBy)exprList.get(i);
    if (sort.getLeftNode().queryTableColumnIndex == -1) {
      sortOrder[i]=select.indexStartOrderBy + i;
    }
 else {
      sortOrder[i]=sort.getLeftNode().queryTableColumnIndex;
    }
    sortDescending[i]=sort.isDescending();
    sortNullsLast[i]=sort.isNullsLast();
  }
}
