def push_it(max_errors=1, sleep_time=0):
    err_ct = 0
    tid = str(threading.current_thread().name)
    print ((ts() + ' Starting thread ') + tid)
    i = 1
    http = httplib2.Http(cache=None, timeout=15.0)
    while (i > 0):
        if (not (i % 100)):
            print ('%s %s Loop Count: %4d' % (ts(), tid, i))
        for a in arguments:
            url = (request_format % (server, port, a))
            try:
                (response, content) = http.request(url, 'GET')
                if ((response['status'] != str(HTTP_SUCCESS)) or (json.loads(content)['status'] != STATUS_STRINGS['VOLTDB_SUCCESS'])):
                    statusstring = STATUS_CODES.get(json.loads(content)['status'], 'Unknown status')
                    print ('%s %s Request# %d - Error getting %s\n\thttp_status=%s\tresponse=%s' % (ts(), tid, i, a, response['status'], statusstring))
                    err_ct += 1
            except AttributeError:
                err_ct += 1
            if (err_ct >= max_errors):
                if pause_on_error:
                    raw_input('Press any key to continue...')
                else:
                    print ("%s: Too many errors - I'm out of here" % tid)
                    return (-1)
        time.sleep(sleep_time)
        i += 1
