{
  int id=customRegularFuncMap.get(tokenType,-1);
  if (id == -1) {
    id=customValueFuncMap.get(tokenType,-1);
  }
  if (id == -1) {
    return null;
  }
switch (tokenType) {
case Tokens.LN:
case Tokens.LCASE:
case Tokens.UCASE:
case Tokens.LENGTH:
case Tokens.BITLENGTH:
case Tokens.OCTETLENGTH:
case Tokens.TODAY:
case Tokens.NOW:
    return new FunctionSQL(id);
case Tokens.CURDATE:
case Tokens.CURTIME:
{
    FunctionSQL function=new FunctionSQL(id);
    function.parseList=emptyParamList;
    return function;
  }
case Tokens.SUBSTR:
{
  FunctionSQL function=new FunctionSQL(id);
  function.parseList=tripleParamList;
  return function;
}
}
FunctionCustom function=new FunctionCustom(id);
if (id == FUNC_TRIM_CHAR) {
switch (tokenType) {
case Tokens.LTRIM:
function.extractSpec=Tokens.LEADING;
break;
case Tokens.RTRIM:
function.extractSpec=Tokens.TRAILING;
break;
}
}
if (id == FUNC_EXTRACT) {
switch (tokenType) {
case Tokens.DAYNAME:
function.extractSpec=Tokens.DAY_OF_WEEK;
function.voltDisabled=DISABLED_IN_FUNCTIONCUSTOM_FACTORY_METHOD;
break;
case Tokens.NONTHNAME:
function.extractSpec=Tokens.MONTH_NAME;
function.voltDisabled=DISABLED_IN_FUNCTIONCUSTOM_FACTORY_METHOD;
break;
case Tokens.WEEK:
case Tokens.WEEKOFYEAR:
function.extractSpec=Tokens.WEEK_OF_YEAR;
break;
case Tokens.WEEKDAY:
function.extractSpec=Tokens.WEEKDAY;
break;
case Tokens.DAYOFMONTH:
function.extractSpec=Tokens.DAY_OF_MONTH;
break;
case Tokens.DAYOFWEEK:
function.extractSpec=Tokens.DAY_OF_WEEK;
break;
case Tokens.DAYOFYEAR:
function.extractSpec=Tokens.DAY_OF_YEAR;
break;
default :
function.extractSpec=tokenType;
}
}
if (function.name == null) {
function.name=token;
}
return function;
}
