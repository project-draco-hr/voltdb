{
  String retval="SQL:\n\t" + sql + "\n";
  retval+="PARAMETERS:\n\t";
  for (  ParameterInfo param : paramList) {
    retval+=param.toString() + " ";
  }
  retval+="\nTABLE SOURCES:\n\t";
  for (  Table table : tableList) {
    retval+=table.getTypeName() + " ";
  }
  if (where != null) {
    retval+="\nWHERE:\n";
    retval+="\t" + where.toString() + "\n";
    retval+="WHERE SELECTION LIST:\n";
    int i=0;
    for (    AbstractExpression expr : whereSelectionList)     retval+="\t(" + String.valueOf(i++) + ") "+ expr.toString()+ "\n";
    retval+="NO TABLE SELECTION LIST:\n";
    i=0;
    for (    AbstractExpression expr : noTableSelectionList)     retval+="\t(" + String.valueOf(i++) + ") "+ expr.toString()+ "\n";
    retval+="TABLE FILTER LIST:\n";
    for (    Entry<Table,ArrayList<AbstractExpression>> pair : tableFilterList.entrySet()) {
      i=0;
      retval+="\tTABLE: " + pair.getKey().getTypeName() + "\n";
      for (      AbstractExpression expr : pair.getValue())       retval+="\t\t(" + String.valueOf(i++) + ") "+ expr.toString()+ "\n";
    }
    retval+="JOIN CLAUSE LIST:\n";
    for (    Entry<TablePair,ArrayList<AbstractExpression>> pair : joinSelectionList.entrySet()) {
      i=0;
      retval+="\tTABLES: " + pair.getKey().t1.getTypeName() + " and "+ pair.getKey().t2.getTypeName()+ "\n";
      for (      AbstractExpression expr : pair.getValue())       retval+="\t\t(" + String.valueOf(i++) + ") "+ expr.toString()+ "\n";
    }
  }
  return retval;
}
