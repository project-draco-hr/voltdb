{
  String retval="SQL:\n\t" + m_sql + "\n";
  retval+="PARAMETERS:\n\t";
  for (  ParameterValueExpression param : m_paramList) {
    retval+=param.toString() + " ";
  }
  retval+="\nTABLE SOURCES:\n\t";
  for (  Table table : m_tableList) {
    retval+=table.getTypeName() + " ";
  }
  retval+="\nSCAN COLUMNS:\n";
  boolean hasAll=true;
  for (  StmtTableScan tableScan : m_tableAliasMap.values()) {
    if (!tableScan.getScanColumns().isEmpty()) {
      hasAll=false;
      retval+="\tTable Alias: " + tableScan.getTableAlias() + ":\n";
      for (      SchemaColumn col : tableScan.getScanColumns()) {
        retval+="\t\tColumn: " + col.getColumnName() + ": ";
        retval+=col.getExpression().toString() + "\n";
      }
    }
  }
  if (hasAll) {
    retval+="\tALL\n";
  }
  retval+="\nJOIN TREE :\n";
  if (m_joinTree != null) {
    retval+=m_joinTree.toString();
  }
  retval+="NO TABLE SELECTION LIST:\n";
  int i=0;
  for (  AbstractExpression expr : m_noTableSelectionList)   retval+="\t(" + String.valueOf(i++) + ") "+ expr.toString()+ "\n";
  return retval;
}
