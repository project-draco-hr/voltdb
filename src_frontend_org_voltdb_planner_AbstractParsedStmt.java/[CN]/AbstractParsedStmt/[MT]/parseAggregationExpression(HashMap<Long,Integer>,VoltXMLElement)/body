{
  String type=exprNode.attributes.get("optype");
  ExpressionType exprType=ExpressionType.get(type);
  if (exprType == ExpressionType.INVALID) {
    throw new PlanningErrorException("Unsupported aggregation type '" + type + "'");
  }
  AggregateExpression expr=new AggregateExpression(exprType);
  String node;
  if ((node=exprNode.attributes.get("distinct")) != null) {
    expr.m_distinct=Boolean.parseBoolean(node);
  }
  assert(exprNode.children.size() == 1);
  VoltXMLElement childExprNode=exprNode.children.get(0);
  assert(childExprNode != null);
  AbstractExpression childExpr=parseExpressionTree(paramsById,childExprNode);
  assert((childExpr != null) || (exprType == ExpressionType.AGGREGATE_COUNT));
  expr.setLeft(childExpr);
  return expr;
}
