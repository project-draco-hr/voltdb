{
  assert(ExpressionType.COMPARE_EQUAL == inExpr.getExpressionType());
  if (canConvertInToExistsExpression(inExpr)) {
    AbstractExpression inColumns=inExpr.getLeft();
    assert(inColumns != null);
    assert(inExpr.getRight() instanceof SelectSubqueryExpression);
    SelectSubqueryExpression subqueryExpr=(SelectSubqueryExpression)inExpr.getRight();
    AbstractParsedStmt subquery=subqueryExpr.getSubqueryStmt();
    assert(subquery instanceof ParsedSelectStmt);
    ParsedSelectStmt selectStmt=(ParsedSelectStmt)subquery;
    ParsedSelectStmt.rewriteInSubqueryAsExists(selectStmt,inColumns);
    subqueryExpr.resolveCorrelations();
    AbstractExpression existsExpr=null;
    try {
      existsExpr=ExpressionType.OPERATOR_EXISTS.getExpressionClass().newInstance();
    }
 catch (    Exception e) {
      e.printStackTrace();
      throw new RuntimeException(e.getMessage(),e);
    }
    existsExpr.setExpressionType(ExpressionType.OPERATOR_EXISTS);
    existsExpr.setLeft(subqueryExpr);
    return existsExpr;
  }
 else {
    return inExpr;
  }
}
