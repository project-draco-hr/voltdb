{
  HashSet<Integer> tableAliasSet=new HashSet<Integer>();
  HashSet<Integer> outerSet=new HashSet<Integer>(outerTables);
  HashSet<Integer> innerSet=new HashSet<Integer>(innerTables);
  for (  AbstractExpression expr : exprList) {
    tableAliasSet.clear();
    getTablesForExpression(expr,tableAliasSet);
    Integer tableAliasIdxs[]=tableAliasSet.toArray(new Integer[0]);
    if (tableAliasSet.isEmpty()) {
      noTableSelectionList.add(expr);
    }
 else {
      boolean outer=false;
      boolean inner=false;
      for (      Integer aliasIdx : tableAliasIdxs) {
        outer=outer || outerSet.contains(aliasIdx);
        inner=inner || innerSet.contains(aliasIdx);
      }
      if (outer && inner) {
        innerOuterList.add(expr);
      }
 else       if (outer) {
        outerList.add(expr);
      }
 else       if (inner) {
        innerList.add(expr);
      }
 else {
        assert(false);
      }
    }
  }
}
