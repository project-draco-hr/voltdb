{
  String name=exprNode.attributes.get("name").toLowerCase();
  String volt_alias=exprNode.attributes.get("volt_alias");
  String value_type_name=exprNode.attributes.get("type");
  VoltType value_type=VoltType.typeFromString(value_type_name);
  if (volt_alias == null) {
    volt_alias=name;
  }
  ExpressionType exprType=ExpressionType.get(volt_alias);
  if (exprType == ExpressionType.INVALID) {
    throw new PlanningErrorException("Function '" + volt_alias + "' is not supported.");
  }
  ArrayList<AbstractExpression> args=new ArrayList<AbstractExpression>();
  for (  VoltXMLElement argNode : exprNode.children) {
    assert(argNode != null);
    AbstractExpression argExpr=parseExpressionTree(argNode,db);
    assert(argExpr != null);
    args.add(argExpr);
  }
  AbstractExpression expr=null;
  try {
    expr=exprType.getExpressionClass().newInstance();
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new RuntimeException(e.getMessage(),e);
  }
  expr.setExpressionType(exprType);
  expr.setValueType(value_type);
  expr.setValueSize(value_type.getMaxLengthInBytes());
  expr.setArgs(args);
  return expr;
}
