{
  HashMap<AbstractExpression,Set<AbstractExpression>> eqMap1=analyzeValueEquivalence(singleTableExprs);
  ArrayList<AbstractExpression> simplifiedExprs=new ArrayList<AbstractExpression>();
  for (  AbstractExpression expr : twoTableExprs) {
    if (!isSimpleEquivalenceExpression(expr)) {
      continue;
    }
    AbstractExpression leftExpr=expr.getLeft();
    AbstractExpression rightExpr=expr.getRight();
    assert(leftExpr instanceof TupleValueExpression && rightExpr instanceof TupleValueExpression);
    Set<AbstractExpression> eqSet1=eqMap1.get(leftExpr);
    AbstractExpression singleExpr=leftExpr;
    if (eqSet1 == null) {
      eqSet1=eqMap1.get(rightExpr);
      if (eqSet1 == null) {
        continue;
      }
      singleExpr=leftExpr;
    }
    for (    AbstractExpression eqExpr : eqSet1) {
      if (eqExpr instanceof ConstantValueExpression) {
        if (singleExpr == leftExpr) {
          expr.setLeft(eqExpr);
        }
 else {
          expr.setRight(eqExpr);
        }
        simplifiedExprs.add(expr);
        break;
      }
    }
  }
  singleTableExprs.addAll(simplifiedExprs);
  twoTableExprs.removeAll(simplifiedExprs);
}
