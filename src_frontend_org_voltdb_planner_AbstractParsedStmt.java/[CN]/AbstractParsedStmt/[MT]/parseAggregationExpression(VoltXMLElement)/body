{
  String type=exprNode.attributes.get("optype");
  ExpressionType exprType=ExpressionType.get(type);
  if (exprType == ExpressionType.INVALID) {
    throw new PlanningErrorException("Unsupported aggregation type '" + type + "'");
  }
  assert(exprNode.children.size() == 1);
  VoltXMLElement childExprNode=exprNode.children.get(0);
  assert(childExprNode != null);
  AbstractExpression childExpr=parseExpressionTree(childExprNode);
  if (childExpr == null) {
    assert(exprType == ExpressionType.AGGREGATE_COUNT);
    exprType=ExpressionType.AGGREGATE_COUNT_STAR;
  }
  AggregateExpression expr=new AggregateExpression(exprType);
  expr.setLeft(childExpr);
  String node;
  if ((node=exprNode.attributes.get("distinct")) != null && Boolean.parseBoolean(node)) {
    expr.setDistinct();
  }
  return expr;
}
