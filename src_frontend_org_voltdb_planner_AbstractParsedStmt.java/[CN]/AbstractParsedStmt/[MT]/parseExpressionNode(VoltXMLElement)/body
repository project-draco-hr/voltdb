{
  String elementName=exprNode.name.toLowerCase();
  AbstractExpression retval=null;
  if (elementName.equals("value")) {
    retval=parseValueExpression(exprNode);
  }
 else   if (elementName.equals("vector")) {
    retval=parseVectorExpression(exprNode);
  }
 else   if (elementName.equals("columnref")) {
    retval=parseColumnRefExpression(exprNode);
  }
 else   if (elementName.equals("operation")) {
    retval=parseOperationExpression(exprNode);
  }
 else   if (elementName.equals("aggregation")) {
    retval=parseAggregationExpression(exprNode);
    if (m_aggregationList != null) {
      ExpressionUtil.finalizeValueTypes(retval);
      m_aggregationList.add(retval);
    }
  }
 else   if (elementName.equals("function")) {
    retval=parseFunctionExpression(exprNode);
  }
 else   if (elementName.equals("asterisk")) {
    return null;
  }
 else   if (elementName.equals("tablesubquery")) {
    retval=parseSubqueryExpression(exprNode);
  }
 else   if (elementName.equals("row")) {
    retval=parseRowExpression(exprNode);
  }
 else   if (elementName.equals("rank")) {
    retval=parseRankValueExpression(exprNode);
  }
 else {
    throw new PlanningErrorException("Unsupported expression node '" + elementName + "'");
  }
  assert(retval != null);
  return retval;
}
