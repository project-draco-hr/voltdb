{
  leftQueryExpression.resolveReferences(session);
  rightQueryExpression.resolveReferences(session);
  addUnresolvedExpressions(leftQueryExpression.unresolvedExpressions);
  addUnresolvedExpressions(rightQueryExpression.unresolvedExpressions);
  if (!unionCorresponding) {
    columnCount=leftQueryExpression.getColumnCount();
    int rightCount=rightQueryExpression.getColumnCount();
    if (columnCount != rightCount) {
      throw Error.error(ErrorCode.X_42594);
    }
    unionColumnTypes=new Type[columnCount];
    leftQueryExpression.unionColumnMap=rightQueryExpression.unionColumnMap=new int[columnCount];
    ArrayUtil.fillSequence(leftQueryExpression.unionColumnMap);
    resolveColumnRefernecesInUnionOrderBy();
    return;
  }
  String[] leftNames=leftQueryExpression.getColumnNames();
  String[] rightNames=rightQueryExpression.getColumnNames();
  if (unionCorrespondingColumns == null) {
    unionCorrespondingColumns=new OrderedHashSet();
    OrderedIntHashSet leftColumns=new OrderedIntHashSet();
    OrderedIntHashSet rightColumns=new OrderedIntHashSet();
    for (int i=0; i < leftNames.length; i++) {
      String name=leftNames[i];
      int index=ArrayUtil.find(rightNames,name);
      if (name.length() > 0 && index != -1) {
        leftColumns.add(i);
        rightColumns.add(index);
        unionCorrespondingColumns.add(name);
      }
    }
    if (unionCorrespondingColumns.isEmpty()) {
      throw Error.error(ErrorCode.X_42579);
    }
    leftQueryExpression.unionColumnMap=leftColumns.toArray();
    rightQueryExpression.unionColumnMap=rightColumns.toArray();
  }
 else {
    leftQueryExpression.unionColumnMap=new int[unionCorrespondingColumns.size()];
    rightQueryExpression.unionColumnMap=new int[unionCorrespondingColumns.size()];
    for (int i=0; i < unionCorrespondingColumns.size(); i++) {
      String name=(String)unionCorrespondingColumns.get(i);
      int index=ArrayUtil.find(leftNames,name);
      if (index == -1) {
        throw Error.error(ErrorCode.X_42579);
      }
      leftQueryExpression.unionColumnMap[i]=index;
      index=ArrayUtil.find(rightNames,name);
      if (index == -1) {
        throw Error.error(ErrorCode.X_42579);
      }
      rightQueryExpression.unionColumnMap[i]=index;
    }
  }
  columnCount=unionCorrespondingColumns.size();
  unionColumnTypes=new Type[columnCount];
  resolveColumnRefernecesInUnionOrderBy();
}
