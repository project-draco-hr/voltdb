{
  long start_time=System.currentTimeMillis();
  while (m_exportFiles.isEmpty()) {
    List<Pair<ChannelSftp,List<String>>> pathsFromAllNodes=new ArrayList<Pair<ChannelSftp,List<String>>>();
    for (    RemoteHost rh : m_hosts) {
      Vector<LsEntry> files=rh.channel.ls(rh.path);
      List<String> paths=new ArrayList<String>();
      for (      LsEntry entry : files) {
        if (!entry.getFilename().contains("active") && !entry.getFilename().equals(".") && !entry.getFilename().equals("..")&& !entry.getAttrs().isDir())         paths.add(rh.path + "/" + entry.getFilename());
      }
      Collections.sort(paths);
      if (!paths.isEmpty())       pathsFromAllNodes.add(Pair.of(rh.channel,paths));
    }
    boolean hadOne;
    do {
      hadOne=false;
      for (      Pair<ChannelSftp,List<String>> p : pathsFromAllNodes) {
        final ChannelSftp c=p.getFirst();
        final List<String> paths=p.getSecond();
        if (!paths.isEmpty()) {
          hadOne=true;
          final String filePath=paths.remove(0);
          m_exportFiles.offer(Pair.of(c,filePath));
        }
      }
    }
 while (hadOne);
    long now=System.currentTimeMillis();
    if ((now - start_time) > FILE_TIMEOUT_MS) {
      throw new ValidationErr("Timed out waiting on new files.\n" + "This indicates a mismatch in the transaction streams between the client logs and the export data or the death of something important.",null,null);
    }
  }
}
