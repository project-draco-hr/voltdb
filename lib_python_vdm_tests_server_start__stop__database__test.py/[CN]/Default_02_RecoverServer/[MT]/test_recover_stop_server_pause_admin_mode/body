def test_recover_stop_server_pause_admin_mode(self):
    '\n        ensure Start and stop server is working properly\n        '
    response = requests.get(__db_url__)
    value = response.json()
    if value:
        db_length = len(value['databases'])
        last_db_id = value['databases'][(db_length - 1)]['id']
        url = ('http://%s:8000/api/1.0/databases/%u/recover' % (__host_or_ip__, last_db_id))
        print 'Recovering with pause enabled...'
        response = requests.put(url)
        value = response.json()
        if (not value['statusString']):
            print 'Error'
        elif ('FATAL: VoltDB Community Edition' in value['statusString']):
            print 'Voltdb recover is only supported in Enterprise Edition'
        elif ('Start request sent successfully to servers' in value['statusString']):
            self.assertEqual(response.status_code, 200)
            time.sleep(20)
            CheckServerStatus(self, last_db_id, 'running')
            time.sleep(10)
            print 'Stopping Cluster....'
            url_stop = ('http://%s:8000/api/1.0/databases/%u/stop' % (__host_or_ip__, last_db_id))
            response = requests.put(url_stop)
            value = response.json()
            if ('Server shutdown successfully.' in value['statusString']):
                self.assertEqual(response.status_code, 200)
                time.sleep(15)
                CheckServerStatus(self, last_db_id, 'stopped')
        elif (response.status_code == 500):
            self.assertEqual(response.status_code, 500)
