def writeDecimal(self, num):
    if (num is None):
        self.wbuf.extend(self.NULL_DECIMAL_INDICATOR)
        return
    if (not isinstance(num, decimal.Decimal)):
        raise TypeError('num must be of the type decimal.Decimal')
    (sign, digits, exponent) = num.as_tuple()
    precision = len(digits)
    scale = (- exponent)
    if (scale > self.__class__.DEFAULT_DECIMAL_SCALE):
        raise ValueError(('Scale of this decimal is %d and the max is 12' % scale))
    rest = (precision - scale)
    if (rest > 26):
        raise ValueError(('Precision to the left of the decimal point is %d and the max is 26' % rest))
    scale_factor = (self.__class__.DEFAULT_DECIMAL_SCALE - scale)
    unscaled_int = int(decimal.Decimal((0, digits, scale_factor)))
    data = self.__intToBytes(unscaled_int, sign)
    self.wbuf.extend(data)
