def bufferForRead(self):
    if (self.socket is None):
        print 'ERROR: not connected to server.'
        exit((-1))
    responseprefix = ''
    while (len(responseprefix) < 4):
        responseprefix += self.socket.recv((4 - len(responseprefix)))
        if (responseprefix == ''):
            raise IOError('Connection broken')
    if (self.dump_file != None):
        self.dump_file.write(responseprefix)
    responseLength = struct.unpack(self.int32Type(1), responseprefix)[0]
    self.read_buffer.clear()
    remaining = responseLength
    while (remaining > 0):
        message = self.socket.recv(remaining)
        self.read_buffer.append(message)
        remaining = (responseLength - self.read_buffer.buffer_length())
    if (not (self.dump_file is None)):
        self.dump_file.write(self.read_buffer.get_buffer())
        self.dump_file.write('\n')
