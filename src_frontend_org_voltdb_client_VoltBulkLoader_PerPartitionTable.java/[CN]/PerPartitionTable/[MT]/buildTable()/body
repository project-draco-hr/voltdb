{
  ArrayList<VoltBulkLoaderRow> buf=new ArrayList<VoltBulkLoaderRow>(m_minBatchTriggerSize);
  m_partitionRowQueue.drainTo(buf,m_minBatchTriggerSize);
  ListIterator<VoltBulkLoaderRow> it=buf.listIterator();
  while (it.hasNext()) {
    VoltBulkLoaderRow currRow=it.next();
    VoltBulkLoader loader=currRow.m_loader;
    Object row_args[];
    row_args=new Object[currRow.m_rowData.length];
    try {
      for (int i=0; i < row_args.length; i++) {
        final VoltType type=m_columnTypes[i];
        row_args[i]=ParameterConverter.tryToMakeCompatible(type.classFromType(),currRow.m_rowData[i]);
      }
    }
 catch (    VoltTypeException e) {
      loader.generateError(currRow.m_rowHandle,currRow.m_rowData,e.getMessage());
      loader.m_outstandingRowCount.decrementAndGet();
      it.remove();
      continue;
    }
    table.addRow(row_args);
  }
  return new PartitionProcedureCallback(buf);
}
