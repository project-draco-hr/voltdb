{
  DRCatalogDiffEngine diffEngine=new DRCatalogDiffEngine(m_context.catalog,context.catalog);
  boolean incompatibleCatalogChange=false;
  if (!diffEngine.supported()) {
    incompatibleCatalogChange=true;
  }
  m_context=context;
  m_ee.setBatchTimeout(m_context.cluster.getDeployment().get("deployment").getSystemsettings().get("systemsettings").getQuerytimeout());
  m_loadedProcedures.loadProcedures(m_context,m_backend,csp);
  if (isMPI) {
    return true;
  }
  if (requiresSnapshotIsolationboolean && m_snapshotter.isEESnapshotting()) {
    hostLog.info(String.format("Site %d performing schema change operation must block until snapshot is locally complete.",CoreUtils.getSiteIdFromHSId(m_siteId)));
    try {
      m_snapshotter.completeSnapshotWork(m_sysprocContext);
      hostLog.info(String.format("Site %d locally finished snapshot. Will update catalog now.",CoreUtils.getSiteIdFromHSId(m_siteId)));
    }
 catch (    InterruptedException e) {
      VoltDB.crashLocalVoltDB("Unexpected Interrupted Exception while finishing a snapshot for a catalog update.",true,e);
    }
  }
  m_ee.quiesce(m_lastCommittedSpHandle);
  m_ee.updateCatalog(m_context.m_uniqueId,diffCmds);
  return true;
}
