{
  Thread.currentThread().setName("Iv2ExecutionSite: " + CoreUtils.hsIdToString(m_siteId));
  initialize(m_startupConfig.m_serializedCatalog,m_startupConfig.m_txnId);
  m_startupConfig=null;
  try {
    while (m_shouldContinue) {
      if (m_rejoinState == kStateRunning) {
        SiteTasker task=m_scheduler.take();
        if (task instanceof TransactionTask) {
          m_currentTxnId=((TransactionTask)task).getTxnId();
          m_lastTxnTime=EstTime.currentTimeMillis();
        }
        task.run(getSiteProcedureConnection());
      }
 else {
        SiteTasker task=m_scheduler.poll();
        if (task != null) {
          task.runForRejoin(getSiteProcedureConnection(),m_rejoinTaskLog);
        }
        replayFromTaskLog();
      }
    }
  }
 catch (  final InterruptedException e) {
  }
catch (  OutOfMemoryError e) {
    String errmsg="Site: " + org.voltcore.utils.CoreUtils.hsIdToString(m_siteId) + " ran out of Java memory. "+ "This node will shut down.";
    VoltDB.crashLocalVoltDB(errmsg,true,e);
  }
catch (  Throwable t) {
    String errmsg="Site: " + org.voltcore.utils.CoreUtils.hsIdToString(m_siteId) + " encountered an "+ "unexpected error and will die, taking this VoltDB node down.";
    VoltDB.crashLocalVoltDB(errmsg,true,t);
  }
  shutdown();
}
