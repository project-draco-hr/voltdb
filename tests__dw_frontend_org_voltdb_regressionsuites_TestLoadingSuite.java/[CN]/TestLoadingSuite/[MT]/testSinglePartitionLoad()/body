{
  Client client=getClient();
  VoltTable table;
  ClientResponse r;
  table=m_template.clone(100);
  table.addRow(1,1,1,"1",1.0);
  table.addRow(2,1,2,"2",2.0);
  r=client.callProcedure("@LoadSinglepartitionTable",TheHashinator.valueToBytes(1),"PARTITIONED",table);
  assertEquals(ClientResponse.SUCCESS,r.getStatus());
  assertEquals(1,r.getResults().length);
  assertEquals(2,r.getResults()[0].asScalarLong());
  assertEquals(2,countPartitionedRows(client));
  try {
    r=client.callProcedure("@LoadSinglepartitionTable",TheHashinator.valueToBytes(1),"REPLICATED",table);
    fail();
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
  }
  assertEquals(0,countReplicatedRows(client));
  table=m_template.clone(100);
  table.addRow(3,2,3,"3",3.0);
  table.addRow(3,2,3,"3",3.0);
  try {
    r=client.callProcedure("@LoadSinglepartitionTable",TheHashinator.valueToBytes(2),"PARTITIONED",table);
    fail();
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
  }
  if (isHSQL())   assertEquals(3,countPartitionedRows(client));
 else   assertEquals(2,countPartitionedRows(client));
}
