'Tokenize C++ source code.'
__author__ = 'nnorwitz@google.com (Neal Norwitz)'
try:
    import builtins
except ImportError:
    import __builtin__ as builtins
import sys
from cpp import utils
if (not hasattr(builtins, 'set')):
    from sets import Set as set
_letters = 'abcdefghijklmnopqrstuvwxyz'
VALID_IDENTIFIER_CHARS = set(((_letters + _letters.upper()) + '_0123456789$'))
HEX_DIGITS = set('0123456789abcdefABCDEF')
INT_OR_FLOAT_DIGITS = set('01234567890eE-+')
_STR_PREFIXES = set(('R', 'u8', 'u8R', 'u', 'uR', 'U', 'UR', 'L', 'LR'))
UNKNOWN = 'UNKNOWN'
SYNTAX = 'SYNTAX'
CONSTANT = 'CONSTANT'
NAME = 'NAME'
PREPROCESSOR = 'PREPROCESSOR'
(WHENCE_STREAM, WHENCE_QUEUE) = range(2)
if (__name__ == '__main__'):

    def main(argv):
        'Driver mostly for testing purposes.'
        for filename in argv[1:]:
            source = utils.ReadFile(filename)
            if (source is None):
                continue
            for token in GetTokens(source):
                print ('%-12s: %s' % (token.token_type, token.name))
            sys.stdout.write('\n')
    main(sys.argv)
