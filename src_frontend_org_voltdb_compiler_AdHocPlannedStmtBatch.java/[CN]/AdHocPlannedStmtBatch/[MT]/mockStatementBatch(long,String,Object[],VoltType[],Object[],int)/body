{
  AsyncCompilerWorkCompletionHandler dummyHandler=new AsyncCompilerWorkCompletionHandler(){
    @Override public void onCompletion(    AsyncCompilerResult result){
      System.out.println("Hmm. Never expected to call this dummy handler.");
    }
  }
;
  AdHocPlannerWork work=AdHocPlannerWork.makeStoredProcAdHocPlannerWork(replySiteId,sql,userParams,false,null,dummyHandler);
  CorePlan core=new CorePlan(new byte[0],partitionParamIndex == -1 ? new byte[20] : null,new byte[20],partitionParamIndex == -1 ? new byte[20] : null,false,false,true,paramTypes,0);
  AdHocPlannedStatement s=new AdHocPlannedStatement(sql.getBytes(Constants.UTF8ENCODING),core,extractedValues == null ? ParameterSet.emptyParameterSet() : ParameterSet.fromArrayNoCopy(extractedValues),null);
  List<AdHocPlannedStatement> stmts=new ArrayList<AdHocPlannedStatement>();
  stmts.add(s);
  VoltType partitionParamType=null;
  Object partitionParamValue=null;
  if (work.userPartitionKey != null) {
    partitionParamValue=work.userPartitionKey[0];
  }
 else   if (partitionParamIndex > -1) {
    partitionParamValue=userParams[partitionParamIndex];
  }
  if (partitionParamValue != null) {
    partitionParamType=VoltType.typeFromObject(partitionParamValue);
  }
  AdHocPlannedStmtBatch plannedStmtBatch=new AdHocPlannedStmtBatch(work,stmts,partitionParamIndex,partitionParamType,partitionParamValue,null);
  return plannedStmtBatch;
}
