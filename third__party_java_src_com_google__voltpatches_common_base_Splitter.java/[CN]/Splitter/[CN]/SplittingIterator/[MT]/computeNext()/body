{
  int nextStart=offset;
  while (offset != -1) {
    int start=nextStart;
    int end;
    int separatorPosition=separatorStart(offset);
    if (separatorPosition == -1) {
      end=toSplit.length();
      offset=-1;
    }
 else {
      end=separatorPosition;
      offset=separatorEnd(separatorPosition);
    }
    if (offset == nextStart) {
      offset++;
      if (offset >= toSplit.length()) {
        offset=-1;
      }
      continue;
    }
    while (start < end && trimmer.matches(toSplit.charAt(start))) {
      start++;
    }
    while (end > start && trimmer.matches(toSplit.charAt(end - 1))) {
      end--;
    }
    if (omitEmptyStrings && start == end) {
      nextStart=offset;
      continue;
    }
    if (limit == 1) {
      end=toSplit.length();
      offset=-1;
      while (end > start && trimmer.matches(toSplit.charAt(end - 1))) {
        end--;
      }
    }
 else {
      limit--;
    }
    return toSplit.subSequence(start,end).toString();
  }
  return endOfData();
}
