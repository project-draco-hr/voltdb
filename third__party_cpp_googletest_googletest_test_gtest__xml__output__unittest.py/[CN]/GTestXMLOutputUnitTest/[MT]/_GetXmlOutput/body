def _GetXmlOutput(self, gtest_prog_name, extra_args, expected_exit_code):
    "\n    Returns the xml output generated by running the program gtest_prog_name.\n    Furthermore, the program's exit code must be expected_exit_code.\n    "
    xml_path = os.path.join(gtest_test_utils.GetTempDir(), (gtest_prog_name + 'out.xml'))
    gtest_prog_path = gtest_test_utils.GetTestExecutablePath(gtest_prog_name)
    command = ([gtest_prog_path, ('%s=xml:%s' % (GTEST_OUTPUT_FLAG, xml_path))] + extra_args)
    p = gtest_test_utils.Subprocess(command)
    if p.terminated_by_signal:
        self.assert_(False, ('%s was killed by signal %d' % (gtest_prog_name, p.signal)))
    else:
        self.assert_(p.exited)
        self.assertEquals(expected_exit_code, p.exit_code, ("'%s' exited with code %s, which doesn't match the expected exit code %s." % (command, p.exit_code, expected_exit_code)))
    actual = minidom.parse(xml_path)
    return actual
