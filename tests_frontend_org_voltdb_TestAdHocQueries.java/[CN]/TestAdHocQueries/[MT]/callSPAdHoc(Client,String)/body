{
  VoltTable result;
  int count0=0;
  int count1=0;
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1;",0).getResults()[0];
  count0=result.getRowCount();
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 WHERE PARTVAL != 0;",1).getResults()[0];
  count1=result.getRowCount();
  assertTrue(count0 + count1 == 2);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3;",0).getResults()[0];
  count0=result.getRowCount();
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 WHERE PARTVAL != 0;",1).getResults()[0];
  count1=result.getRowCount();
  assertTrue(count0 + count1 == 2);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1;",0).getResults()[0];
  assertTrue(result.getRowCount() == 2);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 WHERE PARTVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 WHERE PARTVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 WHERE REPPEDVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE A.PARTVAL = 0 and B.PARTVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and B.PARTVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and B.REPPEDVAL = 0;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and A.REPPEDVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.REPPEDVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE A.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and B.PARTVAL = A.REPPEDVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and B.REPPEDVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE B.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE B.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE B.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE B.PARTVAL = 0 and A.REPPEDVAL = B.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE B.REPPEDVAL = 0 and A.PARTVAL = B.REPPEDVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.REPPEDVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE B.REPPEDVAL = 0 and B.REPPEDVAL = A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and B.PARTVAL != A.REPPEDVAL;",0).getResults()[0];
  count0=result.getRowCount();
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and B.PARTVAL != A.REPPEDVAL;",1).getResults()[0];
  count1=result.getRowCount();
  assertTrue(count0 + count1 == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and B.REPPEDVAL != A.PARTVAL;",0).getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
}
