{
  System.out.println("Starting testAdHocWithParamsNegative cases");
  TestEnv env=new TestEnv(m_catalogJar,m_pathToDeployment,2,2,1);
  String adHocQuery;
  try {
    env.setUp();
    adHocQuery="SELECT * FROM AAA WHERE a1 = ? and a2 = ?;";
    verifyIncorrectParameterMessage(env,adHocQuery,new Integer[]{1});
    verifyIncorrectParameterMessage(env,adHocQuery,new Integer[]{1,1,1});
    adHocQuery="SELECT * FROM AAA WHERE a1 = ? and a2 = 'a2' and a3 = 'a3';";
    verifyIncorrectParameterMessage(env,adHocQuery,new String[]{"a1","a2"});
    verifyIncorrectParameterMessage(env,adHocQuery,new String[]{"a1","a2","a3"});
    adHocQuery="SELECT * FROM AAA WHERE a1 = 'a1';";
    verifyIncorrectParameterMessage(env,adHocQuery,new String[]{"a2"});
    verifyIncorrectParameterMessage(env,adHocQuery,new String[]{"a2","a3"});
    adHocQuery="SELECT * FROM AAA WHERE a1 = 'a1' and a2 = 'a2';";
    verifyIncorrectParameterMessage(env,adHocQuery,new String[]{"a1"});
    verifyIncorrectParameterMessage(env,adHocQuery,new String[]{"a1","a2"});
    adHocQuery="SELECT * FROM AAA WHERE a1 = 'a1'; SELECT * FROM AAA WHERE a2 = 'a2';";
    verifyIncorrectParameterMessage(env,adHocQuery,new String[]{"a1"});
    String errorMsg="Not support for multiple AdHoc statements with parameters in one procedure call";
    adHocQuery="SELECT * FROM AAA WHERE a1 = 'a1'; SELECT * FROM AAA WHERE a2 = ?;";
    try {
      env.m_client.callProcedure("@AdHoc",adHocQuery,"a2");
      fail();
    }
 catch (    Exception ex) {
      assertEquals(errorMsg,ex.getMessage());
    }
  }
  finally {
    env.tearDown();
    System.out.println("Ending testAdHocWithParamsNegative cases");
  }
}
