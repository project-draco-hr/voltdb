{
  String adHocMaybeSP="@AdHoc";
  VoltTable result;
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1;").getResults()[0];
  assertTrue(result.getRowCount() == 2);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 WHERE PARTVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 WHERE PARTVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 WHERE REPPEDVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE A.PARTVAL = 0 and B.PARTVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and B.PARTVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and B.REPPEDVAL = 0;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and A.REPPEDVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and A.PARTVAL = B.REPPEDVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE A.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE A.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE A.REPPEDVAL = 0 and B.PARTVAL = A.REPPEDVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and B.REPPEDVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE B.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE B.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE B.PARTVAL = 0 and A.PARTVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE B.PARTVAL = 0 and A.REPPEDVAL = B.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE B.REPPEDVAL = 0 and A.PARTVAL = B.REPPEDVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED1 A, PARTED2 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED3 A, PARTED2 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, PARTED3 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM REPPED1 A, PARTED2 B WHERE B.PARTVAL = 0 and B.PARTVAL = A.REPPEDVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE B.REPPEDVAL = 0 and B.REPPEDVAL = A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
  result=client.callProcedure(adHocMaybeSP,"SELECT * FROM PARTED2 A, REPPED1 B WHERE A.PARTVAL = 0 and B.REPPEDVAL != A.PARTVAL;").getResults()[0];
  assertTrue(result.getRowCount() == 1);
  System.out.println(result.toString());
}
