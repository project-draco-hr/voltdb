{
  int expected=0;
  for (int i=0; i < adHocQuery.length(); i++) {
    if (adHocQuery.charAt(i) == '?') {
      expected++;
    }
  }
  String errorMsg=String.format("Incorrect number of parameters passed: expected %d, passed %d",expected,params.length);
  try {
switch (params.length) {
case 1:
      env.m_client.callProcedure("@AdHoc",adHocQuery,params[0]);
    break;
case 2:
  env.m_client.callProcedure("@AdHoc",adHocQuery,params[0],params[1]);
break;
case 3:
env.m_client.callProcedure("@AdHoc",adHocQuery,params[0],params[1],params[2]);
break;
case 4:
env.m_client.callProcedure("@AdHoc",adHocQuery,params[0],params[1],params[2],params[3]);
break;
case 5:
env.m_client.callProcedure("@AdHoc",adHocQuery,params[0],params[1],params[2],params[3],params[4]);
break;
default :
fail("This test does not support other than 1-5 parameters!");
}
fail();
}
 catch (Exception ex) {
assertTrue(ex.getMessage().contains(errorMsg));
}
}
