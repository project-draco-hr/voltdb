{
  System.out.println("Starting testAdHocLengthLimit");
  TestEnv env=new TestEnv(m_catalogJar,m_pathToDeployment,2,2,1);
  try {
    env.setUp();
    if (env.isValgrind()) {
      return;
    }
    StringBuffer adHocQueryTemp=new StringBuffer("SELECT * FROM VOTES WHERE PHONE_NUMBER IN (");
    int i=0;
    while (adHocQueryTemp.length() <= Short.MAX_VALUE * 10) {
      String randPhone=RandomStringUtils.randomNumeric(10);
      VoltTable result=env.m_client.callProcedure("@AdHoc","INSERT INTO VOTES VALUES(?, ?, ?);",randPhone,"MA",i).getResults()[0];
      assertEquals(1,result.getRowCount());
      adHocQueryTemp.append(randPhone);
      adHocQueryTemp.append(", ");
      i++;
    }
    adHocQueryTemp.replace(adHocQueryTemp.length() - 2,adHocQueryTemp.length(),");");
    assert(adHocQueryTemp.length() > Short.MAX_VALUE);
    assert(i < Short.MAX_VALUE);
    VoltTable result=env.m_client.callProcedure("@AdHoc",adHocQueryTemp.toString()).getResults()[0];
    assertEquals(i,result.getRowCount());
  }
  finally {
    env.tearDown();
    System.out.println("Ending testAdHocLengthLimit");
  }
}
