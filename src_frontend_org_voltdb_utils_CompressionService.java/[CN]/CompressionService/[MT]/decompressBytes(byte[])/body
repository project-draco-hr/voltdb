{
  IOBuffers buffers=m_buffers.get();
  BBContainer input=buffers.input;
  BBContainer output=buffers.output;
  final int inputCapacity=input.b().capacity();
  if (inputCapacity < bytes.length) {
    input.discard();
    input=DBBPool.allocateDirect(Math.max(inputCapacity * 2,bytes.length));
    buffers=new IOBuffers(input,output);
    m_buffers.set(buffers);
  }
  final ByteBuffer inputBuffer=input.b();
  inputBuffer.clear();
  inputBuffer.put(bytes);
  inputBuffer.flip();
  final int uncompressedLength=Snappy.uncompressedLength(inputBuffer);
  final int outputCapacity=output.b().capacity();
  if (outputCapacity < uncompressedLength) {
    output.discard();
    output=DBBPool.allocateDirect(Math.max(outputCapacity * 2,uncompressedLength));
    buffers=new IOBuffers(input,output);
    m_buffers.set(buffers);
  }
  final ByteBuffer outputBuffer=output.b();
  outputBuffer.clear();
  final int actualUncompressedLength=Snappy.uncompress(inputBuffer,outputBuffer);
  assert(uncompressedLength == actualUncompressedLength);
  byte result[]=new byte[actualUncompressedLength];
  outputBuffer.get(result);
  return result;
}
