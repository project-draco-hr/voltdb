{
  running=input;
  addCallback(running,new FutureCallback<V>(){
    @Override public void onSuccess(    V value){
      set(value);
    }
    @Override public void onFailure(    Throwable t){
      if (isCancelled()) {
        return;
      }
      try {
        running=fallback.create(t);
        if (isCancelled()) {
          running.cancel(wasInterrupted());
          return;
        }
        addCallback(running,new FutureCallback<V>(){
          @Override public void onSuccess(          V value){
            set(value);
          }
          @Override public void onFailure(          Throwable t){
            if (running.isCancelled()) {
              cancel(false);
            }
 else {
              setException(t);
            }
          }
        }
,sameThreadExecutor());
      }
 catch (      Throwable e) {
        setException(e);
      }
    }
  }
,executor);
}
