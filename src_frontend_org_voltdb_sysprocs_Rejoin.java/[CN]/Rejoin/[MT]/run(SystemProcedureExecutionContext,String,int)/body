{
  Set<Integer> downHosts=VoltDB.instance().getSiteTracker().getAllDownHosts();
  if (downHosts.isEmpty()) {
    throw new VoltAbortException("Unable to find down node to replace.");
  }
  int hostId=downHosts.iterator().next();
  VoltTable[] results;
  SynthesizedPlanFragment[] pfs=new SynthesizedPlanFragment[2];
  pfs[1]=new SynthesizedPlanFragment();
  pfs[1].fragmentId=SysProcFragmentId.PF_rejoinBlock;
  pfs[1].outputDepId=DEP_rejoinAllNodeWork;
  pfs[1].inputDepIds=new int[]{};
  pfs[1].multipartition=true;
  pfs[1].parameters=new ParameterSet();
  pfs[1].parameters.setParameters(hostId,rejoiningHostname);
  pfs[0]=new SynthesizedPlanFragment();
  pfs[0].fragmentId=SysProcFragmentId.PF_rejoinAggregate;
  pfs[0].outputDepId=DEP_rejoinAggregate;
  pfs[0].inputDepIds=new int[]{DEP_rejoinAllNodeWork};
  pfs[0].multipartition=false;
  pfs[0].parameters=new ParameterSet();
  results=executeSysProcPlanFragments(pfs,DEP_rejoinAggregate);
  pfs[1]=new SynthesizedPlanFragment();
  pfs[1].fragmentId=SysProcFragmentId.PF_rejoinPrepare;
  pfs[1].outputDepId=DEP_rejoinAllNodeWork;
  pfs[1].inputDepIds=new int[]{};
  pfs[1].multipartition=true;
  pfs[1].parameters=new ParameterSet();
  pfs[1].parameters.setParameters(hostId,rejoiningHostname,portToConnect);
  pfs[0]=new SynthesizedPlanFragment();
  pfs[0].fragmentId=SysProcFragmentId.PF_rejoinAggregate;
  pfs[0].outputDepId=DEP_rejoinAggregate;
  pfs[0].inputDepIds=new int[]{DEP_rejoinAllNodeWork};
  pfs[0].multipartition=false;
  pfs[0].parameters=new ParameterSet();
  results=executeSysProcPlanFragments(pfs,DEP_rejoinAggregate);
  boolean shouldCommit=true;
  assert(results.length == 1);
  VoltTable errorTable=results[0];
  if (errorTable.getRowCount() > 0)   shouldCommit=false;
  pfs=new SynthesizedPlanFragment[2];
  pfs[1]=new SynthesizedPlanFragment();
  if (shouldCommit)   pfs[1].fragmentId=SysProcFragmentId.PF_rejoinCommit;
 else   pfs[1].fragmentId=SysProcFragmentId.PF_rejoinRollback;
  pfs[1].outputDepId=DEP_rejoinAllNodeWork;
  pfs[1].inputDepIds=new int[]{};
  pfs[1].multipartition=true;
  pfs[1].parameters=new ParameterSet();
  pfs[1].parameters.setParameters(hostId);
  pfs[0]=new SynthesizedPlanFragment();
  pfs[0].fragmentId=SysProcFragmentId.PF_rejoinAggregate;
  pfs[0].outputDepId=DEP_rejoinAggregate;
  pfs[0].inputDepIds=new int[]{DEP_rejoinAllNodeWork};
  pfs[0].multipartition=false;
  pfs[0].parameters=new ParameterSet();
  results=executeSysProcPlanFragments(pfs,DEP_rejoinAggregate);
  StringBuilder sb=new StringBuilder();
  assert(results.length == 1);
  if (errorTable.getRowCount() > 0) {
    while (errorTable.advanceRow()) {
      String s=errorTable.getString(1);
      if (s != null) {
        sb.append(s);
        sb.append('\n');
      }
    }
    throw new VoltAbortException(sb.toString());
  }
  return new VoltTable[0];
}
