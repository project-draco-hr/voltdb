{
  if (m_origSubqueryScan == null) {
    tve.resolveForTable(m_table);
    return tve;
  }
  Integer columnIndex=m_origSubqueryScan.getColumnIndex(columnName,tve.getDifferentiator());
  assert(columnIndex != null);
  SchemaColumn origColumnSchema=m_origSubqueryScan.getSchemaColumn(columnIndex);
  assert(origColumnSchema != null);
  String origColumnName=origColumnSchema.getColumnName();
  AbstractExpression colExpr=origColumnSchema.getExpression();
  List<TupleValueExpression> tves=ExpressionUtil.getTupleValueExpressions(colExpr);
  for (  TupleValueExpression subqTve : tves) {
    if (subqTve == colExpr) {
      subqTve.setTableName(getTableName());
      subqTve.setColumnName(origColumnName);
      subqTve.setColumnAlias(tve.getColumnAlias());
    }
    subqTve.setTableAlias(tve.getTableAlias());
    subqTve.resolveForTable(m_table);
  }
  return colExpr;
}
