{
  boolean valid=true;
  boolean blocked=false;
  while (valid && !blocked) {
    LogString curr_log=null;
    for (    SiteLog site_log : m_replicaSets.get(partitionId).values()) {
      System.out.println("LOG: " + partitionId + ", "+ site_log.getSiteId()+ ": "+ site_log.currentLog());
      if (curr_log == null) {
        curr_log=site_log.currentLog();
      }
 else {
        if (!site_log.currentLog().equals(curr_log)) {
          System.out.println("SOMETHING BARFED IN REPLICA SET: " + partitionId);
          junit.framework.Assert.assertFalse(true);
          valid=false;
        }
      }
    }
    for (    SiteLog site_log : m_replicaSets.get(partitionId).values()) {
      site_log.advanceLog();
      if (site_log.isDone()) {
        System.out.println("LOG DONE: " + site_log.getSiteId());
        m_unblockedSets.remove((Integer)partitionId);
        m_doneSets.add(partitionId);
        blocked=true;
      }
 else       if (site_log.currentLog().isMultiPart()) {
        System.out.println("LOG BLOCKED: " + site_log.getSiteId());
        m_unblockedSets.remove((Integer)partitionId);
        m_blockedSets.add(partitionId);
        blocked=true;
      }
 else {
        System.out.println("LOG ADVANCING: " + site_log.getSiteId());
      }
    }
  }
  return valid;
}
