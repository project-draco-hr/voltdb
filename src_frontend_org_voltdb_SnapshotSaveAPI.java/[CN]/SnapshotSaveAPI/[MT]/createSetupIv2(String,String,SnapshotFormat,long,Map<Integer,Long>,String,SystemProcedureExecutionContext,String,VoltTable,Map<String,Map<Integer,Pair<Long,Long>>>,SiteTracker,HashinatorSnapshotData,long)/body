{
  JSONObject jsData=null;
  String truncReqId="";
  if (data != null && !data.isEmpty()) {
    try {
      jsData=new JSONObject(data);
      if (jsData.has("truncReqId")) {
        truncReqId=jsData.getString("truncReqId");
      }
    }
 catch (    JSONException e) {
      SNAP_LOG.error(String.format("JSON exception on snapshot data \"%s\".",data),e);
    }
  }
  SnapshotWritePlan plan=null;
  if (format == SnapshotFormat.NATIVE) {
    plan=new NativeSnapshotWritePlan();
  }
 else   if (format == SnapshotFormat.CSV) {
    plan=new CSVSnapshotWritePlan();
  }
 else   if (format == SnapshotFormat.STREAM) {
    plan=new StreamSnapshotWritePlan();
  }
 else   if (format == SnapshotFormat.INDEX) {
    plan=new IndexSnapshotWritePlan();
  }
 else {
    throw new RuntimeException("BAD BAD BAD");
  }
  boolean abort=plan.createSetup(file_path,file_nonce,txnId,partitionTransactionIds,jsData,context,hostname,result,exportSequenceNumbers,tracker,hashinatorData,timestamp);
synchronized (m_createLock) {
    if (!m_taskListsForHSIds.isEmpty()) {
      SNAP_LOG.warn("Found lingering snapshot tasks while setting up a snapshot");
    }
    m_taskListsForHSIds.clear();
    m_snapshotDataTargets.clear();
    m_createSuccess.set(!abort);
    m_createResult.set(result);
    if (!abort) {
      m_taskListsForHSIds.putAll(plan.getTaskListsForHSIds());
      m_snapshotDataTargets.addAll(plan.getSnapshotDataTargets());
      if (m_taskListsForHSIds.isEmpty()) {
        SNAP_LOG.info("Node had no snapshot work to do.  Creating a null task to drive completion.");
        m_taskListsForHSIds.put(context.getSiteId(),new ArrayDeque<SnapshotTableTask>());
      }
      SNAP_LOG.info("Planned tasks: " + CoreUtils.hsIdCollectionToString(plan.getTaskListsForHSIds().keySet()));
      SNAP_LOG.info("Created tasks for HSIds: " + CoreUtils.hsIdCollectionToString(m_taskListsForHSIds.keySet()));
      VoltDB.instance().getSnapshotCompletionMonitor().registerPartitionTxnIdsForSnapshot(txnId,partitionTransactionIds);
      logSnapshotStartToZK(txnId,context,file_path,file_nonce,truncReqId);
    }
  }
}
