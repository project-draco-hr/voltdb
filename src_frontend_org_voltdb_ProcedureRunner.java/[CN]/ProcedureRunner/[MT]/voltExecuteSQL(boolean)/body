{
  try {
    if (m_seenFinalBatch) {
      throw new RuntimeException("Procedure " + m_procedureName + " attempted to execute a batch "+ "after claiming a previous batch was final "+ "and will be aborted.\n  Examine calls to "+ "voltExecuteSQL() and verify that the call "+ "with the argument value 'true' is actually "+ "the final one");
    }
    m_seenFinalBatch=isFinalSQL;
    int batchSize=m_batch.size();
    m_rProcContext.m_procedureName=this.m_procedureName;
    if (batchSize <= MAX_BATCH_SIZE) {
      m_rProcContext.m_batch=m_batch;
      return executeQueriesInABatch(m_batch,isFinalSQL);
    }
 else {
      List<VoltTable[]> results=new ArrayList<VoltTable[]>();
      while (m_batch.size() > 0) {
        int subSize=Math.min(MAX_BATCH_SIZE,m_batch.size());
        List<QueuedSQL> subBatch=m_batch.subList(0,subSize);
        boolean finalSubBatch=isFinalSQL && (subSize == m_batch.size());
        m_rProcContext.m_batch=subBatch;
        results.add(executeQueriesInABatch(subBatch,finalSubBatch));
      }
      VoltTable[] retval=MiscUtils.concatAll(new VoltTable[0],results);
      assert(retval.length == batchSize);
      return retval;
    }
  }
  finally {
    m_batch.clear();
  }
}
