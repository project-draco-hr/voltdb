{
  Throwable e=eIn;
  boolean expected_failure=true;
  StackTraceElement[] stack=e.getStackTrace();
  ArrayList<StackTraceElement> matches=new ArrayList<StackTraceElement>();
  for (  StackTraceElement ste : stack) {
    if (isProcedureStackTraceElement(ste))     matches.add(ste);
  }
  byte status=ClientResponse.UNEXPECTED_FAILURE;
  StringBuilder msg=new StringBuilder();
  if (e.getClass() == VoltAbortException.class) {
    status=ClientResponse.USER_ABORT;
    msg.append("USER ABORT\n");
  }
 else   if (e.getClass() == org.voltdb.exceptions.ConstraintFailureException.class) {
    status=ClientResponse.GRACEFUL_FAILURE;
    msg.append("CONSTRAINT VIOLATION\n");
  }
 else   if (e.getClass() == org.voltdb.exceptions.SQLException.class) {
    status=ClientResponse.GRACEFUL_FAILURE;
    msg.append("SQL ERROR\n");
  }
 else   if (e.getClass() == org.voltdb.exceptions.InterruptException.class) {
    status=ClientResponse.GRACEFUL_FAILURE;
    msg.append("Transaction Interrupted\n");
  }
 else   if (e.getClass() == org.voltdb.ExpectedProcedureException.class) {
    msg.append("HSQL-BACKEND ERROR\n");
    if (e.getCause() != null)     e=e.getCause();
  }
 else   if (e.getClass() == org.voltdb.exceptions.TransactionRestartException.class) {
    status=ClientResponse.TXN_RESTART;
    msg.append("TRANSACTION RESTART\n");
  }
 else {
    msg.append("UNEXPECTED FAILURE:\n");
    expected_failure=false;
  }
  if (expected_failure) {
    msg.append("  ").append(e.getMessage());
    for (    StackTraceElement ste : matches) {
      msg.append("\n    at ");
      msg.append(ste.getClassName()).append(".").append(ste.getMethodName());
      msg.append("(").append(ste.getFileName()).append(":");
      msg.append(ste.getLineNumber()).append(")");
    }
  }
 else {
    Writer result=new StringWriter();
    PrintWriter pw=new PrintWriter(result);
    e.printStackTrace(pw);
    msg.append("  ").append(result.toString());
  }
  return getErrorResponse(status,msg.toString(),e instanceof SerializableException ? (SerializableException)e : null);
}
