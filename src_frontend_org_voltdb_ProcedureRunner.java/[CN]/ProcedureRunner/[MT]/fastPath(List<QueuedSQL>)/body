{
  final int batchSize=batch.size();
  Object[] params=new Object[batchSize];
  long[] fragmentIds=new long[batchSize];
  String[] sqlTexts=new String[batchSize];
  int i=0;
  for (  final QueuedSQL qs : batch) {
    assert(qs.stmt.collector == null);
    fragmentIds[i]=qs.stmt.aggregator.id;
    if (qs.serialization != null) {
      params[i]=qs.serialization;
    }
 else {
      params[i]=qs.params;
    }
    sqlTexts[i]=qs.stmt.getText();
    i++;
  }
  VoltTable[] results=null;
  try {
    results=m_site.executePlanFragments(batchSize,fragmentIds,null,params,sqlTexts,m_txnState.txnId,m_txnState.m_spHandle,m_txnState.uniqueId,m_isReadOnly);
  }
 catch (  SQLException ex) {
    if (!m_isReadOnly) {
      m_site.truncateUndoLog(true,m_spBigBatchBeginToken >= 0 ? m_spBigBatchBeginToken : m_site.getLatestUndoToken(),m_txnState.m_spHandle,null);
    }
    throw ex;
  }
  return results;
}
