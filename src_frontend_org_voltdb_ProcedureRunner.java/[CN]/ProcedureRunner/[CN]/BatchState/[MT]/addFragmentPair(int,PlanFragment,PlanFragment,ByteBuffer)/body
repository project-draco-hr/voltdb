{
  assert(index >= 0);
  assert(index < m_batchSize);
  assert(collectorFragment != null);
  assert(aggregatorFragment != null);
  assert(collectorFragment.getHasdependencies() == false);
  assert(aggregatorFragment.getHasdependencies() == true);
  long distributedFragId=CatalogUtil.getUniqueIdForFragment(collectorFragment);
  long localFragId=CatalogUtil.getUniqueIdForFragment(aggregatorFragment);
  if (aggregatorFragment.getNontransactional() == true) {
    m_localFragsAreNonTransactional=true;
  }
  int outputDepId=m_txnState.getNextDependencyId() | DtxnConstants.MULTIPARTITION_DEPENDENCY;
  m_depsForLocalTask[index]=outputDepId;
  m_localTask.addFragment(localFragId,m_depsToResume[index],params);
  m_distributedTask.addFragment(distributedFragId,outputDepId,params);
}
