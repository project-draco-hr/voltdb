{
  MockVolt volt0, volt1, volt2;
  int handle=0;
  volt0=volt1=volt2=null;
  try {
    volt0=new MockVolt(20000);
    volt0.start();
    volt1=new MockVolt(20001);
    volt1.start();
    volt2=new MockVolt(20002);
    volt2.start();
    CSL csl=new CSL();
    Distributer dist=new Distributer(false,ClientConfig.DEFAULT_PROCEDURE_TIMOUT_NANOS,ClientConfig.DEFAULT_CONNECTION_TIMOUT_MS,false,null);
    dist.addClientStatusListener(csl);
    dist.createConnection("localhost","","",20000);
    dist.createConnection("localhost","","",20001);
    dist.createConnection("localhost","","",20002);
    assertTrue(volt1.handler != null);
    assertTrue(volt0.handler != null);
    assertTrue(volt2.handler != null);
    ProcedureInvocation pi1=new ProcedureInvocation(++handle,"i1",new Integer(1));
    ProcedureInvocation pi2=new ProcedureInvocation(++handle,"i1",new Integer(1));
    ProcedureInvocation pi3=new ProcedureInvocation(++handle,"i1",new Integer(1));
    ProcedureInvocation pi4=new ProcedureInvocation(++handle,"i1",new Integer(1));
    ProcedureInvocation pi5=new ProcedureInvocation(++handle,"i1",new Integer(1));
    ProcedureInvocation pi6=new ProcedureInvocation(++handle,"i1",new Integer(1));
    dist.queue(pi1,new ThrowingCallback(),true,0);
    dist.drain();
    assertTrue(csl.m_exceptionHandled);
    dist.queue(pi2,new ProcCallback(),true,0);
    dist.queue(pi3,new ProcCallback(),true,0);
    dist.queue(pi4,new ProcCallback(),true,0);
    dist.queue(pi5,new ProcCallback(),true,0);
    dist.queue(pi6,new ProcCallback(),true,0);
    dist.drain();
    System.err.println("Finished drain.");
    assertEquals(2,volt0.handler.roundTrips.get());
    assertEquals(2,volt1.handler.roundTrips.get());
    assertEquals(2,volt2.handler.roundTrips.get());
  }
  finally {
    if (volt0 != null) {
      volt0.shutdown();
    }
    if (volt1 != null) {
      volt1.shutdown();
    }
    if (volt2 != null) {
      volt2.shutdown();
    }
  }
}
