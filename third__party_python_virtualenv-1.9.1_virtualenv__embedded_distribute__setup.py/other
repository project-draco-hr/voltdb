"Bootstrap distribute installation\n\nIf you want to use setuptools in your package's setup.py, just include this\nfile in the same directory with it, and add this to the top of your setup.py::\n\n    from distribute_setup import use_setuptools\n    use_setuptools()\n\nIf you want to require a specific version of setuptools, set a download\nmirror, or use an alternate download directory, you can do so by supplying\nthe appropriate options to ``use_setuptools()``.\n\nThis file can also be run as a script to install or upgrade setuptools.\n"
import os
import shutil
import sys
import time
import fnmatch
import tempfile
import tarfile
import optparse
from distutils import log
try:
    from site import USER_SITE
except ImportError:
    USER_SITE = None
try:
    import subprocess

    def _python_cmd(*args):
        args = ((sys.executable,) + args)
        return (subprocess.call(args) == 0)
except ImportError:

    def _python_cmd(*args):
        args = ((sys.executable,) + args)
        if (sys.platform == 'win32'):

            def quote(arg):
                if (' ' in arg):
                    return ('"%s"' % arg)
                return arg
            args = [quote(arg) for arg in args]
        return (os.spawnl(os.P_WAIT, sys.executable, *args) == 0)
DEFAULT_VERSION = '0.6.34'
DEFAULT_URL = 'http://pypi.python.org/packages/source/d/distribute/'
SETUPTOOLS_FAKED_VERSION = '0.6c11'
SETUPTOOLS_PKG_INFO = ('Metadata-Version: 1.0\nName: setuptools\nVersion: %s\nSummary: xxxx\nHome-page: xxx\nAuthor: xxx\nAuthor-email: xxx\nLicense: xxx\nDescription: xxx\n' % SETUPTOOLS_FAKED_VERSION)
_patch_file = _no_sandbox(_patch_file)
_remove_flat_installation = _no_sandbox(_remove_flat_installation)
_create_fake_setuptools_pkg_info = _no_sandbox(_create_fake_setuptools_pkg_info)
_patch_egg_dir = _no_sandbox(_patch_egg_dir)
if (__name__ == '__main__'):
    sys.exit(main())
