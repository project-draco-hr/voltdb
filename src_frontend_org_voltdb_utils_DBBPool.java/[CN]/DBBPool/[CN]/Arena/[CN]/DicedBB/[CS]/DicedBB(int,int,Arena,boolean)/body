{
  if (size % allocationSize != 0) {
    throw new RuntimeException("A ByteBuffer of size " + size + " can't be evenly divided up into units of size "+ allocationSize);
  }
  m_arena=arena;
  m_b=arena.m_pool.allocateBuffer(size);
  m_numSlices=size / allocationSize;
  m_availableSlices=m_numSlices - 1;
  m_slices=new DBBContainer[m_numSlices];
  for (int ii=0; ii < m_numSlices; ii++) {
    m_b.limit(allocationSize * (ii + 1));
    m_b.position(allocationSize * ii);
    long address=0;
    if (foundNativeSupport) {
      address=getBufferAddress(m_b);
    }
    m_slices[ii]=new DBBContainer(m_b.slice(),address);
  }
}
