{
  ParsedColInfo groupbyCol=new ParsedColInfo();
  groupbyCol.expression=parseExpressionTree(groupByNode);
  assert(groupbyCol.expression != null);
  ExpressionUtil.finalizeValueTypes(groupbyCol.expression);
  groupbyCol.groupBy=true;
  if (groupByNode.name.equals("columnref")) {
    groupbyCol.alias=groupByNode.attributes.get("alias");
    groupbyCol.columnName=groupByNode.attributes.get("column");
    groupbyCol.tableName=groupByNode.attributes.get("table");
    groupbyCol.tableAlias=groupByNode.attributes.get("tablealias");
    if (groupbyCol.tableAlias == null) {
      groupbyCol.tableAlias=groupbyCol.tableName;
    }
    org.voltdb.catalog.Column catalogColumn=getTableFromDB(groupbyCol.tableName).getColumns().getIgnoreCase(groupbyCol.columnName);
    groupbyCol.index=catalogColumn.getIndex();
  }
 else {
    groupbyCol.tableName="VOLT_TEMP_TABLE";
    groupbyCol.tableAlias="VOLT_TEMP_TABLE";
    groupbyCol.columnName="";
    hasComplexGroupby=true;
    ParsedColInfo orig_col=null;
    for (int i=0; i < displayColumns.size(); ++i) {
      ParsedColInfo col=displayColumns.get(i);
      if (col.expression.equals(groupbyCol.expression)) {
        groupbyCol.alias=col.alias;
        orig_col=col;
        break;
      }
    }
    if (orig_col != null) {
      orig_col.groupBy=true;
    }
  }
  groupByColumns.add(groupbyCol);
}
