{
  Map<AbstractExpression,Integer> aggTableIndexMap=new HashMap<AbstractExpression,Integer>();
  Map<AbstractExpression,String> exprToAliasMap=new HashMap<AbstractExpression,String>();
  int index=0;
  for (  ParsedColInfo col : aggResultColumns) {
    aggTableIndexMap.put(col.expression,index);
    exprToAliasMap.put(col.expression,col.alias);
  }
  newAggSchema=new NodeSchema();
  for (  ParsedColInfo col : displayColumns) {
    SchemaColumn schema_col=null;
    if (col.expression.hasAnySubexpressionOfClass(AggregateExpression.class)) {
      AbstractExpression expr=col.expression.replaceWithTVE(aggTableIndexMap,exprToAliasMap);
      schema_col=new SchemaColumn("VOLT_TEMP_TABLE","",col.alias,expr);
    }
 else {
      schema_col=new SchemaColumn(col.tableName,col.columnName,col.alias,col.expression);
    }
    newAggSchema.addColumn(schema_col);
  }
  for (  ParsedColInfo col : groupByColumns) {
    if (col.expression.hasAnySubexpressionOfClass(AggregateExpression.class)) {
      AbstractExpression expr=col.expression.replaceWithTVE(aggTableIndexMap,exprToAliasMap);
      col.expression=expr;
    }
  }
  for (  ParsedColInfo col : orderColumns) {
    if (col.expression.hasAnySubexpressionOfClass(AggregateExpression.class)) {
      AbstractExpression expr=col.expression.replaceWithTVE(aggTableIndexMap,exprToAliasMap);
      col.expression=expr;
    }
  }
}
