{
  if (!m_distinct) {
    return groupbyElement;
  }
  if (groupbyElement == null || groupbyElement.children.isEmpty()) {
    if (!hasAggregateExpression()) {
      groupbyElement=displayElement.duplicate();
    }
    m_distinct=false;
    return groupbyElement;
  }
  m_distinctGroupByColumns=new ArrayList<ParsedColInfo>();
  for (  ParsedColInfo col : m_displayColumns) {
    TupleValueExpression tve=new TupleValueExpression(col.tableName,col.tableAlias,col.columnName,col.alias,col.index);
    ParsedColInfo pcol=new ParsedColInfo();
    pcol.tableName=col.tableName;
    pcol.tableAlias=col.tableAlias;
    pcol.columnName=col.columnName;
    pcol.alias=col.alias;
    pcol.expression=tve;
    m_distinctGroupByColumns.add(pcol);
  }
  return groupbyElement;
}
