{
  if (!m_distinct) {
    return groupbyElement;
  }
  if (groupbyElement == null || groupbyElement.children.isEmpty()) {
    if (!m_hasAggregateExpression) {
      groupbyElement=displayElement.duplicate();
    }
    m_distinct=false;
    return groupbyElement;
  }
  m_distinctGroupByColumns=new ArrayList<>();
  m_distinctProjectSchema=new NodeSchema();
  for (  ParsedColInfo col : m_displayColumns) {
    TupleValueExpression tve=new TupleValueExpression(col.tableName,col.tableAlias,col.columnName,col.alias,col.index);
    ParsedColInfo pcol=new ParsedColInfo();
    pcol.tableName=col.tableName;
    pcol.tableAlias=col.tableAlias;
    pcol.columnName=col.columnName;
    pcol.alias=col.alias;
    pcol.expression=tve;
    m_distinctGroupByColumns.add(pcol);
    SchemaColumn schema_col=new SchemaColumn(col.tableName,col.tableAlias,col.columnName,col.alias,tve,col.differentiator);
    m_distinctProjectSchema.addColumn(schema_col);
  }
  return groupbyElement;
}
