{
  if (m_windowedExpressions.size() > 0) {
    if (m_windowedExpressions.size() > 1) {
      throw new PlanningErrorException("At most one windowed display column is supported.");
    }
    WindowedExpression windowedExpression=m_windowedExpressions.get(0);
    List<AbstractExpression> orderByExpressions=windowedExpression.getOrderByExpressions();
switch (windowedExpression.getExpressionType()) {
case AGGREGATE_WINDOWED_RANK:
      if (orderByExpressions.size() == 0) {
        throw new PlanningErrorException("The RANK windowed aggregate operator needs an order by expression.");
      }
    if (orderByExpressions.size() > 1) {
      throw new PlanningErrorException("Aggregate windowed expressions with range " + "window frame units can have only one order by expression.");
    }
  VoltType valType=orderByExpressions.get(0).getValueType();
if (!valType.isAnyIntegerType() && (valType != VoltType.TIMESTAMP)) {
  throw new PlanningErrorException("Aggregate windowed expressions with RANGE " + "window frame units can have only integer or TIMESTAMP value types.");
}
}
}
}
