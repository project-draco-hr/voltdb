{
  if (m_groupAndOrderByPermutationWasTested) {
    return m_groupAndOrderByPermutationResult;
  }
  m_groupAndOrderByPermutationWasTested=true;
  int size=m_groupByColumns.size();
  if (size != m_orderColumns.size()) {
    return false;
  }
  Set<AbstractExpression> orderPrefixExprs=new HashSet<>(size);
  Set<AbstractExpression> groupExprs=new HashSet<>(size);
  int ii=0;
  for (  ParsedColInfo gb : m_groupByColumns) {
    AbstractExpression gexpr=gb.expression;
    if (gb.expression == null) {
      return false;
    }
    AbstractExpression oexpr=m_orderColumns.get(ii).expression;
    ++ii;
    if (gb.expression.equals(oexpr)) {
      continue;
    }
    groupExprs.add(gexpr);
    orderPrefixExprs.add(oexpr);
  }
  m_groupAndOrderByPermutationResult=groupExprs.equals(orderPrefixExprs);
  return m_groupAndOrderByPermutationResult;
}
