{
  Set<AbstractExpression> exprs=super.findAllSubexpressionsOfClass(aeClass);
  if (m_having != null) {
    exprs.addAll(m_having.findAllSubexpressionsOfClass(aeClass));
  }
  if (m_groupByExpressions != null) {
    for (    AbstractExpression groupByExpr : m_groupByExpressions.values()) {
      exprs.addAll(groupByExpr.findAllSubexpressionsOfClass(aeClass));
    }
  }
  if (m_projectSchema != null) {
    for (    SchemaColumn col : m_projectSchema.getColumns()) {
      if (col.getExpression() != null) {
        exprs.addAll(col.getExpression().findAllSubexpressionsOfClass(aeClass));
      }
    }
  }
  for (  ParsedColInfo col : m_aggResultColumns) {
    if (col.expression != null) {
      exprs.addAll(col.expression.findAllSubexpressionsOfClass(aeClass));
    }
  }
  return exprs;
}
