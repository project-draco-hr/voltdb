{
  List<AbstractExpression> exprs=super.findAllSubexpressionsOfClass(aeClass);
  if (m_having != null) {
    exprs.addAll(m_having.findAllSubexpressionsOfClass(aeClass));
  }
  for (  ParsedColInfo groupbyCol : m_groupByColumns) {
    AbstractExpression groupByExpr=groupbyCol.expression;
    exprs.addAll(groupByExpr.findAllSubexpressionsOfClass(aeClass));
  }
  if (m_projectSchema != null) {
    for (    SchemaColumn col : m_projectSchema.getColumns()) {
      if (col.getExpression() != null) {
        exprs.addAll(col.getExpression().findAllSubexpressionsOfClass(aeClass));
      }
    }
  }
  return exprs;
}
