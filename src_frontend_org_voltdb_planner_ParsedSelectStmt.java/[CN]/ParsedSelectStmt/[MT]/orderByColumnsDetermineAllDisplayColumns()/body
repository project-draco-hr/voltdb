{
  HashSet<AbstractExpression> orderByExprs=null;
  ArrayList<AbstractExpression> displayExprHardCases=null;
  for (  ParsedColInfo displayCol : displayColumns) {
    if (displayCol.orderBy) {
      continue;
    }
    AbstractExpression displayExpr=displayCol.expression;
    if (orderByExprs == null) {
      orderByExprs=new HashSet<AbstractExpression>();
      for (      ParsedColInfo orderByCol : orderColumns) {
        orderByExprs.add(orderByCol.expression);
      }
    }
    if (orderByExprs.contains(displayExpr)) {
      continue;
    }
    if (displayExpr instanceof TupleValueExpression) {
      return false;
    }
    if (displayExprHardCases == null) {
      displayExprHardCases=new ArrayList<AbstractExpression>();
    }
    displayExprHardCases.add(displayExpr);
  }
  if (displayExprHardCases == null) {
    return true;
  }
  HashSet<AbstractExpression> orderByTVEs=new HashSet<AbstractExpression>();
  ArrayList<AbstractExpression> orderByNonTVEs=new ArrayList<AbstractExpression>();
  ArrayList<List<AbstractExpression>> orderByNonTVEBaseTVEs=new ArrayList<List<AbstractExpression>>();
  HashSet<AbstractExpression> orderByAllBaseTVEs=new HashSet<AbstractExpression>();
  for (  AbstractExpression orderByExpr : orderByExprs) {
    if (orderByExpr instanceof TupleValueExpression) {
      orderByTVEs.add(orderByExpr);
      orderByAllBaseTVEs.add(orderByExpr);
    }
 else {
      orderByNonTVEs.add(orderByExpr);
      List<AbstractExpression> baseTVEs=orderByExpr.findBaseTVEs();
      orderByNonTVEBaseTVEs.add(baseTVEs);
      orderByAllBaseTVEs.addAll(baseTVEs);
    }
  }
  for (  AbstractExpression displayExpr : displayExprHardCases) {
    Collection<AbstractExpression> displayBases=displayExpr.findBaseTVEs();
    if (orderByTVEs.containsAll(displayBases)) {
      continue;
    }
    if (orderByAllBaseTVEs.containsAll(displayBases) == false) {
      return false;
    }
    return false;
  }
  return true;
}
