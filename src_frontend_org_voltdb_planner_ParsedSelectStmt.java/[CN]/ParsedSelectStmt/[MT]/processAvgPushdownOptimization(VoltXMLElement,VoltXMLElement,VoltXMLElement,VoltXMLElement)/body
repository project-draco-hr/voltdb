{
  ArrayList<ParsedColInfo> tmpDisplayColumns=displayColumns;
  displayColumns=new ArrayList<ParsedColInfo>();
  ArrayList<ParsedColInfo> tmpAggResultColumns=aggResultColumns;
  aggResultColumns=new ArrayList<ParsedColInfo>();
  ArrayList<ParsedColInfo> tmpOrderColumns=orderColumns;
  orderColumns=new ArrayList<ParsedColInfo>();
  AbstractExpression tmpHaving=having;
  boolean tmpHasComplexAgg=hasComplexAgg();
  NodeSchema tmpNodeSchema=projectSchema;
  projectSchema=null;
  m_aggregationList=new ArrayList<AbstractExpression>();
  assert(displayElement != null);
  parseDisplayColumns(displayElement,true);
  if (groupbyElement != null) {
    insertToColumnList(aggResultColumns,groupByColumns);
  }
  if (orderbyElement != null) {
    parseOrderColumns(orderbyElement,true);
  }
  if (havingElement != null) {
    parseHavingExpression(havingElement,true);
  }
  m_aggregationList=null;
  fillUpAggResultColumns();
  placeTVEsinColumns();
  avgPushdownDisplayColumns=displayColumns;
  avgPushdownAggResultColumns=aggResultColumns;
  avgPushdownOrderColumns=orderColumns;
  avgPushdownNewAggSchema=projectSchema;
  avgPushdownHaving=having;
  displayColumns=tmpDisplayColumns;
  aggResultColumns=tmpAggResultColumns;
  orderColumns=tmpOrderColumns;
  projectSchema=tmpNodeSchema;
  hasComplexAgg=tmpHasComplexAgg;
  having=tmpHaving;
}
