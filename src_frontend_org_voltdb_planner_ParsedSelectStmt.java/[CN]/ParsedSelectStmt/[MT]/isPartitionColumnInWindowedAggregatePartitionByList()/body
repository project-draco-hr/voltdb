{
  if (getWindowedExpressions().size() == 0) {
    return false;
  }
  assert(getWindowedExpressions().size() == 1);
  WindowedExpression we=getWindowedExpressions().get(0);
  List<AbstractExpression> partitionByExprs=we.getPartitionByExpressions();
  boolean foundPartExpr=false;
  for (  AbstractExpression ae : partitionByExprs) {
    if (!(ae instanceof TupleValueExpression)) {
      continue;
    }
    TupleValueExpression tve=(TupleValueExpression)ae;
    String tableAlias=tve.getTableAlias();
    String columnName=tve.getColumnName();
    StmtTableScan scanTable=getStmtTableScanByAlias(tableAlias);
    if (scanTable == null || scanTable.getPartitioningColumns() == null) {
      continue;
    }
    boolean foundPartCol=false;
    for (    SchemaColumn pcol : scanTable.getPartitioningColumns()) {
      if (pcol != null && pcol.getColumnName().equals(columnName)) {
        foundPartCol=true;
        break;
      }
    }
    if (foundPartCol) {
      foundPartExpr=true;
      break;
    }
  }
  return foundPartExpr;
}
