{
  for (  ParsedColInfo orderCol : orderColumns) {
    ParsedColInfo orig_col=null;
    for (    ParsedColInfo col : displayColumns) {
      if (col.alias.equals(orderCol.alias) || col.expression.equals(orderCol.expression)) {
        orderCol.alias=col.alias;
        orderCol.tableName=col.tableName;
        orderCol.columnName=col.columnName;
        orig_col=col;
        break;
      }
    }
    if (orig_col != null && orig_col.tableName.equals("VOLT_TEMP_TABLE")) {
      orig_col.orderBy=true;
      orig_col.ascending=orderCol.ascending;
      TupleValueExpression tve=new TupleValueExpression();
      tve.setColumnAlias(orig_col.alias);
      tve.setColumnName(orig_col.columnName);
      tve.setTableName(orig_col.tableName);
      tve.setValueSize(orig_col.expression.getValueSize());
      tve.setValueType(orig_col.expression.getValueType());
      if (orig_col.expression.hasAnySubexpressionOfClass(AggregateExpression.class)) {
        tve.setHasAggregate(true);
      }
      orderCol.expression=tve;
    }
  }
  if (hasComplexGroupby()) {
    topGroupByExpressions=new HashMap<String,AbstractExpression>();
    for (    ParsedColInfo groupbyCol : groupByColumns) {
      ParsedColInfo orig_col=null;
      int columnIndex=-1;
      for (int i=0; i < displayColumns.size(); ++i) {
        ParsedColInfo col=displayColumns.get(i);
        if (col.expression.equals(groupbyCol.expression)) {
          groupbyCol.alias=col.alias;
          orig_col=col;
          columnIndex=i;
          break;
        }
      }
      if (orig_col != null && orig_col.tableName.equals("VOLT_TEMP_TABLE")) {
        orig_col.groupBy=true;
        TupleValueExpression tve=new TupleValueExpression();
        tve.setColumnAlias(orig_col.alias);
        tve.setColumnName(orig_col.columnName);
        tve.setTableName(orig_col.tableName);
        tve.setColumnIndex(columnIndex);
        tve.setValueSize(orig_col.expression.getValueSize());
        tve.setValueType(orig_col.expression.getValueType());
        topGroupByExpressions.put(orig_col.alias,tve);
      }
    }
  }
}
