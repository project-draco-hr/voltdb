{
  if (bytes == null) {
    return 0;
  }
  if (m_type.equals(HashinatorLiteType.ELASTIC)) {
    ByteBuffer buf=ByteBuffer.wrap(bytes);
    final int hash=MurmurHash3.hash3_x64_128(buf,0,bytes.length,0);
    long token=getTokenPtr(hash);
    return Bits.unsafe.getInt(token + 4);
  }
 else {
    int hashCode=0;
    int offset=0;
    for (int ii=0; ii < bytes.length; ii++) {
      hashCode=31 * hashCode + bytes[offset++];
    }
    return java.lang.Math.abs(hashCode % catalogPartitionCount);
  }
}
