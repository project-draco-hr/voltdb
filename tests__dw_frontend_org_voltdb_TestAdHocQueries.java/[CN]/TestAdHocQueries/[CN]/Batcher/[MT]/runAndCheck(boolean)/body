{
  try {
    VoltTable[] results=m_env.m_client.callProcedure("@AdHoc",StringUtils.join(m_queries,"; ")).getResults();
    int i=0;
    assertEquals(m_expectedCounts.size(),results.length);
    for (    String query : m_queries) {
      int expectedCount=m_expectedCounts.get(i);
      if (expectedCount >= 0) {
        String s=query.toLowerCase().trim();
        if (!s.isEmpty()) {
          if (s.startsWith("insert") || s.startsWith("update") || s.startsWith("delete")) {
            assertEquals(String.format("%s (row count):",query),1,results[i].getRowCount());
            assertEquals(String.format("%s (result count):",query),expectedCount,results[i].asScalarLong());
          }
 else {
            if (expectedCount != results[i].getRowCount()) {
              System.out.println("Mismatched result from statement " + i + " expecting "+ expectedCount+ " rows and getting:\n"+ results[i]);
            }
            assertEquals(String.format("%s (row count):",query),expectedCount,results[i].getRowCount());
          }
          i++;
        }
      }
    }
  }
 catch (  ProcCallException e) {
    assertTrue("Unexpected exception for batch: " + e.getMessage(),expectException);
  }
 finally {
    m_queries.clear();
    m_expectedCounts.clear();
  }
}
