{
  final Client client=this.getClient();
  Random rn=new Random();
  for (int i=0; i < 100; ++i) {
    long ts=rn.nextLong();
    long[] timestampValues={ts,ts / 1000 * 1000,ts / 1000000 * 1000000,ts / 1000000 * -1000000};
    for (    long microsecondsSinceEpoch : timestampValues) {
      TimestampType tst_micro=new TimestampType(microsecondsSinceEpoch);
      java.sql.Timestamp ts_micro=VoltTypeUtil.getSqlTimestampFromMicrosSinceEpoch(microsecondsSinceEpoch);
      client.callProcedure("Insert","ALLOW_NULLS",0,0,0,0,0,null,tst_micro,null,null,null,null,null,null,null,null,null);
      VoltTable vt;
      vt=client.callProcedure("@AdHoc","Select A_TIMESTAMP from allow_nulls where pkey = 0").getResults()[0];
      assertTrue(vt.advanceRow());
      assertEquals(microsecondsSinceEpoch,vt.getTimestampAsLong(0));
      assertEquals(tst_micro,vt.getTimestampAsTimestamp(0));
      assertEquals(ts_micro,vt.getTimestampAsSqlTimestamp(0));
      client.callProcedure("@AdHoc","truncate table allow_nulls;");
    }
  }
}
