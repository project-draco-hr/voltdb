{
  final Client client=this.getClient();
  final Object params[]=new Object[COLS + 2];
  params[0]="NO_NULLS";
  params[1]=pkey.incrementAndGet();
  for (int i=0; i < COLS; i++) {
    params[i + 2]=m_midValues[i];
  }
  client.callProcedure("Insert",params);
  params[0]="NO_NULLS";
  params[1]=pkey.incrementAndGet();
  for (int i=0; i < COLS; i++) {
    params[i + 2]=m_maxValues[i];
  }
  client.callProcedure("Insert",params);
  for (int i=0; i < COLS; i++) {
    if (!m_supportsMath[i])     continue;
    final String sql="SELECT (" + m_columnNames[i] + " + 11) from NO_NULLS where "+ m_columnNames[3]+ " = "+ m_midValues[3];
    System.out.println("testsimpleexpression: " + sql);
    final VoltTable[] result=client.callProcedure("@AdHoc",sql);
    final VoltTableRow row=result[0].fetchRow(0);
    final Object obj=row.get(0,m_types[i]);
    final double expect=((Number)m_midValues[i]).doubleValue() + 11;
    final double got=((Number)obj).doubleValue();
    System.out.println("Expect: " + expect + " got: "+ got);
    assertEquals(expect,got);
  }
}
