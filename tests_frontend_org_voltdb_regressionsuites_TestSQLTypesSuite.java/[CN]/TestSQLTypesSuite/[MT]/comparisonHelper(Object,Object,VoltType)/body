{
switch (vt) {
case TINYINT:
    final Byte b1=(Byte)lhs;
  final Byte b2=(Byte)rhs;
return b1.byteValue() == b2.byteValue();
case SMALLINT:
final Short s1=(Short)lhs;
final Short s2=(Short)rhs;
return s1.shortValue() == s2.shortValue();
case INTEGER:
final Integer i1=(Integer)lhs;
final Integer i2=(Integer)rhs;
return i1.intValue() == i2.intValue();
case BIGINT:
final Long l1=(Long)lhs;
final Long l2=(Long)rhs;
return l1.longValue() == l2.longValue();
case FLOAT:
final Double d1=(Double)lhs;
final Double d2=(Double)rhs;
if (((d1 == VoltType.NULL_FLOAT) && (d2 <= d1)) || ((d2 == VoltType.NULL_FLOAT) && (d1 <= d2))) {
return true;
}
return (d1.compareTo(d2) == 0);
case STRING:
if ((lhs == null || lhs == VoltType.NULL_STRING) && (rhs == null || rhs == VoltType.NULL_STRING)) {
return true;
}
return ((String)lhs).equals(rhs);
case TIMESTAMP:
if ((lhs == null || lhs == VoltType.NULL_TIMESTAMP) && (rhs == null || rhs == VoltType.NULL_TIMESTAMP)) {
return true;
}
return ((TimestampType)lhs).equals(rhs);
case DECIMAL:
if ((lhs == null || lhs == VoltType.NULL_DECIMAL) && (rhs == null || rhs == VoltType.NULL_DECIMAL)) {
return true;
}
return ((BigDecimal)lhs).equals(rhs);
}
return false;
}
