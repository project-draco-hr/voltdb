{
  PortConnector channel=new PortConnector("localhost",port);
  channel.connect();
  if (scheme == ClientAuthHashScheme.HASH_SHA1)   login(channel);
 else   loginSha2(channel);
  byte i1[]={0,0,0,0,8,'B','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0};
  int pidx=i1.length - 2;
  verifyInvocation(i1,channel,(byte)-2);
  byte i2[]={0,0,0,0,8,'B','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0};
  byte iarr[]=ByteBuffer.allocate(2).putShort(Short.MAX_VALUE).array();
  i2[pidx]=iarr[0];
  i2[pidx + 1]=iarr[1];
  verifyInvocation(i2,channel,(byte)-2);
  iarr=ByteBuffer.allocate(2).putShort((short)-1).array();
  i2[pidx]=iarr[0];
  i2[pidx + 1]=iarr[1];
  verifyInvocation(i2,channel,(byte)-2);
  iarr=ByteBuffer.allocate(2).putShort((short)4).array();
  i2[pidx]=iarr[0];
  i2[pidx + 1]=iarr[1];
  verifyInvocation(i2,channel,(byte)-2);
  iarr=ByteBuffer.allocate(2).putShort((short)9).array();
  i2[pidx]=iarr[0];
  i2[pidx + 1]=iarr[1];
  verifyInvocation(i2,channel,(byte)-2);
  byte i3[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,9};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i3[21]=iarr[0];
  i3[21 + 1]=iarr[1];
  verifyInvocation(i3,channel,(byte)-2);
  byte i4[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,9,0,0,0,0};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i4[21]=iarr[0];
  i4[21 + 1]=iarr[1];
  iarr=ByteBuffer.allocate(4).putInt(8).array();
  i4[24]=iarr[0];
  i4[24 + 1]=iarr[1];
  i4[24 + 2]=iarr[2];
  i4[24 + 3]=iarr[3];
  verifyInvocation(i4,channel,(byte)-2);
  byte i5[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,'v','o','l','t','d','b'};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i5[21]=iarr[0];
  i5[21 + 1]=iarr[1];
  iarr=ByteBuffer.allocate(4).putInt(6).array();
  i5[24]=iarr[0];
  i5[24 + 1]=iarr[1];
  i5[24 + 2]=iarr[2];
  i5[24 + 3]=iarr[3];
  verifyInvocation(i5,channel,(byte)1);
  byte i6[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,-99};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i6[21]=iarr[0];
  i6[21 + 1]=iarr[1];
  verifyInvocation(i6,channel,(byte)-2);
  byte i61[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,-99,70};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i61[21]=iarr[0];
  i61[21 + 1]=iarr[1];
  verifyInvocation(i61,channel,(byte)-2);
  byte i62[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,-99,-99};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i62[21]=iarr[0];
  i62[21 + 1]=iarr[1];
  verifyInvocation(i62,channel,(byte)-2);
  byte i63[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,-99,9};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i63[21]=iarr[0];
  i63[21 + 1]=iarr[1];
  verifyInvocation(i63,channel,(byte)-2);
  byte i631[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,-99,9,0,0,0,0};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i631[21]=iarr[0];
  i631[21 + 1]=iarr[1];
  iarr=ByteBuffer.allocate(4).putInt(Integer.MAX_VALUE).array();
  i631[i631.length - 4]=iarr[0];
  i631[i631.length - 3]=iarr[1];
  i631[i631.length - 2]=iarr[2];
  i631[i631.length - 1]=iarr[3];
  verifyInvocation(i631,channel,(byte)-2);
  byte i64[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,-99,6};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i64[21]=iarr[0];
  i64[21 + 1]=iarr[1];
  verifyInvocation(i64,channel,(byte)-2);
  byte i65[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,-99,6,'A'};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i64[21]=iarr[0];
  i64[21 + 1]=iarr[1];
  verifyInvocation(i65,channel,(byte)-2);
  byte i7[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,70};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i7[21]=iarr[0];
  i7[21 + 1]=iarr[1];
  verifyInvocation(i7,channel,(byte)-2);
  byte i71[]={0,0,0,0,8,'A','.','i','n','s','e','r','t',0,0,0,0,0,0,0,0,0,0,26};
  iarr=ByteBuffer.allocate(2).putShort((short)1).array();
  i71[21]=iarr[0];
  i71[21 + 1]=iarr[1];
  verifyInvocation(i71,channel,(byte)-2);
  System.out.println("Testing good Ping invocation Again");
  byte pingr[]={0,0,0,0,5,'@','P','i','n','g',0,0,0,0,0,0,0,0,0,0};
  verifyInvocation(pingr,channel,(byte)1);
  verifyInvocation(i5,channel,(byte)1);
  channel.close();
}
