{
  PortConnector channel=new PortConnector("localhost",port);
  channel.connect();
  System.out.println("Testing good Ping invocation before login");
  byte pingr[]=VAR1.clone();
  try {
    verifyInvocation(pingr,channel,(byte)1);
    fail("Expect exception");
  }
 catch (  Exception ioe) {
    System.out.println("Good that we could not execute a proc.");
  }
  channel.connect();
  if (scheme == ClientAuthScheme.HASH_SHA1)   login(channel);
 else   loginSha2(channel);
  System.out.println("Testing good Ping invocation");
  verifyInvocation(pingr,channel,(byte)1);
  final byte ERROR_CODE=-3;
  System.out.println("Testing Ping invocation with bad procname length");
  byte bad_length[]=VAR1.clone();
  updateLength(bad_length,6);
  verifyInvocation(bad_length,channel,ERROR_CODE);
  System.out.println("Testing Ping invocation with -1 procname length.");
  byte neg1_length[]=VAR1.clone();
  updateLength(neg1_length,-1);
  verifyInvocation(neg1_length,channel,ERROR_CODE);
  System.out.println("Testing Ping invocation with -200 procname length.");
  byte neg2_length[]=VAR1.clone();
  updateLength(neg2_length,-200);
  verifyInvocation(neg2_length,channel,ERROR_CODE);
  System.out.println("Testing Ping invocation with looooong procname length.");
  byte too_long_length[]=VAR1.clone();
  updateLength(too_long_length,Integer.MAX_VALUE);
  verifyInvocation(too_long_length,channel,ERROR_CODE);
  System.out.println("Testing good Ping invocation with bad protocol version.");
  byte bad_proto[]=VAR1.clone();
  bad_proto[iVERSION]=(byte)(StoredProcedureInvocation.CURRENT_MOST_RECENT_VERSION + 1);
  verifyInvocation(bad_proto,channel,ERROR_CODE);
  System.out.println("Testing good Ping invocation with incomplete client data");
  byte bad_cl_data[]=Arrays.copyOfRange(VAR1,0,12);
  verifyInvocation(bad_cl_data,channel,ERROR_CODE);
  System.out.println("Testing good Ping invocation Again");
  verifyInvocation(pingr,channel,(byte)1);
  channel.close();
}
