{
  m_configBytes=Arrays.copyOf(configureBytes,configureBytes.length);
  m_signature=TheHashinator.computeConfigurationSignature(m_configBytes);
  ByteBuffer buf=ByteBuffer.wrap(configureBytes);
  int numEntries=buf.getInt();
  TreeMap<Long,Integer> buildMap=new TreeMap<Long,Integer>();
  for (int ii=0; ii < numEntries; ii++) {
    final long token=buf.getLong();
    final int partitionId=buf.getInt();
    if (buildMap.containsKey(token)) {
      throw new RuntimeException("Duplicate token " + token + " partition "+ partitionId+ " and "+ buildMap.get(token));
    }
    buildMap.put(token,partitionId);
  }
  ImmutableSortedMap.Builder<Long,Integer> builder=ImmutableSortedMap.naturalOrder();
  for (  Map.Entry<Long,Integer> e : buildMap.entrySet()) {
    builder.put(e.getKey(),e.getValue());
  }
  tokens=builder.build();
}
