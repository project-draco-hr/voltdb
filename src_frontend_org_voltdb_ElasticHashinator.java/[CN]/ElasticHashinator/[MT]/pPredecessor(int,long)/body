{
  Integer partForToken=tokens.get(token);
  if (partForToken != null && partForToken == partition) {
    Map.Entry<Long,Integer> predecessor=tokens.headMap(token).lastEntry();
    if (predecessor == null) {
      predecessor=tokens.lastEntry();
    }
    if (predecessor.getKey() != token) {
      return Pair.of(predecessor.getKey(),predecessor.getValue());
    }
 else {
      throw new RuntimeException("There is only one token on the hash ring");
    }
  }
 else {
    throw new IllegalArgumentException("The given token " + token + " does not map to partition "+ partition);
  }
}
