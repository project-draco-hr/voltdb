{
  if (this == o)   return true;
  if (o == null || getClass() != o.getClass())   return false;
  ElasticHashinator that=(ElasticHashinator)o;
  if (m_signature.get().equals(that.m_signature.get()))   return true;
  SortedMapDifference<Integer,Integer> diff=Maps.difference(m_tokensMap.get(),that.m_tokensMap.get());
  if (!diff.entriesDiffering().isEmpty())   return false;
  for (  Map.Entry<Integer,Integer> leftEntry : diff.entriesOnlyOnLeft().entrySet()) {
    if (that.partitionForToken(leftEntry.getKey()) != leftEntry.getValue()) {
      return false;
    }
  }
  for (  Map.Entry<Integer,Integer> rightEntry : diff.entriesOnlyOnRight().entrySet()) {
    if (partitionForToken(rightEntry.getKey()) != rightEntry.getValue()) {
      return false;
    }
  }
  return true;
}
