{
  if (this == o)   return true;
  if (o == null || getClass() != o.getClass())   return false;
  ElasticHashinator that=(ElasticHashinator)o;
  if (m_signature.get().equals(that.m_signature.get()))   return true;
  SortedMapDifference<Integer,Integer> diff=Maps.difference(m_tokensMap.get(),that.m_tokensMap.get());
  if (!diff.entriesDiffering().isEmpty()) {
    System.err.println("Differ: " + diff.entriesDiffering().toString());
    return false;
  }
  for (  Map.Entry<Integer,Integer> e : diff.entriesOnlyOnLeft().entrySet()) {
    if (that.partitionForToken(e.getKey()) != e.getValue()) {
      System.err.println(e.getValue() + " not the same as " + that.partitionForToken(e.getKey())+ " for token "+ e.getKey());
      return false;
    }
  }
  for (  Map.Entry<Integer,Integer> e : diff.entriesOnlyOnRight().entrySet()) {
    if (partitionForToken(e.getKey()) != e.getValue()) {
      System.err.println(e.getValue() + " not the same as " + partitionForToken(e.getKey())+ " for token "+ e.getKey());
      return false;
    }
  }
  return true;
}
