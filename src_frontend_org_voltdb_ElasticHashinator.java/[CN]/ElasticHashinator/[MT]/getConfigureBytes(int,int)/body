{
  Preconditions.checkArgument(partitionCount > 0);
  Preconditions.checkArgument(tokensPerPartition > 0);
  Random r=new Random(0);
  ByteBuffer buf=ByteBuffer.allocate(4 * (partitionCount * tokensPerPartition * 12));
  buf.putInt(partitionCount * tokensPerPartition);
  HashMap<Long,Integer> checkMap=new HashMap<Long,Integer>();
  for (int ii=0; ii < partitionCount; ii++) {
    for (int zz=0; zz < tokensPerPartition; zz++) {
      while (true) {
        long candidateToken=r.nextLong();
        if (checkMap.containsKey(candidateToken)) {
          continue;
        }
        buf.putLong(candidateToken);
        buf.putInt(ii);
        break;
      }
    }
  }
  return buf.array();
}
