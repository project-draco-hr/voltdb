{
  ByteBuffer buf=ByteBuffer.allocate(4 + (m_tokens.size() * (4 + TokenCompressor.COMPRESSED_SIZE)));
  int numEntries=m_tokens.size();
  buf.putInt(numEntries);
  for (  Map.Entry<Long,Integer> e : m_tokens.entrySet()) {
    int optimizedToken=TokenCompressor.compress(e.getKey());
    buf.putInt(optimizedToken);
  }
  for (  Map.Entry<Long,Integer> e : m_tokens.entrySet()) {
    int partitionId=e.getValue();
    buf.putInt(partitionId);
  }
  ByteArrayOutputStream bos=new ByteArrayOutputStream(buf.array().length);
  DeflaterOutputStream dos=new DeflaterOutputStream(bos);
  try {
    dos.write(buf.array());
    dos.close();
  }
 catch (  IOException e) {
    throw new RuntimeException(String.format("Failed to deflate cooked bytes: %s",e.toString()));
  }
  return bos.toByteArray();
}
