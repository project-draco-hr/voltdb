{
  Client client=getClient();
  fillTables(client);
  VoltTable[] results=client.callProcedure("@AdHoc","update p1 set desc = 'changed' where id > 9 and num = 0").getResults();
  assertEquals(5,results[0].asScalarLong());
  results=client.callProcedure("@AdHoc","select count(*) from p1 where desc = 'changed'").getResults();
  assertEquals(5,results[0].asScalarLong());
  clearTables(client);
  fillTables(client);
  results=client.callProcedure("@AdHoc","update p1 set desc = 'changed' where id > 9 or num = 0").getResults();
  assertEquals(15,results[0].asScalarLong());
  results=client.callProcedure("@AdHoc","select count(*) from p1 where desc = 'changed'").getResults();
  assertEquals(15,results[0].asScalarLong());
  clearTables(client);
  fillTables(client);
  results=client.callProcedure("@AdHoc","update p1 set desc = 'changed' where (id > 9 or num = 0) and ratio = 0.0").getResults();
  assertEquals(5,results[0].asScalarLong());
  results=client.callProcedure("@AdHoc","select count(*) from p1 where desc = 'changed'").getResults();
  assertEquals(5,results[0].asScalarLong());
  clearTables(client);
  fillTables(client);
  results=client.callProcedure("@AdHoc","update p1 set desc = 'changed' where id > 9 or num = 0 and ratio = 0.0").getResults();
  assertEquals(13,results[0].asScalarLong());
  results=client.callProcedure("@AdHoc","select count(*) from p1 where desc = 'changed'").getResults();
  assertEquals(13,results[0].asScalarLong());
  clearTables(client);
  fillTables(client);
  results=client.callProcedure("@AdHoc","update p1 set desc = 'changed' where ratio = 0.0 and (id > 9 or num = 0)").getResults();
  assertEquals(5,results[0].asScalarLong());
  results=client.callProcedure("@AdHoc","select count(*) from p1 where desc = 'changed'").getResults();
  assertEquals(5,results[0].asScalarLong());
  clearTables(client);
  fillTables(client);
  results=client.callProcedure("@AdHoc","update p1 set desc = 'changed' where ratio = 0.0 and id > 9 or num = 0").getResults();
  assertEquals(10,results[0].asScalarLong());
  results=client.callProcedure("@AdHoc","select count(*) from p1 where desc = 'changed'").getResults();
  assertEquals(10,results[0].asScalarLong());
}
