def parse(text):
    retval = []
    javaOnlyClasses = []
    text = strip_comments(text)
    text = text.split('\n')
    while len(text):
        line = text.pop(0).split(None, 3)
        if (len(line) == 0):
            continue
        beginStmt = line.pop(0)
        if (not beginStmt.startswith('begin')):
            raise Exception('Didn\'t find expected "begin" token.')
        name = line.pop(0)
        comment = None
        hasEE = True
        if len(line):
            nextToken = line.pop(0)
            if (nextToken.lower() == 'javaonly'):
                javaOnlyClasses.append(name)
                hasEE = False
                if len(line):
                    comment = line.pop(0).strip('"')
            else:
                comment = nextToken.strip('"')
        fields = []
        fieldline = text.pop(0).split(None, 2)
        while (fieldline[0] != 'end'):
            typetoken = fieldline.pop(0)
            nametoken = fieldline.pop(0)
            fieldcomment = None
            if len(fieldline):
                fieldcomment = fieldline.pop(0).strip('"')
            fields.append(Field(nametoken, typetoken, fieldcomment))
            fieldline = text.pop(0).split(None, 2)
        retval.append(CatalogDefn(name, fields, comment, hasEE))
    return (retval, javaOnlyClasses)
