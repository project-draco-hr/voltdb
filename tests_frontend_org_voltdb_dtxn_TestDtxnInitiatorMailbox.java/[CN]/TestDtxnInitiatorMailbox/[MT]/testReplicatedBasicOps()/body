{
  MockInitiator initiator=new MockInitiator();
  ExecutorTxnIdSafetyState safetyState=new ExecutorTxnIdSafetyState(INITIATOR_SITE_ID,m_mockVolt.getCatalogContext().siteTracker);
  DtxnInitiatorMailbox dim=new DtxnInitiatorMailbox(INITIATOR_SITE_ID,safetyState,m_mockMessenger);
  dim.setInitiator(initiator);
  m_testStream.reset();
  dim.addPendingTxn(createTxnState(0,new int[]{0,1},true,true));
  dim.deliver(createInitiateResponse(0,0,true,true,false,createResultSet("dude")));
  assertTrue(m_testStream.gotResponse());
  assertEquals(0,initiator.m_reduceCount);
  assertEquals(0,initiator.m_reduceSize);
  m_testStream.reset();
  dim.deliver(createInitiateResponse(0,1,true,true,false,createResultSet("dude")));
  assertFalse(m_testStream.gotResponse());
  assertEquals(1,initiator.m_reduceCount);
  assertEquals(MESSAGE_SIZE,initiator.m_reduceSize);
  m_testStream.reset();
  dim.addPendingTxn(createTxnState(2,new int[]{0,1},false,true));
  dim.deliver(createInitiateResponse(2,0,false,true,false,createResultSet("dude")));
  assertFalse(m_testStream.gotResponse());
  assertEquals(1,initiator.m_reduceCount);
  assertEquals(MESSAGE_SIZE,initiator.m_reduceSize);
  dim.deliver(createInitiateResponse(2,1,false,true,false,createResultSet("dude")));
  assertTrue(m_testStream.gotResponse());
  assertEquals(2,initiator.m_reduceCount);
  assertEquals(MESSAGE_SIZE * 2,initiator.m_reduceSize);
}
