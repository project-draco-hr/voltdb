{
  MockInitiator initiator=new MockInitiator();
  ExecutorTxnIdSafetyState safetyState=new ExecutorTxnIdSafetyState(m_siteMap);
  DtxnInitiatorMailbox dim=new DtxnInitiatorMailbox(safetyState,m_mockMessenger);
  dim.setInitiator(initiator);
  dim.setHSId(INITIATOR_SITE_ID);
  m_testStream.reset();
  dim.addPendingTxn(createTxnState(0,new int[]{0},true,true));
  dim.deliver(createInitiateResponse(0,0,true,true,false,createResultSet("dude")));
  assertTrue(m_testStream.gotResponse());
  assertEquals(1,initiator.m_reduceCount);
  assertEquals(MESSAGE_SIZE,initiator.m_reduceSize);
  m_testStream.reset();
  dim.addPendingTxn(createTxnState(1,new int[]{0},true,false));
  dim.deliver(createInitiateResponse(1,0,true,false,false,createResultSet("dude")));
  assertTrue(m_testStream.gotResponse());
  assertEquals(2,initiator.m_reduceCount);
  assertEquals(MESSAGE_SIZE * 2,initiator.m_reduceSize);
  m_testStream.reset();
  dim.addPendingTxn(createTxnState(2,new int[]{0},false,true));
  dim.deliver(createInitiateResponse(2,0,false,true,false,createResultSet("dude")));
  assertTrue(m_testStream.gotResponse());
  assertEquals(3,initiator.m_reduceCount);
  assertEquals(MESSAGE_SIZE * 3,initiator.m_reduceSize);
  m_testStream.reset();
  dim.addPendingTxn(createTxnState(3,new int[]{0},false,false));
  dim.deliver(createInitiateResponse(3,0,false,false,false,createResultSet("dude")));
  assertEquals(4,initiator.m_reduceCount);
  assertEquals(MESSAGE_SIZE * 4,initiator.m_reduceSize);
  assertTrue(m_testStream.gotResponse());
}
