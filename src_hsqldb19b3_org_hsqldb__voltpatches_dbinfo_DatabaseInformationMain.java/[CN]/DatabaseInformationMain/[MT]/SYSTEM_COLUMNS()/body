{
  Table t=sysTables[SYSTEM_COLUMNS];
  if (t == null) {
    t=createBlankTable(sysTableHsqlNames[SYSTEM_COLUMNS]);
    addColumn(t,"TABLE_CAT",SQL_IDENTIFIER);
    addColumn(t,"TABLE_SCHEM",SQL_IDENTIFIER);
    addColumn(t,"TABLE_NAME",SQL_IDENTIFIER);
    addColumn(t,"COLUMN_NAME",SQL_IDENTIFIER);
    addColumn(t,"DATA_TYPE",Type.SQL_SMALLINT);
    addColumn(t,"TYPE_NAME",SQL_IDENTIFIER);
    addColumn(t,"COLUMN_SIZE",Type.SQL_INTEGER);
    addColumn(t,"BUFFER_LENGTH",Type.SQL_INTEGER);
    addColumn(t,"DECIMAL_DIGITS",Type.SQL_INTEGER);
    addColumn(t,"NUM_PREC_RADIX",Type.SQL_INTEGER);
    addColumn(t,"NULLABLE",Type.SQL_INTEGER);
    addColumn(t,"REMARKS",CHARACTER_DATA);
    addColumn(t,"COLUMN_DEF",CHARACTER_DATA);
    addColumn(t,"SQL_DATA_TYPE",Type.SQL_INTEGER);
    addColumn(t,"SQL_DATETIME_SUB",Type.SQL_INTEGER);
    addColumn(t,"CHAR_OCTET_LENGTH",Type.SQL_INTEGER);
    addColumn(t,"ORDINAL_POSITION",Type.SQL_INTEGER);
    addColumn(t,"IS_NULLABLE",YES_OR_NO);
    addColumn(t,"SCOPE_CATLOG",SQL_IDENTIFIER);
    addColumn(t,"SCOPE_SCHEMA",SQL_IDENTIFIER);
    addColumn(t,"SCOPE_TABLE",SQL_IDENTIFIER);
    addColumn(t,"SOURCE_DATA_TYPE",SQL_IDENTIFIER);
    addColumn(t,"IS_AUTOINCREMENT",Type.SQL_BOOLEAN);
    addColumn(t,"TYPE_SUB",Type.SQL_INTEGER);
    HsqlName name=HsqlNameManager.newInfoSchemaObjectName(sysTableHsqlNames[SYSTEM_COLUMNS].name,false,SchemaObject.INDEX);
    t.createPrimaryKey(name,new int[]{0,1,2,16},false);
    return t;
  }
  PersistentStore store=database.persistentStoreCollection.getStore(t);
  String tableCatalog;
  String tableSchema;
  String tableName;
  int columnCount;
  Iterator tables;
  Table table;
  Object[] row;
  DITableInfo ti;
  final int itable_cat=0;
  final int itable_schem=1;
  final int itable_name=2;
  final int icolumn_name=3;
  final int idata_type=4;
  final int itype_name=5;
  final int icolumn_size=6;
  final int ibuffer_length=7;
  final int idecimal_digits=8;
  final int inum_prec_radix=9;
  final int inullable=10;
  final int iremark=11;
  final int icolumn_def=12;
  final int isql_data_type=13;
  final int isql_datetime_sub=14;
  final int ichar_octet_length=15;
  final int iordinal_position=16;
  final int iis_nullable=17;
  final int iscope_cat=18;
  final int iscope_schem=19;
  final int iscope_table=20;
  final int isrc_data_type=21;
  final int iis_autoinc=22;
  final int itype_sub=23;
  tables=allTables();
  ti=new DITableInfo();
  while (tables.hasNext()) {
    table=(Table)tables.next();
    if (!isAccessibleTable(table)) {
      continue;
    }
    ti.setTable(table);
    tableCatalog=table.getCatalogName().name;
    tableSchema=table.getSchemaName().name;
    tableName=ti.getName();
    columnCount=table.getColumnCount();
    Type[] types=table.getColumnTypes();
    for (int i=0; i < columnCount; i++) {
      ColumnSchema column=table.getColumn(i);
      row=t.getEmptyRowData();
      row[itable_cat]=tableCatalog;
      row[itable_schem]=tableSchema;
      row[itable_name]=tableName;
      row[icolumn_name]=column.getName().name;
      row[idata_type]=types[i].getJDBCTypeCode();
      row[itype_name]=types[i].getNameString();
      row[icolumn_size]=types[i].getJDBCPrecision();
      row[ibuffer_length]=null;
      row[idecimal_digits]=types[i].getJDBCScale();
      row[inum_prec_radix]=ti.getColPrecRadix(i);
      row[inullable]=column.getNullability();
      row[iremark]=ti.getColRemarks(i);
      row[icolumn_def]=column.getDefaultSQL();
      row[isql_data_type]=types[i].getJDBCTypeCode();
      row[isql_datetime_sub]=ti.getColSqlDateTimeSub(i);
      row[ichar_octet_length]=ti.getColCharOctLen(i);
      row[iordinal_position]=ValuePool.getInt(i + 1);
      row[iis_nullable]=ti.getColIsNullable(i);
      row[iis_autoinc]=ti.getColIsIdentity(i);
      row[itype_sub]=ti.getColDataTypeSub(i);
      t.insertSys(store,row);
    }
  }
  return t;
}
