{
  super(type);
  nodes=new Expression[BINARY];
  nodes[LEFT]=left;
  nodes[RIGHT]=right;
switch (opType) {
case OpTypes.ADD:
case OpTypes.SUBTRACT:
case OpTypes.MULTIPLY:
case OpTypes.DIVIDE:
case OpTypes.CONCAT:
    return;
default :
  throw Error.runtimeError(ErrorCode.U_S0500,"Expression");
}
}
