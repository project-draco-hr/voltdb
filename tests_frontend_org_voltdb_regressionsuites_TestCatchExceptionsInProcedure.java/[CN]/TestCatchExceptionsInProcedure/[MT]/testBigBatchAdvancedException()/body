{
  System.out.println("test testBigBatchAdvancedException...");
  Client client=getClient();
  String sql;
  bigBatchAdvancedChecker(client,0,1,1,150,1,1,1,0,new double[]{0.1,500.1},2);
  bigBatchAdvancedChecker(client,0,1,1,250,1,1,1,0,new double[]{0.1,500.1},2);
  bigBatchAdvancedChecker(client,0,0,1,150,0,0,0,0,new double[]{},0);
  client.callProcedure("SPBigBatchAdvancedOnPartitionTable",0,1,1,150,0,0,0,0);
  try {
    client.callProcedure("SPBigBatchAdvancedOnPartitionTable",0,0,0,0,0,0,0,1);
    fail();
  }
 catch (  Exception e) {
    assertTrue(e.getMessage().contains("CONSTRAINT VIOLATION"));
    assertTrue(e.getMessage().contains("700.2"));
  }
  sql="select distinct ratio from P1 order by 1;";
  validateTableColumnOfScalarFloat(client,sql,new double[]{0.1});
  client.callProcedure("@AdHoc","truncate table P1");
  try {
    client.callProcedure("SPCatchRethrowOnPartitionTable",0,1);
    fail();
  }
 catch (  Exception e) {
    assertTrue(e.getMessage().contains("User's SP constraint error message"));
  }
  sql="select distinct ratio from P1 order by 1;";
  validateTableColumnOfScalarFloat(client,sql,new double[]{});
  try {
    client.callProcedure("SPCatchRethrowOnPartitionTable",0,0);
  }
 catch (  Exception e) {
    assertTrue(e.getMessage().contains("User's SP constraint error message"));
  }
  sql="select distinct ratio from P1 order by 1;";
  validateTableColumnOfScalarFloat(client,sql,new double[]{});
  try {
    client.callProcedure("MPCatchRethrowOnPartitionTable",1);
    fail();
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    assertTrue(e.getMessage().contains("User's MP constraint error message"));
  }
  sql="select distinct ratio from P1 order by 1;";
  validateTableColumnOfScalarFloat(client,sql,new double[]{});
  try {
    client.callProcedure("MPCatchRethrowOnPartitionTable",0);
  }
 catch (  Exception e) {
    assertTrue(e.getMessage().contains("User's MP constraint error message"));
  }
  sql="select distinct ratio from P1 order by 1;";
  validateTableColumnOfScalarFloat(client,sql,new double[]{});
}
