{
  CallableStatement cs=conn.prepareCall("{call InsertAllTypes(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)}");
  cs.setInt(1,0);
  cs.setNull(2,Types.NULL);
  cs.setNull(3,Types.NULL);
  cs.setNull(4,Types.NULL);
  cs.setNull(5,Types.NULL);
  cs.setNull(6,Types.NULL);
  cs.setNull(7,Types.NULL);
  cs.setNull(8,Types.NULL);
  cs.setNull(9,Types.NULL);
  cs.setNull(10,Types.NULL);
  cs.execute();
  cs=conn.prepareCall("{call InsertAllTypes(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)}");
  cs.setInt(1,1);
  cs.setNull(2,Types.TINYINT);
  cs.setNull(3,Types.SMALLINT);
  cs.setNull(4,Types.INTEGER);
  cs.setNull(5,Types.BIGINT);
  cs.setNull(6,Types.DOUBLE);
  cs.setNull(7,Types.VARCHAR);
  cs.setNull(8,Types.VARBINARY);
  cs.setNull(9,Types.TIMESTAMP);
  cs.setNull(10,Types.DECIMAL);
  cs.execute();
  cs=conn.prepareCall("{call SelectC}");
  ResultSet results=cs.executeQuery();
  results.next();
  byte a2=results.getByte(2);
  short a3=results.getShort(3);
  int a4=results.getInt(4);
  long a5=results.getLong(5);
  double a6=results.getDouble(6);
  String a7=results.getString(7);
  byte[] a8=results.getBytes(8);
  Timestamp a9=results.getTimestamp(9);
  BigDecimal a10=results.getBigDecimal(10);
  results.next();
  assertEquals(results.getByte(2),a2);
  assertEquals(results.getShort(3),a3);
  assertEquals(results.getInt(4),a4);
  assertEquals(results.getLong(5),a5);
  assertEquals(results.getDouble(6),a6,0);
  assertEquals(results.getString(7),a7);
  assertEquals(results.getBytes(8),a8);
  assertEquals(results.getTimestamp(9),a9);
  assertEquals(results.getBigDecimal(10),a10);
}
