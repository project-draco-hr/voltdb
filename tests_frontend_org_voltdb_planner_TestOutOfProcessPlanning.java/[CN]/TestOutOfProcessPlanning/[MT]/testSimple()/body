{
  TPCCProjectBuilder builder=new TPCCProjectBuilder();
  builder.addAllDefaults();
  builder.compile("tpcc-oop.jar");
  String serializedCatalog=CatalogUtil.loadCatalogFromJar("tpcc-oop.jar",null);
  m_pt=PlannerTool.createPlannerToolProcess(serializedCatalog);
  PlannerKillerThread ptKiller=new PlannerKillerThread(2000);
  ptKiller.m_serializedCatalog=serializedCatalog;
  ptKiller.start();
  PlannerTool.Result result=null;
  result=m_pt.planSql("select * from warehouse;");
  System.out.println(result);
  result=m_pt.planSql("select * from WAREHOUSE, DISTRICT, CUSTOMER, CUSTOMER_NAME, HISTORY, STOCK, ORDERS, NEW_ORDER, ORDER_LINE where " + "WAREHOUSE.W_ID = DISTRICT.D_W_ID and " + "WAREHOUSE.W_ID = CUSTOMER.C_W_ID and "+ "WAREHOUSE.W_ID = CUSTOMER_NAME.C_W_ID and "+ "WAREHOUSE.W_ID = HISTORY.H_W_ID and "+ "WAREHOUSE.W_ID = STOCK.S_W_ID and "+ "WAREHOUSE.W_ID = ORDERS.O_W_ID and "+ "WAREHOUSE.W_ID = NEW_ORDER.NO_W_ID and "+ "WAREHOUSE.W_ID = ORDER_LINE.OL_W_ID and "+ "WAREHOUSE.W_ID = 0");
  System.out.println(result);
  result=m_pt.planSql("ryan likes the yankees");
  System.out.println(result);
  try {
    Thread.sleep(500);
  }
 catch (  InterruptedException e1) {
    e1.printStackTrace();
  }
  result=m_pt.planSql("ryan likes the yankees");
  System.out.println(result);
  result=m_pt.planSql("select * from warehouse;");
  System.out.println(result);
  final File jar=new File("tpcc-oop.jar");
  jar.delete();
  ptKiller.m_shouldStop.set(true);
  try {
    ptKiller.join();
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
}
