{
  assertEquals(0,columnDescrs.length % 2);
  List<AbstractExpression> exprs=orderByPlanNode.getSortExpressions();
  List<SortDirectionType> dirs=orderByPlanNode.getSortDirections();
  assertEquals(exprs.size(),dirs.size());
  assertEquals(columnDescrs.length / 2,exprs.size());
  for (int idx=0; idx < exprs.size(); idx+=1) {
    AbstractExpression expr=exprs.get(idx);
    SortDirectionType dir=dirs.get(idx);
    assertTrue(expr instanceof TupleValueExpression);
    TupleValueExpression tve=(TupleValueExpression)expr;
    String expectedNames[]=((String)columnDescrs[2 * idx]).split("\\.");
    String tableName=null;
    String columnName=null;
    if (expectedNames.length == 2) {
      tableName=expectedNames[0].toUpperCase();
      columnName=expectedNames[1].toUpperCase();
    }
 else {
      columnName=expectedNames[0].toUpperCase();
    }
    assertEquals(columnName,tve.getColumnName().toUpperCase());
    if (tableName != null) {
      assertEquals(tableName,tve.getTableName().toUpperCase());
    }
    assertEquals(columnDescrs[2 * idx + 1],dir);
  }
}
