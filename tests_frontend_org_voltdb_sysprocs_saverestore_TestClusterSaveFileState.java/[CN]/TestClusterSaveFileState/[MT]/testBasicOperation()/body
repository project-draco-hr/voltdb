{
  for (int i=0; i < NUMBER_OF_HOSTS; ++i) {
    addReplicatedTableToTestData(i,REPL_TABLE_NAME_1);
    addReplicatedTableToTestData(i,REPL_TABLE_NAME_2);
    for (int ii=0; ii < NUMBER_OF_SITES_PER_HOST; ++ii) {
      addPartitionToTestData(i,PART_TABLE_NAME_1,i,ii + (NUMBER_OF_SITES_PER_HOST * i),NUMBER_OF_SITES);
      addPartitionToTestData(i,PART_TABLE_NAME_2,i,ii + (NUMBER_OF_SITES_PER_HOST * i),NUMBER_OF_SITES);
    }
  }
  ClusterSaveFileState state=null;
  try {
    state=new ClusterSaveFileState(m_siteInput,m_allowExport);
  }
 catch (  IOException e) {
    e.printStackTrace();
    assertTrue(false);
  }
  Set<String> table_names=state.getSavedTableNames();
  assertTrue(table_names.contains(REPL_TABLE_NAME_1));
  assertTrue(table_names.contains(REPL_TABLE_NAME_2));
  assertTrue(table_names.contains(PART_TABLE_NAME_1));
  assertTrue(table_names.contains(PART_TABLE_NAME_2));
  checkReplicatedTableState(REPL_TABLE_NAME_1,state);
  checkReplicatedTableState(REPL_TABLE_NAME_2,state);
  checkPartitionedTableState(PART_TABLE_NAME_1,state);
  checkPartitionedTableState(PART_TABLE_NAME_2,state);
}
