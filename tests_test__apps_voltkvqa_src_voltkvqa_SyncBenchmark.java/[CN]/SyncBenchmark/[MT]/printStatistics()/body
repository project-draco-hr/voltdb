{
  ClientStatsContext statscontext=periodicStatsContext.fetchAndResetBaseline();
  long afWrites=0;
  long afReads=0;
  long rrWrites=0;
  long rrReads=0;
  Map<Integer,ClientAffinityStats> affinityStats=statscontext.getAffinityStats();
  for (  Entry<Integer,ClientAffinityStats> e : affinityStats.entrySet()) {
    afWrites+=e.getValue().getAffinityWrites();
    afReads+=e.getValue().getAffinityReads();
    rrWrites+=e.getValue().getRrWrites();
    rrReads+=e.getValue().getRrReads();
  }
  ClientStats stats=statscontext.getStats();
  long time=Math.round((stats.getEndTimestamp() - benchmarkStartTS) / 1000.0);
  System.out.printf("%02d:%02d:%02d ",time / 3600,(time / 60) % 60,time % 60);
  System.out.printf("Throughput %d/s, ",stats.getTxnThroughput());
  System.out.printf("Aborts/Failures %d/%d, ",stats.getInvocationAborts(),stats.getInvocationErrors());
  System.out.printf("Avg/95%% Latency %.2f/%dms, ",stats.getAverageLatency(),stats.kPercentileLatency(0.95));
  System.out.printf("%d AW, %d AR, %d RRW, %d RRR\n",afWrites,afReads,rrWrites,rrReads);
}
