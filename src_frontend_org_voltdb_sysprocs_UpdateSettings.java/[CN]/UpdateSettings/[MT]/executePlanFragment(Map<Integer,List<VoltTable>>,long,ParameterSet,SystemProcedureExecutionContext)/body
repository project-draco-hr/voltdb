{
  if (fragmentId == PF_updateSettingsBarrier) {
    DependencyPair success=new DependencyPair(DEP_updateSettingsBarrier,new VoltTable(new ColumnInfo[]{new ColumnInfo("UNUSED",VoltType.BIGINT)}));
    if (log.isInfoEnabled()) {
      log.info("Site " + CoreUtils.hsIdToString(m_site.getCorrespondingSiteId()) + " reached settings update barrier.");
    }
    return success;
  }
 else   if (fragmentId == PF_updateSettingsBarrierAggregate) {
    Object[] paramarr=params.toArray();
    byte[] settingsBytes=(byte[])paramarr[0];
    int version=((Integer)paramarr[1]).intValue();
    ZooKeeper zk=getHostMessenger().getZK();
    Stat stat=null;
    try {
      stat=zk.setData(VoltZK.cluster_settings,settingsBytes,version);
    }
 catch (    KeeperException|InterruptedException e) {
      String msg="Failed to update cluster settings";
      log.error(msg,e);
      throw new SettingsException(msg,e);
    }
    log.info("Saved new cluster settings state");
    return new DependencyPair(DEP_updateSettingsBarrierAggregate,getVersionResponse(stat.getVersion()));
  }
 else   if (fragmentId == PF_updateSettings) {
    Object[] paramarr=params.toArray();
    byte[] settingsBytes=(byte[])paramarr[0];
    int version=((Integer)paramarr[1]).intValue();
    ClusterSettings settings=ClusterSettings.create(settingsBytes);
    Pair<CatalogContext,CatalogSpecificPlanner> ctgdef=getVoltDB().settingsUpdate(settings,version);
    context.updateSettings(ctgdef.getFirst(),ctgdef.getSecond());
    VoltTable result=new VoltTable(VoltSystemProcedure.STATUS_SCHEMA);
    result.addRow(VoltSystemProcedure.STATUS_OK);
    return new DependencyPair(DEP_updateSettings,result);
  }
 else   if (fragmentId == PF_updateSettingsAggregate) {
    VoltTable result=VoltTableUtil.unionTables(dependencies.get(DEP_updateSettings));
    return new DependencyPair(DEP_updateSettingsAggregate,result);
  }
 else {
    VoltDB.crashLocalVoltDB("Received unrecognized plan fragment id " + fragmentId + " in UpdateSettings",false,null);
  }
  throw new RuntimeException("Should not reach this code");
}
