{
synchronized (m_availableBufferStock) {
    ArrayDeque<ByteBuffer> buffers=m_availableBufferStock.get(capacity);
    ByteBuffer retval=null;
    if (buffers != null) {
      retval=buffers.poll();
    }
    if (retval != null) {
      retval.clear();
    }
 else {
      bytesAllocatedGlobally.getAndAdd(capacity);
      retval=ByteBuffer.allocateDirect(capacity);
    }
    return new BBContainer(retval,0){
      @Override public void discard(){
synchronized (m_availableBufferStock) {
          ArrayDeque<ByteBuffer> buffers=m_availableBufferStock.get(b.capacity());
          if (buffers == null) {
            buffers=new ArrayDeque<ByteBuffer>();
            m_availableBufferStock.put(b.capacity(),buffers);
          }
          buffers.offer(b);
        }
      }
    }
;
  }
}
