{
  VoltXMLElement column=new VoltXMLElement("column");
  column.attributes.put("name",columnName.name);
  String typestring=Types.getTypeName(dataType.typeCode);
  column.attributes.put("valuetype",typestring);
  column.attributes.put("nullable",String.valueOf(isNullable()));
  column.attributes.put("size",String.valueOf(dataType.precision));
  if (typestring.compareTo("VARCHAR") == 0) {
    if (dataType.precision > 1048576) {
      String msg="VARCHAR column size for column ";
      msg+=getTableNameString() + "." + columnName.name;
      msg+=" is > 1048576 char maximum.";
      throw new org.hsqldb_voltpatches.HSQLInterface.HSQLParseException(msg);
    }
    assert(dataType instanceof CharacterType);
    CharacterType ct=(CharacterType)dataType;
    column.attributes.put("bytes",String.valueOf(ct.inBytes));
  }
  Expression exp=getDefaultExpression();
  if (exp != null) {
    if (exp.valueData != null || (exp instanceof FunctionSQL && ((FunctionSQL)exp).isValueFunction)) {
      exp.dataType=dataType;
      VoltXMLElement defaultElem=new VoltXMLElement("default");
      column.children.add(defaultElem);
      defaultElem.children.add(exp.voltGetXML(session));
    }
  }
  return column;
}
