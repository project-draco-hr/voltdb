{
  drainRecencyQueue();
  ReferenceEntry<K,V> e;
  while ((e=writeQueue.peek()) != null && map.isExpired(e,now)) {
    if (!removeEntry(e,e.getHash(),RemovalCause.EXPIRED)) {
      throw new AssertionError();
    }
  }
  while ((e=accessQueue.peek()) != null && map.isExpired(e,now)) {
    if (!removeEntry(e,e.getHash(),RemovalCause.EXPIRED)) {
      throw new AssertionError();
    }
  }
}
