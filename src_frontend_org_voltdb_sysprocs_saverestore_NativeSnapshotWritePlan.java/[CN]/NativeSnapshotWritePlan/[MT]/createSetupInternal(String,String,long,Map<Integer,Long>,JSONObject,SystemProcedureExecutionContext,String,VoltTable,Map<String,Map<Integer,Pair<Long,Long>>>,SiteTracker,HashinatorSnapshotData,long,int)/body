{
  assert(SnapshotSiteProcessor.ExecutionSitesCurrentlySnapshotting.isEmpty());
  if (TheHashinator.getConfiguredHashinatorType() == HashinatorType.ELASTIC && hashinatorData == null) {
    throw new RuntimeException("No hashinator data provided for elastic hashinator type.");
  }
  NativeSnapshotWritePlan.createFileBasedCompletionTasks(file_path,file_nonce,txnId,partitionTransactionIds,context,exportSequenceNumbers,hashinatorData,timestamp,newPartitionCount);
  final List<Table> tables=SnapshotUtil.getTablesToSave(context.getDatabase());
  final AtomicInteger numTables=new AtomicInteger(tables.size());
  final SnapshotRegistry.Snapshot snapshotRecord=SnapshotRegistry.startSnapshot(txnId,context.getHostId(),file_path,file_nonce,SnapshotFormat.NATIVE,tables.toArray(new Table[0]));
  SnapshotDataTarget sdt=null;
  boolean noTargetsCreated=true;
  final ArrayList<SnapshotTableTask> partitionedSnapshotTasks=new ArrayList<SnapshotTableTask>();
  final ArrayList<SnapshotTableTask> replicatedSnapshotTasks=new ArrayList<SnapshotTableTask>();
  for (  final Table table : tables) {
    try {
      File saveFilePath=null;
      saveFilePath=SnapshotUtil.constructFileForTable(table,file_path,file_nonce,SnapshotFormat.NATIVE,context.getHostId());
      sdt=constructSnapshotDataTargetForTable(context,saveFilePath,table,context.getHostId(),context.getNumberOfPartitions(),txnId,timestamp,tracker.getPartitionsForHost(context.getHostId()));
      if (sdt == null) {
        throw new IOException("Unable to create snapshot target");
      }
      m_targets.add(sdt);
      final Runnable onClose=new TargetStatsClosure(sdt,table.getTypeName(),numTables,snapshotRecord);
      sdt.setOnCloseHandler(onClose);
      final SnapshotTableTask task=new SnapshotTableTask(table,sdt,new SnapshotDataFilter[0],null,false);
      SNAP_LOG.debug("ADDING TASK: " + task);
      if (table.getIsreplicated()) {
        replicatedSnapshotTasks.add(task);
      }
 else {
        partitionedSnapshotTasks.add(task);
      }
      noTargetsCreated=false;
      result.addRow(context.getHostId(),hostname,table.getTypeName(),"SUCCESS","");
    }
 catch (    IOException ex) {
      handleTargetCreationError(sdt,context,file_nonce,hostname,table.getTypeName(),ex,result);
    }
  }
  if (noTargetsCreated) {
    SnapshotRegistry.discardSnapshot(snapshotRecord);
  }
  placePartitionedTasks(partitionedSnapshotTasks,tracker.getSitesForHost(context.getHostId()));
  placeReplicatedTasks(replicatedSnapshotTasks,tracker.getSitesForHost(context.getHostId()));
  return noTargetsCreated;
}
