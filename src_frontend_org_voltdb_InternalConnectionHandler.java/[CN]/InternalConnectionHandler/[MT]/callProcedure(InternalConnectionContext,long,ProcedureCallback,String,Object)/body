{
  Procedure catProc=VoltDB.instance().getClientInterface().getProcedureFromName(proc,VoltDB.instance().getCatalogContext());
  if (catProc == null) {
    String fmt="Cannot invoke procedure %s from streaming interface %s. Procedure not found.";
    m_logger.rateLimitedLog(SUPPRESS_INTERVAL,Level.ERROR,null,fmt,proc,caller);
    m_failedCount.incrementAndGet();
    return false;
  }
  boolean b=m_adapter.hasBackPressure();
  caller.setBackPressure(b);
  if (b) {
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException ex) {
    }
  }
  StoredProcedureInvocation task=new StoredProcedureInvocation();
  task.setProcName(proc);
  task.setParams(fieldList);
  try {
    task=MiscUtils.roundTripForCL(task);
    task.setClientHandle(m_adapter.connectionId());
  }
 catch (  Exception e) {
    String fmt="Cannot invoke procedure %s from streaming interface %s. failed to create task.";
    m_logger.rateLimitedLog(SUPPRESS_INTERVAL,Level.ERROR,null,fmt,proc,caller);
    m_failedCount.incrementAndGet();
    return false;
  }
  int partition=-1;
  try {
    partition=getPartitionForProcedure(catProc,task);
  }
 catch (  Exception e) {
    String fmt="Can not invoke procedure %s from streaming interface %s. Partition not found.";
    m_logger.rateLimitedLog(SUPPRESS_INTERVAL,Level.ERROR,e,fmt,proc,caller);
    m_failedCount.incrementAndGet();
    return false;
  }
  if (!m_adapter.createTransaction(caller,proc,catProc,procCallback,task,partition,System.nanoTime())) {
    m_failedCount.incrementAndGet();
    return false;
  }
  m_submitSuccessCount.incrementAndGet();
  return true;
}
