{
  Procedure catProc=InvocationDispatcher.getProcedureFromName(procName,getCatalogContext());
  if (catProc == null) {
    String fmt="Cannot invoke procedure %s. Procedure not found.";
    m_logger.rateLimitedLog(SUPPRESS_INTERVAL,Level.ERROR,null,fmt,procName);
    m_failedCount.incrementAndGet();
    return false;
  }
  boolean b=hasBackPressure();
  if (b) {
    applyBackPressure();
  }
  StoredProcedureInvocation task=new StoredProcedureInvocation();
  task.setProcName(procName);
  task.setParams(args);
  try {
    task=MiscUtils.roundTripForCL(task);
    task.setClientHandle(m_adapter.connectionId());
  }
 catch (  Exception e) {
    String fmt="Cannot invoke procedure %s. failed to create task.";
    m_logger.rateLimitedLog(SUPPRESS_INTERVAL,Level.ERROR,null,fmt,procName);
    m_failedCount.incrementAndGet();
    return false;
  }
  if (timeout != BatchTimeoutOverrideType.NO_TIMEOUT) {
    task.setBatchTimeout(timeout);
  }
  int partition=-1;
  try {
    partition=InvocationDispatcher.getPartitionForProcedure(catProc,task);
  }
 catch (  Exception e) {
    String fmt="Can not invoke procedure %s. Partition not found.";
    m_logger.rateLimitedLog(SUPPRESS_INTERVAL,Level.ERROR,e,fmt,procName);
    m_failedCount.incrementAndGet();
    return false;
  }
  InternalAdapterTaskAttributes kattrs=new InternalAdapterTaskAttributes(DEFAULT_INTERNAL_ADAPTER_NAME,isAdmin,m_adapter.connectionId());
  if (!m_adapter.createTransaction(kattrs,procName,catProc,cb,null,task,user,partition,System.nanoTime())) {
    m_failedCount.incrementAndGet();
    return false;
  }
  m_submitSuccessCount.incrementAndGet();
  return true;
}
