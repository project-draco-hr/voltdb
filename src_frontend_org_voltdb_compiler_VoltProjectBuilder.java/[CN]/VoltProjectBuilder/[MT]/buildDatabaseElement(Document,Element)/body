{
  final Element groups=doc.createElement("groups");
  database.appendChild(groups);
  if (m_groups.isEmpty()) {
    final Element group=doc.createElement("group");
    group.setAttribute("name","default");
    group.setAttribute("sysproc","true");
    group.setAttribute("adhoc","true");
    groups.appendChild(group);
  }
 else {
    for (    final GroupInfo info : m_groups) {
      final Element group=doc.createElement("group");
      group.setAttribute("name",info.name);
      group.setAttribute("sysproc",info.sysproc ? "true" : "false");
      group.setAttribute("adhoc",info.adhoc ? "true" : "false");
      groups.appendChild(group);
    }
  }
  final Element schemas=doc.createElement("schemas");
  database.appendChild(schemas);
  for (  final String schemaPath : m_schemas) {
    final Element schema=doc.createElement("schema");
    schema.setAttribute("path",schemaPath);
    schemas.appendChild(schema);
  }
  final Element procedures=doc.createElement("procedures");
  database.appendChild(procedures);
  for (  final ProcedureInfo procedure : m_procedures) {
    if (procedure.cls == null)     continue;
    assert(procedure.sql == null);
    final Element proc=doc.createElement("procedure");
    proc.setAttribute("class",procedure.cls.getName());
    if (procedure.groups.length > 0) {
      final StringBuilder groupattr=new StringBuilder();
      for (      final String group : procedure.groups) {
        if (groupattr.length() > 0)         groupattr.append(",");
        groupattr.append(group);
      }
      proc.setAttribute("groups",groupattr.toString());
    }
    procedures.appendChild(proc);
  }
  for (  final ProcedureInfo procedure : m_procedures) {
    if (procedure.sql == null)     continue;
    assert(procedure.cls == null);
    final Element proc=doc.createElement("procedure");
    proc.setAttribute("class",procedure.name);
    if (procedure.partitionInfo != null)     ;
    proc.setAttribute("partitioninfo",procedure.partitionInfo);
    if (procedure.groups.length > 0) {
      final StringBuilder groupattr=new StringBuilder();
      for (      final String group : procedure.groups) {
        if (groupattr.length() > 0)         groupattr.append(",");
        groupattr.append(group);
      }
      proc.setAttribute("groups",groupattr.toString());
    }
    final Element sql=doc.createElement("sql");
    proc.appendChild(sql);
    final Text sqltext=doc.createTextNode(procedure.sql);
    sql.appendChild(sqltext);
    procedures.appendChild(proc);
  }
  if (m_partitionInfos.size() > 0) {
    final Element partitions=doc.createElement("partitions");
    database.appendChild(partitions);
    for (    final Entry<String,String> partitionInfo : m_partitionInfos.entrySet()) {
      final Element table=doc.createElement("partition");
      table.setAttribute("table",partitionInfo.getKey());
      table.setAttribute("column",partitionInfo.getValue());
      partitions.appendChild(table);
    }
  }
  final Element classdeps=doc.createElement("classdependencies");
  database.appendChild(classdeps);
  for (  final Class<?> supplemental : m_supplementals) {
    final Element supp=doc.createElement("classdependency");
    supp.setAttribute("class",supplemental.getName());
    classdeps.appendChild(supp);
  }
  if (m_elloader != null) {
    final Element exports=doc.createElement("exports");
    database.appendChild(exports);
    final Element conn=doc.createElement("connector");
    conn.setAttribute("class",m_elloader);
    conn.setAttribute("enabled",m_elenabled ? "true" : "false");
    String groupsattr="";
    if (m_elAuthGroups != null) {
      for (      String s : m_elAuthGroups) {
        if (groupsattr.isEmpty()) {
          groupsattr+=s;
        }
 else {
          groupsattr+="," + s;
        }
      }
      conn.setAttribute("groups",groupsattr);
    }
    exports.appendChild(conn);
    if (m_exportTables.size() > 0) {
      final Element tables=doc.createElement("tables");
      conn.appendChild(tables);
      for (      ExportTableInfo info : m_exportTables) {
        final Element table=doc.createElement("table");
        table.setAttribute("name",info.m_tablename);
        table.setAttribute("exportonly",info.m_export_only ? "true" : "false");
        tables.appendChild(table);
      }
    }
  }
  if (m_snapshotPath != null) {
    final Element snapshot=doc.createElement("snapshot");
    snapshot.setAttribute("frequency",m_snapshotFrequency);
    snapshot.setAttribute("path",m_snapshotPath);
    snapshot.setAttribute("prefix",m_snapshotPrefix);
    snapshot.setAttribute("retain",Integer.toString(m_snapshotRetain));
    database.appendChild(snapshot);
  }
}
