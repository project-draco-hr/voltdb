{
  StringBuilder sb=new StringBuilder();
  CatalogItemSizeList<CatalogItemSizeRollup> rollups=new CatalogItemSizeList<CatalogItemSizeRollup>();
  rollups.add(dbSizes.tableRollup());
  rollups.add(dbSizes.viewRollup());
  rollups.add(dbSizes.indexRollup());
  CatalogItemSizeRollup rollupRollup=rollups.rollup(1);
  sb.append("<table class='table size-summary-table'>\n");
  generateSizeRollupSummary("tables whose row data ","table",sb,rollups.get(0));
  generateSizeRollupSummary("materialized views whose row data ","view",sb,rollups.get(1));
  generateSizeRollupSummary("indexes whose key data and overhead ","index",sb,rollups.get(2));
  sb.append("<tr><td colspan='6'>&nbsp;</td></tr>\n");
  sb.append("<tr>");
  if (rollupRollup.widthMin == rollupRollup.widthMax) {
    sb.append("<td colspan='2'><b>Total user data is expected to use about</b>&nbsp;</td>");
    sb.append(String.format("<td id='s-size-summary-total-min' class='right-cell calculated-cell'>%d</td>",rollupRollup.widthMin));
    sb.append("<td colspan='3'>&nbsp;of memory.</td>");
  }
 else {
    sb.append("<td colspan='2'><b>Total user data is expected to use between</b>&nbsp;</td>");
    sb.append(String.format("<td id='s-size-summary-total-min' class='right-cell calculated-cell'>%d</td>",rollupRollup.widthMin));
    sb.append("<td>&nbsp;<b>and</b>&nbsp;</td>");
    sb.append(String.format("<td id='s-size-summary-total-max' class='right-cell calculated-cell'>%d</td>",rollupRollup.widthMax));
    sb.append("<td>&nbsp<b>of memory.</b></td>");
  }
  sb.append("</tr>\n");
  sb.append("</table>\n");
  return sb.toString();
}
