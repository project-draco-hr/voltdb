{
  StringBuilder sb=new StringBuilder();
  sb.append("        <tr class='primaryrow2'>");
  String anchor=(procedure.getTypeName() + "-" + statement.getTypeName()).toLowerCase();
  sb.append("<td style='white-space: nowrap'><i id='p-" + anchor + "--icon' class='icon-chevron-right'></i> <a href='#' id='p-");
  sb.append(anchor).append("' class='togglex'>");
  sb.append(statement.getTypeName());
  sb.append("</a></td>");
  sb.append("<td><tt>");
  sb.append(escapeHtml4(statement.getSqltext()));
  sb.append("</td></tt>");
  sb.append("<td>");
  List<StmtParameter> params=CatalogUtil.getSortedCatalogItems(statement.getParameters(),"index");
  List<String> paramTypes=new ArrayList<String>();
  for (  StmtParameter param : params) {
    paramTypes.add(VoltType.get((byte)param.getJavatype()).name());
  }
  if (paramTypes.size() == 0) {
    sb.append("<i>None</i>");
  }
  sb.append(StringUtils.join(paramTypes,", "));
  sb.append("</td>");
  sb.append("<td>");
  if (statement.getReadonly()) {
    tag(sb,"success","Read");
  }
 else {
    tag(sb,"warning","Write");
  }
  sb.append("</td>");
  sb.append("<td>");
  if (!statement.getIscontentdeterministic() || !statement.getIsorderdeterministic()) {
    tag(sb,"inverse","Determinism");
  }
  if (statement.getSeqscancount() > 0) {
    tag(sb,"important","Scans");
  }
  sb.append("</td>");
  sb.append("</tr>\n");
  sb.append("<tr class='dropdown2'><td colspan='5' id='p-" + procedure.getTypeName().toLowerCase() + "-"+ statement.getTypeName().toLowerCase()+ "--dropdown'>\n");
  sb.append("<div class='well well-small'><h4>Explain Plan:</h4>\n");
  StatementAnnotation annotation=(StatementAnnotation)statement.getAnnotation();
  if (annotation != null) {
    String plan=annotation.explainPlan;
    plan=plan.replace("\n","<br/>");
    plan=plan.replace(" ","&nbsp;");
    for (    Table t : annotation.tablesRead) {
      String name=t.getTypeName().toUpperCase();
      String link="\"<a href='#s-" + t.getTypeName() + "'>"+ name+ "</a>\"";
      plan=plan.replace("\"" + name + "\"",link);
    }
    for (    Table t : annotation.tablesUpdated) {
      String name=t.getTypeName().toUpperCase();
      String link="\"<a href='#s-" + t.getTypeName() + "'>"+ name+ "</a>\"";
      plan=plan.replace("\"" + name + "\"",link);
    }
    for (    Index i : annotation.indexesUsed) {
      Table t=(Table)i.getParent();
      String name=i.getTypeName().toUpperCase();
      String link="\"<a href='#s-" + t.getTypeName() + "-"+ i.getTypeName()+ "'>"+ name+ "</a>\"";
      plan=plan.replace("\"" + name + "\"",link);
    }
    sb.append("<tt>").append(plan).append("</tt>");
  }
 else {
    sb.append("<i>No SQL explain plan found.</i>\n");
  }
  sb.append("</div>\n");
  sb.append("</td></tr>\n");
  return sb.toString();
}
