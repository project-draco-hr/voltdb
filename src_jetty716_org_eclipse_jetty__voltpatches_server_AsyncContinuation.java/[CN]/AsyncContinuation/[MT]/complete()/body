{
  boolean dispatch=false;
synchronized (this) {
switch (_state) {
case __DISPATCHED:
case __REDISPATCHED:
      throw new IllegalStateException(this.getStatusString());
case __ASYNCSTARTED:
    _state=__COMPLETING;
  return;
case __ASYNCWAIT:
_state=__COMPLETING;
dispatch=!_expired;
break;
default :
throw new IllegalStateException(this.getStatusString());
}
}
if (dispatch) {
cancelTimeout();
scheduleDispatch();
}
}
