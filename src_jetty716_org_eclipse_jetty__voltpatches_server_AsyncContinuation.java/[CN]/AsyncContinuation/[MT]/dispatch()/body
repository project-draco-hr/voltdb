{
  boolean dispatch=false;
synchronized (this) {
switch (_state) {
case __ASYNCSTARTED:
      _state=__REDISPATCHING;
    _resumed=true;
  return;
case __ASYNCWAIT:
dispatch=!_expired;
_state=__REDISPATCH;
_resumed=true;
break;
case __REDISPATCH:
return;
default :
throw new IllegalStateException(this.getStatusString());
}
}
if (dispatch) {
cancelTimeout();
scheduleDispatch();
}
}
