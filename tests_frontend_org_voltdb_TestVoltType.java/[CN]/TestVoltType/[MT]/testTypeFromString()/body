{
  assertEquals(VoltType.TINYINT,VoltType.typeFromString("TINYINT"));
  assertEquals(VoltType.SMALLINT,VoltType.typeFromString("SMALLINT"));
  assertEquals(VoltType.INTEGER,VoltType.typeFromString("INTEGER"));
  assertEquals(VoltType.BIGINT,VoltType.typeFromString("BIGINT"));
  assertEquals(VoltType.FLOAT,VoltType.typeFromString("FLOAT"));
  assertEquals(VoltType.FLOAT,VoltType.typeFromString("DOUBLE"));
  assertEquals(VoltType.TIMESTAMP,VoltType.typeFromString("TIMESTAMP"));
  assertEquals(VoltType.STRING,VoltType.typeFromString("STRING"));
  assertEquals(VoltType.VOLTTABLE,VoltType.typeFromString("VOLTTABLE"));
  assertEquals(VoltType.STRING,VoltType.typeFromString("VARCHAR"));
  assertEquals(VoltType.STRING,VoltType.typeFromString("CHAR"));
  assertEquals(VoltType.TIMESTAMP,VoltType.typeFromString("TIMESTAMP"));
  assertEquals(VoltType.DECIMAL,VoltType.typeFromString("DECIMAL"));
  boolean caught=false;
  try {
    VoltType.typeFromString("Muhahaha");
  }
 catch (  RuntimeException ex) {
    caught=true;
  }
  assertTrue(caught);
}
