{
  final FragmentResponseMessage currentFragResponse=new FragmentResponseMessage(m_task,m_initiator.getHSId());
  currentFragResponse.setStatus(FragmentResponseMessage.SUCCESS,null);
  for (int frag=0; frag < m_task.getFragmentCount(); frag++) {
    final long fragmentId=m_task.getFragmentId(frag);
    final int outputDepId=m_task.getOutputDepId(frag);
    ParameterSet params=null;
    final ByteBuffer paramData=m_task.getParameterDataForFragment(frag);
    if (paramData != null) {
      final FastDeserializer fds=new FastDeserializer(paramData);
      try {
        params=fds.readObject(ParameterSet.class);
      }
 catch (      final IOException e) {
        hostLog.l7dlog(Level.FATAL,LogKeys.host_ExecutionSite_FailedDeserializingParamsForFragmentTask.name(),e);
        VoltDB.crashLocalVoltDB(e.getMessage(),true,e);
      }
    }
 else {
      params=new ParameterSet();
    }
    try {
    }
 catch (    final EEException e) {
      hostLog.l7dlog(Level.TRACE,LogKeys.host_ExecutionSite_ExceptionExecutingPF.name(),new Object[]{fragmentId},e);
      currentFragResponse.setStatus(FragmentResponseMessage.UNEXPECTED_ERROR,e);
      break;
    }
catch (    final SQLException e) {
      hostLog.l7dlog(Level.TRACE,LogKeys.host_ExecutionSite_ExceptionExecutingPF.name(),new Object[]{fragmentId},e);
      currentFragResponse.setStatus(FragmentResponseMessage.UNEXPECTED_ERROR,e);
      break;
    }
  }
  return currentFragResponse;
}
