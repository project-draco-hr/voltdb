def FuseGMockH(gmock_root, output_dir):
    'Scans folder gmock_root to generate gmock/gmock.h in output_dir.'
    output_file = file(os.path.join(output_dir, GMOCK_H_OUTPUT), 'w')
    processed_files = sets.Set()

    def ProcessFile(gmock_header_path):
        'Processes the given gmock header file.'
        if (gmock_header_path in processed_files):
            return
        processed_files.add(gmock_header_path)
        for line in file(os.path.join(gmock_root, gmock_header_path), 'r'):
            m = INCLUDE_GMOCK_FILE_REGEX.match(line)
            if m:
                ProcessFile(('include/' + m.group(1)))
            else:
                m = gtest.INCLUDE_GTEST_FILE_REGEX.match(line)
                if m:
                    if (not (gtest.GTEST_H_SEED in processed_files)):
                        processed_files.add(gtest.GTEST_H_SEED)
                        output_file.write(('#include "%s"\n' % (gtest.GTEST_H_OUTPUT,)))
                else:
                    output_file.write(line)
    ProcessFile(GMOCK_H_SEED)
    output_file.close()
