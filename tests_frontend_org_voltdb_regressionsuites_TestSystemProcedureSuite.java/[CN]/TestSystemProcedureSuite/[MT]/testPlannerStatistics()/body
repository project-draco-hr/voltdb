{
  Client client=getClient();
  VoltTable[] results=client.callProcedure("@Statistics","planner",1).getResults();
  assertEquals(1,results.length);
  for (  String query : new String[]{"select * from warehouse","select * from new_order","select * from item"}) {
    for (int i=0; i < 10; i++) {
      client.callProcedure("@AdHoc",query).getResults();
      assertEquals(1,results.length);
    }
  }
  results=client.callProcedure("@Statistics","planner",1).getResults();
  assertEquals(1,results.length);
  System.out.println("Test planner table: " + results[0].toString());
  VoltTable stats=results[0];
  List<Long> siteIds=new ArrayList<Long>();
  int cache1_level=0;
  int cache2_level=0;
  int cache1_hits=0;
  int cache2_hits=0;
  int cache_misses=0;
  long plan_time_min_min=Long.MAX_VALUE;
  long plan_time_max_max=Long.MIN_VALUE;
  long plan_time_avg_tot=0;
  int failures=0;
  while (stats.advanceRow()) {
    cache1_level+=(Integer)stats.get("CACHE1_LEVEL",VoltType.INTEGER);
    cache2_level+=(Integer)stats.get("CACHE2_LEVEL",VoltType.INTEGER);
    cache1_hits+=(Integer)stats.get("CACHE1_HITS",VoltType.INTEGER);
    cache2_hits+=(Integer)stats.get("CACHE2_HITS",VoltType.INTEGER);
    cache_misses+=(Integer)stats.get("CACHE_MISSES",VoltType.INTEGER);
    plan_time_min_min=Math.min(plan_time_min_min,(Long)stats.get("PLAN_TIME_MIN",VoltType.BIGINT));
    plan_time_max_max=Math.max(plan_time_max_max,(Long)stats.get("PLAN_TIME_MAX",VoltType.BIGINT));
    plan_time_avg_tot+=(Long)stats.get("PLAN_TIME_AVG",VoltType.BIGINT);
    failures+=(Integer)stats.get("FAILURES",VoltType.INTEGER);
    siteIds.add((Long)stats.get("SITE_ID",VoltType.BIGINT));
  }
  int globalPlanners=0;
  assertTrue("Failed siteIds count >= 2",siteIds.size() >= 2);
  for (  long siteId : siteIds) {
    if (siteId == -1) {
      globalPlanners++;
    }
  }
  assertTrue("Global planner sites not 1, value was: " + globalPlanners,globalPlanners == 1);
  assertTrue("Failed total CACHE1_LEVEL > 0, value was: " + cache1_level,cache1_level > 0);
  assertTrue("Failed total CACHE1_LEVEL < 1,000,000, value was: " + cache1_level,cache1_level < 1000000);
  assertTrue("Failed total CACHE2_LEVEL >= 0, value was: " + cache2_level,cache2_level >= 0);
  assertTrue("Failed total CACHE2_LEVEL < 1,000,000, value was: " + cache2_level,cache2_level < 1000000);
  assertTrue("Failed total CACHE1_HITS > 0, value was: " + cache1_hits,cache1_hits > 0);
  assertTrue("Failed total CACHE1_HITS < 1,000,000, value was: " + cache1_hits,cache1_hits < 1000000);
  assertTrue("Failed total CACHE2_HITS == 0, value was: " + cache2_hits,cache2_hits == 0);
  assertTrue("Failed total CACHE2_HITS < 1,000,000, value was: " + cache2_hits,cache2_hits < 1000000);
  assertTrue("Failed total CACHE_MISSES > 0, value was: " + cache_misses,cache_misses > 0);
  assertTrue("Failed total CACHE_MISSES < 1,000,000, value was: " + cache_misses,cache_misses < 1000000);
  assertTrue("Failed min PLAN_TIME_MIN > 0, value was: " + plan_time_min_min,plan_time_min_min > 0);
  assertTrue("Failed total PLAN_TIME_MIN < 100,000,000,000, value was: " + plan_time_min_min,plan_time_min_min < 100000000000L);
  assertTrue("Failed max PLAN_TIME_MAX > 0, value was: " + plan_time_max_max,plan_time_max_max > 0);
  assertTrue("Failed total PLAN_TIME_MAX < 100,000,000,000, value was: " + plan_time_max_max,plan_time_max_max < 100000000000L);
  assertTrue("Failed total PLAN_TIME_AVG > 0, value was: " + plan_time_avg_tot,plan_time_avg_tot > 0);
  assertTrue("Failed total FAILURES == 0, value was: " + failures,failures == 0);
}
