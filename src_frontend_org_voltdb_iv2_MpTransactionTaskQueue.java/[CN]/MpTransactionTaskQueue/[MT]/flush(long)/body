{
  int offered=0;
  if (m_backlog.isEmpty() || !m_backlog.getFirst().getTransactionState().isDone()) {
    return offered;
  }
  m_backlog.removeFirst();
  if (m_currentReads.containsKey(txnId)) {
    m_currentReads.remove(txnId);
  }
 else {
    assert(m_currentWrites.containsKey(txnId));
    m_currentWrites.remove(txnId);
    assert(m_currentWrites.isEmpty());
  }
  if (taskQueueOffer()) {
    ++offered;
  }
  return offered;
}
