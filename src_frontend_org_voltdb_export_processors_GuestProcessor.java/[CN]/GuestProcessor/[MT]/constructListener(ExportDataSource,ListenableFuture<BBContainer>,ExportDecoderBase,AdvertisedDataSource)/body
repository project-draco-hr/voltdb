{
  fut.addListener(new Runnable(){
    @Override public void run(){
      try {
        BBContainer cont=fut.get();
        if (cont == null) {
synchronized (ads) {
            edb.sourceNoLongerAdvertised(ads);
          }
          return;
        }
        try {
          final int startPosition=cont.b.position();
          int backoffQuantity=10 + (int)(10 * ThreadLocalRandom.current().nextDouble());
          while (true) {
            cont.b.position(startPosition);
            try {
              edb.onBlockStart();
              cont.b.order(ByteOrder.LITTLE_ENDIAN);
              while (cont.b.hasRemaining()) {
                int length=cont.b.getInt();
                byte[] rowdata=new byte[length];
                cont.b.get(rowdata,0,length);
                edb.processRow(length,rowdata);
              }
              edb.onBlockCompletion();
              break;
            }
 catch (            RestartBlockException e) {
              if (e.requestBackoff) {
                Thread.sleep(backoffQuantity);
                if (backoffQuantity < 8000) {
                  backoffQuantity+=(backoffQuantity * .5);
                  backoffQuantity+=(backoffQuantity * .5 * ThreadLocalRandom.current().nextDouble());
                }
              }
            }
          }
        }
  finally {
          cont.discard();
        }
      }
 catch (      Exception e) {
        m_logger.error("Error processing export block",e);
      }
      constructListener(source,source.poll(),edb,ads);
    }
  }
,edb.getExecutor());
}
