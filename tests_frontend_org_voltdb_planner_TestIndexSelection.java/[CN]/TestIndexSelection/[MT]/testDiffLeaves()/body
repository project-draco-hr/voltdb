{
  AbstractPlanNode pn1=null;
  AbstractPlanNode pn2=null;
  pn1=compile("select * from l, t where t.b=l.b limit ?;",3,true);
  pn2=compile("select * from l, t where l.b=t.b limit ?;",3,true);
  assertTrue(pn1 != null);
  assertTrue(pn2 != null);
  PlanNodeList nodelist1=new PlanNodeList(pn1);
  try {
    nodelist1.constructList();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  PlanNodeTree pnt=new PlanNodeTree(pn1);
  JSONObject jobj;
  String prettyJson=null;
  prettyJson=pnt.toJSONString();
  System.out.println(prettyJson);
  try {
    jobj=new JSONObject(prettyJson);
    JSONArray values=jobj.getJSONArray("PLAN_NODES");
    System.out.println(values.getJSONObject(0).toString());
    System.out.println(jobj.toString());
  }
 catch (  JSONException e1) {
    e1.printStackTrace();
  }
  prettyJson="";
  String line=null;
  try {
    BufferedReader reader=new BufferedReader(new FileReader("/home/zhengli/prettyJson.txt"));
    while ((line=reader.readLine()) != null) {
      line=line.trim();
      prettyJson+=line;
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  System.out.println(prettyJson);
}
