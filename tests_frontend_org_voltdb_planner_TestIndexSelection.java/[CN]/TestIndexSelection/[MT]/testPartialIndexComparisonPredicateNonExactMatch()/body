{
{
    AbstractPlanNode pn=compile("select * from c where a > 0 and e > 0 or d < 5;");
    pn=pn.getChild(0);
    assertEquals(PlanNodeType.INDEXSCAN,pn.getPlanNodeType());
    String json=pn.toJSONString();
    System.out.println(json);
    assertTrue(json.contains("\"PURPOSE\":3,\"TARGET_INDEX_NAME\":\"Z_FULL_IDX_A\""));
  }
{
    AbstractPlanNode pn=compile("select * from c where b > 0 and e = 0;");
    pn=pn.getChild(0);
    String json=pn.toJSONString();
    System.out.println(json);
    assertEquals(PlanNodeType.INDEXSCAN,pn.getPlanNodeType());
    assertTrue(json.contains("\"TARGET_INDEX_NAME\":\"Z_FULL_IDX_A\""));
  }
{
    AbstractPlanNode pn=compile("select * from c where b > 0 and f > 3;");
    pn=pn.getChild(0);
    assertEquals(PlanNodeType.INDEXSCAN,pn.getPlanNodeType());
    String json=pn.toJSONString();
    System.out.println(json);
    assertTrue(json.contains("\"TARGET_INDEX_NAME\":\"Z_FULL_IDX_A\""));
  }
{
    AbstractPlanNode pn=compile("select * from c where b > 0 and 3 < f;");
    pn=pn.getChild(0);
    assertEquals(PlanNodeType.INDEXSCAN,pn.getPlanNodeType());
    String json=pn.toJSONString();
    System.out.println(json);
    assertTrue(json.contains("\"TARGET_INDEX_NAME\":\"Z_FULL_IDX_A\""));
  }
}
