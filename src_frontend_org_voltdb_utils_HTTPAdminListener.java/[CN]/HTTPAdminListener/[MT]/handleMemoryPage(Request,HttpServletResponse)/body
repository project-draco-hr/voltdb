{
  try {
    SystemStatsCollector.Datum d=SystemStatsCollector.getRecentSample();
    double totalmemory=SystemStatsCollector.memorysize;
    double used=d.rss / (double)(SystemStatsCollector.memorysize * 1024 * 1024);
    double javaclaimed=d.javatotalheapmem + d.javatotalsysmem;
    double javaused=d.javausedheapmem + d.javausedsysmem;
    double javaunused=SystemStatsCollector.javamaxheapmem - d.javatotalheapmem;
    double risk=(d.rss + javaunused) / (SystemStatsCollector.memorysize * 1024 * 1024);
    Map<String,String> params=new HashMap<String,String>();
    params.put("2mincharturl",SystemStatsCollector.getGoogleChartURL(2,640,240,"-2min"));
    params.put("30mincharturl",SystemStatsCollector.getGoogleChartURL(30,640,240,"-30min"));
    params.put("24hrcharturl",SystemStatsCollector.getGoogleChartURL(1440,640,240,"-24hrs"));
    params.put("totalmemory",String.format("%.1f",totalmemory));
    params.put("used",String.format("%.1f",used * 100.0));
    params.put("risk",String.format("%.1f",risk * 100.0));
    params.put("rss",String.format("%.1f",d.rss / 1024.0 / 1024.0));
    params.put("usedjava",String.format("%.1f",javaused / 1024.0 / 1024.0));
    params.put("claimedjava",String.format("%.1f",javaclaimed / 1024.0 / 1024.0));
    params.put("javamaxheap",String.format("%.1f",SystemStatsCollector.javamaxheapmem / 1024.0 / 1024.0));
    String msg=getHTMLForAdminPage(params);
    response.setContentType("text/html;charset=utf-8");
    response.setStatus(HttpServletResponse.SC_OK);
    baseRequest.setHandled(true);
    response.getWriter().print(msg);
  }
 catch (  IOException e) {
    e.printStackTrace();
    throw new RuntimeException(e);
  }
}
