{
  SslContextFactory sslContextFactory=new SslContextFactory();
  String value=getKeyTrustStoreAttribute("javax.net.ssl.keyStore",httpsType.getKeyStore(),"path",true);
  sslContextFactory.setKeyStorePath(value);
  sslContextFactory.setKeyStorePassword(getKeyTrustStoreAttribute("javax.net.ssl.keyStorePassword",httpsType.getKeyStore(),"password",true));
  value=getKeyTrustStoreAttribute("javax.net.ssl.trustStore",httpsType.getTrustStore(),"path",false);
  if (value != null) {
    sslContextFactory.setTrustStorePath(value);
  }
  value=getKeyTrustStoreAttribute("javax.net.ssl.trustStorePassword",httpsType.getTrustStore(),"password",false);
  if (value != null) {
    sslContextFactory.setTrustStorePassword(value);
  }
  sslContextFactory.setExcludeCipherSuites("SSL_RSA_WITH_DES_CBC_SHA","SSL_DHE_RSA_WITH_DES_CBC_SHA","SSL_DHE_DSS_WITH_DES_CBC_SHA","SSL_RSA_EXPORT_WITH_RC4_40_MD5","SSL_RSA_EXPORT_WITH_DES40_CBC_SHA","SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
  HttpConfiguration httpsConfig=new HttpConfiguration();
  httpsConfig.setSecureScheme("https");
  httpsConfig.setSecurePort(port);
  httpsConfig.addCustomizer(new SecureRequestCustomizer());
  HttpConnectionFactory factory=new HttpConnectionFactory(httpsConfig);
  ServerConnector connector=new ServerConnector(m_server,new SslConnectionFactory(sslContextFactory,HttpVersion.HTTP_1_1.asString()),factory);
  if (intf != null && intf.length() > 0) {
    connector.setHost(intf);
  }
  connector.setPort(port);
  connector.setName("VoltDB-HTTPS");
  connector.open();
  return connector;
}
