{
  int poolsize=Integer.getInteger("HTTP_POOL_SIZE",50);
  int timeout=Integer.getInteger("HTTP_REQUEST_TIMEOUT_SECONDS",15);
  final QueuedThreadPool qtp=new QueuedThreadPool(poolsize);
  qtp.setIdleTimeout(timeout * 1000);
  qtp.setMinThreads(1);
  m_server=new Server(qtp);
  m_server.setAttribute("org.eclipse.jetty.server.Request.maxFormContentSize",new Integer(HTTPClientInterface.MAX_QUERY_PARAM_SIZE));
  m_mustListen=mustListen;
  try {
    loadTemplate(HTTPAdminListener.class,"admintemplate.html");
  }
 catch (  Exception e) {
    VoltLogger logger=new VoltLogger("HOST");
    logger.error("Unable to load HTML templates from jar for admin pages.",e);
    throw e;
  }
  ServerConnector connector=null;
  try {
    connector=new ServerConnector(m_server);
    if (intf != null && intf.length() > 0) {
      connector.setHost(intf);
    }
    connector.setPort(port);
    connector.setName("VoltDB-HTTPD");
    connector.open();
    m_server.addConnector(connector);
    ContextHandler dbMonitorHandler=new ContextHandler("/");
    dbMonitorHandler.setHandler(new DBMonitorHandler());
    ContextHandler apiRequestHandler=new ContextHandler("/api/1.0");
    apiRequestHandler.setMaxFormContentSize(HTTPClientInterface.MAX_QUERY_PARAM_SIZE);
    apiRequestHandler.setMaxFormKeys(HTTPClientInterface.MAX_FORM_KEYS);
    apiRequestHandler.setHandler(new APIRequestHandler());
    ContextHandler catalogRequestHandler=new ContextHandler("/catalog");
    catalogRequestHandler.setHandler(new CatalogRequestHandler());
    ContextHandler ddlRequestHandler=new ContextHandler("/ddl");
    ddlRequestHandler.setHandler(new DDLRequestHandler());
    ContextHandler deploymentRequestHandler=new ContextHandler("/deployment");
    m_deploymentHandler=new DeploymentRequestHandler();
    deploymentRequestHandler.setHandler(m_deploymentHandler);
    ContextHandler profileRequestHandler=new ContextHandler("/profile");
    profileRequestHandler.setHandler(new UserProfileHandler());
    ContextHandlerCollection handlers=new ContextHandlerCollection();
    handlers.setHandlers(new Handler[]{apiRequestHandler,catalogRequestHandler,ddlRequestHandler,deploymentRequestHandler,profileRequestHandler,dbMonitorHandler});
    m_server.setHandler(handlers);
    httpClientInterface.setTimeout(timeout);
    m_jsonEnabled=jsonEnabled;
  }
 catch (  Exception e) {
    try {
      connector.close();
    }
 catch (    Exception e2) {
    }
    try {
      m_server.destroy();
    }
 catch (    Exception e2) {
    }
    throw new Exception(e);
  }
}
