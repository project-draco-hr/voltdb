{
  String deployment=request.getParameter("deployment");
  if (deployment == null || deployment.length() == 0) {
    response.getWriter().print(buildClientResponse(jsonp,ClientResponse.UNEXPECTED_FAILURE,"Failed to get deployment information."));
    return;
  }
  try {
    DeploymentType newDeployment=m_mapper.readValue(deployment,DeploymentType.class);
    if (newDeployment == null) {
      response.getWriter().print(buildClientResponse(jsonp,ClientResponse.UNEXPECTED_FAILURE,"Failed to parse deployment information."));
      return;
    }
    DeploymentType currentDeployment=this.getDeployment();
    if (currentDeployment.getUsers() != null) {
      newDeployment.setUsers(currentDeployment.getUsers());
    }
    String dep=CatalogUtil.getDeployment(newDeployment);
    if (dep == null || dep.trim().length() <= 0) {
      response.getWriter().print(buildClientResponse(jsonp,ClientResponse.UNEXPECTED_FAILURE,"Failed to build deployment information."));
      return;
    }
    Object[] params=new Object[]{null,dep};
    SyncCallback cb=new SyncCallback();
    httpClientInterface.callProcedure(ar,BatchTimeoutOverrideType.NO_TIMEOUT,cb,"@UpdateApplicationCatalog",params);
    cb.waitForResponse();
    ClientResponseImpl r=ClientResponseImpl.class.cast(cb.getResponse());
    if (r.getStatus() == ClientResponse.SUCCESS) {
      response.getWriter().print(buildClientResponse(jsonp,ClientResponse.SUCCESS,"Deployment Updated."));
    }
 else {
      response.getWriter().print(HTTPClientInterface.asJsonp(jsonp,r.toJSONString()));
    }
    baseRequest.setHandled(true);
  }
 catch (  Exception ex) {
    logger.error("Failed to update deployment from API",ex);
    response.getWriter().print(buildClientResponse(jsonp,ClientResponse.UNEXPECTED_FAILURE,Throwables.getStackTraceAsString(ex)));
    baseRequest.setHandled(true);
  }
}
