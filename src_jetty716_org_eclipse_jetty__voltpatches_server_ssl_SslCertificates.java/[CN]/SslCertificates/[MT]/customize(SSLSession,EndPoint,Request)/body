{
  request.setScheme(HttpSchemes.HTTPS);
  try {
    String cipherSuite=sslSession.getCipherSuite();
    Integer keySize;
    X509Certificate[] certs;
    String idStr;
    CachedInfo cachedInfo=(CachedInfo)sslSession.getValue(CACHED_INFO_ATTR);
    if (cachedInfo != null) {
      keySize=cachedInfo.getKeySize();
      certs=cachedInfo.getCerts();
      idStr=cachedInfo.getIdStr();
    }
 else {
      keySize=new Integer(ServletSSL.deduceKeyLength(cipherSuite));
      certs=SslCertificates.getCertChain(sslSession);
      byte[] bytes=sslSession.getId();
      idStr=TypeUtil.toHexString(bytes);
      cachedInfo=new CachedInfo(keySize,certs,idStr);
      sslSession.putValue(CACHED_INFO_ATTR,cachedInfo);
    }
    if (certs != null)     request.setAttribute("javax.servlet_voltpatches.request.X509Certificate",certs);
    request.setAttribute("javax.servlet_voltpatches.request.cipher_suite",cipherSuite);
    request.setAttribute("javax.servlet_voltpatches.request.key_size",keySize);
    request.setAttribute("javax.servlet_voltpatches.request.ssl_session_id",idStr);
  }
 catch (  Exception e) {
    Log.warn(Log.EXCEPTION,e);
  }
}
