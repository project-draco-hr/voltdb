{
  AbstractPlanNode pn=compile("select * FROM T1, T2, T3, T4, T5, T6, T7",0,false,"T7,T6,T5,T4,T3,T2,T1");
  AbstractPlanNode n=pn.getChild(0).getChild(0);
  for (int ii=1; ii <= 7; ii++) {
    if (ii == 6) {
      assertTrue(((SeqScanPlanNode)n.getChild(0)).getTargetTableName().endsWith(Integer.toString(ii)) || ((SeqScanPlanNode)n.getChild(0)).getTargetTableName().endsWith(Integer.toString(ii + 1)));
      assertTrue(((SeqScanPlanNode)n.getChild(1)).getTargetTableName().endsWith(Integer.toString(ii)) || ((SeqScanPlanNode)n.getChild(1)).getTargetTableName().endsWith(Integer.toString(ii + 1)));
      break;
    }
 else {
      NestLoopPlanNode node=(NestLoopPlanNode)n;
      assertTrue(((SeqScanPlanNode)n.getChild(0)).getTargetTableName().endsWith(Integer.toString(ii)));
      n=node.getChild(1);
    }
  }
  pn=compile("select * FROM T1, T2, T3, T4, T5, T6, T7",0,false,"T1,T2,T3,T4,T5,T6,T7");
  n=pn.getChild(0).getChild(0);
  for (int ii=7; ii > 0; ii--) {
    if (ii == 2) {
      assertTrue(((SeqScanPlanNode)n.getChild(0)).getTargetTableName().endsWith(Integer.toString(ii)) || ((SeqScanPlanNode)n.getChild(0)).getTargetTableName().endsWith(Integer.toString(ii - 1)));
      assertTrue(((SeqScanPlanNode)n.getChild(1)).getTargetTableName().endsWith(Integer.toString(ii)) || ((SeqScanPlanNode)n.getChild(1)).getTargetTableName().endsWith(Integer.toString(ii - 1)));
      break;
    }
 else {
      NestLoopPlanNode node=(NestLoopPlanNode)n;
      assertTrue(((SeqScanPlanNode)n.getChild(0)).getTargetTableName().endsWith(Integer.toString(ii)));
      n=node.getChild(1);
    }
  }
}
