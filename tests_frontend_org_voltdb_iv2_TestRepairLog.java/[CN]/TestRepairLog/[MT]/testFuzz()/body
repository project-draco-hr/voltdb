{
  TxnEgo sphandle=TxnEgo.makeZero(0);
  UniqueIdGenerator uig=new UniqueIdGenerator(0,0);
  UniqueIdGenerator spbuig=new UniqueIdGenerator(0,0);
  UniqueIdGenerator mpbuig=new UniqueIdGenerator(0,0);
  sphandle=sphandle.makeNext();
  RandomMsgGenerator msgGen=new RandomMsgGenerator();
  RepairLog dut=new RepairLog();
  long binaryLogSpUniqueId=Long.MIN_VALUE;
  long binaryLogMpUniqueId=Long.MIN_VALUE;
  for (int i=0; i < 4000; i++) {
    TransactionInfoBaseMessage msg=msgGen.generateRandomMessageInStream();
    msg.setSpHandle(sphandle.getTxnId());
    if (msg instanceof InitiateTaskMessage) {
      binaryLogSpUniqueId=Math.max(binaryLogSpUniqueId,setBinaryLogUniqueId(msg,spbuig));
    }
 else     if (msg instanceof FragmentTaskMessage) {
      binaryLogMpUniqueId=Math.max(binaryLogMpUniqueId,setBinaryLogUniqueId(msg,mpbuig));
    }
    sphandle=sphandle.makeNext();
    if (!msg.isReadOnly() || msg instanceof CompleteTransactionMessage) {
      dut.deliver(msg);
    }
  }
  List<Iv2RepairLogResponseMessage> stuff=dut.contents(1l,false);
  validateRepairLog(stuff,binaryLogSpUniqueId);
  stuff=dut.contents(1l,true);
  validateRepairLog(stuff,binaryLogMpUniqueId);
}
