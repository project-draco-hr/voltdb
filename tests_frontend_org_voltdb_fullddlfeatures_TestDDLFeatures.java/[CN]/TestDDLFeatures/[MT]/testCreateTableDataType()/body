{
  assertTrue(findTableInSystemCatalogResults("T4"));
  assertTrue(findTableInSystemCatalogResults("T5"));
  assertTrue(findTableInSystemCatalogResults("T6"));
  assertTrue(findTableInSystemCatalogResults("T7"));
  ClientResponse resp;
  VoltTable vt;
  m_client.callProcedure("@AdHoc","insert into T4 values " + "(1, " + "2, "+ "3, "+ "4, "+ "5.5, "+ "6.6, "+ "\'test\', "+ "\'010101\', "+ "1000, "+ "1111, "+ "pointfromtext('point(0 0)'),"+ "polygonfromtext('polygon((0 0, 1 1, 2 2, 0 0))'));");
  resp=m_client.callProcedure("@AdHoc","select * from T4;");
  vt=resp.getResults()[0];
  assertEquals(vt.getRowCount(),1);
  vt.advanceToRow(0);
  byte ret1=1;
  assertEquals(vt.get(0,VoltType.TINYINT),ret1);
  assertEquals(vt.get(2,VoltType.INTEGER),3);
  assertEquals(vt.get(4,VoltType.FLOAT),5.5);
  m_client.callProcedure("T5.insert","test");
  resp=m_client.callProcedure("@AdHoc","select * from T5;");
  assertEquals(resp.getResults()[0].getRowCount(),1);
  m_client.callProcedure("T5.insert","hahahaha");
  resp=m_client.callProcedure("@AdHoc","select * from T5 order by c;");
  vt=resp.getResults()[0];
  assertEquals(vt.getRowCount(),2);
  vt.advanceToRow(0);
  assertEquals(vt.get(0,VoltType.STRING),"hahahaha");
  vt.advanceToRow(1);
  assertEquals(vt.get(0,VoltType.STRING),"test");
  m_client.callProcedure("T6.insert","test");
  resp=m_client.callProcedure("@AdHoc","select * from T6;");
  assertEquals(resp.getResults()[0].getRowCount(),1);
  m_client.callProcedure("@AdHoc","insert into T7 values (\'101010101010\')");
  resp=m_client.callProcedure("@AdHoc","select * from T7;");
  assertEquals(resp.getResults()[0].getRowCount(),1);
}
