{
  ClientResponse resp;
  boolean threw;
  VoltTable vt;
  assertTrue(findTableInSystemCatalogResults("T9"));
  resp=m_client.callProcedure("T9.insert",1,2);
  assertEquals(resp.getResults()[0].getRowCount(),1);
  threw=false;
  try {
    m_client.callProcedure("T9.insert",1,3);
  }
 catch (  ProcCallException pce) {
    threw=true;
  }
  assertTrue("Shouldn't violate PRIMARY KEY constraint",threw);
  threw=false;
  try {
    m_client.callProcedure("T9.insert",2,2);
  }
 catch (  ProcCallException pce) {
    threw=true;
  }
  assertTrue("Shouldn't violate UNIQUE constraint",threw);
  assertTrue(findTableInSystemCatalogResults("T10"));
  resp=m_client.callProcedure("T10.insert",1);
  assertEquals(resp.getResults()[0].getRowCount(),1);
  threw=false;
  try {
    m_client.callProcedure("T10.insert",1);
  }
 catch (  ProcCallException pce) {
    threw=true;
  }
  assertTrue("Shouldn't violate UNIQUE constraint",threw);
  assertTrue(findTableInSystemCatalogResults("T11"));
  resp=m_client.callProcedure("T11.insert",1);
  assertEquals(resp.getResults()[0].getRowCount(),1);
  threw=false;
  try {
    m_client.callProcedure("T11.insert",1);
  }
 catch (  ProcCallException pce) {
    threw=true;
  }
  assertTrue("Shouldn't violate PRIMARY KEY constraint",threw);
  assertTrue(findTableInSystemCatalogResults("T12"));
  assertTrue(isColumnPartitionColumn("T12","C1"));
  resp=m_client.callProcedure("T12.insert",1,2);
  assertEquals(resp.getResults()[0].getRowCount(),1);
  threw=false;
  try {
    m_client.callProcedure("T12.insert",1,2);
  }
 catch (  ProcCallException pce) {
    threw=true;
  }
  assertTrue("Shouldn't violate ASSUMEUNIQUE constraint",threw);
  assertTrue(findTableInSystemCatalogResults("T16"));
  resp=m_client.callProcedure("T16.insert",1);
  assertEquals(resp.getResults()[0].getRowCount(),1);
  threw=false;
  try {
    m_client.callProcedure("T16.insert",2);
  }
 catch (  ProcCallException pce) {
    pce.printStackTrace();
    threw=true;
  }
  assertTrue("Shouldn't violate LIMIT PARTITION ROW constraint",threw);
  assertTrue(findTableInSystemCatalogResults("T21"));
  assertEquals(indexedColumnCount("T21"),3);
  assertTrue(isColumnPartitionColumn("T21","C3"));
  assertTrue(findTableInSystemCatalogResults("T22"));
  assertEquals(indexedColumnCount("T22"),4);
  assertTrue(findTableInSystemCatalogResults("T23"));
  assertEquals(indexedColumnCount("T23"),5);
}
