{
  Pair<Integer,ByteBuffer> rejoinWork=firstWork.get();
  REJOINLOG.debug(m_whoami + " executing first snapshot transfer for community rejoin.");
  firstWork.set(null);
  while (rejoinWork != null) {
    restoreBlock(rejoinWork,siteConnection);
    try {
      rejoinWork=m_rejoinSiteProcessor.take();
    }
 catch (    InterruptedException e) {
      REJOINLOG.warn("RejoinProducer interrupted at take()");
      rejoinWork=null;
    }
  }
  REJOINLOG.debug(m_whoami + "Rejoin snapshot transfer is finished");
  m_rejoinSiteProcessor.close();
  kickWatchdog(false);
  SnapshotCompletionEvent event=null;
  try {
    REJOINLOG.debug(m_whoami + "waiting on snapshot completion monitor.");
    event=m_completionMonitorAwait.get();
    REJOINLOG.debug(m_whoami + " monitor completed. Sending SNAPSHOT_FINISHED " + "and handing off to site.");
    RejoinMessage snap_complete=new RejoinMessage(m_rejoinCoordinatorHsId,Type.SNAPSHOT_FINISHED);
    m_mailbox.send(m_rejoinCoordinatorHsId,snap_complete);
  }
 catch (  InterruptedException crashme) {
    VoltDB.crashLocalVoltDB("Interrupted awaiting snapshot completion.",true,crashme);
  }
catch (  ExecutionException e) {
    VoltDB.crashLocalVoltDB("Unexpected exception awaiting snapshot completion.",true,e);
  }
  setRejoinComplete(siteConnection,event.exportSequenceNumbers);
}
