{
  Pair<Integer,ByteBuffer> rejoinWork=m_rejoinSiteProcessor.poll(m_snapshotBufferAllocator);
  if (rejoinWork == null && !m_rejoinSiteProcessor.isEOF()) {
    m_taskQueue.offer(this);
    return;
  }
  while (rejoinWork != null) {
    restoreBlock(rejoinWork,siteConnection);
    try {
      rejoinWork=m_rejoinSiteProcessor.take(m_snapshotBufferAllocator);
    }
 catch (    InterruptedException e) {
      REJOINLOG.warn("RejoinProducer interrupted at take()");
      rejoinWork=null;
    }
  }
  REJOINLOG.debug(m_whoami + "Rejoin snapshot transfer is finished");
  m_rejoinSiteProcessor.close();
  Preconditions.checkNotNull(m_streamSnapshotMb);
  VoltDB.instance().getHostMessenger().removeMailbox(m_streamSnapshotMb.getHSId());
  kickWatchdog(false);
  SnapshotCompletionEvent event=null;
  try {
    REJOINLOG.debug(m_whoami + "waiting on snapshot completion monitor.");
    event=m_completionMonitorAwait.get();
    m_completionAction.setSnapshotTxnId(event.multipartTxnId);
    REJOINLOG.debug(m_whoami + " monitor completed. Sending SNAPSHOT_FINISHED " + "and handing off to site.");
    RejoinMessage snap_complete=new RejoinMessage(m_mailbox.getHSId(),Type.SNAPSHOT_FINISHED);
    m_mailbox.send(m_coordinatorHsId,snap_complete);
  }
 catch (  InterruptedException crashme) {
    VoltDB.crashLocalVoltDB("Interrupted awaiting snapshot completion.",true,crashme);
  }
catch (  ExecutionException e) {
    VoltDB.crashLocalVoltDB("Unexpected exception awaiting snapshot completion.",true,e);
  }
  setJoinComplete(siteConnection,event.exportSequenceNumbers,true);
}
