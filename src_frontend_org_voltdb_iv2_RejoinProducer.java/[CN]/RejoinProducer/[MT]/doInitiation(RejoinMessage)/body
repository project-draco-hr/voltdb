{
  m_liveRejoin=message.getType() == RejoinMessage.Type.INITIATION;
  m_rejoinCoordinatorHsId=message.m_sourceHSId;
  m_rejoinSiteProcessor=new StreamSnapshotSink();
  long sourceSite=m_mailbox.getMasterHsId(m_partitionId);
  long hsId=m_rejoinSiteProcessor.initialize();
  REJOINLOG.debug(m_whoami + "received INITIATION message. Doing liverejoin: " + m_liveRejoin+ ". Source site is: "+ CoreUtils.hsIdToString(sourceSite)+ " and destination rejoin processor is: "+ CoreUtils.hsIdToString(hsId));
  String data=makeSnapshotRequest(hsId,sourceSite);
  SnapshotCompletionAction interest=new SnapshotCompletionAction();
  interest.register();
  SnapshotUtil.requestSnapshot(0l,"",m_snapshotNonce,!useLiveRejoin(),SnapshotFormat.STREAM,data,m_handler,true);
  Thread firstSnapshotBlock=new Thread(){
    @Override public void run(){
      Pair<Integer,ByteBuffer> rejoinWork=null;
      try {
        rejoinWork=m_rejoinSiteProcessor.take();
      }
 catch (      InterruptedException e) {
        VoltDB.crashLocalVoltDB("Interrupted in take()ing first snapshot block for rejoin",true,e);
      }
      firstWork.set(rejoinWork);
      m_taskQueue.offer(RejoinProducer.this);
    }
  }
;
  firstSnapshotBlock.start();
}
