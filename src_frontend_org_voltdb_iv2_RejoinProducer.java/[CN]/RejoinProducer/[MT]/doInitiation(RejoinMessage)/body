{
  m_coordinatorHsId=message.m_sourceHSId;
  m_rejoinSiteProcessor=new StreamSnapshotSink();
  String snapshotNonce=message.getSnapshotNonce();
  long sourceSite=m_mailbox.getMasterHsId(m_partitionId);
  long hsId=m_rejoinSiteProcessor.initialize();
  REJOINLOG.debug(m_whoami + "received INITIATION message. Doing liverejoin: " + m_liveRejoin+ ". Source site is: "+ CoreUtils.hsIdToString(sourceSite)+ " and destination rejoin processor is: "+ CoreUtils.hsIdToString(hsId)+ " and snapshot nonce is: "+ snapshotNonce);
  SnapshotCompletionAction interest=new SnapshotCompletionAction(snapshotNonce);
  interest.register();
  RejoinMessage initResp=new RejoinMessage(m_mailbox.getHSId(),sourceSite,hsId);
  m_mailbox.send(m_coordinatorHsId,initResp);
  Thread firstSnapshotBlock=new Thread(){
    @Override public void run(){
      Pair<Integer,ByteBuffer> rejoinWork=null;
      try {
        rejoinWork=m_rejoinSiteProcessor.take();
      }
 catch (      InterruptedException e) {
        VoltDB.crashLocalVoltDB("Interrupted in take()ing first snapshot block for rejoin",true,e);
      }
      firstWork.set(rejoinWork);
      m_taskQueue.offer(RejoinProducer.this);
    }
  }
;
  firstSnapshotBlock.start();
}
