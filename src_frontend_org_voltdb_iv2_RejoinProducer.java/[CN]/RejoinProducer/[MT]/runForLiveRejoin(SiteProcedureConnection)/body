{
  Pair<Integer,ByteBuffer> rejoinWork=firstWork.get();
  if (rejoinWork != null) {
    REJOINLOG.debug(m_whoami + " executing first snapshot transfer for live rejoin.");
    firstWork.set(null);
  }
 else {
    rejoinWork=m_rejoinSiteProcessor.poll();
  }
  if (rejoinWork != null) {
    restoreBlock(rejoinWork,siteConnection);
  }
  if (m_rejoinSiteProcessor.isEOF() == false) {
    m_taskQueue.offer(this);
  }
 else {
    REJOINLOG.debug(m_whoami + "Rejoin snapshot transfer is finished");
    m_rejoinSiteProcessor.close();
    SnapshotCompletionEvent event=null;
    try {
      REJOINLOG.debug(m_whoami + "waiting on snapshot completion monitor.");
      event=m_completionMonitorAwait.get();
      REJOINLOG.debug(m_whoami + "waiting on snapshot response adapter.");
      m_snapshotAdapterAwait.await();
      REJOINLOG.debug(m_whoami + "snapshot monitor and adapter complete. " + "Sending SNAPSHOT_FINISHED and Handing off to site.");
      RejoinMessage snap_complete=new RejoinMessage(m_rejoinCoordinatorHsId,Type.SNAPSHOT_FINISHED);
      m_mailbox.send(m_rejoinCoordinatorHsId,snap_complete);
    }
 catch (    InterruptedException crashme) {
      VoltDB.crashLocalVoltDB("Interrupted awaiting snapshot completion.",true,crashme);
    }
catch (    ExecutionException e) {
      VoltDB.crashLocalVoltDB("Unexpected exception awaiting snapshot completion.",true,e);
    }
    siteConnection.setRejoinComplete(m_replayCompleteAction,event.exportSequenceNumbers);
  }
}
