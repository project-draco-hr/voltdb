{
  StringBuilder sb=new StringBuilder();
  ChangeGroup group=m_changes.get(DiffClass.TABLE);
  for (  CatalogType type : group.deletions) {
    sb.append(String.format("Table %s dropped.\n",type.getTypeName()));
  }
  for (  CatalogType type : group.additions) {
    sb.append(String.format("Table %s added.\n",type.getTypeName()));
  }
  TreeSet<CatalogType> changedTables=new TreeSet<CatalogType>();
  changedTables.addAll(group.childAdditions.keySet());
  changedTables.addAll(group.childDeletions.keySet());
  changedTables.addAll(group.childChanges.keySet());
  for (  CatalogType type : changedTables) {
    sb.append(String.format("Table %s has been modified.\n",type.getTypeName()));
  }
  group=m_changes.get(DiffClass.PROC);
  for (  CatalogType type : group.deletions) {
    if (isCRUDProc((Procedure)type))     continue;
    sb.append(String.format("Procedure %s dropped.\n",type.getTypeName()));
  }
  for (  CatalogType type : group.additions) {
    if (isCRUDProc((Procedure)type))     continue;
    sb.append(String.format("Procedure %s added.\n",type.getTypeName()));
  }
  TreeSet<CatalogType> changedProcs=new TreeSet<CatalogType>();
  changedProcs.addAll(group.childAdditions.keySet());
  changedProcs.addAll(group.childDeletions.keySet());
  changedProcs.addAll(group.childChanges.keySet());
  for (  CatalogType type : changedProcs) {
    if (isCRUDProc((Procedure)type))     continue;
    sb.append(String.format("Procedure %s has been modified.\n",type.getTypeName()));
  }
  group=m_changes.get(DiffClass.OTHER);
  assert(group.additions.size() == 0);
  assert(group.deletions.size() == 0);
  for (  List<CatalogType> types : group.childAdditions.values()) {
    for (    CatalogType type : types) {
      sb.append(String.format("Catalog node %s of type %s has been added.\n",type.getTypeName(),type.getClass().getSimpleName()));
    }
  }
  for (  List<CatalogType> types : group.childDeletions.values()) {
    for (    CatalogType type : types) {
      sb.append(String.format("Catalog node %s of type %s has been removed.\n",type.getTypeName(),type.getClass().getSimpleName()));
    }
  }
  for (  Map<CatalogType,FieldChange> changes : group.childChanges.values()) {
    for (    FieldChange fc : changes.values()) {
      if (fc.newType instanceof Database) {
        continue;
      }
      sb.append(String.format("Catalog node %s of type %s has modified metadata.\n",fc.newType.getTypeName(),fc.newType.getClass().getSimpleName()));
    }
  }
  return sb.toString();
}
