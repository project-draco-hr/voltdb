{
  if (checkAddIgnoreList(newType)) {
    return;
  }
  String errorMessage=checkAddDropWhitelist(newType,ChangeType.ADDITION);
  if (errorMessage != null) {
    String tableName=checkAddDropIfEmptyTableWhitelist(newType,ChangeType.ADDITION);
    if (tableName == null) {
      m_supported=false;
      m_errors.append(errorMessage);
    }
 else {
      String existingErrorMessagesForNonEmptyTable=m_tablesThatMustBeEmpty.get(tableName);
      if (errorMessage.length() == 0) {
        assert(existingErrorMessagesForNonEmptyTable != null);
      }
 else {
        if (existingErrorMessagesForNonEmptyTable != null) {
          errorMessage=existingErrorMessagesForNonEmptyTable + "\n" + errorMessage;
        }
        m_tablesThatMustBeEmpty.put(tableName,errorMessage);
      }
    }
  }
  newType.writeCreationCommand(m_sb);
  newType.writeFieldCommands(m_sb);
  newType.writeChildCommands(m_sb);
  CatalogChangeGroup cgrp=m_changes.get(DiffClass.get(newType));
  cgrp.processAddition(newType);
}
