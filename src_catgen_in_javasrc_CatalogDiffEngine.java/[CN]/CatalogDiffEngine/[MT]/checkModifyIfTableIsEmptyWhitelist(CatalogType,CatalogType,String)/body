{
  String[] retval=new String[2];
  if (prevType instanceof Table) {
    Table prevTable=(Table)prevType;
    Database db=(Database)prevType.getParent();
    retval[0]=suspect.getTypeName();
    if (CatalogUtil.isTableExportOnly(db,prevTable)) {
      return null;
    }
    if (field.equalsIgnoreCase("isreplicated")) {
      retval[1]=String.format("Unable to change whether table %s is replicated because it is not empty.",retval[0]);
      return retval;
    }
    if (field.equalsIgnoreCase("partitioncolumn")) {
      retval[1]=String.format("Unable to change the partition column of table %s because it is not empty.",retval[0]);
      return retval;
    }
  }
  if (prevType instanceof Column) {
    CatalogType parent=suspect.getParent();
    assert(parent instanceof Table);
    Table parentTable=(Table)parent;
    Database db=(Database)prevType.getParent();
    retval[0]=parentTable.getTypeName();
    if (CatalogUtil.isTableExportOnly(db,parentTable)) {
      return null;
    }
    if (field.equals("nullable")) {
      retval[0]=parentTable.getTypeName();
      retval[1]=String.format("Unable to add a non-null constraint to column %s in table %s unless the table is empty.",prevType.getTypeName(),retval[0]);
      return retval;
    }
 else     if (field.equals("type") || field.equals("size") || field.equals("inbytes")) {
      retval[1]=String.format("Unable to make a potentially lossy change to the type of column %s in table %s unless the table is empty.",prevType.getTypeName(),retval[0]);
      return retval;
    }
  }
  return null;
}
