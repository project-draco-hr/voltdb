{
  super.toJSONString(stringer);
  stringer.key(Members.KEY_ITERATE.name()).value(m_keyIterate);
  stringer.key(Members.LOOKUP_TYPE.name()).value(m_lookupType.toString());
  stringer.key(Members.SORT_DIRECTION.name()).value(m_sortDirection.toString());
  if (m_purpose != FOR_SCANNING_PERFORMANCE_OR_ORDERING) {
    stringer.key(Members.PURPOSE.name()).value(m_purpose);
  }
  stringer.key(Members.TARGET_INDEX_NAME.name()).value(m_targetIndexName);
  if (m_searchkeyExpressions.size() > 0) {
    stringer.key(Members.SEARCHKEY_EXPRESSIONS.name()).array();
    for (    AbstractExpression ae : m_searchkeyExpressions) {
      assert(ae instanceof JSONString);
      stringer.value(ae);
    }
    stringer.endArray();
  }
  if (m_endExpression != null) {
    stringer.key(Members.END_EXPRESSION.name());
    stringer.value(m_endExpression);
  }
  if (m_initialExpression != null) {
    stringer.key(Members.INITIAL_EXPRESSION.name()).value(m_initialExpression);
  }
  if (m_skip_null_predicate != null) {
    stringer.key(Members.SKIP_NULL_PREDICATE.name()).value(m_skip_null_predicate);
  }
}
