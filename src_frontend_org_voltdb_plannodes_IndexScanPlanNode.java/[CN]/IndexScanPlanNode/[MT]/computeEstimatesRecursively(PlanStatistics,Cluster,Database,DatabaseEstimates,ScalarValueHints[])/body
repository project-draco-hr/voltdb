{
  Table target=db.getTables().getIgnoreCase(m_targetTableName);
  assert(target != null);
  DatabaseEstimates.TableEstimates tableEstimates=estimates.getEstimatesForTable(target.getTypeName());
  stats.incrementStatistic(0,StatsField.TREE_INDEX_LEVELS_TRAVERSED,(long)(Math.log(tableEstimates.maxTuples)));
  double colCount=m_catalogIndex.getColumns().size();
  double keyWidth=m_searchkeyExpressions.size();
  assert(keyWidth <= colCount);
  if (keyWidth > 0.0 && m_lookupType != IndexLookupType.EQ) {
    keyWidth-=0.5;
  }
  int tuplesToRead=0;
  if (m_catalogIndex.getType() == IndexType.HASH_TABLE.getValue())   tuplesToRead=2;
 else   if ((m_catalogIndex.getType() == IndexType.BALANCED_TREE.getValue()) || (m_catalogIndex.getType() == IndexType.BTREE.getValue()))   tuplesToRead=3;
  assert(tuplesToRead > 0);
  if (!m_catalogIndex.getUnique() || (colCount > keyWidth)) {
    tuplesToRead+=(int)(tableEstimates.maxTuples * 0.90 * Math.pow(0.10,keyWidth));
    if (tuplesToRead < 4) {
      tuplesToRead=4;
    }
  }
  stats.incrementStatistic(0,StatsField.TUPLES_READ,tuplesToRead);
  m_estimatedOutputTupleCount=tuplesToRead;
}
