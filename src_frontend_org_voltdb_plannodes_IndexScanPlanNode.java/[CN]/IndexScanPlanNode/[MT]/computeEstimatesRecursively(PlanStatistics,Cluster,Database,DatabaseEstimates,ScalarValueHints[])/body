{
  Table target=db.getTables().getIgnoreCase(m_targetTableName);
  assert(target != null);
  DatabaseEstimates.TableEstimates tableEstimates=estimates.getEstimatesForTable(target.getTypeName());
  stats.incrementStatistic(0,StatsField.TREE_INDEX_LEVELS_TRAVERSED,(long)(Math.log(tableEstimates.maxTuples)));
  int colCount=m_catalogIndex.getColumns().size();
  int keyWidth=m_searchkeyExpressions.size();
  assert(keyWidth <= colCount);
  double keyWidthFl=keyWidth;
  if (m_lookupType != IndexLookupType.EQ)   keyWidthFl-=0.5;
  double coverage=keyWidthFl / colCount;
  int tuplesToRead=0;
  if (m_catalogIndex.getType() == IndexType.ARRAY.getValue())   tuplesToRead=1;
  if (m_catalogIndex.getType() == IndexType.HASH_TABLE.getValue())   tuplesToRead=2;
  if ((m_catalogIndex.getType() == IndexType.BALANCED_TREE.getValue()) || (m_catalogIndex.getType() == IndexType.BTREE.getValue()))   tuplesToRead=3;
  assert(tuplesToRead > 0);
  if ((m_lookupType != IndexLookupType.EQ) || !m_catalogIndex.getUnique() && (colCount != keyWidth)) {
    tuplesToRead+=4;
    tuplesToRead+=(int)(50.0 * (1.0 - coverage));
    tuplesToRead+=50 - (10 * Math.min(keyWidth,5));
  }
  stats.incrementStatistic(0,StatsField.TUPLES_READ,tuplesToRead);
  m_estimatedOutputTupleCount=tuplesToRead;
  return true;
}
