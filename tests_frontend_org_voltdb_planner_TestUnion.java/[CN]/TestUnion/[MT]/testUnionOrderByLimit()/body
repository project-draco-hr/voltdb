{
{
    AbstractPlanNode pn=compile("select C from T3 UNION select B from T2 order by C limit 3 offset 2");
    String[] columnNames={"C"};
    pn=pn.getChild(0);
    checkOrderByNode(pn,columnNames);
    assertTrue(pn.getChild(0) instanceof UnionPlanNode);
    pn=pn.getInlinePlanNode(PlanNodeType.LIMIT);
    checkLimitNode(pn,3,2);
  }
{
    AbstractPlanNode pn=compile("select C as TAG from T3 UNION select B from T2 order by TAG limit 3 offset 2");
    String[] columnNames={"TAG"};
    pn=pn.getChild(0);
    checkOrderByNode(pn,columnNames);
    assertTrue(pn.getChild(0) instanceof UnionPlanNode);
    pn=pn.getInlinePlanNode(PlanNodeType.LIMIT);
    checkLimitNode(pn,3,2);
  }
{
    AbstractPlanNode pn=compile("select C as TAG from T3 UNION select B from T2 order by 1 limit 3 offset 2");
    String[] columnNames={"TAG"};
    pn=pn.getChild(0);
    checkOrderByNode(pn,columnNames);
    assertTrue(pn.getChild(0) instanceof UnionPlanNode);
    pn=pn.getInlinePlanNode(PlanNodeType.LIMIT);
    checkLimitNode(pn,3,2);
  }
}
