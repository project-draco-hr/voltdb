{
{
    AbstractPlanNode pn=compile("select C, abs(C) as A from T3 UNION select B, B from T2 order by C, A");
    pn=pn.getChild(0);
    String[] columnNames={"C","A"};
    int[] idxs={0,1};
    checkOrderByNode(pn,columnNames,idxs);
  }
{
    AbstractPlanNode pn=compile("select C, abs(C) as A from T3 UNION select B, B from T2 order by 1,2");
    pn=pn.getChild(0);
    String[] columnNames={"C","A"};
    int[] colIdx={0,1};
    checkOrderByNode(pn,columnNames,colIdx);
  }
{
    AbstractPlanNode pn=compile("select abs(C) as tag, C as C2 from T3 UNION select B,B from T2 order by tag, C2");
    pn=pn.getChild(0);
    String[] columnNames={"TAG","C2"};
    int[] colIdx={0,1};
    checkOrderByNode(pn,columnNames,colIdx);
  }
{
    AbstractPlanNode pn=compile("select cast((C+1) as integer) TAG, C as C2 from T3 UNION select B,B from T2 order by TAG");
    pn=pn.getChild(0);
    String[] columnNames={"TAG","C2"};
    int[] colIdx={0,1};
    checkOrderByNode(pn,columnNames,colIdx);
  }
}
