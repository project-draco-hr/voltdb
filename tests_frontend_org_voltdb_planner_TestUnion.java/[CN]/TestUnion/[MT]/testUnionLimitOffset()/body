{
{
    AbstractPlanNode pn=compile("select C from T3 UNION select B from T2 limit 3 offset 2");
    checkLimitNode(pn.getChild(0),3,2);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("select C from T3 UNION (select B from T2 limit 3 offset 2) ");
    assertTrue(pn.getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("select C from T3 INTERSECT select B from T2 limit 3");
    checkLimitNode(pn.getChild(0),3,0);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("select C from T3 EXCEPT select B from T2 offset 2");
    checkLimitNode(pn.getChild(0),-1,2);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("(select C from T3 EXCEPT select B from T2 offset 2) UNION select F from T6 limit 4 offset 5");
    checkLimitNode(pn.getChild(0),4,5);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
    UnionPlanNode upn=(UnionPlanNode)pn.getChild(0).getChild(0);
    checkLimitNode(upn.getChild(0),-1,2);
    assertTrue(upn.getChild(0).getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("select A from T1 EXCEPT select B from T2 offset 2");
    checkLimitNode(pn.getChild(0),-1,2);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
  }
}
