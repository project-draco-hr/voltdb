{
{
    AbstractPlanNode pn=compile("select A from T1 union ((select B from T2 UNION select B from T2) order by B)");
    pn=pn.getChild(0);
    assertTrue(pn instanceof UnionPlanNode);
    assertEquals(2,pn.getChildCount());
    assertTrue(pn.getChild(0).getChild(0) instanceof ReceivePlanNode);
    assertTrue(pn.getChild(1) instanceof OrderByPlanNode);
    pn=pn.getChild(1);
    assertTrue(pn.getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("select A from T1 union (select B from T2 UNION select B from T2 limit 3)");
    pn=pn.getChild(0);
    assertTrue(pn instanceof UnionPlanNode);
    assertEquals(2,pn.getChildCount());
    assertTrue(pn.getChild(0).getChild(0) instanceof ReceivePlanNode);
    assertTrue(pn.getChild(1) instanceof LimitPlanNode);
    pn=pn.getChild(1);
    assertTrue(pn.getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("select A from T1 union (select B from T2 UNION select B from T2 offset 3)");
    pn=pn.getChild(0);
    assertTrue(pn instanceof UnionPlanNode);
    assertEquals(2,pn.getChildCount());
    assertTrue(pn.getChild(0).getChild(0) instanceof ReceivePlanNode);
    assertTrue(pn.getChild(1) instanceof LimitPlanNode);
    pn=pn.getChild(1);
    assertTrue(pn.getChild(0) instanceof UnionPlanNode);
  }
{
    AbstractPlanNode pn=compile("(select A from T1 union select B from T2 order by A) UNION select B from T2");
    pn=pn.getChild(0);
    assertTrue(pn instanceof UnionPlanNode);
    assertEquals(2,pn.getChildCount());
    assertTrue(pn.getChild(0) instanceof OrderByPlanNode);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
    assertTrue(pn.getChild(1) instanceof SeqScanPlanNode);
  }
{
    AbstractPlanNode pn=compile("(select A from T1 union select B from T2 offset 1) UNION select B from T2");
    pn=pn.getChild(0);
    assertTrue(pn instanceof UnionPlanNode);
    assertEquals(2,pn.getChildCount());
    assertTrue(pn.getChild(0) instanceof LimitPlanNode);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
    assertTrue(pn.getChild(1) instanceof SeqScanPlanNode);
  }
{
    AbstractPlanNode pn=compile("(select A from T1 union select B from T2 limit 1) UNION select B from T2");
    pn=pn.getChild(0);
    assertTrue(pn instanceof UnionPlanNode);
    assertEquals(2,pn.getChildCount());
    assertTrue(pn.getChild(0) instanceof LimitPlanNode);
    assertTrue(pn.getChild(0).getChild(0) instanceof UnionPlanNode);
    assertTrue(pn.getChild(1) instanceof SeqScanPlanNode);
  }
}
