{
  boolean result;
  ReplaySequencer dut=new ReplaySequencer();
  TransactionInfoBaseMessage frag=makeFragment(1L);
  TransactionInfoBaseMessage complete=makeCompleteTxn(1L);
  TransactionInfoBaseMessage frag3=makeFragment(2L);
  result=dut.offer(1L,frag);
  Assert.assertTrue(result);
  Assert.assertNull(dut.poll());
  Assert.assertNull(dut.drain());
  result=dut.offer(1L,complete);
  Assert.assertTrue(result);
  Assert.assertNull(dut.poll());
  Assert.assertNull(dut.drain());
  result=dut.offer(2L,frag3);
  Assert.assertTrue(result);
  Assert.assertNull(dut.poll());
  Assert.assertNull(dut.drain());
  Assert.assertTrue(dut.offer(1L,makeSentinel(1L)));
  Assert.assertEquals(frag,dut.poll());
  Assert.assertEquals(complete,dut.poll());
  Assert.assertNull(dut.poll());
  Assert.assertTrue(dut.offer(2L,makeSentinel(2L)));
  Assert.assertEquals(frag3,dut.poll());
  Assert.assertNull(dut.poll());
  Assert.assertNull(dut.drain());
}
