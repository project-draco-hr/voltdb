{
  Preconditions.checkArgument(m_tableTasks.size() == serialized.length);
  Preconditions.checkArgument(outputBuffers.size() == serialized.length);
  final List<ListenableFuture<?>> writeFutures=new ArrayList<ListenableFuture<?>>(outputBuffers.size());
  Iterator<DBBPool.BBContainer> containerIter=outputBuffers.iterator();
  int serializedIndex=0;
  for (  SnapshotTableTask task : m_tableTasks) {
    final DBBPool.BBContainer container=containerIter.next();
    container.b().limit(serialized[serializedIndex++] + task.m_target.getHeaderSize());
    container.b().position(0);
    Callable<DBBPool.BBContainer> valueForTarget=Callables.returning(container);
    if (task.m_filters != null) {
      for (      SnapshotDataFilter filter : task.m_filters) {
        valueForTarget=filter.filter(valueForTarget);
      }
    }
    ListenableFuture<?> writeFuture=task.m_target.write(valueForTarget,m_tableId);
    if (writeFuture != null) {
      writeFutures.add(writeFuture);
    }
  }
  return Futures.allAsList(writeFutures);
}
