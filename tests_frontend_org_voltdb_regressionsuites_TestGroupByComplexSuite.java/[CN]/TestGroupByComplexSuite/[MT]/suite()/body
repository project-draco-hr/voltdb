{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestGroupByComplexSuite.class);
  String addProcs="";
  for (  String tb : tbs) {
    addProcs+="CREATE PROCEDURE " + tb + "_GroupbyAlias1 AS "+ " SELECT (dept+?) as tag, count(wage) from "+ tb+ " GROUP BY tag ORDER BY tag;";
    addProcs+="CREATE PROCEDURE " + tb + "_GroupbyAlias2 AS "+ " SELECT abs(dept+?) as tag, count(wage)+1 from "+ tb+ " GROUP BY tag ORDER BY tag;";
  }
  VoltProjectBuilder project=new VoltProjectBuilder();
  final String literalSchema="CREATE TABLE R1 ( " + "ID INTEGER DEFAULT 0 NOT NULL, " + "WAGE INTEGER, "+ "DEPT INTEGER, "+ "TM TIMESTAMP DEFAULT NULL, "+ "PRIMARY KEY (ID) );"+ "CREATE TABLE P1 ( "+ "ID INTEGER DEFAULT 0 NOT NULL, "+ "WAGE INTEGER NOT NULL, "+ "DEPT INTEGER NOT NULL, "+ "TM TIMESTAMP DEFAULT NULL, "+ "PRIMARY KEY (ID) );"+ "PARTITION TABLE P1 ON COLUMN ID;"+ "CREATE TABLE P2 ( "+ "ID INTEGER DEFAULT 0 NOT NULL ASSUMEUNIQUE, "+ "WAGE INTEGER NOT NULL, "+ "DEPT INTEGER NOT NULL, "+ "TM TIMESTAMP DEFAULT NULL, "+ "PRIMARY KEY (ID, DEPT) );"+ "PARTITION TABLE P2 ON COLUMN DEPT;"+ "CREATE TABLE P3 ( "+ "ID INTEGER DEFAULT 0 NOT NULL ASSUMEUNIQUE, "+ "WAGE INTEGER NOT NULL, "+ "DEPT INTEGER NOT NULL, "+ "TM TIMESTAMP DEFAULT NULL, "+ "PRIMARY KEY (ID, WAGE) );"+ "PARTITION TABLE P3 ON COLUMN WAGE;"+ addProcs;
  try {
    project.addLiteralSchema(literalSchema);
  }
 catch (  IOException e) {
    assertFalse(true);
  }
  boolean success;
  config=new LocalCluster("plansgroupby-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("plansgroupby-hsql.jar",1,1,0,BackendTarget.HSQLDB_BACKEND);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("plansgroupby-cluster.jar",2,3,1,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  return builder;
}
