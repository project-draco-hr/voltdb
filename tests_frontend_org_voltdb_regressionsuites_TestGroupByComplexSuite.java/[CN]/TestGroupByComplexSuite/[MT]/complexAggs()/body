{
  loadData(false);
  Client client=getClient();
  String query;
  ClientResponse cr;
  VoltTable vt;
  long[][] expected;
  for (  String tb : tbs) {
    query="SELECT dept, sum(wage), count(wage)+5, " + "sum(wage)/count(wage) " + "FROM " + tb + " GROUP BY dept ORDER BY dept DESC;";
    cr=client.callProcedure("@AdHoc",query);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2,90,7,45},{1,60,8,20}};
    validateTableOfLongs(vt,expected);
    query="SELECT sum(wage)/count(wage) + 1, dept, " + "SUM(wage+1), SUM(wage)/2 " + "FROM " + tb + " GROUP BY dept ORDER BY dept";
    cr=client.callProcedure("@AdHoc",query);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{21,1,63,30},{46,2,92,45}};
    validateTableOfLongs(vt,expected);
    query="SELECT dept, SUM(ABS(wage) - 1) as tag, " + "(count(*)+sum(dept*2))/2 " + "FROM " + tb + " GROUP BY dept ORDER BY ABS(dept)";
    cr=client.callProcedure("@AdHoc",query);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,57,4},{2,88,5}};
    validateTableOfLongs(vt,expected);
    query="SELECT dept, SUM(wage), COUNT(wage), AVG(wage), " + "MAX(wage), MIN(wage), SUM(wage)/COUNT(wage),  " + "MAX(wage)+MIN(wage)+1 "+ "FROM " + tb + " GROUP BY dept ORDER BY dept";
    cr=client.callProcedure("@AdHoc",query);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,60,3,20,30,10,20,41},{2,90,2,45,50,40,45,91}};
    validateTableOfLongs(vt,expected);
  }
}
