def test_validate_invalid_hostname(self):
    '\n        ensure host name is not empty\n        '
    headers = {'Content-Type': 'application/json; charset=utf-8', }
    response = requests.get(__db_url__)
    value = response.json()
    if value:
        db_length = len(value['databases'])
        last_db_id = value['databases'][(db_length - 1)]['id']
        url = ('http://%s:8000/api/1.0/databases/%u/servers/' % (__host_or_ip__, last_db_id))
        response = requests.get(url)
        value = response.json()
        if value:
            server_length = len(value['members'])
            last_server_id = value['members'][(server_length - 1)]['id']
            url = ('http://%s:8000/api/1.0/databases/%u/servers/%u/' % (__host_or_ip__, last_db_id, last_server_id))
            data = {'description': 'test', 'hostname': '3333', 'name': 'test', }
            response = requests.put(url, json=data, headers=headers)
            value = response.json()
            self.assertEqual(value['errors'][0], 'Invalid IP address.')
            self.assertEqual(response.status_code, 200)
        else:
            print 'The Server list is empty'
