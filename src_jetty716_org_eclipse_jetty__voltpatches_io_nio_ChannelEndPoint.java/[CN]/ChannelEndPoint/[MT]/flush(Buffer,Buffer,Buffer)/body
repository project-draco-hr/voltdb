{
  int length=0;
  Buffer buf0=header == null ? null : header.buffer();
  Buffer buf1=buffer == null ? null : buffer.buffer();
  if (_channel instanceof GatheringByteChannel && header != null && header.length() != 0 && buf0 instanceof NIOBuffer && buffer != null && buffer.length() != 0 && buf1 instanceof NIOBuffer) {
    final NIOBuffer nbuf0=(NIOBuffer)buf0;
    final ByteBuffer bbuf0=nbuf0.getByteBuffer();
    final NIOBuffer nbuf1=(NIOBuffer)buf1;
    final ByteBuffer bbuf1=nbuf1.getByteBuffer();
synchronized (this) {
synchronized (bbuf0) {
synchronized (bbuf1) {
          try {
            bbuf0.position(header.getIndex());
            bbuf0.limit(header.putIndex());
            bbuf1.position(buffer.getIndex());
            bbuf1.limit(buffer.putIndex());
            _gather2[0]=bbuf0;
            _gather2[1]=bbuf1;
            length=(int)((GatheringByteChannel)_channel).write(_gather2);
            int hl=header.length();
            if (length > hl) {
              header.clear();
              buffer.skip(length - hl);
            }
 else             if (length > 0) {
              header.skip(length);
            }
          }
  finally {
            if (!header.isImmutable())             header.setGetIndex(bbuf0.position());
            if (!buffer.isImmutable())             buffer.setGetIndex(bbuf1.position());
            bbuf0.position(0);
            bbuf1.position(0);
            bbuf0.limit(bbuf0.capacity());
            bbuf1.limit(bbuf1.capacity());
          }
        }
      }
    }
  }
 else {
    if (header != null) {
      if (buffer != null && buffer.length() > 0 && header.space() > buffer.length()) {
        header.put(buffer);
        buffer.clear();
      }
      if (trailer != null && trailer.length() > 0 && header.space() > trailer.length()) {
        header.put(trailer);
        trailer.clear();
      }
    }
    if (header != null && header.length() > 0)     length=flush(header);
    if ((header == null || header.length() == 0) && buffer != null && buffer.length() > 0)     length+=flush(buffer);
    if ((header == null || header.length() == 0) && (buffer == null || buffer.length() == 0) && trailer != null && trailer.length() > 0)     length+=flush(trailer);
  }
  return length;
}
