def __init__(self, lexicon, flags=FLAGS):
    self.actions = [None]
    s = sre_parse.Pattern()
    s.flags = flags
    p = []
    for (idx, token) in enumerate(lexicon):
        phrase = token.pattern
        try:
            subpattern = sre_parse.SubPattern(s, [(SUBPATTERN, ((idx + 1), sre_parse.parse(phrase, flags)))])
        except sre_constants.error:
            raise
        p.append(subpattern)
        self.actions.append(token)
    s.groups = (len(p) + 1)
    p = sre_parse.SubPattern(s, [(BRANCH, (None, p))])
    self.scanner = sre_compile.compile(p)
