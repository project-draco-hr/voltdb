{
  checkNotNull(entry);
  checkNotNull(constraint);
  return new ForwardingMapEntry<K,Collection<V>>(){
    @Override protected Entry<K,Collection<V>> delegate(){
      return entry;
    }
    @Override public Collection<V> getValue(){
      return Constraints.constrainedTypePreservingCollection(entry.getValue(),new Constraint<V>(){
        @Override public V checkElement(        V value){
          constraint.checkKeyValue(getKey(),value);
          return value;
        }
      }
);
    }
  }
;
}
