{
  AbstractPlanNode pn;
  AbstractPlanNode n;
  pn=compile("select * FROM R1, R3 RIGHT JOIN R2 ON R1.A = R2.A WHERE R3.C = R1.C");
  n=pn.getChild(0).getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.INNER,true,PlanNodeType.NESTLOOP,PlanNodeType.SEQSCAN);
  n=n.getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.INNER,true,PlanNodeType.SEQSCAN,PlanNodeType.SEQSCAN);
  pn=compile("select * FROM R1 LEFT JOIN R2 ON R1.A = R2.A LEFT JOIN R3 ON R3.C = R2.C");
  n=pn.getChild(0).getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.NESTLOOP,PlanNodeType.SEQSCAN,null,"R3");
  n=n.getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.SEQSCAN,PlanNodeType.SEQSCAN,"R1","R2");
  pn=compile("select * FROM R1 LEFT JOIN R2 ON R1.A = R2.A RIGHT JOIN R3 ON R3.C = R2.C");
  n=pn.getChild(0).getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.SEQSCAN,PlanNodeType.NESTLOOP,"R3",null);
  n=n.getChild(1);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.INNER,true,PlanNodeType.SEQSCAN,PlanNodeType.SEQSCAN);
  pn=compile("select * FROM " + "R1 FULL JOIN R2 ON R1.A = R2.A " + "RIGHT JOIN R3 ON R3.A = R1.A");
  n=pn.getChild(0).getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.SEQSCAN,PlanNodeType.NESTLOOP,"R3",null);
  n=n.getChild(1);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.SEQSCAN,PlanNodeType.SEQSCAN,"R1","R2");
  pn=compile("select * FROM " + "R1 FULL JOIN R2 ON R1.A = R2.A " + "RIGHT JOIN R3 ON R3.A = R2.A");
  n=pn.getChild(0).getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.SEQSCAN,PlanNodeType.NESTLOOP,"R3",null);
  n=n.getChild(1);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.SEQSCAN,PlanNodeType.SEQSCAN,"R2","R1");
  pn=compile("select * FROM " + "R1 FULL JOIN R2 ON R1.A = R2.A " + "RIGHT JOIN R3 ON R3.A = R2.A AND R3.A = R1.A");
  n=pn.getChild(0).getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.LEFT,true,PlanNodeType.SEQSCAN,PlanNodeType.NESTLOOP,"R3",null);
  n=n.getChild(1);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.INNER,true,PlanNodeType.SEQSCAN,PlanNodeType.SEQSCAN);
  pn=compile("select * FROM " + "R1 RIGHT JOIN R2 ON R1.A = R2.A " + "JOIN R3 ON R1.A = R3.A "+ "FULL JOIN R4 ON R1.A = R4.A "+ "FULL JOIN R5 ON R1.A = R5.A");
  n=pn.getChild(0).getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOPINDEX,JoinType.FULL,false,PlanNodeType.NESTLOOPINDEX,PlanNodeType.INDEXSCAN,null,"R5");
  n=n.getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOPINDEX,JoinType.LEFT,false,PlanNodeType.NESTLOOP,PlanNodeType.INDEXSCAN,null,"R4");
  n=n.getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOP,JoinType.INNER,true,PlanNodeType.NESTLOOPINDEX,PlanNodeType.SEQSCAN,null,"R2");
  n=n.getChild(0);
  verifyJoinNode(n,PlanNodeType.NESTLOOPINDEX,JoinType.INNER,false,PlanNodeType.SEQSCAN,PlanNodeType.INDEXSCAN,"R1","R3");
}
