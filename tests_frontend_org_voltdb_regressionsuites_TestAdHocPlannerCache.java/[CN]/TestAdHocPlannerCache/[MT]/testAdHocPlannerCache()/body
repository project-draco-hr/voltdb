{
  System.out.println("testAdHocPlannerCache...");
  resetStatistics();
  Client client=getClient();
  VoltTable vt;
  String sql;
  client.callProcedure("R1.insert",1,"foo1",0,1.1);
  client.callProcedure("R1.insert",2,"foo2",0,2.2);
  client.callProcedure("R1.insert",3,"foo3",1,3.3);
  sql="SELECT ID FROM R1 B order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2,3});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2,3});
  checkPlannerCache(client,CACHE_HIT1);
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2,3});
  checkPlannerCache(client,CACHE_HIT1);
  sql="SELECT ID FROM R1 C order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2,3});
  checkPlannerCache(client,CACHE_MISS2);
  sql="SELECT ID FROM R1 B WHERE B.ID > 1 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2,3});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2,3});
  checkPlannerCache(client,CACHE_HIT1);
  sql="SELECT ID FROM R1 B WHERE B.ID > 2 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 B WHERE B.ID > ? ORDER BY ID;";
  vt=client.callProcedure("@AdHoc",sql,1).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2,3});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql,2).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_HIT2);
  vt=client.callProcedure("@AdHoc",sql,3).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 B WHERE num = 0 and B.ID > ? order by ID;";
  vt=client.callProcedure("@AdHoc",sql,0).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql,1).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2});
  checkPlannerCache(client,CACHE_HIT2);
  vt=client.callProcedure("@AdHoc",sql,3).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 B WHERE num = 1 and B.ID > ? order by ID;";
  vt=client.callProcedure("@AdHoc",sql,0).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql,3).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 B WHERE num = ? and B.ID > ? order by ID;";
  vt=client.callProcedure("@AdHoc",sql,0,0).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql,1,2).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_HIT2);
}
