{
  System.out.println("subtest3AdHocBadParameters...");
  String sql;
  VoltTable vt;
  sql="SELECT ID FROM R1 sub3 WHERE ID > 1.8 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2,3});
  checkPlannerCache(client,CACHE_MISS1);
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2,3});
  checkPlannerCache(client,CACHE_HIT1);
  sql="SELECT ID FROM R1 sub3 WHERE ID > 1 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2,3});
  checkPlannerCache(client,CACHE_MISS2_ADD1);
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2,3});
  checkPlannerCache(client,CACHE_HIT1);
  sql="SELECT ID FROM R1 sub3 WHERE ID > 2 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_HIT2_ADD1);
  sql="SELECT ID FROM R1 sub3 WHERE ID > ? order by ID;";
  String errorMsg="java.lang.Double is not a match or is out of range for the target parameter type: long";
  verifyAdHocFails(client,errorMsg,sql,1.8);
  checkPlannerCache(client,CACHE_MISS2);
  verifyAdHocFails(client,"tryToMakeCompatible",sql,1.8);
  checkPlannerCache(client,CACHE_HIT2);
  vt=client.callProcedure("@AdHoc",sql,2).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 sub3 WHERE NUM > 0 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_MISS2_ADD1);
  sql="SELECT ID FROM R1 sub3 WHERE NUM > 0.8 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_MISS1);
  sql="SELECT ID FROM R1 sub3 WHERE NUM > 0.9 order by ID;";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_MISS1);
}
