{
  System.out.println("subtest6ExpressionIndex...");
  String sql;
  VoltTable vt;
  sql="SELECT ID FROM R1 sub6 WHERE ABS(NUM-1) = 1 AND ID >= ? ORDER BY ID;";
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(vt.toString().contains("ABSIDX"));
  checkPlannerCache(client,CACHE_PARAMS_EXCEPTION);
  vt=client.callProcedure("@AdHoc",sql,1).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql,2).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{2});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 sub6 WHERE ABS(NUM-0) = 1 AND ID >= ? ORDER BY ID;";
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertFalse(vt.toString().contains("ABSIDX"));
  checkPlannerCache(client,CACHE_PARAMS_EXCEPTION);
  vt=client.callProcedure("@AdHoc",sql,1).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql,4).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 sub6 WHERE ABS(NUM-?) = 1 AND ID >= ? ORDER BY ID;";
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertFalse(vt.toString().contains("ABSIDX"));
  checkPlannerCache(client,CACHE_PARAMS_EXCEPTION);
  vt=client.callProcedure("@AdHoc",sql,0,1).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{3});
  checkPlannerCache(client,CACHE_MISS2);
  vt=client.callProcedure("@AdHoc",sql,1,1).getResults()[0];
  validateTableOfScalarLongs(vt,new long[]{1,2});
  checkPlannerCache(client,CACHE_HIT2);
  sql="SELECT ID FROM R1 sub6 WHERE ABS(NUM-1) = 1 AND ID >= 1 ORDER BY ID;";
  vt=client.callProcedure("@Explain",sql).getResults()[0];
  assertTrue(vt.toString().contains("ABSIDX"));
  checkPlannerCache(client,CACHE_MISS2_ADD1);
  validateTableOfScalarLongs(client,sql,new long[]{1,2});
  checkPlannerCache(client,CACHE_HIT1);
}
