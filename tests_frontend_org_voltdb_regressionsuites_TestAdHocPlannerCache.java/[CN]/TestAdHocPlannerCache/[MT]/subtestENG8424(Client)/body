{
  System.out.println("subtestENG8424...");
  VoltTable vt;
  long l1Before=ExecutionEngine.EE_PLAN_CACHE_SIZE + 1;
  long l1After=ExecutionEngine.EE_PLAN_CACHE_SIZE + 1;
  vt=client.callProcedure("@Statistics","PLANNER",0).getResults()[0];
  assertTrue(vt.getRowCount() > 0);
  while (vt.advanceRow()) {
    Integer siteID=(Integer)vt.get("SITE_ID",VoltType.INTEGER);
    assertNotNull(siteID);
    if (siteID == -1) {
      continue;
    }
    l1Before=vt.getLong("CACHE1_LEVEL");
    break;
  }
  assertTrue(l1Before <= ExecutionEngine.EE_PLAN_CACHE_SIZE);
  client.callProcedure("@AdHoc","select * from R1 as ENG8424;");
  ++m_cache1_level;
  ++m_cache_misses;
  vt=client.callProcedure("@Statistics","PLANNER",0).getResults()[0];
  assertTrue(vt.getRowCount() > 0);
  while (vt.advanceRow()) {
    Integer siteID=(Integer)vt.get("SITE_ID",VoltType.INTEGER);
    assertNotNull(siteID);
    if (siteID == -1) {
      continue;
    }
    l1After=vt.getLong("CACHE1_LEVEL");
    break;
  }
  assertTrue(l1After <= ExecutionEngine.EE_PLAN_CACHE_SIZE);
  assertEquals(l1Before + 1,l1After);
}
