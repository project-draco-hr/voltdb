{
  MockVoltDB mockvolt=new MockVoltDB();
  VoltDB.replaceVoltDBInstanceForTest(mockvolt);
  int internalPort=new VoltDB.Configuration().m_internalPort;
  try {
    Selector.open();
  }
 catch (  IOException ex) {
    throw new RuntimeException(ex);
  }
  VoltNetwork network=new VoltNetwork();
  network.start();
  HostMessenger msg1=new HostMessenger(network,ConnectionUtil.getLocalAddress(),2,0,null);
  Thread.sleep(20);
  HostMessenger msg2=new HostMessenger(network,ConnectionUtil.getLocalAddress(),2,0,null);
  System.out.println("Waiting for socketjoiners...");
  msg1.waitForGroupJoin();
  System.out.println("Finished socket joiner for msg1");
  msg2.waitForGroupJoin();
  System.out.println("Finished socket joiner for msg2");
  assertEquals(0,msg1.getHostId());
  assertEquals(1,msg2.getHostId());
  int siteId1=msg1.getHostId() * VoltDB.SITES_TO_HOST_DIVISOR + 1;
  int siteId2=msg2.getHostId() * VoltDB.SITES_TO_HOST_DIVISOR + 2;
  msg1.createLocalSite(siteId1);
  msg2.createLocalSite(siteId2);
  msg2.shutdown();
  Thread.sleep(20);
  MockNewNode newnode=new MockNewNode(internalPort);
  newnode.start();
  msg1.rejoinForeignHostPrepare(1,new InetSocketAddress(internalPort));
  msg1.rejoinForeignHostCommit();
  newnode.join(1000);
  if (newnode.isAlive())   fail();
  msg1.shutdown();
  network.shutdown();
}
