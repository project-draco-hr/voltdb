{
  int slen=s.length();
  char[] dest=Platform.charBufferFromThreadLocal();
  int destSize=dest.length;
  int destIndex=0;
  int lastEscape=0;
  for (; index < slen; index++) {
    char[] r=escape(s.charAt(index));
    if (r == null)     continue;
    int rlen=r.length;
    int charsSkipped=index - lastEscape;
    int sizeNeeded=destIndex + charsSkipped + rlen;
    if (destSize < sizeNeeded) {
      destSize=sizeNeeded + DEST_PAD_MULTIPLIER * (slen - index);
      dest=growBuffer(dest,destIndex,destSize);
    }
    if (charsSkipped > 0) {
      s.getChars(lastEscape,index,dest,destIndex);
      destIndex+=charsSkipped;
    }
    if (rlen > 0) {
      System.arraycopy(r,0,dest,destIndex,rlen);
      destIndex+=rlen;
    }
    lastEscape=index + 1;
  }
  int charsLeft=slen - lastEscape;
  if (charsLeft > 0) {
    int sizeNeeded=destIndex + charsLeft;
    if (destSize < sizeNeeded) {
      dest=growBuffer(dest,destIndex,sizeNeeded);
    }
    s.getChars(lastEscape,slen,dest,destIndex);
    destIndex=sizeNeeded;
  }
  return new String(dest,0,destIndex);
}
