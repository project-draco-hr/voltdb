{
  BigInteger sqrt0;
  int log2=log2(x,FLOOR);
  if (log2 < Double.MAX_EXPONENT) {
    sqrt0=sqrtApproxWithDoubles(x);
  }
 else {
    int shift=(log2 - DoubleUtils.SIGNIFICAND_BITS) & ~1;
    sqrt0=sqrtApproxWithDoubles(x.shiftRight(shift)).shiftLeft(shift >> 1);
  }
  BigInteger sqrt1=sqrt0.add(x.divide(sqrt0)).shiftRight(1);
  if (sqrt0.equals(sqrt1)) {
    return sqrt0;
  }
  do {
    sqrt0=sqrt1;
    sqrt1=sqrt0.add(x.divide(sqrt0)).shiftRight(1);
  }
 while (sqrt1.compareTo(sqrt0) < 0);
  return sqrt0;
}
