{
  this.cmdName=cmdName;
  try {
    options.addOption("help",false,"Print this message");
    for (    Field field : getClass().getDeclaredFields()) {
      if (field.isAnnotationPresent(Option.class)) {
        Option option=field.getAnnotation(Option.class);
        String opt=option.opt();
        if ((opt == null) || (opt.trim().length() == 0)) {
          opt=field.getName();
        }
        String shortopt=option.shortOpt();
        if ((shortopt == null) || (shortopt.trim().length() == 0)) {
          options.addOption(opt,option.hasArg(),option.desc());
        }
 else {
          options.addOption(opt,shortopt,option.hasArg(),option.desc());
        }
      }
      if (field.isAnnotationPresent(AdditionalArgs.class)) {
        AdditionalArgs additionalArgs=field.getAnnotation(AdditionalArgs.class);
        String opt=additionalArgs.opt();
        if ((opt == null) || (opt.trim().length() == 0)) {
          opt=field.getName();
        }
      }
    }
    CommandLineParser parser=new PosixParser();
    CommandLine cmd=parser.parse(options,args);
    if (cmd.hasOption("help")) {
      printUsage();
      System.exit(0);
    }
    String[] leftargs=cmd.getArgs();
    if (leftargs != null) {
    }
    Map<String,String> kvMap=new TreeMap<String,String>();
    for (    Field field : getClass().getDeclaredFields()) {
      if (field.isAnnotationPresent(Option.class) == false) {
        continue;
      }
      Option option=field.getAnnotation(Option.class);
      String opt=option.opt();
      if ((opt == null) || (opt.trim().length() == 0)) {
        opt=field.getName();
      }
      if (cmd.hasOption(opt)) {
        if (option.hasArg()) {
          assignValueToField(field,cmd.getOptionValue(opt));
        }
 else {
          if (field.getType().equals(boolean.class) || field.getType().equals(Boolean.class)) {
            field.setAccessible(true);
            try {
              field.set(this,true);
            }
 catch (            Exception e) {
              e.printStackTrace();
            }
          }
 else {
            printUsage();
          }
        }
      }
 else {
        if (option.required()) {
          printUsage();
        }
      }
      field.setAccessible(true);
      kvMap.put(opt,field.get(this).toString());
    }
    validate();
    StringBuilder sb=new StringBuilder();
    for (    Entry<String,String> e : kvMap.entrySet()) {
      sb.append(e.getKey()).append(" = ").append(e.getValue()).append("\n");
    }
    configDump=sb.toString();
  }
 catch (  Exception e) {
    System.err.println("Parsing failed. Reason: " + e.getMessage());
    printUsage();
    System.exit(-1);
  }
}
