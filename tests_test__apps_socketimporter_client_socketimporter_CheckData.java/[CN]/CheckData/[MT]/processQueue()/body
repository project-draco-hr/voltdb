{
  while (m_queue.size() > 0 || m_delete_queue.size() > 0) {
    Pair<Long,Long> p=m_queue.poll();
    try {
      if (p != null) {
        Long key=p.getFirst();
        boolean ret=m_client.callProcedure(new SelectCallback(m_queue,p,key),MY_SELECT_PROCEDURE,key);
        if (!ret) {
          System.out.println("Select call failed!");
        }
      }
      Pair<Long,Long> p2=m_delete_queue.poll();
      if (p2 != null) {
        boolean ret=m_client.callProcedure(new DeleteCallback(m_delete_queue,p2),MY_DELETE_PROCEDURE,p2.getFirst());
        if (!ret) {
          System.out.println("Delete call failed!");
        }
      }
      AsyncBenchmark.rowsChecked.incrementAndGet();
    }
 catch (    NoConnectionsException e) {
      e.printStackTrace();
      System.exit(1);
    }
catch (    IOException e) {
      e.printStackTrace();
      System.exit(1);
    }
catch (    Exception e) {
      e.printStackTrace();
      System.exit(1);
    }
  }
}
