{
switch (table.getTableType()) {
case TableBase.CACHED_TABLE:
    DataFileCache cache=getCache();
  if (cache == null) {
    break;
  }
return new RowStoreAVLDisk(collection,cache,(Table)table);
case TableBase.MEMORY_TABLE:
case TableBase.SYSTEM_TABLE:
return new RowStoreAVLMemory(collection,(Table)table);
case TableBase.TEXT_TABLE:
return new RowStoreAVLDiskData(collection,(Table)table);
case TableBase.TEMP_TABLE:
diskBased=false;
case TableBase.RESULT_TABLE:
case TableBase.SYSTEM_SUBQUERY:
case TableBase.VIEW_TABLE:
case TableBase.TRANSITION_TABLE:
if (session == null) {
return null;
}
switch (table.persistenceScope) {
case TableBase.SCOPE_STATEMENT:
return new RowStoreAVLHybrid(session,collection,table,diskBased);
case TableBase.SCOPE_TRANSACTION:
return new RowStoreAVLHybrid(session,collection,table,diskBased);
case TableBase.SCOPE_SESSION:
return new RowStoreAVLHybrid(session,collection,table,diskBased);
}
}
throw Error.runtimeError(ErrorCode.U_S0500,"PSCS");
}
