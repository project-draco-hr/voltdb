{
  if (!IndexType.isScannable(index.getType())) {
    return false;
  }
  String exprsjson=index.getExpressionsjson();
  if (exprsjson.isEmpty()) {
    if (aggExpr.getExpressionType() != ExpressionType.VALUE_TUPLE) {
      return false;
    }
    return checkPureColumnIndex(index,((TupleValueExpression)aggExpr).getColumnIndex(),filterExprs);
  }
 else {
    List<AbstractExpression> indexedExprs=null;
    int idx=m_parsedStmt.tableAliasIndexMap.get(fromTableAlias);
    StmtTableScan tableScan=m_parsedStmt.stmtCache.get(idx);
    try {
      List<AbstractExpression> tmpList=AbstractExpression.fromJSONArrayString(exprsjson);
      indexedExprs=new ArrayList<AbstractExpression>();
      for (      AbstractExpression expr : tmpList) {
        indexedExprs.add(expr.replaceTVEsWithAlias(tableScan));
      }
    }
 catch (    JSONException e) {
      e.printStackTrace();
      assert(false);
      return false;
    }
    return checkExpressionIndex(indexedExprs,aggExpr,filterExprs,bindingExprs);
  }
}
