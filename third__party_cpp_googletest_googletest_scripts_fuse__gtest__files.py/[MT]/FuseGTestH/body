def FuseGTestH(gtest_root, output_dir):
    'Scans folder gtest_root to generate gtest/gtest.h in output_dir.'
    output_file = file(os.path.join(output_dir, GTEST_H_OUTPUT), 'w')
    processed_files = sets.Set()

    def ProcessFile(gtest_header_path):
        'Processes the given gtest header file.'
        if (gtest_header_path in processed_files):
            return
        processed_files.add(gtest_header_path)
        for line in file(os.path.join(gtest_root, gtest_header_path), 'r'):
            m = INCLUDE_GTEST_FILE_REGEX.match(line)
            if m:
                ProcessFile(('include/' + m.group(1)))
            else:
                output_file.write(line)
    ProcessFile(GTEST_H_SEED)
    output_file.close()
