{
  LinkedList<Integer> neighborIDList=new LinkedList<Integer>();
  if (id / NUM_COLS > 0 && id % NUM_COLS > 0)   neighborIDList.add(id - NUM_COLS - 1);
  if (id / NUM_COLS > 0)   neighborIDList.add(id - NUM_COLS);
  if (id / NUM_COLS > 0 && id % NUM_COLS < NUM_COLS - 1)   neighborIDList.add(id - NUM_COLS + 1);
  if (id % NUM_COLS > 0)   neighborIDList.add(id - 1);
  if (id % NUM_COLS < NUM_COLS - 1)   neighborIDList.add(id + 1);
  if (id / NUM_COLS < NUM_ROWS - 1 && id % NUM_COLS > 0)   neighborIDList.add(id + NUM_COLS - 1);
  if (id / NUM_COLS < NUM_ROWS - 1)   neighborIDList.add(id + NUM_COLS);
  if (id / NUM_COLS < NUM_ROWS - 1 && id % NUM_COLS < NUM_COLS - 1)   neighborIDList.add(id + NUM_COLS + 1);
  ListIterator<Integer> li=neighborIDList.listIterator();
  int[] neighborIDs=new int[neighborIDList.size()];
  int i=0;
  while (li.hasNext()) {
    neighborIDs[i]=li.next();
    i++;
  }
  return neighborIDs;
}
