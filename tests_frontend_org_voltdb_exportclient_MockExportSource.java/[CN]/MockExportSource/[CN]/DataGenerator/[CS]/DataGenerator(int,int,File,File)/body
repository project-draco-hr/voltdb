{
  m_delay=delay;
  m_blockSize=blockSize;
  m_tupleCount=0;
  VoltTable schemaTemp=null;
  CSVReader csvTemp=null;
  try {
    FileReader fr=new FileReader(schema);
    BufferedReader reader=new BufferedReader(fr);
    StringBuilder content=new StringBuilder();
    String line;
    while ((line=reader.readLine()) != null) {
      content.append(line);
    }
    fr.close();
    JSONObject jsonObj=new JSONObject(content.toString());
    JSONArray columns=jsonObj.getJSONArray("columns");
    VoltTable.ColumnInfo[] colInfo=new VoltTable.ColumnInfo[columns.length()];
    for (int i=0; i < columns.length(); i++) {
      JSONObject column=columns.getJSONObject(i);
      assert(column != null);
      String columnName=column.getString("name");
      String columnType=column.getString("type");
      VoltType vtype=VoltType.typeFromString(columnType);
      colInfo[i]=new VoltTable.ColumnInfo(columnName,vtype);
    }
    schemaTemp=new VoltTable(colInfo);
    csvTemp=new CSVReader(new FileReader(csvdata));
  }
 catch (  Exception e) {
    e.printStackTrace();
    System.exit(-1);
  }
  m_schema=schemaTemp;
  m_csv=csvTemp;
}
