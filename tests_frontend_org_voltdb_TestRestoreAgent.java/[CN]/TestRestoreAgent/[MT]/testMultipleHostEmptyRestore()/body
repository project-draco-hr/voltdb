{
  m_hostCount=3;
  buildCatalog(m_hostCount,8,0,newVoltRoot(null),false,true);
  MockInitiator initiator=new MockInitiator(null);
  List<RestoreAgent> agents=new ArrayList<RestoreAgent>();
  for (int i=0; i < m_hostCount; i++) {
    agents.add(getRestoreAgent(initiator,i));
  }
  ExecutorService ex=Executors.newFixedThreadPool(3);
  final AtomicInteger failure=new AtomicInteger();
  for (  final RestoreAgent agent : agents) {
    ex.submit(new Runnable(){
      @Override public void run(){
        agent.createZKDirectory(VoltZK.restore);
        agent.createZKDirectory(VoltZK.restore_barrier);
        agent.createZKDirectory(VoltZK.restore_barrier + "2");
        agent.enterRestore();
        try {
          if (agent.generatePlans() != null) {
            failure.incrementAndGet();
          }
        }
 catch (        Exception e) {
          failure.incrementAndGet();
        }
      }
    }
);
  }
  ex.shutdown();
  assertTrue(ex.awaitTermination(10,TimeUnit.SECONDS));
  assertEquals(0,failure.get());
}
