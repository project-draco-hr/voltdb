{
  calTemp.setTimeInMillis(visitTimeMillis);
  calTemp.set(Calendar.HOUR_OF_DAY,0);
  calTemp.set(Calendar.MINUTE,0);
  calTemp.set(Calendar.SECOND,0);
  calTemp.set(Calendar.MILLISECOND,0);
  long visitTimeStartOfDayMillis=calTemp.getTimeInMillis();
  calTemp.set(Calendar.HOUR_OF_DAY,23);
  calTemp.set(Calendar.MINUTE,59);
  calTemp.set(Calendar.SECOND,59);
  calTemp.set(Calendar.MILLISECOND,999);
  long visitTimeEndOfDayMillis=calTemp.getTimeInMillis();
  voltQueueSQL(checkArchived,userId,field1,field2,field3,visitTimeStartOfDayMillis,visitTimeEndOfDayMillis);
  voltQueueSQL(checkUnArchived,userId,field1,field2,field3,visitTimeStartOfDayMillis,visitTimeEndOfDayMillis);
  VoltTable results1[]=voltExecuteSQL();
  int sqlStatements=0;
  if (results1[0].getRowCount() == 0) {
    if (results1[1].getRowCount() == 1) {
      if (results1[1].fetchRow(0).getLong(0) > visitTimeMillis) {
        voltQueueSQL(updateUnArchived,visitTimeMillis,userId,field1,field2,field3,visitTimeStartOfDayMillis,visitTimeEndOfDayMillis);
        sqlStatements++;
      }
    }
 else {
      voltQueueSQL(insertUnArchived,userId,field1,field2,field3,visitTimeMillis);
      sqlStatements++;
    }
    if (sqlStatements > 0) {
      VoltTable results2[]=voltExecuteSQL(true);
    }
  }
  VoltTable vtLoad=new VoltTable(new VoltTable.ColumnInfo("called_time_milliseconds",VoltType.BIGINT));
  Object row[]=new Object[1];
  row[0]=called_time_milliseconds;
  vtLoad.addRow(row);
  final VoltTable[] vtReturn={vtLoad};
  return vtReturn;
}
