{
switch (token.tokenType) {
case Tokens.EXISTS:
{
      read();
      Expression s=XreadTableSubqueryForPredicate(OpTypes.EXISTS);
      return new ExpressionLogical(OpTypes.EXISTS,s);
    }
case Tokens.UNIQUE:
{
    read();
    Expression s=XreadTableSubqueryForPredicate(OpTypes.UNIQUE);
    return new ExpressionLogical(OpTypes.UNIQUE,s);
  }
default :
{
  Expression a=XreadRowValuePredicand();
  return XreadPredicateRightPart(a);
}
}
}
