{
switch (token.tokenType) {
case Tokens.AT:
{
      read();
      Expression e1=null;
      if (token.tokenType == Tokens.LOCAL) {
        read();
      }
 else {
        readThis(Tokens.TIME);
        readThis(Tokens.ZONE);
        e1=XreadValueExpressionPrimary();
switch (token.tokenType) {
case Tokens.YEAR:
case Tokens.MONTH:
case Tokens.DAY:
case Tokens.HOUR:
case Tokens.MINUTE:
case Tokens.SECOND:
{
            IntervalType type=readIntervalType();
            if (e1.getType() == OpTypes.SUBTRACT) {
              e1.dataType=type;
            }
 else {
              e1=new ExpressionOp(e1,type);
            }
          }
      }
    }
    e=new ExpressionOp(OpTypes.ZONE_MODIFIER,e,e1);
    break;
  }
case Tokens.YEAR:
case Tokens.MONTH:
case Tokens.DAY:
case Tokens.HOUR:
case Tokens.MINUTE:
case Tokens.SECOND:
{
  IntervalType type=readIntervalType();
  if (e.getType() == OpTypes.SUBTRACT) {
    e.dataType=type;
  }
 else {
    e=new ExpressionOp(e,type);
  }
  break;
}
case Tokens.COLLATE:
{
read();
SchemaObject collation=database.schemaManager.getSchemaObject(token.namePrefix,token.tokenString,SchemaObject.COLLATION);
}
}
return e;
}
