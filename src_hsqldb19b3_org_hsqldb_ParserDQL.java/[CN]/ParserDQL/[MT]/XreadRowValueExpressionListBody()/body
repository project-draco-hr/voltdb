{
  Expression r=null;
  while (true) {
    int brackets=readOpenBrackets();
    Expression e=readRow();
    readCloseBrackets(brackets);
    if (r == null) {
      r=new Expression(OpTypes.ROW,new Expression[]{e});
    }
 else {
      r.nodes=(Expression[])ArrayUtil.resizeArray(r.nodes,r.nodes.length + 1);
      r.nodes[r.nodes.length - 1]=e;
    }
    if (token.tokenType != Tokens.COMMA) {
      break;
    }
    read();
  }
  Expression[] list=r.nodes;
  int degree=1;
  if (list[0].getType() == OpTypes.ROW) {
    degree=list[0].nodes.length;
  }
  r.opType=OpTypes.TABLE;
  for (int i=0; i < list.length; i++) {
    if (list[i].getType() == OpTypes.ROW) {
      if (list[i].nodes.length != degree) {
        throw Error.error(ErrorCode.X_42564);
      }
    }
 else {
      if (degree != 1) {
        throw Error.error(ErrorCode.X_42564);
      }
      list[i]=new Expression(OpTypes.ROW,new Expression[]{list[i]});
    }
  }
  return r;
}
