{
  List<Integer> catalogIds=Arrays.asList(new Integer[]{0});
  Long now=System.currentTimeMillis();
  long requestId=obj.getLong("requestId");
  long returnAddress=obj.getLong("returnAddress");
  VoltTable partitionStats=getStats(SysProcSelector.WANPARTITION,catalogIds,false,now);
  VoltTable nodeStats=getStats(SysProcSelector.WANNODE,catalogIds,false,now);
  if (partitionStats == null || nodeStats == null) {
    ByteBuffer responseBuffer=ByteBuffer.allocate(8);
    responseBuffer.putLong(requestId);
    byte responseBytes[]=CompressionService.compressBytes(responseBuffer.array());
    BinaryPayloadMessage bpm=new BinaryPayloadMessage(new byte[]{STATS_PAYLOAD},responseBytes);
    m_mailbox.send(returnAddress,bpm);
    return;
  }
  ByteBuffer partitionStatsBuffer=partitionStats.getBuffer();
  partitionStatsBuffer.position(0);
  ByteBuffer nodeStatsBuffer=nodeStats.getBuffer();
  nodeStatsBuffer.position(0);
  ByteBuffer responseBuffer=ByteBuffer.allocate(16 + partitionStatsBuffer.remaining() + nodeStatsBuffer.remaining());
  responseBuffer.putLong(requestId);
  responseBuffer.putInt(partitionStatsBuffer.remaining());
  responseBuffer.put(partitionStatsBuffer);
  responseBuffer.putInt(nodeStatsBuffer.remaining());
  responseBuffer.put(nodeStatsBuffer);
  byte responseBytes[]=CompressionService.compressBytes(responseBuffer.array());
  BinaryPayloadMessage bpm=new BinaryPayloadMessage(new byte[]{STATS_PAYLOAD},responseBytes);
  m_mailbox.send(returnAddress,bpm);
}
