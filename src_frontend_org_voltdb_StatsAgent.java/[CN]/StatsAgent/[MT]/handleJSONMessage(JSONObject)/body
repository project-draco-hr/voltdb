{
  long requestId=obj.getLong("requestId");
  long returnAddress=obj.getLong("returnAddress");
  VoltTable[] results=null;
  OpsSelector selector=OpsSelector.valueOf(obj.getString("selector").toUpperCase());
  if (selector == OpsSelector.STATISTICS) {
    results=collectDistributedStats(obj);
  }
 else {
    hostLog.warn("StatsAgent received a non-STATISTICS OPS selector: " + selector);
  }
  if (results == null) {
    ByteBuffer responseBuffer=ByteBuffer.allocate(8);
    responseBuffer.putLong(requestId);
    byte responseBytes[]=CompressionService.compressBytes(responseBuffer.array());
    BinaryPayloadMessage bpm=new BinaryPayloadMessage(new byte[]{STATS_PAYLOAD},responseBytes);
    m_mailbox.send(returnAddress,bpm);
    return;
  }
  ByteBuffer[] bufs=new ByteBuffer[results.length];
  int statbytes=0;
  for (int i=0; i < results.length; i++) {
    bufs[i]=results[i].getBuffer();
    bufs[i].position(0);
    statbytes+=bufs[i].remaining();
  }
  ByteBuffer responseBuffer=ByteBuffer.allocate(8 + 4 * results.length + +statbytes);
  responseBuffer.putLong(requestId);
  for (int i=0; i < bufs.length; i++) {
    responseBuffer.putInt(bufs[i].remaining());
    responseBuffer.put(bufs[i]);
  }
  byte responseBytes[]=CompressionService.compressBytes(responseBuffer.array());
  BinaryPayloadMessage bpm=new BinaryPayloadMessage(new byte[]{STATS_PAYLOAD},responseBytes);
  m_mailbox.send(returnAddress,bpm);
}
