{
  m_mailbox=new Mailbox(){
    @Override public void send(    long destinationHSId,    VoltMessage message) throws MessagingException {
      assert(message != null);
      message.m_sourceHSId=hsId;
      hostMessenger.send(destinationHSId,message);
    }
    @Override public void send(    long[] desinationHSIds,    VoltMessage message) throws MessagingException {
      assert(message != null);
      assert(desinationHSIds != null);
      message.m_sourceHSId=hsId;
      hostMessenger.send(desinationHSIds,message);
    }
    @Override public void deliver(    final VoltMessage message){
      m_es.submit(new Runnable(){
        @Override public void run(){
          handleMailboxMessage(message);
        }
      }
);
    }
    @Override public void deliverFront(    VoltMessage message){
      throw new UnsupportedOperationException();
    }
    @Override public VoltMessage recv(){
      throw new UnsupportedOperationException();
    }
    @Override public VoltMessage recvBlocking(){
      throw new UnsupportedOperationException();
    }
    @Override public VoltMessage recvBlocking(    long timeout){
      throw new UnsupportedOperationException();
    }
    @Override public VoltMessage recv(    Subject[] s){
      throw new UnsupportedOperationException();
    }
    @Override public VoltMessage recvBlocking(    Subject[] s){
      throw new UnsupportedOperationException();
    }
    @Override public VoltMessage recvBlocking(    Subject[] s,    long timeout){
      throw new UnsupportedOperationException();
    }
    @Override public long getHSId(){
      return hsId;
    }
    @Override public void setHSId(    long hsId){
      throw new UnsupportedOperationException();
    }
  }
;
  hostMessenger.createMailbox(hsId,m_mailbox);
}
