{
  super.loadFromJSONObject(jobj,db);
  m_keyIterate=jobj.getBoolean(Members.KEY_ITERATE.name());
  m_lookupType=IndexLookupType.get(jobj.getString(Members.LOOKUP_TYPE.name()));
  m_endType=IndexLookupType.get(jobj.getString(Members.END_TYPE.name()));
  m_targetIndexName=jobj.getString(Members.TARGET_INDEX_NAME.name());
  m_catalogIndex=db.getTables().get(super.m_targetTableName).getIndexes().get(m_targetIndexName);
  JSONObject tempjobj=null;
  if (!jobj.isNull(Members.ENDKEY_EXPRESSIONS.name())) {
    JSONArray jarray=jobj.getJSONArray(Members.ENDKEY_EXPRESSIONS.name());
    int size=jarray.length();
    for (int i=0; i < size; i++) {
      tempjobj=jarray.getJSONObject(i);
      m_endkeyExpressions.add(AbstractExpression.fromJSONObject(tempjobj,db));
    }
  }
  JSONArray jarray=jobj.getJSONArray(Members.SEARCHKEY_EXPRESSIONS.name());
  int size=jarray.length();
  for (int i=0; i < size; i++) {
    tempjobj=jarray.getJSONObject(i);
    m_searchkeyExpressions.add(AbstractExpression.fromJSONObject(tempjobj,db));
  }
}
