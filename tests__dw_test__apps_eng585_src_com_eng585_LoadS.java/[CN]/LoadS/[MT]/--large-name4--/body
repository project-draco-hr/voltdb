{
  boolean queued=false;
  long s_pk_temp=0;
  if (s_pk != null) {
    s_pk_temp=Long.parseLong(s_pk);
  }
  int int1_temp=0;
  if ((int1 != null) && (!"".equals(int1))) {
    int1_temp=Integer.parseInt(int1);
  }
  int int2_temp=0;
  if ((int2 != null) && (!"".equals(int2))) {
    int2_temp=Integer.parseInt(int2);
  }
  int int3_temp=0;
  if ((int3 != null) && (!"".equals(int3))) {
    int3_temp=Integer.parseInt(int3);
  }
  int int4_temp=0;
  if ((int4 != null) && (!"".equals(int4))) {
    int4_temp=new Integer(int4);
  }
  int int5_temp=0;
  if ((int5 != null) && (!"".equals(int5))) {
    int5_temp=Integer.parseInt(int5);
  }
  int int6_temp=0;
  if ((int6 != null) && (!"".equals(int6))) {
    int6_temp=Integer.parseInt(int6);
  }
  long bigint1_temp=0;
  if ((bigint1 != null) && (!"".equals(bigint1))) {
    bigint1_temp=Long.parseLong(bigint1);
  }
  long bigint2_temp=0;
  if ((bigint2 != null) && (!"".equals(bigint2))) {
    bigint2_temp=Long.parseLong(bigint2);
  }
  long bigint3_temp=0;
  if ((bigint3 != null) && (!"".equals(bigint3))) {
    bigint3_temp=Long.parseLong(bigint3);
  }
  BigDecimal decimal1_temp=null;
  if ((decimal1 != null) && (!"".equals(decimal1))) {
    decimal1_temp=new BigDecimal(decimal1);
  }
  BigDecimal decimal2_temp=null;
  if ((decimal2 != null) && (!"".equals(decimal2))) {
    decimal2_temp=new BigDecimal(decimal2);
  }
  BigDecimal decimal3_temp=null;
  if ((decimal3 != null) && (!"".equals(decimal3))) {
    decimal3_temp=new BigDecimal(decimal3);
  }
  BigDecimal decimal4_temp=null;
  if ((decimal4 != null) && (!"".equals(decimal4))) {
    decimal4_temp=new BigDecimal(decimal4);
  }
  long bigint4_temp=0;
  ;
  if ((bigint4 != null) && (!"".equals(bigint4))) {
    bigint4_temp=Long.parseLong(bigint4);
  }
  long bigint5_temp=0;
  ;
  if ((bigint5 != null) && (!"".equals(bigint5))) {
    bigint5_temp=Long.parseLong(bigint5);
  }
  long bigint6_temp=0;
  ;
  if ((bigint6 != null) && (!"".equals(bigint6))) {
    bigint6_temp=Long.parseLong(bigint6);
  }
  long bigint7_temp=0;
  ;
  if ((bigint7 != null) && (!"".equals(bigint7))) {
    bigint7_temp=Long.parseLong(bigint7);
  }
  long bigint8_temp=0;
  ;
  if ((bigint8 != null) && (!"".equals(bigint8))) {
    bigint8_temp=Long.parseLong(bigint8);
  }
  int int7_temp=0;
  if ((int7 != null) && (!"".equals(int7))) {
    int7_temp=Integer.parseInt(int7);
  }
  TimestampType ts1_temp=null;
  if ((ts1 != null) && (!"".equals(ts1))) {
    SimpleDateFormat sdf=new SimpleDateFormat("MMddyyyy");
    Date ts1_temp_temp=null;
    try {
      ts1_temp_temp=sdf.parse(ts1);
      ts1_temp=new TimestampType(ts1_temp_temp.getTime() * 1000);
    }
 catch (    ParseException e) {
      e.printStackTrace();
    }
  }
  myApp.callProcedure(new MyAsyncCallback(),"InsertS",s_pk_temp,v1,ts1_temp,v2,v3,v4,v5,v6,int1_temp,int2_temp,int3_temp,int4_temp,int5_temp,int6_temp,v7,int7_temp,v8,v9,v10,v11,bigint1_temp,v12,bigint2_temp,bigint3_temp,decimal1_temp,decimal2_temp,decimal3_temp,decimal4_temp,bigint4_temp,bigint5_temp,v13,bigint6_temp,bigint7_temp,bigint8_temp);
  if ((countoflines % 25000) == 0) {
    System.out.printf("On Line %,d\n",countoflines);
  }
}
