def compare_cleaned_to_baseline(parent, baseparent, path, inpath, do_refresh, reportout):
    cleanedpath = os.path.join(parent, (path + 'clean'))
    baselinepath = os.path.join(baseparent, (path + 'baseline'))
    gotdiffs = True
    if os.path.isfile(baselinepath):
        outdiffspath = os.path.join(parent, (path + 'diffs'))
        diffout = open(outdiffspath, 'w+')
        gotdiffs = subprocess.call(['diff', cleanedpath, baselinepath], stdout=diffout)
        if gotdiffs:
            print  >> sys.stderr, 'See diffs in ', outdiffspath
            reportout.write((('See diffs in ' + os.path.abspath(outdiffspath)) + '\n'))
            reportout.write((os.path.join(parent, inpath) + ' failed to match its baseline.\n'))
        else:
            reportout.write((os.path.join(parent, inpath) + ' matched its baseline.\n'))
            subprocess.call(['rm', outdiffspath])
    else:
        reportout.write((('Did not find baseline file: ' + os.path.abspath(baselinepath)) + '\n'))
    if gotdiffs:
        if do_refresh:
            mkdir_p(baseparent)
            subprocess.call(['mv', cleanedpath, baselinepath])
            reportout.write((((os.path.join(parent, inpath) + ' refreshed its baseline: ') + os.path.abspath(baselinepath)) + '\n'))
        else:
            return True
    return False
