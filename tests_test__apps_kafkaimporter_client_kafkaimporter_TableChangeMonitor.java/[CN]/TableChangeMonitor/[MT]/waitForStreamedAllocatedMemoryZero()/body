{
  boolean passed=false;
  VoltTable stats=null;
  long ftime=0;
  long st=System.currentTimeMillis();
  long end=st + (10 * 60 * 1000);
  while (true) {
    stats=client.callProcedure("@Statistics","table",0).getResults()[0];
    boolean passedThisTime=true;
    long ctime=System.currentTimeMillis();
    if (ctime > end) {
      System.out.println("Waited too long...");
      System.out.println(stats);
      break;
    }
    if (ctime - st > (3 * 60 * 1000)) {
      System.out.println(stats);
      st=System.currentTimeMillis();
    }
    long ts=0;
    while (stats.advanceRow()) {
      String ttable=stats.getString("TABLE_NAME");
      String ttype=stats.getString("TABLE_TYPE");
      Long tts=stats.getLong("TIMESTAMP");
      if (tts > ts) {
        ts=tts;
      }
      if (type.equals(ttype) && table.equals(ttable)) {
        if (stats.getLong("TUPLE_ALLOCATED_MEMORY") != 0) {
          passedThisTime=false;
          System.out.println(ttable + ": Partition Not Zero.");
          break;
        }
      }
    }
    if (passedThisTime) {
      if (ftime == 0) {
        ftime=ts;
        continue;
      }
      if (ftime != ts) {
        passed=true;
        break;
      }
      System.out.println(table + " quiescing but not ready to declare victory.");
    }
    Thread.sleep(5000);
  }
  System.out.println(table + " status is: " + passed);
  System.out.println(stats);
  return passed;
}
