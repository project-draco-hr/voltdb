def runTest(i):
    'Start a subprocess that runs the java reproducer. If it hangs, let the user know and\n       leave the subprocess process running until the user presses a key. If it runs for\n       DURATION_IN_SECONDS seconds without hanging, kill the subprocess and repeat.'
    print '\nBeginning run {0} for {1} seconds. Press ENTER or RETURN to end the test.\n'.format(i, DURATION_IN_SECONDS)
    p = Popen('java LBDLockPatternTest', shell=True, bufsize=0, stdout=PIPE)
    fd = p.stdout.fileno()
    fl = fcntl.fcntl(fd, fcntl.F_GETFL)
    fcntl.fcntl(fd, fcntl.F_SETFL, (fl | os.O_NONBLOCK))
    start = datetime.datetime.utcnow()
    prevnow = start
    lastdotprinted = start
    while (p.poll() == None):
        now = datetime.datetime.utcnow()
        if ((now - prevnow).seconds == 10):
            prevnow = now
            sys.stdout.write(' {0} seconds '.format((now - start).seconds))
        if ((now - lastdotprinted).seconds > 10):
            print '\nSorry, this platfrom has reproduced the issue. Press any key to end this script.'
            raw_input()
            killProcess(p)
            return False
        if ((now - start).seconds > DURATION_IN_SECONDS):
            print '\nThis run ({0}) did not reproduce the issue.'.format(i)
            killProcess(p)
            return True
        try:
            c = sys.stdin.read(1)
            print '\nThis run ({0}) interrupted by user.'.format(i)
            killProcess(p)
            sys.exit((-1))
        except:
            pass
        try:
            c = p.stdout.read(1)
            sys.stdout.write(c)
            lastdotprinted = now
        except:
            time.sleep(0.1)
    p.wait()
