{
  String[] logStrings=m_logBuffer.toString().split("\n");
  for (int i=0; i < logStrings.length; i++) {
    LogString next=new LogString(logStrings[i]);
    if (!next.isFuzz()) {
      continue;
    }
    TransactionRecord txn=null;
    if (next.isTxnStart()) {
      assert(!m_txns.containsKey(next.getTxnId()));
      txn=new TransactionRecord(next);
      m_txns.put(next.getTxnId(),txn);
      m_txnInitOrder.add(txn);
    }
 else     if (next.isRollback() || next.isTxnEnd()) {
      txn=m_txns.get(next.getTxnId());
      txn.updateRecord(next);
      if (next.isTxnEnd()) {
        m_txnCloseOrder.add(txn);
      }
    }
 else     if (next.isSelfFault() || next.isOtherFault()) {
      for (      TransactionRecord txn1 : m_txns.values()) {
        if (!txn1.isClosed()) {
          txn1.updateRecord(next);
        }
      }
    }
 else {
      assert(false);
    }
  }
}
