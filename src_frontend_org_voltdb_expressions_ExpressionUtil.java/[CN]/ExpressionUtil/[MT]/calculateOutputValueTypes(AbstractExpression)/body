{
  VoltType retType=VoltType.INVALID;
  int retSize=0;
  ExpressionType exp_type=exp.getExpressionType();
  AbstractExpression left_exp=exp.getLeft();
  AbstractExpression right_exp=exp.getRight();
  if (exp instanceof ConstantValueExpression || exp instanceof NullValueExpression || exp instanceof ParameterValueExpression|| exp instanceof TupleValueExpression) {
    retType=exp.getValueType();
    retSize=exp.getValueSize();
  }
 else   if (exp instanceof ComparisonExpression || exp instanceof ConjunctionExpression) {
    if (exp_type != ExpressionType.COMPARE_IN) {
      retType=VoltType.BIGINT;
      retSize=retType.getLengthInBytesForFixedTypes();
    }
 else {
      throw new NotImplementedException("The '" + exp_type + "' Expression is not yet supported");
    }
  }
 else   if (exp instanceof OperatorExpression && exp_type == ExpressionType.OPERATOR_IS_NULL) {
    retType=VoltType.BIGINT;
    retSize=retType.getLengthInBytesForFixedTypes();
  }
 else   if (exp instanceof AggregateExpression) {
switch (exp_type) {
case AGGREGATE_COUNT:
case AGGREGATE_COUNT_STAR:
      retType=VoltType.BIGINT;
    retSize=retType.getLengthInBytesForFixedTypes();
  break;
case AGGREGATE_AVG:
case AGGREGATE_MAX:
case AGGREGATE_MIN:
retType=left_exp.getValueType();
retSize=left_exp.getValueSize();
break;
case AGGREGATE_SUM:
if (left_exp.getValueType() == VoltType.TINYINT || left_exp.getValueType() == VoltType.SMALLINT || left_exp.getValueType() == VoltType.INTEGER) {
retType=VoltType.BIGINT;
retSize=retType.getLengthInBytesForFixedTypes();
}
 else {
retType=left_exp.getValueType();
retSize=left_exp.getValueSize();
}
break;
default :
throw new RuntimeException("ERROR: Invalid Expression type '" + exp_type + "' for Expression '"+ exp+ "'");
}
}
 else {
VoltType left_type=left_exp.getValueType();
VoltType right_type=right_exp.getValueType();
VoltType cast_type=VoltType.INVALID;
if (!ExpressionUtil.needsRightExpression(exp)) {
try {
cast_type=VoltType.DECIMAL;
if (left_type != VoltType.DECIMAL) {
VoltTypeUtil.determineImplicitCasting(left_type,VoltType.BIGINT);
cast_type=VoltType.BIGINT;
}
}
 catch (Exception ex) {
throw new RuntimeException("ERROR: Invalid type '" + left_type + "' used in a '"+ exp_type+ "' Expression");
}
}
 else {
cast_type=VoltTypeUtil.determineImplicitCasting(left_type,right_type);
}
if (cast_type == VoltType.INVALID) {
throw new RuntimeException("ERROR: Invalid output value type for Expression '" + exp + "'");
}
retType=cast_type;
retSize=cast_type.getLengthInBytesForFixedTypes();
}
return new Pair<VoltType,Integer>(retType,retSize);
}
