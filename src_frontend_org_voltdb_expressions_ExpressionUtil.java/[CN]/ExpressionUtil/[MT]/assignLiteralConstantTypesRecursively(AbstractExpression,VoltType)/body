{
  if (exp == null)   return;
  if ((exp instanceof ConstantValueExpression) && (exp.m_valueType == VoltType.NUMERIC)) {
    assert(columnType != VoltType.INVALID);
    if ((columnType == VoltType.FLOAT) || (columnType == VoltType.DECIMAL)) {
      exp.m_valueType=columnType;
      exp.m_valueSize=columnType.getLengthInBytesForFixedTypes();
      return;
    }
 else     if (columnType.isInteger()) {
      ConstantValueExpression cve=(ConstantValueExpression)exp;
      long val=Long.parseLong(cve.getValue());
      exp.m_valueType=columnType;
      exp.m_valueSize=columnType.getLengthInBytesForFixedTypes();
    }
 else {
      throw new NumberFormatException("NUMERIC constant value type must match a FLOAT or DECIMAL column");
    }
  }
  assignLiteralConstantTypes_recurse(exp);
}
