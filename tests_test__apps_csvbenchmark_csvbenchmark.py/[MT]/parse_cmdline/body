def parse_cmdline():
    global options, args, DATA_DIR
    usage = 'usage: %prog [options] path-to-loadfiles'
    parser = OptionParser()
    parser.add_option('-s', '--servers', type='string', action='callback', callback=list_callback, default=['localhost'], help='list of servers')
    parser.add_option('-c', '--case', type='string', action='callback', callback=list_callback, default=None, help='comma separate list of cases to run')
    parser.add_option('-n', '--rows', type='int', dest='ROW_COUNT', default=100000, help='number of rows to test')
    parser.add_option('-r', '--regeneratedata', dest='REGENERATE', action='store_true', default=False, help="regenerate the data'")
    parser.add_option('-t', '--tries', type='int', dest='TRIES', default=1, help='number of time to run the test case and average the performance results')
    parser.add_option('-o', '--csvoptions', type='string', action='callback', callback=list_callback, default=None, help='comma separated list of options to be passed to the csvloader')
    parser.add_option('-v', '--verbose', dest='VERBOSE', action='store_true', default=False, help="print csv output'")
    parser.add_option('-l', '--list', dest='LIST', action='store_true', default=False, help="list cases supported and exit'")
    parser.add_option('--statsfile', type='string', dest='statsfile', default=None, help='file to write statistics for apprunner')
    (options, args) = parser.parse_args()
    if options.LIST:
        list_cases()
        sys.exit(0)
    if (len(args) < 1):
        print 'ERROR load file directory not specified'
        sys.exit(1)
    DATA_DIR = args[0]
    if (not os.path.isdir(DATA_DIR)):
        print 'ERROR load file directory does not exist, or is not a directory'
        sys.exit(1)
    if options.statsfile:
        f = open(options.statsfile, 'w')
        f.close
