{
  ImmutableMap.Builder<Integer,SortedMap<Long,Long>> partitionBuilder=ImmutableMap.builder();
  if (jsData != null) {
    try {
      JSONObject cts=jsData.optJSONObject("postSnapshotTasks");
      if (cts != null) {
        Iterator taskNames=cts.keys();
        while (taskNames.hasNext()) {
          String taskName=(String)taskNames.next();
          if (taskName.equalsIgnoreCase("addPartitions")) {
            JSONObject newPartitionsObj=cts.getJSONObject(taskName);
            Iterator partitionKey=newPartitionsObj.keys();
            while (partitionKey.hasNext()) {
              String partitionStr=(String)partitionKey.next();
              int partition=Integer.parseInt(partitionStr);
              JSONObject rangeObj=newPartitionsObj.getJSONObject(partitionStr);
              Iterator rangeKey=rangeObj.keys();
              ImmutableSortedMap.Builder<Long,Long> rangeBuilder=ImmutableSortedMap.naturalOrder();
              while (rangeKey.hasNext()) {
                String rangeStartStr=(String)rangeKey.next();
                long rangeStart=Long.parseLong(rangeStartStr);
                long rangeEnd=rangeObj.getLong(rangeStartStr);
                rangeBuilder.put(rangeStart,rangeEnd);
              }
              partitionBuilder.put(partition,rangeBuilder.build());
            }
          }
        }
      }
    }
 catch (    JSONException e) {
      SNAP_LOG.warn("Failed to parse completion task information",e);
    }
  }
  return partitionBuilder.build();
}
