{
  List<AbstractPlanNode> pn;
  pn=compileToFragments("select A1, count(*) as tag from T1 group by A1 order by A1 limit 1");
  checkLimitPushedDown(pn,true);
  pn=compileToFragments("select A1, count(*) as tag from T1 group by A1 order by tag limit 1");
  checkLimitPushedDown(pn,false);
  pn=compileToFragments("select A1, count(*) as tag from T1 group by A1 order by tag+1 limit 1");
  checkLimitPushedDown(pn,false);
  pn=compileToFragments("select A1, count(*) as tag from T1 group by A1 order by count(*)+1 limit 1");
  checkLimitPushedDown(pn,false);
  pn=compileToFragments("select A1, count(*) as tag from T1 group by A1 order by A1, count(*)+1 limit 1");
  checkLimitPushedDown(pn,false);
  pn=compileToFragments("select A1, count(*) as tag from T1 group by A1 order by A1, ABS(count(*)+1) limit 1");
  checkLimitPushedDown(pn,false);
  pn=compileToFragments("select A3, count(*) as tag from T3 group by A3 order by tag limit 1");
  checkLimitPushedDown(pn,true);
  pn=compileToFragments("select ABS(A3), count(*) as tag from T3 group by ABS(A3) order by tag limit 1");
  checkLimitPushedDown(pn,false);
  pn=compileToFragments("select A1, count(*) as tag from R1 group by A1 order by tag limit 1");
  assertEquals(1,pn.size());
  assertTrue(pn.get(0).toExplainPlanString().contains("LIMIT"));
  pn=compileToFragments("select A3, B4, count(A3) as tag from T3, T4 WHERE A3 = A4 " + "group by A3, B4 order by tag desc limit 10");
  checkLimitPushedDown(pn,true);
  pn=compileToFragments("select A3, B4, count(A3) as tag from T3, T4 WHERE A3 = A4 " + "group by A3, B4 order by tag+1 desc limit 10");
  checkLimitPushedDown(pn,true);
}
