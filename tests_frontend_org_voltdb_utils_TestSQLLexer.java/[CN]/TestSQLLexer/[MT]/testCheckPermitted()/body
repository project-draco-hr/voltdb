{
  final int REN_UNSUP=0;
  final int REN_UNK=1;
  final int REN_UNIMP=2;
  final int STMT_UNSUP=3;
class Tester {
    void testOK(    String sql){
      String rej=SQLLexer.checkPermitted(sql);
      assertTrue(String.format("testOK: Expect no rejection: %s: %s",rej,sql),rej == null);
    }
    void testWL(    String sql){
      String rej=SQLLexer.checkPermitted(sql);
      assertTrue(String.format("testWL: Expect rejection: %s",sql),rej != null);
    }
    void testBL(    String sql,    int error,    String typeName){
      String rej=SQLLexer.checkPermitted(sql);
      assertTrue(String.format("testBL: Expect rejection: %s",sql),rej != null);
      String fragment;
switch (error) {
case REN_UNIMP:
        fragment="AdHoc DDL ALTER/RENAME is not yet supported";
      break;
case REN_UNK:
    fragment=String.format("AdHoc DDL ALTER/RENAME refers to an unknown object type '%s'",typeName);
  break;
case REN_UNSUP:
fragment=String.format("AdHoc DDL ALTER/RENAME is not supported for object type '%s'",typeName);
break;
case STMT_UNSUP:
fragment="Statement is not supported";
break;
default :
fragment=null;
break;
}
String msg=String.format("testBL: Expect explanation '%s...', got '%s': %s",fragment,rej,sql);
assertTrue(msg,rej.toLowerCase().contains(fragment.toLowerCase()));
}
}
Tester tester=new Tester();
tester.testOK("create table PANTS (ID int, RENAME varchar(50));");
tester.testOK("create table PANTS (\n ID int,\n RENAME varchar(50)\n);");
tester.testOK("create view PANTS (ID int, RENAME varchar(50));");
tester.testOK("create index PANTS (ID int, RENAME varchar(50));");
tester.testOK("create role pants with pockets;");
tester.testOK("create role\n pants\n with cuffs;\n");
tester.testOK("drop table pants;");
tester.testOK("drop view pants;");
tester.testOK("drop index pants;");
tester.testOK("alter table pants add column blargy blarg;");
tester.testOK("alter table pants add constraint blargy blarg;");
tester.testOK("alter index pants");
tester.testWL("create tabel PANTS (ID int, RENAME varchar(50));");
tester.testWL("craete table PANTS (ID int, RENAME varchar(50));");
tester.testWL("dorp table pants;");
tester.testWL("drop tabel pants;");
tester.testWL("altre table pants blargy blarg;");
tester.testWL("alter tabel pants blargy blarg;");
tester.testBL("import blah",STMT_UNSUP,"import");
tester.testBL("alter table pants rename to shorts;",REN_UNIMP,"table");
tester.testBL("alter view pants rename to shorts;",REN_UNSUP,"view");
tester.testBL("alter tuble pants rename to shorts;",REN_UNK,"tuble");
tester.testBL("alter table pants alter column cut rename to style;",REN_UNIMP,"column");
tester.testBL("alter table pants alter role cut rename to style;",REN_UNSUP,"role");
tester.testBL("alter tuble pants alter calumn cut rename to style;",REN_UNK,"tuble");
tester.testBL("alter table pants alter calumn cut rename to style;",REN_UNK,"calumn");
}
