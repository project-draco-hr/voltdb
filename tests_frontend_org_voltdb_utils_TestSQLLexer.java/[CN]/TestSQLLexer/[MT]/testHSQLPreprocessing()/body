{
  checkValidHSQLPreprocessing("create table foo ...",HSQLDDLInfo.Verb.CREATE,HSQLDDLInfo.Noun.TABLE,"foo",null,false,false);
  checkValidHSQLPreprocessing("create table PANTS (ID int, RENAME varchar(50));",HSQLDDLInfo.Verb.CREATE,HSQLDDLInfo.Noun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("create table PANTS (\n ID int,\n RENAME varchar(50)\n);",HSQLDDLInfo.Verb.CREATE,HSQLDDLInfo.Noun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("create view PANTS (ID int, RENAME varchar(50));",HSQLDDLInfo.Verb.CREATE,HSQLDDLInfo.Noun.VIEW,"pants",null,false,false);
  checkValidHSQLPreprocessing("create index PANTS (ID int, RENAME varchar(50));",HSQLDDLInfo.Verb.CREATE,HSQLDDLInfo.Noun.INDEX,"pants",null,false,false);
  checkValidHSQLPreprocessing("create index PANTS on Fuz (ID int, RENAME varchar(50));",HSQLDDLInfo.Verb.CREATE,HSQLDDLInfo.Noun.INDEX,"pants","fuz",false,false);
  checkInvalidHSQLPreprocessing("create tabel PANTS (ID int, RENAME varchar(50));");
  checkInvalidHSQLPreprocessing("craete table PANTS (ID int, RENAME varchar(50));");
  checkInvalidHSQLPreprocessing("create role pants with pockets;");
  checkInvalidHSQLPreprocessing("create role\n pants\n with cuffs;\n");
  checkValidHSQLPreprocessing("drop table pants;",HSQLDDLInfo.Verb.DROP,HSQLDDLInfo.Noun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("drop table pants if exists;",HSQLDDLInfo.Verb.DROP,HSQLDDLInfo.Noun.TABLE,"pants",null,true,false);
  checkValidHSQLPreprocessing("drop view pants;",HSQLDDLInfo.Verb.DROP,HSQLDDLInfo.Noun.VIEW,"pants",null,false,false);
  checkValidHSQLPreprocessing("drop view pants cascade;",HSQLDDLInfo.Verb.DROP,HSQLDDLInfo.Noun.VIEW,"pants",null,false,true);
  checkValidHSQLPreprocessing("drop index pants   IF    EXISTS   CAsCaDe  ;",HSQLDDLInfo.Verb.DROP,HSQLDDLInfo.Noun.INDEX,"pants",null,true,true);
  checkInvalidHSQLPreprocessing("dorp table pants;");
  checkInvalidHSQLPreprocessing("drop tabel pants;");
  checkValidHSQLPreprocessing("drop table pants cascade if exists;",HSQLDDLInfo.Verb.DROP,HSQLDDLInfo.Noun.TABLE,"pants",null,true,false);
  checkValidHSQLPreprocessing("drop table pants if exists.;",HSQLDDLInfo.Verb.DROP,HSQLDDLInfo.Noun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants add column blargy blarg;",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants add constraint blargy blarg;",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter index pants",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.INDEX,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants rename to shorts IF \nexists ;",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.TABLE,"pants",null,true,false);
  checkValidHSQLPreprocessing("alter index pants rename to shorts CASCADE;",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.INDEX,"pants",null,false,true);
  checkValidHSQLPreprocessing("alter table pants alter column rename to shorts;",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants alter column rename to shorts CASCADE;",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.TABLE,"pants",null,false,true);
  checkValidHSQLPreprocessing("alter table FOO drop column VIEWCOL cascade;",HSQLDDLInfo.Verb.ALTER,HSQLDDLInfo.Noun.TABLE,"foo",null,false,true);
  checkInvalidHSQLPreprocessing("altre table pants blargy blarg;");
  checkInvalidHSQLPreprocessing("alter tabel pants blargy blarg;");
  checkValidHSQLPreprocessing("CREATE ASSUMEUNIQUE INDEX absVal ON T2 (     ABS(area * 2) ,   ABS(volume / 2) );",HSQLDDLInfo.Verb.CREATE,HSQLDDLInfo.Noun.INDEX,"absval","t2",false,false);
}
