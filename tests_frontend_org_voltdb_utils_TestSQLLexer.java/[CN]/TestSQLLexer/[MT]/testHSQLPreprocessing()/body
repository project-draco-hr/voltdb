{
  checkValidHSQLPreprocessing("create table foo ...",HSQLDDLVerb.CREATE,HSQLDDLNoun.TABLE,"foo",null,false,false);
  checkValidHSQLPreprocessing("create table PANTS (ID int, RENAME varchar(50));",HSQLDDLVerb.CREATE,HSQLDDLNoun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("create table PANTS (\n ID int,\n RENAME varchar(50)\n);",HSQLDDLVerb.CREATE,HSQLDDLNoun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("create view PANTS (ID int, RENAME varchar(50));",HSQLDDLVerb.CREATE,HSQLDDLNoun.VIEW,"pants",null,false,false);
  checkValidHSQLPreprocessing("create index PANTS (ID int, RENAME varchar(50));",HSQLDDLVerb.CREATE,HSQLDDLNoun.INDEX,"pants",null,false,false);
  checkValidHSQLPreprocessing("create index PANTS on Fuz (ID int, RENAME varchar(50));",HSQLDDLVerb.CREATE,HSQLDDLNoun.INDEX,"pants","fuz",false,false);
  checkInvalidHSQLPreprocessing("create tabel PANTS (ID int, RENAME varchar(50));");
  checkInvalidHSQLPreprocessing("craete table PANTS (ID int, RENAME varchar(50));");
  checkInvalidHSQLPreprocessing("create role pants with pockets;");
  checkInvalidHSQLPreprocessing("create role\n pants\n with cuffs;\n");
  checkValidHSQLPreprocessing("drop table pants;",HSQLDDLVerb.DROP,HSQLDDLNoun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("drop table pants if exists;",HSQLDDLVerb.DROP,HSQLDDLNoun.TABLE,"pants",null,true,false);
  checkValidHSQLPreprocessing("drop view pants;",HSQLDDLVerb.DROP,HSQLDDLNoun.VIEW,"pants",null,false,false);
  checkValidHSQLPreprocessing("drop view pants cascade;",HSQLDDLVerb.DROP,HSQLDDLNoun.VIEW,"pants",null,false,true);
  checkValidHSQLPreprocessing("drop index pants   IF    EXISTS   CAsCaDe  ;",HSQLDDLVerb.DROP,HSQLDDLNoun.INDEX,"pants",null,true,true);
  checkInvalidHSQLPreprocessing("dorp table pants;");
  checkInvalidHSQLPreprocessing("drop tabel pants;");
  checkValidHSQLPreprocessing("drop table pants cascade if exists;",HSQLDDLVerb.DROP,HSQLDDLNoun.TABLE,"pants",null,true,false);
  checkValidHSQLPreprocessing("drop table pants if exists.;",HSQLDDLVerb.DROP,HSQLDDLNoun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants add column blargy blarg;",HSQLDDLVerb.ALTER,HSQLDDLNoun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants add constraint blargy blarg;",HSQLDDLVerb.ALTER,HSQLDDLNoun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter index pants",HSQLDDLVerb.ALTER,HSQLDDLNoun.INDEX,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants rename to shorts IF \nexists ;",HSQLDDLVerb.ALTER,HSQLDDLNoun.TABLE,"pants",null,true,false);
  checkValidHSQLPreprocessing("alter index pants rename to shorts CASCADE;",HSQLDDLVerb.ALTER,HSQLDDLNoun.INDEX,"pants",null,false,true);
  checkValidHSQLPreprocessing("alter table pants alter column rename to shorts;",HSQLDDLVerb.ALTER,HSQLDDLNoun.TABLE,"pants",null,false,false);
  checkValidHSQLPreprocessing("alter table pants alter column rename to shorts CASCADE;",HSQLDDLVerb.ALTER,HSQLDDLNoun.TABLE,"pants",null,false,true);
  checkValidHSQLPreprocessing("alter table FOO drop column VIEWCOL cascade;",HSQLDDLVerb.ALTER,HSQLDDLNoun.TABLE,"foo",null,false,true);
  checkInvalidHSQLPreprocessing("altre table pants blargy blarg;");
  checkInvalidHSQLPreprocessing("alter tabel pants blargy blarg;");
  checkValidHSQLPreprocessing("CREATE ASSUMEUNIQUE INDEX absVal ON T2 (     ABS(area * 2) ,   ABS(volume / 2) );",HSQLDDLVerb.CREATE,HSQLDDLNoun.INDEX,"absval","t2",false,false);
}
