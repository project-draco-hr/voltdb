{
  String schema="create table Table1 (Column1 varchar(10), Column2 integer);" + "create table Table2 (Column1 integer);" + "create view View1 (Column1, num) as select Column1, count(*) from Table1 group by Column1;"+ "create table Export1 (Column1 integer);";
  String project="<?xml version=\"1.0\"?>\n" + "<project>" + "  <database name='database'>"+ "    <schemas><schema path='" + getPathForSchema(schema) + "' /></schemas>"+ "    <procedures><procedure class='sample'><sql>select * from Table1</sql></procedure></procedures>"+ "    <export><tables><table name = \"Export1\"/></tables></export>"+ "  </database>"+ "</project>";
  VoltCompiler c=compileForDDLTest(project);
  System.out.println(c.getCatalog().serialize());
  JdbcDatabaseMetaDataGenerator dut=new JdbcDatabaseMetaDataGenerator(c.getCatalog(),testout_jar);
  VoltTable tables=dut.getMetaData("tables");
  System.out.println(tables);
  assertEquals(10,tables.getColumnCount());
  assertEquals(4,tables.getRowCount());
  assertTrue(moveToMatchingRow(tables,"TABLE_NAME","Table1"));
  assertTrue(tables.get("TABLE_TYPE",VoltType.STRING).equals("TABLE"));
  assertTrue(moveToMatchingRow(tables,"TABLE_NAME","Table2"));
  assertTrue(tables.get("TABLE_TYPE",VoltType.STRING).equals("TABLE"));
  assertTrue(moveToMatchingRow(tables,"TABLE_NAME","View1"));
  assertTrue(tables.get("TABLE_TYPE",VoltType.STRING).equals("VIEW"));
  assertTrue(moveToMatchingRow(tables,"TABLE_NAME","Export1"));
  assertTrue(tables.get("TABLE_TYPE",VoltType.STRING).equals("EXPORT"));
  assertFalse(moveToMatchingRow(tables,"TABLE_NAME","NotATable"));
}
