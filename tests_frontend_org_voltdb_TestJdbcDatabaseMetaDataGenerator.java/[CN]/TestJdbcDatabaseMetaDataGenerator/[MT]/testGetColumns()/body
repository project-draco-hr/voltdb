{
  HashMap<String,Object[]> refcolumns=new HashMap<String,Object[]>();
  refcolumns.put("Column1",new Object[]{java.sql.Types.VARCHAR,"VARCHAR",200,null,null,java.sql.DatabaseMetaData.columnNoNulls});
  refcolumns.put("Column2",new Object[]{java.sql.Types.TINYINT,"TINYINT",7,null,2,java.sql.DatabaseMetaData.columnNullable});
  refcolumns.put("Column3",new Object[]{java.sql.Types.SMALLINT,"SMALLINT",15,null,2,java.sql.DatabaseMetaData.columnNoNulls});
  refcolumns.put("Column4",new Object[]{java.sql.Types.INTEGER,"INTEGER",31,null,2,java.sql.DatabaseMetaData.columnNullable});
  refcolumns.put("Column5",new Object[]{java.sql.Types.BIGINT,"BIGINT",63,null,2,java.sql.DatabaseMetaData.columnNoNulls});
  refcolumns.put("Column6",new Object[]{java.sql.Types.DOUBLE,"DOUBLE",53,null,2,java.sql.DatabaseMetaData.columnNullable});
  refcolumns.put("Column7",new Object[]{java.sql.Types.TIMESTAMP,"TIMESTAMP",63,null,2,java.sql.DatabaseMetaData.columnNoNulls});
  refcolumns.put("Column8",new Object[]{java.sql.Types.DECIMAL,"DECIMAL",VoltDecimalHelper.kDefaultPrecision,VoltDecimalHelper.kDefaultScale,10,java.sql.DatabaseMetaData.columnNullable});
  refcolumns.put("Column9",new Object[]{java.sql.Types.VARBINARY,"VARBINARY",250,null,null,java.sql.DatabaseMetaData.columnNoNulls});
  refcolumns.put("Column10",new Object[]{java.sql.Types.VARCHAR,"VARCHAR",200,null,null,java.sql.DatabaseMetaData.columnNullable});
  refcolumns.put("Column11",new Object[]{java.sql.Types.INTEGER,"INTEGER",31,null,2,java.sql.DatabaseMetaData.columnNullable});
  String schema="create table Table1 (Column1 varchar(200) not null, Column2 tinyint);" + "create table Table2 (Column3 smallint not null, Column4 integer, Column5 bigint not null);" + "create table Table3 (Column6 float, Column7 timestamp not null, Column8 decimal);"+ "create table Table4 (Column9 varbinary(250) not null);"+ "create view View1 (Column10, Column11) as select Column1, count(*) from Table1 group by Column1;";
  String project="<?xml version=\"1.0\"?>\n" + "<project>" + "  <database name='database'>"+ "    <schemas><schema path='" + getPathForSchema(schema) + "' /></schemas>"+ "    <procedures><procedure class='sample'><sql>select * from Table1</sql></procedure></procedures>"+ "  </database>"+ "</project>";
  VoltCompiler c=compileForDDLTest(project);
  System.out.println(c.getCatalog().serialize());
  JdbcDatabaseMetaDataGenerator dut=new JdbcDatabaseMetaDataGenerator(c.getCatalog());
  VoltTable columns=dut.getColumns();
  System.out.println(columns);
  assertEquals(23,columns.getColumnCount());
  assertEquals(11,columns.getRowCount());
  for (  Map.Entry<String,Object[]> entry : refcolumns.entrySet()) {
    verifyColumnData(entry.getKey(),columns,entry.getValue());
  }
}
