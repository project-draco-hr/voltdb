{
  this.m_payload=payload;
  m_shouldResumeProcedure=shouldResumeProcedure;
  if (payload != null && payload instanceof FragmentTask) {
    m_taskType=((FragmentTask)payload).getFragmentTaskType();
  }
  m_unsatisfiedDependencies=0;
  if (dependencyIds != null && dependencyIds.length > 0) {
    m_dependencies=new HashMap<Integer,HashMap<Integer,VoltTable>>();
    for (    int dependency : dependencyIds) {
      int depsToExpect=1;
      if ((dependency & DtxnConstants.MULTIPARTITION_DEPENDENCY) != 0) {
        depsToExpect=context.numberOfExecSites;
      }
 else       if ((dependency & DtxnConstants.MULTINODE_DEPENDENCY) != 0) {
        depsToExpect=context.numberOfNodes;
      }
      m_unsatisfiedDependencies+=depsToExpect;
      m_dependencies.put(dependency,new HashMap<Integer,VoltTable>());
    }
  }
}
