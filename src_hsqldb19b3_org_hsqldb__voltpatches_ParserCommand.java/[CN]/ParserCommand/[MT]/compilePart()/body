{
  Statement cs=null;
  setParsePosition(getPosition());
  if (token.tokenType == Tokens.X_STARTPARSE) {
    read();
  }
switch (token.tokenType) {
case Tokens.WITH:
case Tokens.OPENBRACKET:
case Tokens.VALUES:
case Tokens.TABLE:
case Tokens.SELECT:
{
      cs=compileCursorSpecification();
      break;
    }
case Tokens.INSERT:
{
    cs=compileInsertStatement(RangeVariable.emptyArray);
    break;
  }
case Tokens.UPDATE:
{
  cs=compileUpdateStatement(RangeVariable.emptyArray);
  break;
}
case Tokens.MERGE:
{
cs=compileMergeStatement(RangeVariable.emptyArray);
break;
}
case Tokens.DELETE:
{
cs=compileDeleteStatement(RangeVariable.emptyArray);
break;
}
case Tokens.TRUNCATE:
{
cs=compileDeleteStatement(RangeVariable.emptyArray);
break;
}
case Tokens.CALL:
{
cs=compileCallStatement(session.sessionContext.sessionVariablesRange,false);
break;
}
case Tokens.SET:
cs=compileSet();
break;
case Tokens.START:
cs=compileStartTransaction();
break;
case Tokens.COMMIT:
cs=compileCommit();
break;
case Tokens.ROLLBACK:
cs=compileRollback();
break;
case Tokens.SAVEPOINT:
cs=compileSavepoint();
break;
case Tokens.RELEASE:
cs=compileReleaseSavepoint();
break;
case Tokens.CREATE:
cs=compileCreate();
break;
case Tokens.ALTER:
cs=compileAlter();
break;
case Tokens.DROP:
cs=compileDrop();
break;
case Tokens.GRANT:
case Tokens.REVOKE:
cs=compileGrantOrRevoke();
break;
case Tokens.LOCK:
cs=compileLock();
break;
case Tokens.CONNECT:
cs=compileConnect();
break;
case Tokens.DISCONNECT:
cs=compileDisconnect();
break;
case Tokens.SCRIPT:
cs=compileScript();
break;
case Tokens.SHUTDOWN:
cs=compileShutdown();
break;
case Tokens.BACKUP:
cs=compileBackup();
break;
case Tokens.CHECKPOINT:
cs=compileCheckpoint();
break;
case Tokens.EXPLAIN:
cs=compileExplainPlan();
break;
case Tokens.DECLARE:
cs=compileSessionVariableDeclaration();
break;
default :
throw unexpectedToken();
}
if (cs.type != StatementTypes.SET_SESSION_AUTHORIZATION) {
cs.setSQL(getLastPart());
}
if (token.tokenType == Tokens.SEMICOLON) {
read();
}
 else if (token.tokenType == Tokens.X_ENDPARSE) {
}
return cs;
}
