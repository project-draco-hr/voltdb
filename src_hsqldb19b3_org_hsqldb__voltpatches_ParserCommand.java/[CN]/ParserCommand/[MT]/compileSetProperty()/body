{
  read();
  String property;
  Object value;
  HsqlDatabaseProperties props;
  checkIsSimpleName();
  checkIsDelimitedIdentifier();
  property=token.tokenString;
  props=database.getProperties();
  boolean isboolean=props.isBoolean(token.tokenString);
  boolean isintegral=props.isIntegral(token.tokenString);
  boolean isstring=props.isString(token.tokenString);
  if (!(isboolean || isintegral || isstring)) {
    throw Error.error(ErrorCode.X_42511);
  }
  int typeCode=isboolean ? Types.SQL_BOOLEAN : isintegral ? Types.SQL_INTEGER : Types.SQL_CHAR;
  read();
  if (token.tokenType == Tokens.TRUE) {
    value=Boolean.TRUE;
  }
 else   if (token.tokenType == Tokens.FALSE) {
    value=Boolean.FALSE;
  }
 else {
    checkIsValue();
    value=token.tokenValue;
    if (token.dataType.typeCode != typeCode) {
      throw Error.error(ErrorCode.X_42565,token.tokenString);
    }
  }
  read();
  Object[] args=new Object[]{property,value};
  return new StatementCommand(StatementTypes.SET_DATABASE_PROPERTY,args,null,null);
}
