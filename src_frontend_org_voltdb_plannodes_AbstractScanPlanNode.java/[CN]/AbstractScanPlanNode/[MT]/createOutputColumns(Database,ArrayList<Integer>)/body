{
  assert(m_children.isEmpty());
  if (m_outputColumns.isEmpty()) {
    CatalogMap<Column> cols=db.getTables().getIgnoreCase(m_targetTableName).getColumns();
    PlanColumn.Storage storage=PlanColumn.Storage.kPartitioned;
    if (db.getTables().getIgnoreCase(m_targetTableName).getIsreplicated())     storage=PlanColumn.Storage.kReplicated;
    PlanColumn orderedCols[]=new PlanColumn[cols.size()];
    for (    Column col : CatalogUtil.getSortedCatalogItems(cols,"index")) {
      TupleValueExpression tve=new TupleValueExpression();
      tve.setValueType(VoltType.get((byte)col.getType()));
      tve.setValueSize(col.getSize());
      tve.setColumnIndex(col.getIndex());
      tve.setTableName(m_targetTableName);
      tve.setColumnAlias(col.getTypeName());
      tve.setColumnName(col.getTypeName());
      orderedCols[col.getIndex()]=m_context.getPlanColumn(tve,col.getTypeName(),SortOrder.kUnsorted,storage);
    }
    for (int i=0; i < orderedCols.length; ++i)     m_outputColumns.add(orderedCols[i].guid());
  }
  return (ArrayList<Integer>)m_outputColumns.clone();
}
