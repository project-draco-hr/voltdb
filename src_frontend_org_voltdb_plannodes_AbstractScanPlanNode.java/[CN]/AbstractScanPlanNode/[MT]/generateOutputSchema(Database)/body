{
  if (m_tableSchema == null) {
    generateTableSchema(db);
  }
  ProjectionPlanNode proj=(ProjectionPlanNode)getInlinePlanNode(PlanNodeType.PROJECTION);
  if (proj != null) {
    m_outputSchema=proj.getOutputSchema().copyAndReplaceWithTVE();
    m_hasSignificantOutputSchema=false;
  }
 else {
    if (m_tableScanSchema.size() != 0) {
      List<TupleValueExpression> scan_tves=new ArrayList<TupleValueExpression>();
      for (      SchemaColumn col : m_tableScanSchema.getColumns()) {
        assert(col.getExpression() instanceof TupleValueExpression);
        scan_tves.addAll(ExpressionUtil.getTupleValueExpressions(col.getExpression()));
      }
      for (      TupleValueExpression tve : scan_tves) {
        int index=tve.resolveColumnIndexesUsingSchema(m_tableSchema);
        tve.setColumnIndex(index);
      }
      m_tableScanSchema.sortByTveIndex();
      ProjectionPlanNode map=new ProjectionPlanNode();
      map.setOutputSchema(m_tableScanSchema);
      addInlinePlanNode(map);
      m_outputSchema=map.getOutputSchema().copyAndReplaceWithTVE();
      m_hasSignificantOutputSchema=false;
    }
 else {
      m_outputSchema=m_tableSchema.clone();
      m_hasSignificantOutputSchema=true;
    }
  }
}
