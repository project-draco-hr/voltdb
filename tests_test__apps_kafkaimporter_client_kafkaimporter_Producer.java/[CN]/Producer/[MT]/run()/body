{
  Long rowCnt=new Long(0);
  final RateLimiter rateLimiter=RateLimiter.create(m_rate);
  m_producerrunning=true;
  for (int cycle=0; cycle < m_cycles; cycle++) {
    log.info("Kafka producer: starting cycle " + cycle + " to produce "+ (m_rows / m_cycles)+ " rows.");
    for (long rowsincycle=0; rowsincycle < (m_rows / m_cycles); rowsincycle++) {
      Long value=System.currentTimeMillis();
      rateLimiter.acquire();
      ProducerRecord<String,String> producerRecord=new ProducerRecord<String,String>(m_topic,rowCnt.toString(),rowCnt.toString() + "," + value.toString());
      m_producer.send(producerRecord);
      rowCnt++;
    }
    try {
      log.info("...Starting pause between cycles -- " + m_pausetime + " seconds.");
      m_producerrunning=false;
      Thread.sleep(m_pausetime * 1000);
      m_producerrunning=true;
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
  }
  m_producerrunning=false;
}
