@VOLT.Command(bundles=VOLT.AdminBundle(), description='Update the schema of a running database.', description2='Either a catalog (extension .jar), a deployment file (extension .xml), or both, must be provided.', arguments=(VOLT.StringArgument('catalog_or_deployment', 'application catalog (extension .jar) and/or deployment configuration (extension .xml) file path(s)', min_count=1, max_count=2),))
def update(runner):
    columns = [VOLT.FastSerializer.VOLTTYPE_NULL, VOLT.FastSerializer.VOLTTYPE_NULL]
    catalog = None
    deployment = None
    for catalog_or_deployment in runner.opts.catalog_or_deployment:
        extension = os.path.splitext(catalog_or_deployment)[1].lower()
        if (extension == '.jar'):
            if (not (catalog is None)):
                runner.abort('More than one catalog .jar file was specified.')
            catalog = VOLT.utility.File(catalog_or_deployment).read_hex()
            columns[0] = VOLT.FastSerializer.VOLTTYPE_STRING
        elif (extension == '.xml'):
            if (not (deployment is None)):
                runner.abort('More than one deployment .xml file was specified.')
            deployment = VOLT.utility.File(catalog_or_deployment).read()
            columns[1] = VOLT.FastSerializer.VOLTTYPE_STRING
        else:
            runner.abort(('The "%s" extension is not recognized as either a catalog or a deployment file' % extension))
    if ((catalog is None) and (deployment is None)):
        runner.abort('At least one catalog .jar or deployment .xml file is required.')
    params = [catalog, deployment]
    runner.call_proc('@UpdateApplicationCatalog', columns, params)
    runner.info('The catalog update succeeded.')
