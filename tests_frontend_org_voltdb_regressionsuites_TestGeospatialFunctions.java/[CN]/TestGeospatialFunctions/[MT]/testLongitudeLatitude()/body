{
  Client client=getClient();
  populateTables(client);
  String sql="select places.name, LATITUDE(places.loc), LONGITUDE(places.loc) " + "from places order by places.pk";
  VoltTable vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertContentOfTable(new Object[][]{{"Denver",39.704,-104.959},{"Albuquerque",35.113,-106.599},{"Cheyenne",41.134,-104.813},{"Fort Collins",40.585,-105.077},{"Point near N Colorado border",41.002,-105.04},{"Point Not On N Colorado Border",41.005,-109.025},{"Point on N Wyoming Border",44.978,-105.058},{"North Point Not On Wyoming Border",45.119,-105.06},{"Point on E Wyoming Border",42.988,-104.078},{"East Point Not On Wyoming Border",42.986,-104.061},{"Point On S Wyoming Border",41.099,-110.998},{"Point On S Colorado Border",37.002,-103.008},{"Point On W Wyoming Border",42.999,-110.998},{"West not On South Wyoming Border",41.999,-111.052},{"Neverwhere",Double.MIN_VALUE,Double.MIN_VALUE}},vt);
  sql="select places.name, LATITUDE(places.loc), LONGITUDE(places.loc) " + "from places, borders " + "where contains(borders.region, places.loc) "+ "group by places.name, places.loc "+ "order by places.name";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertContentOfTable(new Object[][]{{"Cheyenne",41.134,-104.813},{"Denver",39.704,-104.959},{"Fort Collins",40.585,-105.077},{"Point On S Wyoming Border",41.099,-110.998},{"Point On W Wyoming Border",42.999,-110.998},{"Point near N Colorado border",41.002,-105.04},{"Point on E Wyoming Border",42.988,-104.078},{"Point on N Wyoming Border",44.978,-105.058}},vt);
}
