{
  Client client=getClient();
  populateTables(client);
  String sql="select places.name, LONGITUDE(places.loc), LATITUDE(places.loc) " + "from places order by places.pk";
  VoltTable vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertContentOfTable(new Object[][]{{"Denver",-104.959,39.704},{"Albuquerque",-106.599,35.113},{"Cheyenne",-104.813,41.134},{"Fort Collins",-105.077,40.585},{"Point near N Colorado border",-105.04,41.002},{"North Point Not On Colorado Border",-109.025,41.005},{"Point on N Wyoming Border",-105.058,44.978},{"North Point Not On Wyoming Border",-105.06,45.119},{"Point on E Wyoming Border",-104.078,42.988},{"East Point Not On Wyoming Border",-104.061,42.986},{"Point On S Wyoming Border",-110.998,41.099},{"South Point Not On Colorado Border",-103.008,37.002},{"Point On W Wyoming Border",-110.998,42.999},{"West Point Not on Wyoming Border",-111.052,41.999},{"Neverwhere",Double.MIN_VALUE,Double.MIN_VALUE}},vt);
  sql="select places.name, LONGITUDE(places.loc), LATITUDE(places.loc) " + "from places, borders " + "where contains(borders.region, places.loc) "+ "group by places.name, places.loc "+ "order by places.name";
  vt=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertContentOfTable(new Object[][]{{"Cheyenne",-104.813,41.134},{"Denver",-104.959,39.704},{"Fort Collins",-105.077,40.585},{"Point On S Wyoming Border",-110.998,41.099},{"Point On W Wyoming Border",-110.998,42.999},{"Point near N Colorado border",-105.04,41.002},{"Point on E Wyoming Border",-104.078,42.988},{"Point on N Wyoming Border",-105.058,44.978}},vt);
}
