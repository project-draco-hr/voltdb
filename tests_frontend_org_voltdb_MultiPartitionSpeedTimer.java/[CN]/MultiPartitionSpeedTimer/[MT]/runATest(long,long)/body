{
  m_procsCalled=new AtomicLong(0);
  m_procsReturned=new AtomicLong(0);
  m_outstandingCalls=new AtomicLong(0);
  m_procCallCount=procsToCall;
  m_maxOutstandingCalls=outstandingMax;
  m_startTime=System.currentTimeMillis();
  while (m_procsCalled.get() < m_procCallCount) {
    while (m_outstandingCalls.get() >= m_maxOutstandingCalls)     Thread.yield();
    m_outstandingCalls.incrementAndGet();
    m_procsCalled.incrementAndGet();
    m_client.callProcedure(new SpeedTestCallback(),"measureOverheadMultipartition",0L);
  }
  m_client.drain();
}
