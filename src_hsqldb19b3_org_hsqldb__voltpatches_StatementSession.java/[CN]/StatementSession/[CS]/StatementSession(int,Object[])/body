{
  super(type);
  this.parameters=args;
  isTransactionStatement=false;
  isLogged=false;
switch (type) {
case StatementTypes.SET_SCHEMA:
    group=StatementTypes.X_SQL_SESSION;
  isLogged=true;
break;
case StatementTypes.DECLARE_VARIABLE:
group=StatementTypes.X_HSQLDB_SESSION;
isLogged=true;
break;
case StatementTypes.ALLOCATE_CURSOR:
group=StatementTypes.X_SQL_DATA;
break;
case StatementTypes.ALLOCATE_DESCRIPTOR:
case StatementTypes.DEALLOCATE_DESCRIPTOR:
case StatementTypes.DEALLOCATE_PREPARE:
group=StatementTypes.X_DYNAMIC;
break;
case StatementTypes.DYNAMIC_DELETE_CURSOR:
group=StatementTypes.X_SQL_DATA_CHANGE;
break;
case StatementTypes.DYNAMIC_CLOSE:
case StatementTypes.DYNAMIC_FETCH:
case StatementTypes.DYNAMIC_OPEN:
group=StatementTypes.X_SQL_DATA;
break;
case StatementTypes.OPEN:
case StatementTypes.FETCH:
case StatementTypes.FREE_LOCATOR:
case StatementTypes.GET_DESCRIPTOR:
case StatementTypes.HOLD_LOCATOR:
group=StatementTypes.X_SQL_DATA;
break;
case StatementTypes.PREPARABLE_DYNAMIC_DELETE_CURSOR:
case StatementTypes.PREPARABLE_DYNAMIC_UPDATE_CURSOR:
case StatementTypes.PREPARE:
group=StatementTypes.X_DYNAMIC;
break;
case StatementTypes.DISCONNECT:
group=StatementTypes.X_SQL_CONNECTION;
break;
case StatementTypes.SET_CONNECTION:
case StatementTypes.SET_CONSTRAINT:
case StatementTypes.SET_DESCRIPTOR:
case StatementTypes.SET_CATALOG:
case StatementTypes.SET_SESSION_CHARACTERISTICS:
case StatementTypes.SET_TRANSFORM_GROUP:
case StatementTypes.SET_SESSION_RESULT_MAX_ROWS:
case StatementTypes.SET_SESSION_RESULT_MEMORY_ROWS:
case StatementTypes.SET_SESSION_AUTOCOMMIT:
group=StatementTypes.X_HSQLDB_SESSION;
break;
case StatementTypes.COMMIT_WORK:
case StatementTypes.RELEASE_SAVEPOINT:
case StatementTypes.ROLLBACK_SAVEPOINT:
case StatementTypes.ROLLBACK_WORK:
case StatementTypes.SAVEPOINT:
case StatementTypes.SET_TRANSACTION:
case StatementTypes.START_TRANSACTION:
group=StatementTypes.X_SQL_TRANSACTION;
break;
default :
throw Error.runtimeError(ErrorCode.U_S0500,"StatementCommand");
}
}
