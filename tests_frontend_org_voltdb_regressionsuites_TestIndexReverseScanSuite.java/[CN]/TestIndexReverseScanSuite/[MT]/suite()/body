{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestIndexReverseScanSuite.class);
  VoltProjectBuilder project=new VoltProjectBuilder();
  final String literalSchema="CREATE TABLE R1 ( " + "ID INTEGER DEFAULT '0' NOT NULL, " + "a INTEGER, "+ "b INTEGER, "+ "c INTEGER, "+ "d INTEGER, "+ "PRIMARY KEY (ID) );"+ "create index R1_TREE_1 on R1 (a);"+ "create index R1_TREE_2 on R1 (b, c);"+ "CREATE TABLE P1 ( "+ "ID INTEGER DEFAULT '0' NOT NULL, "+ "a INTEGER, "+ "b INTEGER, "+ "c INTEGER, "+ "d INTEGER, "+ "PRIMARY KEY (ID) );"+ "PARTITION TABLE P1 ON COLUMN ID;"+ "create index P1_TREE_1 on P1 (a);"+ "create index P1_TREE_2 on P1 (b, c);"+ "CREATE TABLE P2 ( "+ "ID INTEGER DEFAULT '0' NOT NULL, "+ "a INTEGER not null, "+ "b INTEGER, "+ "c INTEGER, "+ "d INTEGER, "+ "PRIMARY KEY (ID) );"+ "PARTITION TABLE P2 ON COLUMN a;"+ "create index P2_TREE_1 on P2 (a);"+ "create index P2_TREE_2 on P2 (b, c);"+ "CREATE TABLE P3 ( "+ "ID INTEGER DEFAULT '0' NOT NULL, "+ "a INTEGER, "+ "b INTEGER not null, "+ "c INTEGER, "+ "d INTEGER, "+ "PRIMARY KEY (ID) );"+ "PARTITION TABLE P3 ON COLUMN b;"+ "create index P3_TREE_1 on P3 (a);"+ "create index P3_TREE_2 on P3 (b, c);"+ "";
  try {
    project.addLiteralSchema(literalSchema);
  }
 catch (  IOException e) {
    assertFalse(true);
  }
  boolean success;
  config=new LocalCluster("plansgroupby-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("plansgroupby-hsql.jar",1,1,0,BackendTarget.HSQLDB_BACKEND);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("plansgroupby-cluster.jar",2,3,1,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  return builder;
}
