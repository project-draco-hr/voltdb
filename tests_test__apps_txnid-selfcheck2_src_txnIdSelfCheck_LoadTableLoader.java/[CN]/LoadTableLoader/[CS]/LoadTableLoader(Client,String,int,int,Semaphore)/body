{
  setName("LoadTableLoader-" + tableName);
  setDaemon(true);
  this.client=client;
  this.m_tableName=tableName;
  this.targetCount=targetCount;
  this.batchSize=batchSize;
  m_permits=permits;
  VoltTable procInfo=client.callProcedure("@SystemCatalog","COLUMNS").getResults()[0];
  m_columnTypes=new TreeMap<Integer,VoltType>();
  m_colNames=new TreeMap<Integer,String>();
  while (procInfo.advanceRow()) {
    String table=procInfo.getString("TABLE_NAME");
    if (tableName.equalsIgnoreCase(table)) {
      VoltType vtype=VoltType.typeFromString(procInfo.getString("TYPE_NAME"));
      int idx=(int)procInfo.getLong("ORDINAL_POSITION") - 1;
      m_columnTypes.put(idx,vtype);
      m_colNames.put(idx,procInfo.getString("COLUMN_NAME"));
      String remarks=procInfo.getString("REMARKS");
      if (remarks != null && remarks.equalsIgnoreCase("PARTITION_COLUMN")) {
        m_partitionColumnType=vtype;
        m_partitionedColumnIndex=idx;
        log.debug("Table " + tableName + " Partition Column Name is: "+ procInfo.getString("COLUMN_NAME"));
        log.debug("Table " + tableName + " Partition Column Type is: "+ vtype.toString());
      }
    }
  }
  if (m_columnTypes.isEmpty()) {
    log.error("Table " + m_tableName + " Not found");
    throw new RuntimeException("Table Not found: " + m_tableName);
  }
  m_colInfo=new VoltTable.ColumnInfo[m_columnTypes.size()];
  for (int i=0; i < m_columnTypes.size(); i++) {
    VoltType type=m_columnTypes.get(i);
    String cname=m_colNames.get(i);
    VoltTable.ColumnInfo ci=new VoltTable.ColumnInfo(cname,type);
    m_colInfo[i]=ci;
  }
  m_isMP=(m_partitionedColumnIndex == -1 ? true : false);
  m_procName=(m_isMP ? "@LoadMultipartitionTable" : "@LoadSinglepartitionTable");
  m_table=new VoltTable(m_colInfo);
  System.out.println("LoadTableLoader Table " + m_tableName + " Is : "+ (m_isMP ? "MP" : "SP"));
  setPriority(getPriority() + 1);
}
