{
  if (expr == null)   return null;
  if ((expr.getExpressionType() != ExpressionType.COMPARE_EQUAL) && (expr.getExpressionType() != ExpressionType.COMPARE_GREATERTHAN) && (expr.getExpressionType() != ExpressionType.COMPARE_GREATERTHANOREQUALTO)&& (expr.getExpressionType() != ExpressionType.COMPARE_LESSTHAN)&& (expr.getExpressionType() != ExpressionType.COMPARE_LESSTHANOREQUALTO)) {
    return null;
  }
  Column indexedColumn=getColumnForFilterExpressionRecursive(table,expr);
  if (indexedColumn == null)   return indexedColumn;
  boolean keyIsExpression=true;
  boolean keyIsLeft=false;
  if (expr.getLeft().getExpressionType() == ExpressionType.VALUE_TUPLE) {
    TupleValueExpression tve=(TupleValueExpression)(expr.getLeft());
    if (getTableColumn(table,tve.getColumnName()) == indexedColumn) {
      keyIsExpression=false;
      keyIsLeft=true;
    }
  }
  if (expr.getRight().getExpressionType() == ExpressionType.VALUE_TUPLE) {
    TupleValueExpression tve=(TupleValueExpression)(expr.getRight());
    if (getTableColumn(table,tve.getColumnName()) == indexedColumn) {
      keyIsExpression=false;
      keyIsLeft=false;
    }
  }
  if (keyIsExpression)   return null;
  VoltType keyType=keyIsLeft ? expr.getLeft().getValueType() : expr.getRight().getValueType();
  VoltType exprType=keyIsLeft ? expr.getRight().getValueType() : expr.getLeft().getValueType();
  if (!VoltTypeUtil.isAllowableCastForKeyComparator(exprType,keyType)) {
    return null;
  }
  return indexedColumn;
}
