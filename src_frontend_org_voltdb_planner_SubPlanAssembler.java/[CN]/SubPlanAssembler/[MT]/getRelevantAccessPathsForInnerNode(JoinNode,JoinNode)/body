{
  ArrayList<AbstractExpression> joinExprList=new ArrayList<AbstractExpression>();
  joinExprList.addAll(joinNode.m_joinInnerList);
  joinExprList.addAll(joinNode.m_joinInnerOuterList);
  if (innerNode.m_table == null) {
    ArrayList<AccessPath> accessPaths=new ArrayList<AccessPath>();
    accessPaths.add(getRelevantNaivePathForTable(joinExprList,null));
    return accessPaths;
  }
  if (canDeferSendReceivePairForNode(joinNode.m_isReplicated)) {
    return getRelevantAccessPathsForTable(innerNode.m_table,joinExprList,null);
  }
 else {
    ArrayList<AccessPath> accessPaths=new ArrayList<AccessPath>();
    accessPaths.add(getRelevantNaivePathForTable(joinExprList,null));
    CatalogMap<Index> indexes=innerNode.m_table.getIndexes();
    for (    Index index : indexes) {
      AccessPath path=getRelevantAccessPathForIndex(innerNode.m_table,joinNode.m_joinInnerList,index);
      if (path != null) {
        path.joinExprs.addAll(joinNode.m_joinInnerOuterList);
        accessPaths.add(path);
      }
    }
    return accessPaths;
  }
}
