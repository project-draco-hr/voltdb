{
  Set<TupleValueExpression> coveringTves=new HashSet<TupleValueExpression>();
  for (  AbstractExpression coveringExpr : coveringExprs) {
    if (ExpressionUtil.isNullRejectingExpression(coveringExpr,tableScan.getTableAlias())) {
      coveringTves.addAll(ExpressionUtil.getTupleValueExpressions(coveringExpr));
    }
  }
  Iterator<AbstractExpression> iter=exprsToCover.iterator();
  while (iter.hasNext()) {
    AbstractExpression filter=iter.next();
    if (ExpressionType.OPERATOR_NOT == filter.getExpressionType()) {
      assert(filter.getLeft() != null);
      if (ExpressionType.OPERATOR_IS_NULL == filter.getLeft().getExpressionType()) {
        assert(filter.getLeft().getLeft() != null);
        List<TupleValueExpression> tves=ExpressionUtil.getTupleValueExpressions(filter.getLeft().getLeft());
        if (coveringTves.containsAll(tves)) {
          iter.remove();
        }
      }
    }
  }
  return exprsToCover;
}
