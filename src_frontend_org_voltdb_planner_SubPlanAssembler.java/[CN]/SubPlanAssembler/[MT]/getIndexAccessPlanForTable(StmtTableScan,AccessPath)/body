{
  Index index=path.index;
  IndexScanPlanNode scanNode=new IndexScanPlanNode(tableScan,index);
  AbstractPlanNode resultNode=scanNode;
  scanNode.setSortDirection(path.sortDirection);
  for (  AbstractExpression expr : path.indexExprs) {
    AbstractExpression expr2=expr.getRight();
    assert(expr2 != null);
    if (expr.getExpressionType() == ExpressionType.COMPARE_IN) {
      resultNode=injectIndexedJoinWithMaterializedScan(expr2,scanNode);
      MaterializedScanPlanNode matscan=(MaterializedScanPlanNode)resultNode.getChild(0);
      AbstractExpression elemExpr=matscan.getOutputExpression();
      assert(elemExpr != null);
      replaceInListFilterWithEqualityFilter(path.endExprs,expr2,elemExpr);
      expr2=elemExpr;
    }
    if (expr2 instanceof AbstractSubqueryExpression) {
      assert(false);
    }
    scanNode.addSearchKeyExpression(expr2);
  }
  scanNode.setLookupType(path.lookupType);
  scanNode.setBindings(path.bindings);
  scanNode.setEndExpression(ExpressionUtil.combine(path.endExprs));
  scanNode.setPredicate(ExpressionUtil.combine(path.otherExprs));
  scanNode.setInitialExpression(ExpressionUtil.combine(path.initialExpr));
  scanNode.setSkipNullPredicate();
  scanNode.setEliminatedPostFilters(path.eliminatedPostExprs);
  return resultNode;
}
