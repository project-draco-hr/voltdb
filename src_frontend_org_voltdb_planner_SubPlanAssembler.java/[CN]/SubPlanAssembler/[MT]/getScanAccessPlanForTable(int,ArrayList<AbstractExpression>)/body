{
  assert(tableAliasIdx != StmtTableScan.NULL_ALIAS_INDEX);
  assert(tableAliasIdx < m_parsedStmt.stmtCache.size());
  SeqScanPlanNode scanNode=new SeqScanPlanNode();
  StmtTableScan tableCache=m_parsedStmt.stmtCache.get(tableAliasIdx);
  if (tableCache.m_table != null) {
    scanNode.setTargetTableName(tableCache.m_table.getTypeName());
  }
 else {
    scanNode.setTargetTableName(tableCache.m_tableDerived.getTableName());
    scanNode.setSubQuery(true);
  }
  scanNode.setTargetTableAlias(tableCache.m_tableAlias);
  Set<SchemaColumn> scanColumns=m_parsedStmt.stmtCache.get(tableAliasIdx).m_scanColumns;
  if (scanColumns != null) {
    scanNode.setScanColumns(scanColumns);
  }
  AbstractExpression localWhere=null;
  if ((exprs != null) && (exprs.isEmpty() == false)) {
    localWhere=ExpressionUtil.combine(exprs);
    scanNode.setPredicate(localWhere);
  }
  return scanNode;
}
