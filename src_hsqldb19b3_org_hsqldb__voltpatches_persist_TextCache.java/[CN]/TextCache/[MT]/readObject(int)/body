{
  try {
    ByteArray buffer=new ByteArray(80);
    boolean complete=false;
    boolean wasCR=false;
    int c;
    boolean hasQuote=false;
    boolean wasNormal=false;
    pos=findNextUsedLinePos(pos);
    if (pos == -1) {
      return null;
    }
    dataFile.seek(pos);
    while (!complete) {
      wasNormal=false;
      c=dataFile.read();
      if (c == -1) {
        if (buffer.length() == 0) {
          return null;
        }
        complete=true;
        if (wasCR) {
          break;
        }
        if (!cacheReadonly) {
          dataFile.write(ScriptWriterText.BYTES_LINE_SEP,0,ScriptWriterText.BYTES_LINE_SEP.length);
        }
        break;
      }
switch (c) {
case DOUBLE_QUOTE_CHAR:
        wasNormal=true;
      complete=wasCR;
    wasCR=false;
  if (isQuoted) {
    hasQuote=!hasQuote;
  }
break;
case CR_CHAR:
wasCR=!hasQuote;
break;
case LF_CHAR:
complete=!hasQuote;
break;
default :
wasNormal=true;
complete=wasCR;
wasCR=false;
}
buffer.append(c);
}
if (complete) {
int length=(int)dataFile.getFilePointer() - pos;
if (wasNormal) {
length--;
}
((RowInputText)rowIn).setSource(buffer.toString(),pos,length);
return rowIn;
}
return null;
}
 catch (IOException e) {
throw new HsqlException(e.getMessage(),"",0);
}
}
