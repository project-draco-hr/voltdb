'Tests the --help flag of Google C++ Testing Framework.\n\nSYNOPSIS\n       gtest_help_test.py --build_dir=BUILD/DIR\n         # where BUILD/DIR contains the built gtest_help_test_ file.\n       gtest_help_test.py\n'
__author__ = 'wan@google.com (Zhanyong Wan)'
import os
import re
import gtest_test_utils
IS_LINUX = ((os.name == 'posix') and (os.uname()[0] == 'Linux'))
IS_WINDOWS = (os.name == 'nt')
PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_help_test_')
FLAG_PREFIX = '--gtest_'
DEATH_TEST_STYLE_FLAG = (FLAG_PREFIX + 'death_test_style')
STREAM_RESULT_TO_FLAG = (FLAG_PREFIX + 'stream_result_to')
UNKNOWN_FLAG = (FLAG_PREFIX + 'unknown_flag_for_testing')
LIST_TESTS_FLAG = (FLAG_PREFIX + 'list_tests')
INCORRECT_FLAG_VARIANTS = [re.sub('^--', '-', LIST_TESTS_FLAG), re.sub('^--', '/', LIST_TESTS_FLAG), re.sub('_', '-', LIST_TESTS_FLAG)]
INTERNAL_FLAG_FOR_TESTING = (FLAG_PREFIX + 'internal_flag_for_testing')
SUPPORTS_DEATH_TESTS = ('DeathTest' in gtest_test_utils.Subprocess([PROGRAM_PATH, LIST_TESTS_FLAG]).output)
HELP_REGEX = re.compile((((((((((((((((((((((((FLAG_PREFIX + 'list_tests.*') + FLAG_PREFIX) + 'filter=.*') + FLAG_PREFIX) + 'also_run_disabled_tests.*') + FLAG_PREFIX) + 'repeat=.*') + FLAG_PREFIX) + 'shuffle.*') + FLAG_PREFIX) + 'random_seed=.*') + FLAG_PREFIX) + 'color=.*') + FLAG_PREFIX) + 'print_time.*') + FLAG_PREFIX) + 'output=.*') + FLAG_PREFIX) + 'break_on_failure.*') + FLAG_PREFIX) + 'throw_on_failure.*') + FLAG_PREFIX) + 'catch_exceptions=0.*'), re.DOTALL)
if (__name__ == '__main__'):
    gtest_test_utils.Main()
