{
  setState(State.SNAPSHOTTING);
  m_lastSysprocInvocation=now;
  final Date nowDate=new Date(now);
  final String dateString=m_dateFormat.format(nowDate);
  final String nonce=m_prefix + dateString;
  JSONObject jsObj=new JSONObject();
  try {
    jsObj.put(SnapshotUtil.JSON_PATH,m_path);
    jsObj.put(SnapshotUtil.JSON_PATH_TYPE,SnapshotPathType.SNAP_AUTO.toString());
    jsObj.put(SnapshotUtil.JSON_NONCE,nonce);
    jsObj.put("perPartitionTxnIds",retrievePerPartitionTransactionIds());
    m_snapshots.offer(new Snapshot(m_path,SnapshotPathType.SNAP_AUTO,nonce,now));
    long handle=m_nextCallbackHandle++;
    m_procedureCallbacks.put(handle,new ProcedureCallback(){
      @Override public void clientCallback(      final ClientResponse clientResponse) throws Exception {
        m_lastInitiationTs=null;
        processClientResponsePrivate(clientResponse);
      }
    }
);
    SNAP_LOG.info("Requesting auto snapshot to path " + m_path + " nonce "+ nonce);
    initiateSnapshotSave(handle,new Object[]{jsObj.toString(4)},false);
  }
 catch (  JSONException e) {
    VoltDB.crashLocalVoltDB("",false,e);
  }
}
