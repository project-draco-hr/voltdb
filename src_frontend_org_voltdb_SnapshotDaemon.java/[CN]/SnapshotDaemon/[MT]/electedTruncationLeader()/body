{
  loggingLog.info("This node was selected as the leader for snapshot truncation");
  m_truncationSnapshotScanTask=m_es.scheduleWithFixedDelay(new Runnable(){
    @Override public void run(){
      try {
        scanTruncationSnapshots();
      }
 catch (      Exception e) {
        loggingLog.error("Error during scan and group of truncation snapshots");
      }
    }
  }
,0,1,TimeUnit.HOURS);
  try {
    m_zk.delete(VoltZK.request_truncation_snapshot,-1);
    truncationRequestExistenceCheck();
    userSnapshotRequestExistenceCheck(false);
  }
 catch (  Exception e) {
    VoltDB.crashLocalVoltDB("Error while accepting snapshot daemon leadership",true,e);
  }
}
