{
  setState(State.WAITING);
  final long now=System.currentTimeMillis();
  m_nextSnapshotTime+=m_frequencyInMillis;
  if (m_nextSnapshotTime < now) {
    m_nextSnapshotTime=now - 1;
  }
  if (response.getStatus() != ClientResponse.SUCCESS) {
    logFailureResponse("Snapshot failed",response);
    return;
  }
  final VoltTable results[]=response.getResults();
  final VoltTable result=results[0];
  if (result.getColumnCount() == 1) {
    boolean advanced=result.advanceRow();
    assert(advanced);
    assert(result.getColumnCount() == 1);
    assert(result.getColumnType(0) == VoltType.STRING);
    SNAP_LOG.warn("Snapshot failed with failure response: " + result.getString(0));
    m_snapshots.removeLast();
    return;
  }
  boolean success=true;
  while (result.advanceRow()) {
    if (!result.getString("RESULT").equals("SUCCESS")) {
      success=false;
      SNAP_LOG.warn("Snapshot save feasibility test failed for host " + result.getLong("HOST_ID") + " table "+ result.getString("TABLE")+ " with error message "+ result.getString("ERR_MSG"));
    }
  }
  if (!success) {
    m_snapshots.removeLast();
  }
}
