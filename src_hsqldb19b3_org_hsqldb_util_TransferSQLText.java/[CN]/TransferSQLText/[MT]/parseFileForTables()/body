{
  StringTokenizer Tokenizer;
  if (WTextRead == null) {
    try {
      WTextRead=new BufferedReader(new FileReader(sFileName));
    }
 catch (    IOException e) {
      throw new DataAccessPointException(e.getMessage());
    }
  }
  String currentLine="";
  String Token="";
  String name="";
  TransferTable relatedTable=null;
  try {
    while ((currentLine=WTextRead.readLine()) != null) {
      currentLine=currentLine.trim() + ";";
      Tokenizer=new StringTokenizer(currentLine);
      try {
        Token=Tokenizer.nextToken();
      }
 catch (      NoSuchElementException NSE) {
        continue;
      }
      if (Token == null) {
        continue;
      }
      if (!Token.toUpperCase().equals("CREATE")) {
        continue;
      }
      Token=Tokenizer.nextToken().toUpperCase();
      if (Token.equals("TABLE") || Token.equals("VIEW")) {
        try {
          name=Tokenizer.nextToken(" (;");
          relatedTable=new TransferTable(this,name,"",Token,tracer);
          relatedTable.Stmts.bCreate=false;
          relatedTable.Stmts.bDelete=false;
          relatedTable.Stmts.bDrop=false;
          relatedTable.Stmts.bCreateIndex=false;
          relatedTable.Stmts.bDropIndex=false;
          relatedTable.Stmts.bInsert=false;
          relatedTable.Stmts.bAlter=false;
          DbStmts.put(relatedTable.Stmts.sSourceTable,relatedTable);
        }
 catch (        NoSuchElementException NSE) {
          continue;
        }
      }
    }
  }
 catch (  Exception IOe) {
    throw new DataAccessPointException(IOe.getMessage());
  }
}
