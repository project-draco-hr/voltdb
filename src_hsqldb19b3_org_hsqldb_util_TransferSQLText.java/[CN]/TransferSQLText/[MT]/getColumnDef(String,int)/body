{
  int nextPos=0;
  ColumnDef columnDef=new TransferSQLText.ColumnDef();
  columnDef.start=curPos;
  if ((ColumnsDesc == null) || (ColumnsDesc.length() == 0) || (curPos >= ColumnsDesc.length())) {
    return new TransferSQLText.ColumnDef();
  }
  String stbuff=ColumnsDesc.substring(curPos);
  try {
    int i=0;
    for (; i < stbuff.length(); i++) {
      int c=stbuff.charAt(i);
      if (c == ',' || c == ' ' || c == ')' || c == ';') {
        continue;
      }
 else {
        break;
      }
    }
    if (i == stbuff.length()) {
      return new TransferSQLText.ColumnDef();
    }
    columnDef.len+=i;
    stbuff=stbuff.substring(i);
    while (stbuff.charAt(nextPos) != ' ') {
      nextPos++;
    }
    columnDef.columnName=stbuff.substring(0,nextPos);
    stbuff=stbuff.substring(nextPos);
    columnDef.len+=nextPos;
    nextPos=0;
    if (!columnDef.columnName.toUpperCase().equals("CONSTRAINT")) {
      i=0;
      for (; i < stbuff.length() && stbuff.charAt(i) == ' '; i++) {
      }
      stbuff=stbuff.substring(i);
      columnDef.len+=i;
      while ((stbuff.charAt(nextPos) != '(') && (stbuff.charAt(nextPos) != ',') && (stbuff.charAt(nextPos) != ')')&& (stbuff.charAt(nextPos) != ';')&& (stbuff.charAt(nextPos) != ' ')) {
        nextPos++;
      }
      columnDef.columnType=stbuff.substring(0,nextPos).toUpperCase();
      stbuff=stbuff.substring(nextPos);
      columnDef.len+=nextPos;
      nextPos=0;
    }
    while ((stbuff.charAt(nextPos) != ',') && (stbuff.charAt(nextPos) != ';') && (nextPos < stbuff.length())&& (stbuff.charAt(nextPos) != ')')) {
      if (stbuff.charAt(nextPos) == '(') {
        while (stbuff.charAt(nextPos) != ')') {
          nextPos++;
        }
      }
      nextPos++;
    }
    columnDef.options=stbuff.substring(0,nextPos);
    columnDef.len+=nextPos;
  }
 catch (  Exception e) {
    columnDef=new TransferSQLText.ColumnDef();
  }
  return columnDef;
}
