{
  if (!VoltDB.instance().getConfig().m_isEnterprise) {
    System.out.println("SKIPPING DRNODE STATS TESTS FOR COMMUNITY VERSION");
    return;
  }
  System.out.println("\n\nTESTING DRNODE STATS\n\n\n");
  Client client=getFullyConnectedClient();
  ColumnInfo[] expectedSchema2=new ColumnInfo[8];
  assertEquals("Expected DRNodeStatistics schema length is 8",8,expectedSchema2.length);
  expectedSchema2[0]=new ColumnInfo("TIMESTAMP",VoltType.BIGINT);
  expectedSchema2[1]=new ColumnInfo("HOST_ID",VoltType.INTEGER);
  expectedSchema2[2]=new ColumnInfo("HOSTNAME",VoltType.STRING);
  expectedSchema2[3]=new ColumnInfo("STATE",VoltType.STRING);
  expectedSchema2[4]=new ColumnInfo("SYNCSNAPSHOTSTATE",VoltType.STRING);
  expectedSchema2[5]=new ColumnInfo("ROWSINSYNCSNAPSHOT",VoltType.BIGINT);
  expectedSchema2[6]=new ColumnInfo("ROWSACKEDFORSYNCSNAPSHOT",VoltType.BIGINT);
  expectedSchema2[7]=new ColumnInfo("QUEUEDEPTH",VoltType.BIGINT);
  VoltTable expectedTable2=new VoltTable(expectedSchema2);
  VoltTable[] results=null;
  results=client.callProcedure("@Statistics","DRPRODUCERNODE",0).getResults();
  assertEquals(1,results.length);
  System.out.println("Test DRPRODUCERNODE table: " + results[0].toString());
  validateSchema(results[0],expectedTable2);
  results[0].advanceRow();
  Map<String,String> columnTargets=new HashMap<String,String>();
  columnTargets.put("HOSTNAME",results[0].getString("HOSTNAME"));
  validateRowSeenAtAllHosts(results[0],columnTargets,true);
}
