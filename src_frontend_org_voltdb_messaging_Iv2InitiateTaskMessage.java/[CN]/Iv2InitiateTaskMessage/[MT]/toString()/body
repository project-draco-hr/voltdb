{
  StringBuilder sb=new StringBuilder();
  sb.append("IV2 INITITATE_TASK (FROM ");
  sb.append(CoreUtils.hsIdToString(getInitiatorHSId()));
  sb.append(" TO ");
  sb.append(CoreUtils.hsIdToString(getCoordinatorHSId()));
  sb.append(") FOR TXN ").append(TxnEgo.txnIdToString(m_txnId));
  sb.append(" UNIQUE ID ").append(m_uniqueId).append(" (").append(UniqueIdGenerator.toString(m_uniqueId));
  sb.append(")").append("\n");
  sb.append(") TRUNC HANDLE ");
  sb.append(TxnEgo.txnIdToString(getTruncationHandle())).append("\n");
  sb.append("SP HANDLE: ").append(TxnEgo.txnIdToString(getSpHandle())).append("\n");
  sb.append("CLIENT INTERFACE HANDLE: ").append(m_clientInterfaceHandle);
  sb.append("\n");
  sb.append("CONNECTION ID: ").append(m_connectionId).append("\n");
  if (m_isReadOnly)   sb.append("  READ, ");
 else   sb.append("  WRITE, ");
  if (m_isSinglePartition)   sb.append("SINGLE PARTITION, ");
 else   sb.append("MULTI PARTITION, ");
  if (isForReplay())   sb.append("FOR REPLAY, ");
 else   sb.append("NOT REPLAY, ");
  sb.append("COORD ");
  sb.append(CoreUtils.hsIdToString(getCoordinatorHSId()));
  if (m_invocation != null) {
    sb.append("\n  PROCEDURE: ");
    sb.append(m_invocation.getProcName());
    sb.append("\n  PARAMS: ");
    sb.append(m_invocation.getParams().toString());
    if (m_invocation.getProcName().startsWith("@AdHoc")) {
      sb.append("\n  ADHOC INFO: ");
      sb.append(AdHocBase.adHocSQLFromInvocationForDebug(m_invocation));
    }
  }
 else {
    sb.append("\n NO INVOCATION");
  }
  return sb.toString();
}
