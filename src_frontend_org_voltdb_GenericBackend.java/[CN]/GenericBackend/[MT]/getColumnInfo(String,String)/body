{
  if (typeName.equalsIgnoreCase("VARCHAR"))   return new VoltTable.ColumnInfo(colName,VoltType.STRING);
 else   if (typeName.equalsIgnoreCase("TINYINT"))   return new VoltTable.ColumnInfo(colName,VoltType.TINYINT);
 else   if (typeName.equalsIgnoreCase("SMALLINT"))   return new VoltTable.ColumnInfo(colName,VoltType.SMALLINT);
 else   if (typeName.equalsIgnoreCase("INTEGER"))   return new VoltTable.ColumnInfo(colName,VoltType.INTEGER);
 else   if (typeName.equalsIgnoreCase("BIGINT"))   return new VoltTable.ColumnInfo(colName,VoltType.BIGINT);
 else   if (typeName.equalsIgnoreCase("DECIMAL"))   return new VoltTable.ColumnInfo(colName,VoltType.DECIMAL);
 else   if (typeName.equalsIgnoreCase("FLOAT"))   return new VoltTable.ColumnInfo(colName,VoltType.FLOAT);
 else   if (typeName.equalsIgnoreCase("TIMESTAMP"))   return new VoltTable.ColumnInfo(colName,VoltType.TIMESTAMP);
 else   if (typeName.equalsIgnoreCase("VARBINARY"))   return new VoltTable.ColumnInfo(colName,VoltType.VARBINARY);
 else   if (typeName.equalsIgnoreCase("CHARACTER"))   return new VoltTable.ColumnInfo(colName,VoltType.STRING);
 else   throw new ExpectedProcedureException("Trying to create a column in Backend with a (currently) unsupported type: " + typeName);
}
