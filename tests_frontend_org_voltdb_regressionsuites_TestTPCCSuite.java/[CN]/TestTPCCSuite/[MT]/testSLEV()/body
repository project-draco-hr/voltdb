{
  Client client=getClient();
  VoltTable[] idresults=client.callProcedure("InsertDistrict",7L,3L,"A District","Street Addy","meh","westerfield","BA","99999",.0825,15241.45,21L).getResults();
  assertEquals(1L,idresults[0].asScalarLong());
  VoltTable[] results=client.callProcedure(Constants.STOCK_LEVEL,(byte)3,(byte)7,1).getResults();
  assertEquals(1,results.length);
  VoltTable result=results[0];
  assertNotNull(result);
  long stockCount=result.asScalarLong();
  assertEquals(0L,stockCount);
  TimestampType timestamp=new TimestampType();
  VoltTable[] olresults=client.callProcedure("InsertOrderLine",4L,7L,3L,1L,4L,3L,timestamp,45L,152.15,"blah blah blah").getResults();
  assertEquals(1L,olresults[0].asScalarLong());
  try {
    results=client.callProcedure(Constants.STOCK_LEVEL,(byte)3,(byte)7,1L).getResults();
    if (Constants.STOCK_LEVEL.equals(slev.class.getSimpleName())) {
      assertEquals(1,results.length);
      result=results[0];
      assertNotNull(result);
      stockCount=result.asScalarLong();
      assertEquals(0L,stockCount);
    }
 else {
      fail("expected exception");
    }
  }
 catch (  ProcCallException e) {
  }
  timestamp=new TimestampType();
  VoltTable[] isresults=client.callProcedure("InsertStock",4L,3L,45L,"INFO","INFO","INFO","INFO","INFO","INFO","INFO","INFO","INFO","INFO",5582L,152L,32L,"DATA").getResults();
  assertEquals(1L,isresults[0].asScalarLong());
  results=client.callProcedure(Constants.STOCK_LEVEL,(byte)3,(byte)7,5000).getResults();
  assertEquals(1,results.length);
  result=results[0];
  assertNotNull(result);
  stockCount=result.asScalarLong();
  assertEquals(1L,stockCount);
  VoltTable[] ol2results=client.callProcedure("InsertOrderLine",5L,7L,3L,1L,5L,3L,timestamp,45L,152.15,"blah blah blah").getResults();
  assertEquals(1L,ol2results[0].asScalarLong());
  VoltTable[] ol3results=client.callProcedure("InsertOrderLine",6L,7L,3L,1L,4L,3L,timestamp,45L,152.15,"blah blah blah").getResults();
  assertEquals(1L,ol3results[0].asScalarLong());
  VoltTable[] is2results=client.callProcedure("InsertStock",5L,3L,45L,"INFO","INFO","INFO","INFO","INFO","INFO","INFO","INFO","INFO","INFO",5582L,152L,32L,"DATA").getResults();
  assertEquals(1L,is2results[0].asScalarLong());
  results=client.callProcedure(Constants.STOCK_LEVEL,(byte)3,(byte)7,5000).getResults();
  assertEquals(1,results.length);
  result=results[0];
  assertNotNull(result);
  stockCount=result.asScalarLong();
  assertEquals(2L,stockCount);
}
