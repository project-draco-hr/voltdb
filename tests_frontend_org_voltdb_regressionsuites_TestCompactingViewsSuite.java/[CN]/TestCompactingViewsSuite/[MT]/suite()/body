{
  VoltServerConfig config=null;
  final MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestCompactingViewsSuite.class);
  final VoltProjectBuilder project=new VoltProjectBuilder();
  try {
    project.addLiteralSchema("CREATE TABLE PP(id INTEGER NOT NULL, value VARCHAR(63), " + "e1 VARCHAR(63), e2 VARCHAR(63), e3 VARCHAR(63), e4 VARCHAR(63)," + "e5 VARCHAR(63), e6 VARCHAR(63), e7 VARCHAR(63), e8 VARCHAR(63),"+ "PRIMARY KEY (id)); ");
    project.addLiteralSchema("CREATE INDEX FOO ON PP (value, e1, e2, e3, e4, e5, e6, e7, e8);");
    project.addLiteralSchema("CREATE VIEW VP(value, e1, e2, e3, e4, e5, e6, e7, e8, c) " + "AS SELECT value, e1, e2, e3, e4, e5, e6, e7, e8, COUNT(*) " + "FROM PP GROUP BY value, e1, e2, e3, e4, e5, e6, e7, e8;");
    project.addPartitionInfo("pp","id");
    project.addLiteralSchema("CREATE TABLE PR(id INTEGER NOT NULL, value VARCHAR(1000), " + "e1 VARCHAR(63), e2 VARCHAR(63), e3 VARCHAR(63), e4 VARCHAR(63)," + "e5 VARCHAR(63), e6 VARCHAR(63), e7 VARCHAR(63), e8 VARCHAR(63),"+ "PRIMARY KEY (id)); "+ "CREATE VIEW VR(value, e1, e2, e3, e4, e5, e6, e7, e8, c) "+ "AS SELECT value, e1, e2, e3, e4, e5, e6, e7, e8, COUNT(*) "+ "FROM PR GROUP BY value, e1, e2, e3, e4, e5, e6, e7, e8;");
    project.addStmtProcedure("selectPP","select id from PP order by value, e1, e2, e3, e4, e5, e6, e7, e8");
    project.addStmtProcedure("selectPR","select id from PR order by value, e1, e2, e3, e4, e5, e6, e7, e8");
    project.addStmtProcedure("deletePR","delete from PR where id = ?");
  }
 catch (  IOException error) {
    fail(error.getMessage());
  }
  config=new LocalCluster("sqltypes-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  boolean t1=config.compile(project);
  assertTrue(t1);
  builder.addServerConfig(config);
  return builder;
}
