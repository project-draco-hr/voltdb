def output_messages(msgs, f=sys.stdout, tag=None, level=0):
    '\n    Low level message display.\n    :param msgs:\n    :param f:\n    :param tag:\n    :param level:\n    '

    def write(s):
        f.write(s)
        if G.log_file:
            G.log_file.write(s)
            G.log_file.flush()
    if tag:
        stag = ('%8s: ' % tag)
    else:
        stag = ''
    if isinstance(msgs, basestring):
        msgs = [msgs]
    sindent = (level * '  ')
    for msg in msgs:
        if (msg is not None):
            if issubclass(msg.__class__, Exception):
                write(('%s%s%s Exception: %s\n' % (stag, sindent, msg.__class__.__name__, str(msg))))
            elif isinstance(msg, basestring):
                for msg2 in msg.split('\n'):
                    write(('%s%s%s\n' % (stag, sindent, msg2)))
            elif hasattr(msg, '__iter__'):
                output_messages(msg, f=f, tag=tag, level=(level + 1))
            else:
                for msg2 in str(msg).split('\n'):
                    write(('%s%s%s\n' % (stag, sindent, msg2)))
