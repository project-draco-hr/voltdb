{
  System.out.println("STARTING Left and Right");
  Client client=getClient();
  ClientResponse cr;
  VoltTable result;
  cr=client.callProcedure("P1.insert",1,"??????Vo",1,1.0,new Timestamp(1000000000000L));
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("LEFT",0,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("",result.getString(1));
  cr=client.callProcedure("LEFT",1,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("???",result.getString(1));
  cr=client.callProcedure("LEFT",2,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("??????",result.getString(1));
  cr=client.callProcedure("LEFT",3,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("??????V",result.getString(1));
  cr=client.callProcedure("LEFT",4,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("??????Vo",result.getString(1));
  cr=client.callProcedure("LEFT",5,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("??????Vo",result.getString(1));
  Exception ex=null;
  try {
    cr=client.callProcedure("LEFT",-1,1);
  }
 catch (  Exception e) {
    assertTrue(e instanceof ProcCallException);
    ex=e;
  }
 finally {
    assertNotNull(ex);
  }
  cr=client.callProcedure("RIGHT",0,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("",result.getString(1));
  cr=client.callProcedure("RIGHT",1,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("o",result.getString(1));
  cr=client.callProcedure("RIGHT",2,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("Vo",result.getString(1));
  cr=client.callProcedure("RIGHT",3,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("???Vo",result.getString(1));
  cr=client.callProcedure("RIGHT",4,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("??????Vo",result.getString(1));
  cr=client.callProcedure("RIGHT",5,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("??????Vo",result.getString(1));
  ex=null;
  try {
    cr=client.callProcedure("RIGHT",-1,1);
  }
 catch (  Exception e) {
    assertTrue(e instanceof ProcCallException);
    ex=e;
  }
 finally {
    assertNotNull(ex);
  }
}
