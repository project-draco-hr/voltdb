{
  System.out.println("STARTING testStringExpressionIndex");
  Client client=getClient();
  initialLoad(client,"P1");
  ClientResponse cr=null;
  VoltTable result=null;
  cr=client.callProcedure("@AdHoc","select ID from P1 where SUBSTRING(DESC FROM 1 for 2) = 'X1' and ABS(ID+2) > 7 order by NUM, ID");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(5,result.getRowCount());
  VoltTable r;
  long resultA;
  long resultB;
  cr=client.callProcedure("@AdHoc","select count(*) from P1 where ABS(ID+3) = 7 order by NUM, ID");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  resultA=r.asScalarLong();
  cr=client.callProcedure("@AdHoc","select count(*) from P1 where SUBSTRING(DESC FROM 1 for 2) >= 'X1' and ABS(ID+2) = 8");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  resultB=r.asScalarLong();
  assertEquals(resultA,resultB);
  cr=client.callProcedure("@AdHoc","select count(*) from P1 where SUBSTRING(DESC FROM 1 for 2) = 'X1' and ABS(ID+2) > 7 and ABS(ID+2) < 9");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  resultB=r.asScalarLong();
  assertEquals(resultA,resultB);
  cr=client.callProcedure("@AdHoc","delete from P1 where ABS(ID+3) <> 7");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  long killCount=r.asScalarLong();
  assertEquals(7,killCount);
  cr=client.callProcedure("@AdHoc","select count(*) from P1 where SUBSTRING(DESC FROM 1 for 2) >= 'X1' and ABS(ID+2) = 8");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  resultB=r.asScalarLong();
  assertEquals(resultA,resultB);
  cr=client.callProcedure("@AdHoc","select count(*) from P1 where SUBSTRING(DESC FROM 1 for 2) = 'X1' and ABS(ID+2) > 7 and ABS(ID+2) < 9");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  resultB=r.asScalarLong();
  assertEquals(resultA,resultB);
}
