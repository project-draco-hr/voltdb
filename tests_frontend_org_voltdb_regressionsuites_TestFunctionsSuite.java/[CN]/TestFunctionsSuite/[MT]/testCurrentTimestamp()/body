{
  System.out.println("STARTING testCurrentTimestamp");
  Client client=getClient();
  ClientResponse cr=null;
  VoltTable vt=null;
  Date before=null;
  Date after=null;
  before=new Date();
  cr=client.callProcedure("@AdHoc","Insert into R_TIME (ID) VALUES(1);");
  after=new Date();
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  vt=client.callProcedure("@AdHoc","SELECT C1, T1, T2, T3 FROM R_TIME WHERE ID = 1;").getResults()[0];
  assertTrue(vt.advanceRow());
  assertEquals(2,vt.getLong(0));
  long t2FirstRow=vt.getTimestampAsLong(2);
  long t3FirstRow=vt.getTimestampAsLong(3);
  assertTrue(after.getTime() * 1000 >= t2FirstRow);
  assertTrue(before.getTime() * 1000 <= t2FirstRow);
  assertEquals(t2FirstRow,t3FirstRow);
  Thread.sleep(250);
  cr=client.callProcedure("@AdHoc","Insert into R_TIME (ID) VALUES(2);");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  vt=client.callProcedure("@AdHoc","SELECT C1, T1, T2, T3 FROM R_TIME WHERE ID = 2;").getResults()[0];
  assertTrue(vt.advanceRow());
  long t2SecondRow=vt.getTimestampAsLong(2);
  assertTrue(t2FirstRow < t2SecondRow);
  before=new Date();
  vt=client.callProcedure("@AdHoc","SELECT NOW, CURRENT_TIMESTAMP FROM R_TIME;").getResults()[0];
  after=new Date();
  assertTrue(vt.advanceRow());
  assertTrue(after.getTime() * 1000 >= vt.getTimestampAsLong(0));
  assertTrue(before.getTime() * 1000 <= vt.getTimestampAsLong(0));
  assertEquals(vt.getTimestampAsLong(0),vt.getTimestampAsLong(1));
}
