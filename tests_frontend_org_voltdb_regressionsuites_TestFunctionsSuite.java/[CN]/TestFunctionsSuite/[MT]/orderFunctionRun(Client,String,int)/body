{
  ClientResponse cr;
  VoltTable result;
  FunctionTestCase[] resultSet=new FunctionTestCase[numTypeNames.length * rowCount];
  int ii=0;
  for (  String numTypeName : numTypeNames) {
    String proc="ORDER_" + fname + "_"+ numTypeName;
    cr=client.callProcedure(proc);
    result=cr.getResults()[0];
    assertEquals(rowCount,result.getRowCount());
    int jj=0;
    while (result.advanceRow()) {
      try {
        resultSet[ii]=new FunctionTestCase(proc + " ROW " + jj,result.getLong(0));
        ii++;
      }
 catch (      IllegalArgumentException iae) {
        resultSet[ii]=new FunctionTestCase(proc + " ROW " + jj,result.getDouble(0));
        ii++;
      }
      for (int kk=1; kk < result.getColumnCount(); ++kk) {
        if (result.getColumnType(kk) == VoltType.FLOAT) {
          System.out.println("DEBUG " + proc + " Extra column #"+ kk+ " = "+ result.getDouble(kk));
        }
 else         if (result.getColumnType(kk) == VoltType.DECIMAL) {
          System.out.println("DEBUG " + proc + " Extra column #"+ kk+ " = "+ result.getDecimalAsBigDecimal(kk));
        }
 else         if (result.getColumnType(kk) == VoltType.STRING) {
          System.out.println("DEBUG " + proc + " Extra column #"+ kk+ " = "+ result.getString(kk));
        }
 else {
          System.out.println("DEBUG " + proc + " Extra column #"+ kk+ " = "+ result.getLong(kk));
        }
      }
      ++jj;
    }
  }
  return resultSet;
}
