{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestFunctionsSuite.class);
  boolean success;
  VoltProjectBuilder project=new VoltProjectBuilder();
  final String literalSchema="CREATE TABLE P1 ( " + "ID INTEGER DEFAULT 0 NOT NULL, " + "DESC VARCHAR(300), "+ "NUM INTEGER, "+ "RATIO FLOAT, "+ "PAST TIMESTAMP DEFAULT NULL, "+ "PRIMARY KEY (ID) ); "+ "PARTITION TABLE P1 ON COLUMN ID;"+ "CREATE INDEX P1_ABS_NUM ON P1 ( ABS(NUM) ); "+ "CREATE INDEX P1_ABS_ID_PLUS_NUM ON P1 ( ABS(ID) + NUM ); "+ "CREATE INDEX P1_SUBSTRING_DESC ON P1 ( SUBSTRING(DESC FROM 1 FOR 2) ); "+ "CREATE INDEX P1_SUBSTRING_WITH_COL_DESC ON P1 ( SUBSTRING(DESC FROM 1 FOR 2), DESC ); "+ "CREATE INDEX P1_NUM_EXPR_WITH_STRING_COL ON P1 ( ABS(ID), DESC ); "+ "CREATE INDEX P1_MIXED_TYPE_EXPRS1 ON P1 ( ABS(ID+2), SUBSTRING(DESC FROM 1 FOR 2) ); "+ "CREATE INDEX P1_MIXED_TYPE_EXPRS2 ON P1 ( SUBSTRING(DESC FROM 1 FOR 2), ABS(ID+2) ); "+ "CREATE TABLE R1 ( "+ "ID INTEGER DEFAULT 0 NOT NULL, "+ "DESC VARCHAR(300), "+ "NUM INTEGER, "+ "RATIO FLOAT, "+ "PAST TIMESTAMP, "+ "PRIMARY KEY (ID) ); "+ "CREATE UNIQUE INDEX R1_ABS_ID_DESC ON R1 ( ABS(ID), DESC ); "+ "CREATE INDEX R1_ABS_ID_SCALED ON R1 ( ID / 3 ); "+ "CREATE INDEX R1_CASEWHEN ON R1 (CASE WHEN num < 3 THEN num/2 ELSE num + 10 END); "+ "CREATE TABLE R2 ( "+ "ID INTEGER DEFAULT 0 NOT NULL, "+ "DESC VARCHAR(300), "+ "NUM INTEGER, "+ "RATIO FLOAT, "+ "PAST TIMESTAMP DEFAULT NULL, "+ "PRIMARY KEY (ID) ); "+ "CREATE TABLE NUMBER_TYPES ( "+ "INTEGERNUM INTEGER DEFAULT 0 NOT NULL, "+ "TINYNUM TINYINT, "+ "SMALLNUM SMALLINT, "+ "BIGNUM BIGINT, "+ "FLOATNUM FLOAT, "+ "DECIMALNUM DECIMAL, "+ "PRIMARY KEY (INTEGERNUM) );"+ "CREATE TABLE R_TIME ( "+ "ID INTEGER DEFAULT 0 NOT NULL, "+ "C1 INTEGER DEFAULT 2 NOT NULL, "+ "T1 TIMESTAMP DEFAULT NULL, "+ "T2 TIMESTAMP DEFAULT NOW, "+ "T3 TIMESTAMP DEFAULT CURRENT_TIMESTAMP, "+ "T4 TIMESTAMP DEFAULT '2012-12-12 12:12:12.121212', "+ "PRIMARY KEY (ID) ); "+ "CREATE TABLE C_NULL ( "+ "ID INTEGER DEFAULT 0 NOT NULL, "+ "S1 SMALLINT DEFAULT NULL, "+ "I1 INTEGER DEFAULT NULL, "+ "F1 FLOAT DEFAULT NULL, "+ "D1 DECIMAL DEFAULT NULL, "+ "V1 VARCHAR(10) DEFAULT NULL, "+ "T1 TIMESTAMP DEFAULT NULL, "+ "I2 INTEGER DEFAULT NULL, "+ "F2 FLOAT DEFAULT NULL, "+ "D2 DECIMAL DEFAULT NULL, "+ "V2 VARCHAR(10) DEFAULT NULL, "+ "T2 TIMESTAMP DEFAULT NULL, "+ "I3 INTEGER DEFAULT NULL, "+ "F3 FLOAT DEFAULT NULL, "+ "D3 DECIMAL DEFAULT NULL, "+ "V3 VARCHAR(10) DEFAULT NULL, "+ "T3 TIMESTAMP DEFAULT NULL, "+ "PRIMARY KEY (ID) ); "+ "PARTITION TABLE C_NULL ON COLUMN ID;"+ "";
  try {
    project.addLiteralSchema(literalSchema);
  }
 catch (  IOException e) {
    assertFalse(true);
  }
  project.addStmtProcedure("GET_YEAR","select id, YEAR(PAST) from P1 order by id");
  project.addStmtProcedure("GET_MONTH","select id, MONTH(PAST) from P1 order by id");
  project.addStmtProcedure("GET_DAY","select id, DAY(PAST) from P1 order by id");
  project.addStmtProcedure("GET_HOUR","select id, HOUR(PAST) from P1 order by id");
  project.addStmtProcedure("GET_MINUTE","select id, MINUTE(PAST) from P1 order by id");
  project.addStmtProcedure("GET_SECOND","select id, cast(SECOND(PAST) as VARCHAR) from P1 order by id");
  project.addStmtProcedure("GET_QUARTER","select id, QUARTER(PAST) from P1 order by id");
  config=new LocalCluster("fixedsql-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  config=new LocalCluster("fixedsql-hsql.jar",1,1,0,BackendTarget.HSQLDB_BACKEND);
  success=config.compile(project);
  assertTrue(success);
  builder.addServerConfig(config);
  return builder;
}
