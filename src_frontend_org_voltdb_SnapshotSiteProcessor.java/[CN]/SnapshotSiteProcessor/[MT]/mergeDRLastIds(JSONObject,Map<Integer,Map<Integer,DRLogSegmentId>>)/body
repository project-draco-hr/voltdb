{
  JSONObject dcIdMap;
  if (jsonObj.has("remoteDCLastIds")) {
    dcIdMap=jsonObj.getJSONObject("remoteDCLastIds");
  }
 else {
    dcIdMap=new JSONObject();
    jsonObj.put("remoteDCLastIds",dcIdMap);
  }
  for (  Map.Entry<Integer,Map<Integer,DRLogSegmentId>> dcEntry : remoteDCLastId.entrySet()) {
    JSONObject lastSeenIds;
    final String dcKeyString=dcEntry.getKey().toString();
    if (dcIdMap.has(dcKeyString)) {
      lastSeenIds=dcIdMap.getJSONObject(dcKeyString);
    }
 else {
      lastSeenIds=new JSONObject();
      dcIdMap.put(dcKeyString,lastSeenIds);
    }
    for (    Map.Entry<Integer,DRLogSegmentId> partitionEntry : dcEntry.getValue().entrySet()) {
      final String partitionIdString=partitionEntry.getKey().toString();
      final Long lastSeenDRIdLong=partitionEntry.getValue().drId;
      final Long lastSeenSpUniqueIdLong=partitionEntry.getValue().spUniqueId;
      final Long lastSeenMpUniqueIdLong=partitionEntry.getValue().mpUniqueId;
      long existingDRId=Long.MIN_VALUE;
      if (lastSeenIds.has(partitionIdString)) {
        existingDRId=lastSeenIds.getJSONObject(partitionIdString).getLong("drId");
      }
      if (lastSeenDRIdLong > existingDRId) {
        JSONObject ids=new JSONObject();
        ids.put("drId",lastSeenDRIdLong);
        ids.put("spUniqueId",lastSeenSpUniqueIdLong);
        ids.put("mpUniqueId",lastSeenMpUniqueIdLong);
        lastSeenIds.put(partitionIdString,ids);
      }
    }
  }
}
