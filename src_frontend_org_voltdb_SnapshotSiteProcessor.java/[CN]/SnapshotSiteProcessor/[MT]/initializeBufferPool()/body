{
  for (int ii=0; ii < SnapshotSiteProcessor.m_numSnapshotBuffers; ii++) {
    final BBContainer origin=org.voltcore.utils.DBBPool.allocateDirect(m_snapshotBufferLength);
    m_snapshotBufferOrigins.add(origin);
    long snapshotBufferAddress=0;
    if (VoltDB.getLoadLibVOLTDB()) {
      snapshotBufferAddress=org.voltcore.utils.DBBPool.getBufferAddress(origin.b);
    }
    m_availableSnapshotBuffers.offer(new BBContainer(origin.b,snapshotBufferAddress){
      @Override public void discard(){
        m_availableSnapshotBuffers.offer(this);
        if (m_isIV2Enabled && m_snapshotPriority > 0) {
          final long now=System.currentTimeMillis();
          final long quietUntil=m_quietUntil;
          if (now > quietUntil) {
            m_onPotentialSnapshotWork.run();
            m_quietUntil=System.currentTimeMillis() + (5 * m_snapshotPriority) + ((long)(m_random.nextDouble() * 15));
          }
 else {
            VoltDB.instance().scheduleWork(m_onPotentialSnapshotWork,quietUntil - now,0,TimeUnit.MILLISECONDS);
            m_quietUntil=quietUntil + (5 * m_snapshotPriority) + ((long)(m_random.nextDouble() * 15));
          }
        }
 else {
          m_onPotentialSnapshotWork.run();
        }
      }
    }
);
  }
}
