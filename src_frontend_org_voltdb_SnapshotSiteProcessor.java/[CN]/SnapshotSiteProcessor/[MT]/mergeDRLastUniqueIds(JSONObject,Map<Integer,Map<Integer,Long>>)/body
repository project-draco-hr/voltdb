{
  JSONObject dcUniqueIdMap;
  if (jsonObj.has("remoteDCUniqueIds")) {
    dcUniqueIdMap=jsonObj.getJSONObject("remoteDCUniqueIds");
  }
 else {
    dcUniqueIdMap=new JSONObject();
    jsonObj.put("remoteDCUniqueIds",dcUniqueIdMap);
  }
  for (  Map.Entry<Integer,Map<Integer,Long>> dcEntry : remoteDCLastUniqueId.entrySet()) {
    JSONObject lastSeenUniqueIds;
    final String dcKeyString=dcEntry.getKey().toString();
    if (dcUniqueIdMap.has(dcKeyString)) {
      lastSeenUniqueIds=dcUniqueIdMap.getJSONObject(dcKeyString);
    }
 else {
      lastSeenUniqueIds=new JSONObject();
      dcUniqueIdMap.put(dcKeyString,lastSeenUniqueIds);
    }
    for (    Map.Entry<Integer,Long> partitionEntry : dcEntry.getValue().entrySet()) {
      final Integer partitionId=partitionEntry.getKey();
      final String partitionIdString=partitionId.toString();
      final Long lastSeenUniqueIdLong=partitionEntry.getValue();
      if (lastSeenUniqueIds.has(partitionIdString)) {
        long existingEntry=lastSeenUniqueIds.getLong(partitionIdString);
        lastSeenUniqueIds.put(partitionIdString,Math.max(existingEntry,lastSeenUniqueIdLong));
      }
 else {
        lastSeenUniqueIds.put(partitionIdString,lastSeenUniqueIdLong.longValue());
      }
    }
  }
}
