{
  ZooKeeper zk=VoltDB.instance().getZK();
  try {
    zk.create("/completed_snapshots",null,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  }
 catch (  KeeperException.NodeExistsException e) {
  }
catch (  Exception e) {
    hostLog.fatal("Unexpected exception logging snapshot completion to ZK",e);
    VoltDB.crashVoltDB();
  }
  ByteBuffer buf=ByteBuffer.allocate(16);
  buf.putLong(txnId);
  buf.putInt(numHosts);
  buf.putInt(1);
  final String snapshotPath="/completed_snapshots/" + txnId;
  boolean alreadyExists=false;
  try {
    zk.create(snapshotPath,buf.array(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  }
 catch (  KeeperException.NodeExistsException e) {
    alreadyExists=true;
  }
catch (  Exception e) {
    hostLog.fatal("Unexpected exception logging snapshot completion to ZK",e);
    VoltDB.crashVoltDB();
  }
  if (!alreadyExists) {
    return;
  }
  boolean success=false;
  while (!success) {
    Stat stat=new Stat();
    byte data[]=null;
    try {
      data=zk.getData(snapshotPath,false,stat);
    }
 catch (    Exception e) {
      hostLog.fatal("This ZK get should never fail",e);
      VoltDB.crashVoltDB();
    }
    if (data == null) {
      hostLog.fatal("Data should not be null if the node exists");
      VoltDB.crashVoltDB();
    }
    buf=ByteBuffer.wrap(data);
    if (buf.getLong() != txnId) {
      hostLog.fatal("TxnId should match");
      VoltDB.crashVoltDB();
    }
    if (buf.getInt() != numHosts) {
      hostLog.fatal("Num hosts should match");
      VoltDB.crashVoltDB();
    }
    int numHostsFinished=buf.getInt() + 1;
    buf.putInt(12,numHostsFinished);
    try {
      zk.setData(snapshotPath,buf.array(),stat.getVersion());
    }
 catch (    KeeperException.BadVersionException e) {
    }
catch (    Exception e) {
      hostLog.fatal("This ZK call should never fail",e);
      VoltDB.crashVoltDB();
    }
    success=true;
  }
}
