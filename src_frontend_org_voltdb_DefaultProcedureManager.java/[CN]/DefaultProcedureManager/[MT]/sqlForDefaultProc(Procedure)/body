{
  String name=defaultProc.getClassname();
  String[] parts=name.split("\\.");
  String action=parts[1];
  Table table=defaultProc.getPartitiontable();
  Column partitionColumn=defaultProc.getPartitioncolumn();
  final CatalogMap<Constraint> constraints=table.getConstraints();
  final Iterator<Constraint> it=constraints.iterator();
  Constraint pkey=null;
  while (it.hasNext()) {
    Constraint constraint=it.next();
    if (constraint.getType() == ConstraintType.PRIMARY_KEY.getValue()) {
      pkey=constraint;
      break;
    }
  }
switch (action) {
case "select":
    assert(defaultProc.getSinglepartition());
  return generateCrudSelect(table,partitionColumn,pkey);
case "insert":
if (defaultProc.getSinglepartition()) {
  return generateCrudInsert(table,partitionColumn);
}
 else {
  return generateCrudReplicatedInsert(table);
}
case "update":
if (defaultProc.getSinglepartition()) {
return generateCrudUpdate(table,partitionColumn,pkey);
}
 else {
return generateCrudReplicatedUpdate(table,pkey);
}
case "delete":
if (defaultProc.getSinglepartition()) {
return generateCrudDelete(table,partitionColumn,pkey);
}
 else {
return generateCrudReplicatedDelete(table,pkey);
}
case "upsert":
if (defaultProc.getSinglepartition()) {
return generateCrudUpsert(table,partitionColumn);
}
 else {
return generateCrudReplicatedUpsert(table,pkey);
}
default :
throw new RuntimeException("Invalid input to default proc SQL generator.");
}
}
