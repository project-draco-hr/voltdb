{
  Procedure proc=m_fakeDb.getProcedures().add(name);
  proc.setClassname(name);
  proc.setDefaultproc(true);
  proc.setHasjava(false);
  proc.setHasseqscans(false);
  proc.setSinglepartition(partitionParamIndex >= 0);
  proc.setPartitioncolumn(partitionColumn);
  proc.setPartitionparameter(partitionParamIndex);
  proc.setReadonly(readOnly);
  proc.setEverysite(false);
  proc.setSystemproc(false);
  proc.setPartitiontable(table);
  if (partitionParamIndex >= 0) {
    proc.setAttachment(new ProcedurePartitionInfo(VoltType.get((byte)partitionColumn.getType()),partitionParamIndex));
  }
  int paramCount=0;
  if (tableCols) {
    for (    Column col : table.getColumns()) {
      ProcParameter procParam=proc.getParameters().add("param" + String.valueOf(paramCount));
      procParam.setIndex(col.getIndex());
      procParam.setIsarray(false);
      procParam.setType(col.getType());
      paramCount++;
    }
  }
  if (pkey != null) {
    CatalogMap<ColumnRef> pkeycols=pkey.getIndex().getColumns();
    int paramCount2=paramCount;
    for (    ColumnRef cref : pkeycols) {
      ProcParameter procParam=proc.getParameters().add("param" + String.valueOf(paramCount2));
      procParam.setIndex(cref.getIndex() + paramCount);
      procParam.setIsarray(false);
      procParam.setType(cref.getColumn().getType());
      paramCount2++;
    }
  }
  m_defaultProcMap.put(name.toLowerCase(),proc);
}
