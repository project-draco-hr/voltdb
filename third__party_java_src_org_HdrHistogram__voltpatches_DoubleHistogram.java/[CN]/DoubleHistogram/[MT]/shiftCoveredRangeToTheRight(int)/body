{
  double newLowestValueInAutoRange=currentLowestValueInAutoRange;
  double newHighestValueLimitInAutoRange=currentHighestValueLimitInAutoRange;
  try {
    double shiftMultiplier=1.0 / (1L << numberOfBinaryOrdersOfMagnitude);
    currentHighestValueLimitInAutoRange*=shiftMultiplier;
    if (getTotalCount() > integerValuesHistogram.getCountAtIndex(0)) {
      try {
        integerValuesHistogram.shiftValuesLeft(numberOfBinaryOrdersOfMagnitude);
      }
 catch (      ArrayIndexOutOfBoundsException ex) {
        handleShiftValuesException(numberOfBinaryOrdersOfMagnitude,ex);
        newHighestValueLimitInAutoRange/=shiftMultiplier;
        integerValuesHistogram.shiftValuesLeft(numberOfBinaryOrdersOfMagnitude);
      }
    }
    newLowestValueInAutoRange*=shiftMultiplier;
    newHighestValueLimitInAutoRange*=shiftMultiplier;
  }
  finally {
    setTrackableValueRange(newLowestValueInAutoRange,newHighestValueLimitInAutoRange);
  }
}
