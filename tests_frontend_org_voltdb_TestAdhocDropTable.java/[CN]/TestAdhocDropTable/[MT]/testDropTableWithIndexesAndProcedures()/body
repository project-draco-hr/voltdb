{
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("create table BLAH (" + "ID int default 0 not null, " + "VAL varchar(32) default null,"+ "PRIMARY KEY(ID));\n"+ "create table DROPME ("+ "ID int default 0 not null, "+ "VAL varchar(32) default null,"+ "PRIMARY KEY(ID));\n"+ "create assumeunique index pkey_idx on DROPME(VAL);\n");
  builder.addPartitionInfo("BLAH","ID");
  builder.addPartitionInfo("DROPME","ID");
  builder.addStmtProcedure("BLERG","select * from BLAH where ID = ?");
  boolean success=builder.compile(pathToCatalog,2,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  ServerThread localServer=new ServerThread(config);
  Client client=null;
  try {
    localServer.start();
    localServer.waitForInitialization();
    client=ClientFactory.createClient();
    client.createConnection("localhost");
    ClientResponse resp=client.callProcedure("@SystemCatalog","TABLES");
    System.out.println(resp.getResults()[0]);
    assertTrue(findTableInSystemCatalogResults(client,"DROPME"));
    resp=client.callProcedure("@SystemCatalog","INDEXINFO");
    System.out.println(resp.getResults()[0]);
    assertTrue(findIndexInSystemCatalogResults(client,"PKEY_IDX"));
    try {
      client.callProcedure("@AdHoc","drop table DROPME;");
    }
 catch (    ProcCallException pce) {
      fail("drop table should have succeeded");
    }
    resp=client.callProcedure("@SystemCatalog","TABLES");
    System.out.println(resp.getResults()[0]);
    assertFalse(findTableInSystemCatalogResults(client,"DROPME"));
    resp=client.callProcedure("@SystemCatalog","INDEXINFO");
    System.out.println(resp.getResults()[0]);
    assertFalse(findIndexInSystemCatalogResults(client,"PKEY_IDX"));
    resp=client.callProcedure("@SystemCatalog","TABLES");
    System.out.println(resp.getResults()[0]);
    assertTrue(findTableInSystemCatalogResults(client,"BLAH"));
    boolean threw=false;
    try {
      client.callProcedure("@AdHoc","drop table BLAH;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      threw=true;
    }
    assertTrue("Shouldn't be able to drop a table used in a procedure",threw);
    resp=client.callProcedure("@SystemCatalog","TABLES");
    System.out.println(resp.getResults()[0]);
    assertTrue(findTableInSystemCatalogResults(client,"BLAH"));
  }
  finally {
    if (client != null)     client.close();
    client=null;
    if (localServer != null) {
      localServer.shutdown();
      localServer.join();
    }
    localServer=null;
    System.gc();
  }
}
