{
  List<VoltXMLElement> result=new ArrayList<>();
  if (sortAndSlice == null || sortAndSlice == SortAndSlice.noSort) {
    return result;
  }
  if (sortAndSlice.limitCondition != null) {
    Expression limitCondition=sortAndSlice.limitCondition;
    if (limitCondition.nodes.length != 2) {
      throw new org.hsqldb_voltpatches.HSQLInterface.HSQLParseException("Parser did not create limit and offset expression for LIMIT.");
    }
    try {
      VoltXMLElement offset=new VoltXMLElement("offset");
      if (limitCondition.nodes[0].isParam == false) {
        Integer offsetValue=(Integer)limitCondition.nodes[0].getValue(session);
        if (offsetValue > 0) {
          Expression expr=new ExpressionValue(offsetValue,org.hsqldb_voltpatches.types.Type.SQL_BIGINT);
          offset.children.add(expr.voltGetXML(session));
          offset.attributes.put("offset",offsetValue.toString());
        }
      }
 else {
        offset.attributes.put("offset_paramid",limitCondition.nodes[0].getUniqueId(session));
      }
      result.add(offset);
      if (limitCondition.nodes[1] != null) {
        VoltXMLElement limit=new VoltXMLElement("limit");
        if (limitCondition.nodes[1].isParam == false) {
          Integer limitValue=(Integer)limitCondition.nodes[1].getValue(session);
          Expression expr=new ExpressionValue(limitValue,org.hsqldb_voltpatches.types.Type.SQL_BIGINT);
          limit.children.add(expr.voltGetXML(session));
          limit.attributes.put("limit",limitValue.toString());
        }
 else {
          limit.attributes.put("limit_paramid",limitCondition.nodes[1].getUniqueId(session));
        }
        result.add(limit);
      }
    }
 catch (    HsqlException ex) {
      ex.printStackTrace();
    }
  }
  return result;
}
