{
  AbstractExpression cloned_exp=null;
  try {
    if (ROOT_EXP != null) {
      cloned_exp=(AbstractExpression)ROOT_EXP.clone();
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  assertNotNull(cloned_exp);
  final ArrayList<AbstractExpression> orig_exps=new ArrayList<AbstractExpression>();
  new TestExpressionTreeWalker(){
    @Override public void callback(    AbstractExpression exp){
      orig_exps.add(exp);
    }
  }
.traverse(ROOT_EXP);
  new TestExpressionTreeWalker(){
    @Override public void callback(    AbstractExpression exp){
      assertFalse(orig_exps.isEmpty());
      AbstractExpression orig_exp=orig_exps.remove(0);
      assertFalse(orig_exp == exp);
      TestExpressionUtil.compareExpressions(orig_exp,exp);
    }
  }
.traverse(cloned_exp);
}
