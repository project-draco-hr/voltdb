{
  assertEquals((out_exp.getLeft() == null),(in_exp.getLeft() == null));
  assertEquals((out_exp.getRight() == null),(in_exp.getRight() == null));
  if (out_exp.getValueType() != in_exp.getValueType()) {
    System.err.println("OUT: " + out_exp.getValueType());
    System.err.println("IN:  " + in_exp.getValueType());
  }
  assertEquals(out_exp.getValueType(),in_exp.getValueType());
switch (out_exp.getExpressionType()) {
case VALUE_CONSTANT:
{
      ConstantValueExpression out_const_exp=(ConstantValueExpression)out_exp;
      ConstantValueExpression in_const_exp=(ConstantValueExpression)in_exp;
      assertEquals(out_const_exp.getValue(),in_const_exp.getValue());
      break;
    }
case VALUE_PARAMETER:
  ParameterValueExpression out_param_exp=(ParameterValueExpression)out_exp;
ParameterValueExpression in_param_exp=(ParameterValueExpression)in_exp;
assertEquals(out_param_exp.getParameterIndex(),in_param_exp.getParameterIndex());
break;
case VALUE_TUPLE:
TupleValueExpression out_tuple_exp=(TupleValueExpression)out_exp;
TupleValueExpression in_tuple_exp=(TupleValueExpression)in_exp;
assertEquals(out_tuple_exp.getColumnIndex(),in_tuple_exp.getColumnIndex());
break;
}
return;
}
