{
  assert(jarPath != null);
  try {
    addLiteralSchema(transformer.toString());
    transformer=new StringBuffer();
  }
 catch (  IOException e) {
    e.printStackTrace();
    return false;
  }
  String[] schemaPath=m_schemas.toArray(new String[0]);
  compiler.setProcInfoOverrides(m_procInfoOverrides);
  if (m_diagnostics != null) {
    compiler.enableDetailedCapture();
  }
  boolean success=false;
  try {
    success=compiler.compileFromDDL(jarPath,schemaPath);
  }
 catch (  VoltCompilerException e1) {
    e1.printStackTrace();
    return false;
  }
  m_diagnostics=compiler.harvestCapturedDetail();
  if (m_compilerDebugPrintStream != null) {
    if (success) {
      compiler.summarizeSuccess(m_compilerDebugPrintStream,m_compilerDebugPrintStream,jarPath);
    }
 else {
      compiler.summarizeErrors(m_compilerDebugPrintStream,m_compilerDebugPrintStream);
    }
  }
  return success;
}
