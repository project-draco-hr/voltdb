{
  long txnId=1234l;
  int batch_size=3;
  Iv2InitiateTaskMessage taskmsg=new Iv2InitiateTaskMessage(0,0,txnId,true,false,null,0);
  int hsids=6;
  localHsid=0;
  long[] non_local=configureHSIds(hsids);
  MpTestPlan plan=createTestPlan(batch_size,true,false,non_local);
  Mailbox mailbox=mock(Mailbox.class);
  SiteProcedureConnection siteConnection=mock(SiteProcedureConnection.class);
  MpTransactionState dut=new MpTransactionState(mailbox,txnId,null,taskmsg,allHsids,localHsid);
  dut.setupProcedureResume(true,plan.depsToResume);
  dut.createLocalFragmentWork(plan.localWork,false);
  dut.createAllParticipatingFragmentWork(plan.remoteWork);
  verify(mailbox).send(eq(new long[]{1,2,3,4,5}),(VoltMessage)any());
  for (  FragmentResponseMessage msg : plan.generatedResponses) {
    dut.offerReceivedFragmentResponse(msg);
  }
  Map<Integer,List<VoltTable>> results=dut.recursableRun(siteConnection);
  verify(siteConnection,times(batch_size)).executePlanFragment(anyLong(),eq(-1),(ParameterSet)any(),anyLong(),eq(true));
  verify(siteConnection).executePlanFragment(anyLong(),eq(1000),(ParameterSet)any(),anyLong(),eq(true));
  verify(siteConnection).executePlanFragment(anyLong(),eq(1001),(ParameterSet)any(),anyLong(),eq(true));
  verify(siteConnection).executePlanFragment(anyLong(),eq(1002),(ParameterSet)any(),anyLong(),eq(true));
  assertEquals(batch_size,results.size());
  System.out.println(results);
}
