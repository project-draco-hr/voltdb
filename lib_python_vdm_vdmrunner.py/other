import sys
import os
from optparse import OptionParser
from os.path import expanduser
try:
    if ((sys.version_info[0] == 2) and (sys.version_info[1] < 6)):
        for dir in os.environ['PATH'].split(':'):
            for name in ('python2.7', 'python2.6'):
                path = os.path.join(dir, name)
                if os.path.exists(path):
                    print ('Re-running with %s...' % path)
                    os.execv(path, ([path] + sys.argv))
        sys.stderr.write(('This script requires Python 2.6 or newer. Please install ' + 'a more recent Python release and retry.\n'))
        sys.exit((-1))
    (cmd_dir, cmd_name) = os.path.split(os.path.realpath(sys.argv[0]))
    base_dir = os.path.realpath(os.path.join(cmd_dir, '../../../'))
    version = open(os.path.join(base_dir, 'version.txt')).read().strip()
    description = 'Command line interface to VoltDB functions.'
    standalone = False
    if os.path.isdir('/opt/lib/voltdb/python'):
        sys.path.insert(0, '/opt/lib/voltdb/python')
    if os.path.isdir('/usr/share/lib/voltdb/python'):
        sys.path.insert(0, '/usr/share/lib/voltdb/python')
    if os.path.isdir('/usr/lib/voltdb/python'):
        sys.path.insert(0, '/usr/lib/voltdb/python')
    sys.path.insert(0, os.path.join(base_dir, 'lib', 'python'))
    sys.path.insert(0, os.path.join(base_dir, 'lib/python', 'vdm'))
    from voltcli import runner
    from server import HTTPListener
except (IOError, OSError, ImportError) as e:
    sys.stderr.write(('Exception (%s): %s\n' % (e.__class__.__name__, str(e))))
    sys.exit(1)
if (__name__ == '__main__'):
    options = main()
    path = options[0]['filepath']
    server = options[0]['server']
org_wd = os.getcwd()
app_root = os.path.dirname(os.path.abspath(__file__))
os.chdir(os.path.normpath(app_root))
if (path is None):
    home = expanduser('~')
    path = os.path.join(home, '.voltdb')
    data_path = os.path.join(org_wd, 'voltdeployroot')
else:
    data_path = os.path.join(path, 'voltdeployroot')
    path = os.path.join(path, '.voltdb')
if (os.path.isdir(str(path)) and os.path.isdir(str(data_path))):
    if (os.access(str(path), os.W_OK) and os.access(str(path), os.W_OK)):
        HTTPListener.main(runner, HTTPListener, path, data_path, server)
    else:
        sys.stderr.write('Error: There is no permission to create file in this folder. Unable to start VDM.')
        sys.exit(1)
else:
    try:
        if (not os.path.isdir(str(path))):
            os.makedirs(path)
        if (not os.path.isdir(str(data_path))):
            os.makedirs(data_path)
        HTTPListener.main(runner, HTTPListener, path, data_path, server)
    except Exception as err:
        sys.stderr.write(('Exception (%s): %s\n' % (err.__class__.__name__, str(err))))
        sys.exit(1)
