{
  List<Column> mvColumnArray=CatalogUtil.getSortedCatalogItems(m_mvTableScan.m_table.getColumns(),"index");
  processInlineProjectionsAndReAggNode(scanColumns,mvColumnArray);
  List<TupleValueExpression> needReAggTVEs=new ArrayList<TupleValueExpression>();
  List<AbstractExpression> aggPostExprs=new ArrayList<AbstractExpression>();
  for (int i=m_numOfGroupByColumns; i < mvColumnArray.size(); i++) {
    Column mvCol=mvColumnArray.get(i);
    String colName=mvCol.getName();
    TupleValueExpression tve=new TupleValueExpression(getMVTableName(),getMVTableAlias(),colName,colName);
    tve.setValueType(VoltType.get((byte)mvCol.getType()));
    tve.setValueSize(mvCol.getSize());
    needReAggTVEs.add(tve);
  }
  collectReAggNodePostExpressions(joinTree,needReAggTVEs,aggPostExprs);
  AbstractExpression aggPostExpr=ExpressionUtil.combine(aggPostExprs);
  m_reAggNode.setPostPredicate(aggPostExpr);
}
