{
  if (acceptsURL(url)) {
    try {
      Properties fileprops=tryToFindPropsFile();
      Properties info=(Properties)props.clone();
      String prefix=URL_PREFIX + "//";
      if (!url.startsWith(prefix)) {
        throw SQLError.get(SQLError.ILLEGAL_ARGUMENT);
      }
      String[] servers=Driver.getServersFromURL(url);
      Map<String,String> urlprops=Driver.getPropsFromURL(url);
      for (      Entry<String,String> e : urlprops.entrySet()) {
        info.setProperty(e.getKey(),e.getValue());
      }
      for (Enumeration<?> e=fileprops.propertyNames(); e.hasMoreElements(); ) {
        String key=(String)e.nextElement();
        info.setProperty(key,fileprops.getProperty(key));
      }
      String user="";
      String password="";
      boolean heavyweight=false;
      int maxoutstandingtxns=0;
      for (Enumeration<?> e=info.propertyNames(); e.hasMoreElements(); ) {
        String key=(String)e.nextElement();
        String value=info.getProperty(key);
        if (key.toLowerCase().equals("user"))         user=value;
 else         if (key.toLowerCase().equals("password"))         password=value;
 else         if (key.toLowerCase().equals("heavyweight"))         heavyweight=(value.toLowerCase().equals("true") || value.toLowerCase().equals("yes") || value.toLowerCase().equals("1"));
 else         if (key.toLowerCase().equals("maxoutstandingtxns"))         maxoutstandingtxns=Integer.parseInt(value);
      }
      return new JDBC4Connection(JDBC4ClientConnectionPool.get(servers,user,password,heavyweight,maxoutstandingtxns),info);
    }
 catch (    Exception x) {
      throw SQLError.get(x,SQLError.CONNECTION_UNSUCCESSFUL);
    }
  }
  return null;
}
