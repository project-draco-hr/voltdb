{
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("create table FOO (" + "ID integer not null," + "VAL bigint, "+ "constraint pk_tree primary key (ID)"+ ");\n");
  builder.addPartitionInfo("FOO","ID");
  builder.setUseDDLSchema(true);
  boolean success=builder.compile(pathToCatalog,2,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  CatalogUpgradeTools.dorkDowngradeVersion(pathToCatalog,pathToCatalog,"4.2.0.1 voltdb-4.2.0.1");
  File catFile=new File(pathToCatalog);
  InMemoryJarfile jarfile=CatalogUtil.loadInMemoryJarFile(MiscUtils.fileToBytes(catFile));
  byte[] sql=jarfile.get(VoltCompiler.AUTOGEN_DDL_FILE_NAME);
  jarfile.remove(VoltCompiler.AUTOGEN_DDL_FILE_NAME);
  jarfile.put("oldschool.sql",sql);
  catFile.delete();
  jarfile.writeToFile(catFile);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  try {
    startSystem(config);
    try {
      m_client.callProcedure("@AdHoc","create table bar (id integer);");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to do DDL on an old loaded/upgraded catalog");
    }
    assertTrue(findTableInSystemCatalogResults("bar"));
  }
  finally {
    teardownSystem();
  }
}
