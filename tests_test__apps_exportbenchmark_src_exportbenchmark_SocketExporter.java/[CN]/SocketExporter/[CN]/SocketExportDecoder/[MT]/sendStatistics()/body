{
  ByteBuffer buffer=ByteBuffer.allocate(1024);
  double tps, averageDecodeTime;
  try {
    tps=transactions.get() / statsDuration;
    averageDecodeTime=totalDecodeTime.get() / transactions.get();
  }
 catch (  ArithmeticException e) {
    return;
  }
  transactions.set(0);
  totalDecodeTime.set(0);
  JSONObject message=new JSONObject();
  try {
    message.put("tps",tps);
    message.put("decodeTime",averageDecodeTime);
    message.put("partitionId",m_source.partitionId);
  }
 catch (  JSONException e) {
    m_logger.error("Couldn't create JSON object: " + e.getLocalizedMessage());
  }
  String messageString=message.toString();
  buffer.clear();
  buffer.put((byte)messageString.length());
  buffer.put(messageString.getBytes());
  buffer.flip();
  try {
    int sent=channel.send(buffer,address);
    if (sent != messageString.getBytes().length + 1) {
      m_logger.error("Error sending entire stats message");
    }
  }
 catch (  IOException e) {
    m_logger.error("Couldn't send stats to socket");
  }
}
