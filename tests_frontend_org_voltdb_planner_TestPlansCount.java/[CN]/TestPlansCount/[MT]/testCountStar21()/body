{
  List<AbstractPlanNode> pn=compileToFragments("SELECT RATIO, count(*) from P1 WHERE NUM < 1 Group by RATIO");
  for (  AbstractPlanNode nd : pn)   System.out.println("PlanNode Explain string:\n" + nd.toExplainPlanString());
  AbstractPlanNode p=pn.get(0).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  p=pn.get(1).getChild(0);
  assertTrue(p instanceof IndexScanPlanNode);
  assertTrue(p.getInlinePlanNode(PlanNodeType.AGGREGATE) != null || p.getInlinePlanNode(PlanNodeType.HASHAGGREGATE) != null);
  pn=compileToFragments("SELECT RATIO, count(1) from P1 WHERE NUM < 1 Group by RATIO");
  for (  AbstractPlanNode nd : pn)   System.out.println("PlanNode Explain string:\n" + nd.toExplainPlanString());
  p=pn.get(0).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  p=pn.get(1).getChild(0);
  assertTrue(p instanceof IndexScanPlanNode);
  assertTrue(p.getInlinePlanNode(PlanNodeType.AGGREGATE) != null || p.getInlinePlanNode(PlanNodeType.HASHAGGREGATE) != null);
}
