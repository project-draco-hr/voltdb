{
  LimitPlanNode topLimit=m_parsedSelect.getLimitNode(true);
  AbstractPlanNode sendNode=null;
  boolean canPushDown=!m_parsedSelect.hasDistinct();
  if (canPushDown) {
    sendNode=checkPushDownViability(root);
    if (sendNode == null) {
      canPushDown=false;
    }
 else {
      canPushDown=m_parsedSelect.m_limitCanPushdown;
    }
  }
  if (m_parsedSelect.m_mvFixInfo.needed()) {
    canPushDown=false;
  }
  if (canPushDown) {
    LimitPlanNode distLimit=m_parsedSelect.getLimitNode(false);
    AbstractPlanNode distributedPlan=sendNode.getChild(0);
    distributedPlan.clearParents();
    sendNode.clearChildren();
    distributedPlan=handleOrderBy(distributedPlan);
    distLimit.addAndLinkChild(distributedPlan);
    sendNode.addAndLinkChild(distLimit);
  }
  AbstractPlanNode projectionNode=root;
  if (m_parsedSelect.hasComplexAgg()) {
    AbstractPlanNode child=root.getChild(0);
    projectionNode.clearChildren();
    child.clearParents();
    topLimit.addAndLinkChild(child);
    projectionNode.addAndLinkChild(topLimit);
    return projectionNode;
  }
 else {
    topLimit.addAndLinkChild(root);
    return topLimit;
  }
}
