{
  Stack<AbstractPlanNode> coordGraph=new Stack<AbstractPlanNode>();
  Stack<AbstractPlanNode> distGraph=new Stack<AbstractPlanNode>();
  LimitPlanNode coordLimit=new LimitPlanNode();
  coordLimit.setLimit((int)m_parsedSelect.limit);
  coordLimit.setOffset((int)m_parsedSelect.offset);
  if (m_parsedSelect.offsetParameterId != -1) {
    ParameterInfo parameterInfo=m_parsedSelect.paramsById.get(m_parsedSelect.offsetParameterId);
    coordLimit.setOffsetParameterIndex(parameterInfo.index);
  }
  if (m_parsedSelect.limitParameterId != -1) {
    ParameterInfo parameterInfo=m_parsedSelect.paramsById.get(m_parsedSelect.limitParameterId);
    coordLimit.setLimitParameterIndex(parameterInfo.index);
  }
  coordGraph.push(coordLimit);
  if ((int)m_parsedSelect.offset != 0 || m_parsedSelect.offsetParameterId != -1) {
    coordGraph.clear();
  }
  for (  ParsedSelectStmt.ParsedColInfo col : m_parsedSelect.displayColumns) {
    AbstractExpression rootExpr=col.expression;
    if (rootExpr instanceof AggregateExpression) {
      if (((AggregateExpression)rootExpr).m_distinct) {
        coordGraph.clear();
        break;
      }
    }
  }
  LimitPlanNode distLimit=new LimitPlanNode();
  distLimit.setLimit((int)m_parsedSelect.limit);
  distLimit.setOffset((int)m_parsedSelect.offset);
  if (m_parsedSelect.offsetParameterId != -1) {
    ParameterInfo parameterInfo=m_parsedSelect.paramsById.get(m_parsedSelect.offsetParameterId);
    distLimit.setOffsetParameterIndex(parameterInfo.index);
  }
  if (m_parsedSelect.limitParameterId != -1) {
    ParameterInfo parameterInfo=m_parsedSelect.paramsById.get(m_parsedSelect.limitParameterId);
    distLimit.setLimitParameterIndex(parameterInfo.index);
  }
  distGraph.push(distLimit);
  return pushDownLimit(root,distGraph,coordGraph);
}
