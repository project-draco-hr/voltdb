{
  assert(subAssembler != null);
  AbstractPlanNode subSelectRoot=subAssembler.nextPlan();
  if (subSelectRoot == null)   return null;
  AbstractPlanNode root=subSelectRoot;
  root.generateOutputSchema(m_catalogDb);
  root=handleAggregationOperators(root);
  if ((subSelectRoot.getPlanNodeType() != PlanNodeType.INDEXSCAN || ((IndexScanPlanNode)subSelectRoot).getSortDirection() == SortDirectionType.INVALID) && m_parsedSelect.orderColumns.size() > 0) {
    root=addOrderBy(root);
  }
  if ((root.getPlanNodeType() != PlanNodeType.AGGREGATE) && (root.getPlanNodeType() != PlanNodeType.HASHAGGREGATE) && (root.getPlanNodeType() != PlanNodeType.DISTINCT)&& (root.getPlanNodeType() != PlanNodeType.PROJECTION)) {
    root=addProjection(root);
  }
  if (m_parsedSelect.hasLimitOrOffset()) {
    root=handleLimitOperator(root);
  }
  return root;
}
