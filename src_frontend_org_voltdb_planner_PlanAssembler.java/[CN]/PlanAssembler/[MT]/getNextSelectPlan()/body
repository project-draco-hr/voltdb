{
  assert(subAssembler != null);
  AbstractPlanNode subSelectRoot=subAssembler.nextPlan();
  if (subSelectRoot == null)   return null;
  AbstractPlanNode root=subSelectRoot;
  root.generateOutputSchema(m_catalogDb);
  root=handleAggregationOperators(root);
  if (m_parsedSelect.hasComplexAgg()) {
    AbstractPlanNode aggNode=root.getChild(0);
    root.clearChildren();
    aggNode.clearParents();
    aggNode=handleOrderBy(aggNode);
    root.addAndLinkChild(aggNode);
  }
 else {
    root=handleOrderBy(root);
  }
  if (needProjectionNode(root)) {
    root=addProjection(root);
  }
  if (m_parsedSelect.hasLimitOrOffset()) {
    root=handleLimitOperator(root);
  }
  root.generateOutputSchema(m_catalogDb);
  return root;
}
