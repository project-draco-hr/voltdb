{
  List<JoinNode> subQueryNodes=null;
  if (parsedStmt.joinTree == null) {
    return null;
  }
  subQueryNodes=parsedStmt.joinTree.extractSubQueries();
  if (subQueryNodes.isEmpty()) {
    return null;
  }
  ParsedResultAccumulator parsedResult=new ParsedResultAccumulator();
  for (  JoinNode subQueryNode : subQueryNodes) {
    assert(subQueryNode.getTableAliasIndex() != StmtTableScan.NULL_ALIAS_INDEX);
    StmtTableScan tableCache=parsedStmt.stmtCache.get(subQueryNode.getTableAliasIndex());
    assert(tableCache.getScanType() == StmtTableScan.TABLE_SCAN_TYPE.TEMP_TABLE_SCAN);
    AbstractParsedStmt subQuery=tableCache.getTempTable().getSubQuery();
    assert(subQuery != null);
    parsedResult=planForParsedStmt(subQuery,parsedResult);
    tableCache.setPartitioning(parsedResult.m_currentPartitioning);
    if (parsedResult.m_compiledPlan == null) {
      return parsedResult;
    }
    tableCache.getTempTable().setBetsCostPlan(parsedResult.m_compiledPlan);
  }
  m_planSelector.m_planId=parsedResult.m_planId;
  return parsedResult;
}
