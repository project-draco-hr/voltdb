{
  List<JoinNode> subQueryNodes=null;
  if (parsedStmt.joinTree == null) {
    return null;
  }
  subQueryNodes=parsedStmt.joinTree.extractSubQueries();
  if (subQueryNodes.isEmpty()) {
    return null;
  }
  ChildPlanResult parseResult=new ChildPlanResult();
  for (  JoinNode subQueryNode : subQueryNodes) {
    assert(subQueryNode.m_tableAliasIndex != StmtTableScan.NULL_ALIAS_INDEX);
    StmtTableScan tableCache=parsedStmt.stmtCache.get(subQueryNode.m_tableAliasIndex);
    assert(tableCache.m_tableDerived != null);
    AbstractParsedStmt subQuery=tableCache.m_tableDerived.getSubQuery();
    assert(subQuery != null);
    planForChildStmt(subQuery,parseResult);
    if (parseResult.m_compiledPlan == null) {
      return parseResult;
    }
    tableCache.m_tableDerived.setBetsCostPlan(parseResult.m_compiledPlan);
  }
  m_planSelector.m_planId=parseResult.m_planId;
  return parseResult;
}
