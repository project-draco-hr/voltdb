{
  assert(root.getPlanNodeType() == PlanNodeType.SEQSCAN);
  String fromTableAlias=root.getTargetTableAlias();
  assert(fromTableAlias != null);
  ArrayList<ParsedColInfo> groupBys=m_parsedSelect.m_groupByColumns;
  Table targetTable=m_catalogDb.getTables().get(root.getTargetTableName());
  if (targetTable == null) {
    return root;
  }
  assert(targetTable != null);
  CatalogMap<Index> allIndexes=targetTable.getIndexes();
  List<Integer> maxCoveredGroupByColumns=new ArrayList<>();
  ArrayList<AbstractExpression> allBindings=new ArrayList<AbstractExpression>();
  Index pickedupInde=null;
  boolean foundAllGroupByCoveredIndex=false;
  for (  Index index : allIndexes) {
    if (!IndexType.isScannable(index.getType()) || foundAllGroupByCoveredIndex) {
      continue;
    }
    List<Integer> coveredGroupByColumns=new ArrayList<>();
    calculateGroupbyColumnsCovered(index,fromTableAlias,coveredGroupByColumns,allBindings);
    if (coveredGroupByColumns.size() > maxCoveredGroupByColumns.size()) {
      maxCoveredGroupByColumns=coveredGroupByColumns;
      pickedupInde=index;
      if (maxCoveredGroupByColumns.size() == groupBys.size()) {
        foundAllGroupByCoveredIndex=true;
        break;
      }
    }
  }
  if (pickedupInde == null) {
    return root;
  }
  IndexScanPlanNode indexScanNode=new IndexScanPlanNode(root,null,pickedupInde,SortDirectionType.INVALID);
  indexScanNode.setForGroupingOnly();
  indexScanNode.setBindings(allBindings);
  gbInfo.m_coveredGroupByColumns=maxCoveredGroupByColumns;
  gbInfo.m_serialAgg=foundAllGroupByCoveredIndex;
  return indexScanNode;
}
