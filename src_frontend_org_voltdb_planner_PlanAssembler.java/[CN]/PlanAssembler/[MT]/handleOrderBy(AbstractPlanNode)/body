{
  assert(m_parsedSelect != null);
  if (!m_parsedSelect.hasOrderByColumns()) {
    return root;
  }
  if (m_parsedSelect.guaranteesUniqueRow()) {
    return root;
  }
  if (root.getPlanNodeType() == PlanNodeType.INDEXSCAN) {
    if (((IndexScanPlanNode)root).getSortDirection() != SortDirectionType.INVALID) {
      return root;
    }
  }
  OrderByPlanNode orderByNode=new OrderByPlanNode();
  for (  ParsedSelectStmt.ParsedColInfo col : m_parsedSelect.orderColumns) {
    orderByNode.addSort(col.expression,col.ascending ? SortDirectionType.ASC : SortDirectionType.DESC);
  }
  orderByNode.addAndLinkChild(root);
  orderByNode.generateOutputSchema(m_catalogDb);
  if (m_parsedSelect.tableList.size() == 1) {
    List<AbstractPlanNode> indexScans=root.findAllNodesOfType(PlanNodeType.INDEXSCAN);
    if (indexScans.size() == 1) {
      IndexScanPlanNode ixnode=(IndexScanPlanNode)(indexScans.get(0));
      if (ixnode.getSortDirection() != SortDirectionType.INVALID) {
        Index index=ixnode.getCatalogIndex();
        if (index.getUnique()) {
          orderByNode.setOrderingByUniqueColumns();
        }
      }
    }
  }
  return orderByNode;
}
