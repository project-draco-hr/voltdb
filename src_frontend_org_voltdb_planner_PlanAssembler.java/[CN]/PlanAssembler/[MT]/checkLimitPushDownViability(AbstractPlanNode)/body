{
  AbstractPlanNode receiveNode=root;
  while (!(receiveNode instanceof ReceivePlanNode)) {
    if (!(receiveNode instanceof OrderByPlanNode) && !(receiveNode instanceof ProjectionPlanNode) && !isValidAggregateNodeForLimitPushdown(receiveNode)) {
      return null;
    }
    if (receiveNode instanceof OrderByPlanNode) {
      for (      ParsedSelectStmt.ParsedColInfo col : m_parsedSelect.orderByColumns()) {
        AbstractExpression rootExpr=col.expression;
        ArrayList<AbstractExpression> tves=rootExpr.findBaseTVEs();
        for (        AbstractExpression tve : tves) {
          if (((TupleValueExpression)tve).hasAggregate() && !m_parsedSelect.hasPartitionColumnInGroupby()) {
            return null;
          }
        }
      }
    }
    if (receiveNode.getChildCount() == 0) {
      return null;
    }
    assert(receiveNode.getChildCount() == 1);
    receiveNode=receiveNode.getChild(0);
  }
  return receiveNode.getChild(0);
}
