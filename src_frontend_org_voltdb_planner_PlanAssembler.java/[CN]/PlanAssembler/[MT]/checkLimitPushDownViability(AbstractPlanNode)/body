{
  AbstractPlanNode receiveNode=root;
  List<ParsedColInfo> orderBys=m_parsedSelect.orderByColumns();
  boolean orderByCoversAllGroupBy=m_parsedSelect.groupByIsAnOrderByPermutation();
  while (!(receiveNode instanceof ReceivePlanNode)) {
    if (!(receiveNode instanceof OrderByPlanNode) && !(receiveNode instanceof ProjectionPlanNode) && !isValidAggregateNodeForLimitPushdown(receiveNode,orderBys,orderByCoversAllGroupBy)) {
      return null;
    }
    if (receiveNode instanceof OrderByPlanNode) {
      if (!m_parsedSelect.hasPartitionColumnInGroupby() && isOrderByAggregationValue(m_parsedSelect.orderByColumns())) {
        return null;
      }
    }
    if (receiveNode.getChildCount() == 0) {
      return null;
    }
    assert(receiveNode.getChildCount() == 1);
    receiveNode=receiveNode.getChild(0);
  }
  return receiveNode.getChild(0);
}
