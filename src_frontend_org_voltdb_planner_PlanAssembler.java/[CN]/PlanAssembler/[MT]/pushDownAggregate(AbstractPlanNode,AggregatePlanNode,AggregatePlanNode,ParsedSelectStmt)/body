{
  boolean noNeedCoordNode=selectStmt.hasPartitionColumnInGroupby();
  if (coordNode != null) {
    coordNode.m_isCoordinatingAggregator=true;
  }
  if (coordNode != null && root instanceof ReceivePlanNode) {
    AbstractPlanNode accessPlanTemp=root;
    root=root.getChild(0).getChild(0);
    root.clearParents();
    distNode.addAndLinkChild(root);
    if (noNeedCoordNode) {
      distNode.setPostPredicate(m_parsedSelect.m_having);
      root=processComplexAggProjectionNode(selectStmt,distNode);
      accessPlanTemp.getChild(0).clearChildren();
      accessPlanTemp.getChild(0).addAndLinkChild(root);
      return accessPlanTemp;
    }
    accessPlanTemp.getChild(0).clearChildren();
    accessPlanTemp.getChild(0).addAndLinkChild(distNode);
    root=accessPlanTemp;
    coordNode.addAndLinkChild(root);
    root=coordNode;
    coordNode.setPostPredicate(m_parsedSelect.m_having);
  }
 else {
    distNode.addAndLinkChild(root);
    root=distNode;
    distNode.setPostPredicate(m_parsedSelect.m_having);
  }
  root=processComplexAggProjectionNode(selectStmt,root);
  return root;
}
