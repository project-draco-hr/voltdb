{
  int nextPlanId=m_planSelector.m_planId;
  boolean orderIsDeterministic=true;
  boolean hasSignificantOffsetOrLimit=false;
  String isContentDeterministic=null;
  for (  StmtSubqueryScan subqueryScan : subqueryNodes) {
    nextPlanId=planForParsedSubquery(subqueryScan,nextPlanId);
    CompiledPlan subqueryBestPlan=subqueryScan.getBestCostPlan();
    if (subqueryBestPlan == null) {
      throw new PlanningErrorException(m_recentErrorMsg);
    }
    orderIsDeterministic&=subqueryBestPlan.isOrderDeterministic();
    if (isContentDeterministic != null && !subqueryBestPlan.isContentDeterministic()) {
      isContentDeterministic=subqueryBestPlan.nondeterminismDetail();
    }
    hasSignificantOffsetOrLimit|=((!subqueryBestPlan.isOrderDeterministic()) && subqueryBestPlan.hasLimitOrOffset());
  }
  m_planSelector.m_planId=nextPlanId;
  return new ParsedResultAccumulator(orderIsDeterministic,hasSignificantOffsetOrLimit,isContentDeterministic);
}
