{
  assert(joinNode != null);
  JoinNode leftNode=joinNode.getLeftNode();
  JoinNode rightNode=joinNode.getRightNode();
  if (joinNode.getJoinType() == JoinType.LEFT) {
    if (isNullRejecting(rightNode.generateTableJoinOrder(),exprs)) {
      joinNode.setJoinType(JoinType.INNER);
    }
  }
 else   if (joinNode.getJoinType() == JoinType.RIGHT) {
    if (isNullRejecting(leftNode.generateTableJoinOrder(),exprs)) {
      joinNode.setJoinType(JoinType.INNER);
    }
  }
 else   if (joinNode.getJoinType() == JoinType.FULL) {
    if (isNullRejecting(leftNode.generateTableJoinOrder(),exprs)) {
      joinNode.setJoinType(JoinType.LEFT);
    }
    if (isNullRejecting(rightNode.generateTableJoinOrder(),exprs)) {
      if (JoinType.FULL == joinNode.getJoinType()) {
        joinNode.setJoinType(JoinType.RIGHT);
      }
 else {
        joinNode.setJoinType(JoinType.INNER);
      }
    }
  }
  List<AbstractExpression> newExprs=new ArrayList<AbstractExpression>(exprs);
  if (leftNode.getJoinExpression() != null) {
    newExprs.add(leftNode.getJoinExpression());
  }
  if (rightNode.getJoinExpression() != null) {
    newExprs.add(rightNode.getJoinExpression());
  }
  if (leftNode.getWhereExpression() != null) {
    exprs.add(leftNode.getWhereExpression());
  }
  if (rightNode.getWhereExpression() != null) {
    exprs.add(rightNode.getWhereExpression());
  }
  if (joinNode.getJoinType() == JoinType.INNER) {
    exprs.addAll(newExprs);
    if (leftNode instanceof BranchNode) {
      simplifyOuterJoinRecursively((BranchNode)leftNode,exprs);
    }
    if (rightNode instanceof BranchNode) {
      simplifyOuterJoinRecursively((BranchNode)rightNode,exprs);
    }
  }
 else   if (joinNode.getJoinType() == JoinType.FULL) {
    if (leftNode instanceof BranchNode) {
      simplifyOuterJoinRecursively((BranchNode)leftNode,exprs);
    }
    if (rightNode instanceof BranchNode) {
      simplifyOuterJoinRecursively((BranchNode)rightNode,exprs);
    }
  }
 else   if (joinNode.getJoinType() == JoinType.LEFT) {
    if (rightNode instanceof BranchNode) {
      newExprs.addAll(exprs);
      simplifyOuterJoinRecursively((BranchNode)rightNode,newExprs);
    }
    if (leftNode instanceof BranchNode) {
      simplifyOuterJoinRecursively((BranchNode)leftNode,exprs);
    }
  }
 else {
    assert(joinNode.getJoinType() == JoinType.RIGHT);
    if (rightNode instanceof BranchNode) {
      simplifyOuterJoinRecursively((BranchNode)rightNode,exprs);
    }
    if (leftNode instanceof BranchNode) {
      newExprs.addAll(exprs);
      simplifyOuterJoinRecursively((BranchNode)leftNode,newExprs);
    }
  }
}
