{
  assert(parsedStmt instanceof ParsedSelectStmt || parsedStmt instanceof ParsedUnionStmt || parsedStmt instanceof ParsedDeleteStmt);
  if (!isOrderByNodeRequired(parsedStmt,root)) {
    return root;
  }
  boolean canMergeReceive=false;
  if (PlanNodeType.RECEIVE == root.getPlanNodeType()) {
    assert(root.getChildCount() == 1);
    assert(root.getChild(0).getChildCount() == 1);
    AbstractPlanNode child=root.getChild(0).getChild(0);
    if (!isOrderByNodeRequired(parsedStmt,child)) {
      canMergeReceive=true;
    }
  }
  OrderByPlanNode orderByNode=buildOrderByPlanNode(parsedStmt.orderByColumns());
  if (canMergeReceive) {
    ReceivePlanNode receive=(ReceivePlanNode)root;
    receive.setNeedMerge(true);
    receive.addInlinePlanNode(orderByNode);
    return receive;
  }
 else {
    orderByNode.addAndLinkChild(root);
    return orderByNode;
  }
}
