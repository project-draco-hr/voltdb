{
  AbstractPlanNode receiveNode=root;
  while (!(receiveNode instanceof ReceivePlanNode)) {
    if (!(receiveNode instanceof AggregatePlanNode) && !(receiveNode instanceof OrderByPlanNode) && !(receiveNode instanceof ProjectionPlanNode)) {
      receiveNode=null;
      break;
    }
    if (receiveNode instanceof AggregatePlanNode && !((AggregatePlanNode)receiveNode).m_isCoordinatingAggregator) {
      receiveNode=null;
      break;
    }
    if (receiveNode instanceof AggregatePlanNode && ((AggregatePlanNode)receiveNode).getGroupByExpressions().size() != 0) {
      receiveNode=null;
      break;
    }
    if (receiveNode.getChildCount() == 0) {
      receiveNode=null;
      break;
    }
    assert(receiveNode.getChildCount() == 1);
    receiveNode=receiveNode.getChild(0);
  }
  return receiveNode;
}
