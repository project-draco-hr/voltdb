{
  AbstractPlanNode receiveNode=root;
  while (!(receiveNode instanceof ReceivePlanNode)) {
    if (!(receiveNode instanceof AggregatePlanNode) && !(receiveNode instanceof OrderByPlanNode) && !(receiveNode instanceof ProjectionPlanNode)) {
      return null;
    }
    if (receiveNode instanceof AggregatePlanNode && !((AggregatePlanNode)receiveNode).m_isCoordinatingAggregator) {
      return null;
    }
    if (receiveNode instanceof OrderByPlanNode) {
      for (      ParsedSelectStmt.ParsedColInfo col : m_parsedSelect.orderByColumns()) {
        AbstractExpression rootExpr=col.expression;
        if (rootExpr instanceof TupleValueExpression) {
          if (((TupleValueExpression)rootExpr).hasAggregate()) {
            return null;
          }
        }
      }
    }
    if (receiveNode.getChildCount() == 0) {
      return null;
    }
    assert(receiveNode.getChildCount() == 1);
    receiveNode=receiveNode.getChild(0);
  }
  return receiveNode.getChild(0);
}
