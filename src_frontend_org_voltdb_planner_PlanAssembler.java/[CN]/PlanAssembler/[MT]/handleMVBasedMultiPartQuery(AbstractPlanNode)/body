{
  MaterializedViewFixInfo mvFixInfo=m_parsedSelect.mvFixInfo;
  HashAggregatePlanNode reAggNode=new HashAggregatePlanNode(mvFixInfo.getReAggregationPlanNode());
  reAggNode.clearChildren();
  reAggNode.clearParents();
  AbstractPlanNode receiveNode=root;
  if (root.getPlanNodeType() == PlanNodeType.RECEIVE) {
    reAggNode.addAndLinkChild(root);
    root=reAggNode;
  }
 else {
    List<AbstractPlanNode> recList=root.findAllNodesOfType(PlanNodeType.RECEIVE);
    assert(recList.size() == 1);
    receiveNode=recList.get(0);
    AbstractPlanNode parent=receiveNode.getParent(0);
    receiveNode.clearParents();
    parent.clearChildren();
    reAggNode.addAndLinkChild(receiveNode);
    parent.addAndLinkChild(reAggNode);
  }
  AbstractScanPlanNode mvScanNode=null;
  assert(receiveNode instanceof ReceivePlanNode);
  AbstractPlanNode sendNode=receiveNode.getChild(0);
  assert(sendNode instanceof SendPlanNode);
  AbstractPlanNode sendNodeChild=sendNode.getChild(0);
  if (mvFixInfo.isJoin()) {
    AbstractPlanNode joinNode=sendNodeChild;
    assert(joinNode instanceof AbstractJoinPlanNode);
    AbstractPlanNode reAggParent=null;
    if (root != reAggNode) {
      reAggParent=reAggNode.getParent(0);
    }
    joinNode.clearParents();
    reAggNode.clearParents();
    mvFixInfo.replaceScanNodeWithReAggNode(joinNode,reAggNode);
    mvScanNode=mvFixInfo.m_scanNode;
    assert(mvScanNode != null);
    mvScanNode.clearParents();
    mvScanNode.clearChildren();
    sendNode.clearChildren();
    sendNode.addAndLinkChild(mvScanNode);
    if (reAggParent != null) {
      reAggParent.clearChildren();
      reAggParent.addAndLinkChild(joinNode);
      root=reAggParent;
    }
 else {
      root=joinNode;
    }
  }
 else {
    List<AbstractScanPlanNode> scanList=sendNodeChild.getScanNodeList();
    mvScanNode=scanList.get(0);
    assert(mvScanNode.getTargetTableName().equals(mvFixInfo.getMVTableName()));
  }
  mvScanNode.addInlinePlanNode(mvFixInfo.getScanInlinedProjectionNode());
  return root;
}
