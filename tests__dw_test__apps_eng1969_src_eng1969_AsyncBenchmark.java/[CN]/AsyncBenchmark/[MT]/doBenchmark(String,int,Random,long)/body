{
  final int totalPartitions=4;
  final int maxGroupsPerPartition=1000;
  boolean coldData=(Math.abs(rand.nextLong()) % 100) <= 1;
  long rowid_group=coldData ? Math.abs(rand.nextLong()) % poolSize : Math.abs(rand.nextLong()) % (totalPartitions * maxGroupsPerPartition);
  long rowid=Math.abs(rand.nextLong()) % 1000;
  Con.executeAsync(new ProcedureCallback(){
    @Override public void clientCallback(    ClientResponse response) throws Exception {
      if (response.getStatus() == ClientResponse.SUCCESS)       TrackingResults.incrementAndGet(0);
 else       TrackingResults.incrementAndGet(1);
    }
  }
,procedure,rowid,rowid_group,new String("ABCDEFGHIJKLMNOPQRSTUVWXYZ").getBytes());
}
