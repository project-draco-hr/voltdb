{
  final int polygonRadius=3;
  final int numberOfPolygonPoints=8;
  final int longitude=m_random.nextInt(10) - 178;
  final int latitude=m_random.nextInt(10) + 72;
  GeographyPointValue center=new GeographyPointValue(longitude,latitude);
  final GeographyPointValue centerShiftOffset=new GeographyPointValue(2.1 * polygonRadius,-1 * polygonRadius);
  center=generatePolygonPointData(center,centerShiftOffset,polygonRadius,3,0,numberOfPolygonPoints);
  center=generatePolygonPointData(center,centerShiftOffset,polygonRadius,3,0.33,numberOfPolygonPoints);
  center=generatePolygonPointData(center,centerShiftOffset,polygonRadius,5,0,numberOfPolygonPoints);
  center=generatePolygonPointData(center,centerShiftOffset,polygonRadius,5,0.33,numberOfPolygonPoints);
  center=generatePolygonPointData(center,centerShiftOffset,polygonRadius,8,0,numberOfPolygonPoints);
  center=generatePolygonPointData(center,centerShiftOffset,polygonRadius,8,0.33,numberOfPolygonPoints);
  client.callProcedure("PLACES.Insert",0,pointCentroidOfPolygonWithNoHole);
  client.callProcedure("PLACES.Insert",0,pointDisjointRegionCellNPolygon);
  client.callProcedure("PLACES.Insert",0,pointBBVertexOutsidePolygon);
  client.callProcedure("PLACES.Insert",0,pointOutSidePolygon);
  client.callProcedure("BORDERS.INSERT",0,polygonWithVertexNearBoundingBox);
  client.callProcedure("BORDERS.INSERT",0,polygonWithVertexNearBoundingBoxWithHoles);
  client.callProcedure("INDEXED_PLACES.Insert",0,pointCentroidOfPolygonWithNoHole);
  client.callProcedure("INDEXED_PLACES.Insert",0,pointDisjointRegionCellNPolygon);
  client.callProcedure("INDEXED_PLACES.Insert",0,pointBBVertexOutsidePolygon);
  client.callProcedure("INDEXED_PLACES.Insert",0,pointOutSidePolygon);
  client.callProcedure("INDEXED_BORDERS.INSERT",0,polygonWithVertexNearBoundingBox);
  client.callProcedure("INDEXED_BORDERS.INSERT",0,polygonWithVertexNearBoundingBoxWithHoles);
  int entryIndex=0;
  for (  PolygonPoints polygonPoints : m_generatedPolygonPoints) {
    entryIndex++;
    client.callProcedure("PLACES.Insert",entryIndex,polygonPoints.getCenter());
    client.callProcedure("PLACES.Insert",entryIndex,polygonPoints.getInsidePoint());
    client.callProcedure("PLACES.Insert",entryIndex,polygonPoints.getPointNearCellOutsidePolygon());
    client.callProcedure("PLACES.Insert",entryIndex,polygonPoints.getPointOutSidePolygon());
    client.callProcedure("BORDERS.Insert",entryIndex,polygonPoints.getPolygon());
    client.callProcedure("INDEXED_PLACES.Insert",entryIndex,polygonPoints.getCenter());
    client.callProcedure("INDEXED_PLACES.Insert",entryIndex,polygonPoints.getInsidePoint());
    client.callProcedure("INDEXED_PLACES.Insert",entryIndex,polygonPoints.getPointNearCellOutsidePolygon());
    client.callProcedure("INDEXED_PLACES.Insert",entryIndex,polygonPoints.getPointOutSidePolygon());
    client.callProcedure("INDEXED_BORDERS.Insert",entryIndex,polygonPoints.getPolygon());
  }
}
