{
  VoltTable resultsUsingGeoIndex, resultsFromNonGeoIndex;
  String indexedProcName, nonIndexProcName, predicate;
  String prefixMsg;
  if (testContains) {
    indexedProcName="P_CONTAINS_INDEXED";
    nonIndexProcName="P_CONTAINS";
    predicate="Contains";
  }
 else {
    indexedProcName="P_NOT_CONTAINS_INDEXED";
    nonIndexProcName="P_NOT_CONTAINS";
    predicate="Not Contains";
  }
  int maxPolygonsContainSamePoint=0;
  prefixMsg="Assertion failed comparing results of " + predicate + " on indexed with non-indexed tables: ";
  List<GeographyPointValue> points;
  for (  PolygonPoints polygonPoints : m_generatedPolygonPoints) {
    points=polygonPoints.getPoints();
    for (    GeographyPointValue point : points) {
      resultsUsingGeoIndex=client.callProcedure(indexedProcName,point).getResults()[0];
      resultsFromNonGeoIndex=client.callProcedure(nonIndexProcName,point).getResults()[0];
      assertTablesAreEqual(prefixMsg,resultsFromNonGeoIndex,resultsUsingGeoIndex);
      maxPolygonsContainSamePoint=(maxPolygonsContainSamePoint < resultsUsingGeoIndex.getRowCount()) ? resultsUsingGeoIndex.getRowCount() : maxPolygonsContainSamePoint;
    }
  }
  System.out.println("Max polygons for predicate '" + predicate + "': "+ maxPolygonsContainSamePoint);
}
