{
  assert((sizeOfHole >= 0) && (sizeOfHole + m_incrementFactor < 1));
  assert(numOfVertexes >= 3);
  m_center=center;
  GeographyPointValue zeroDegreePoint=GeographyPointValue.normalizeLngLat(m_center.getLongitude() + radiusInDegrees,m_center.getLatitude());
  int degreeRotate=m_random.nextInt(358) + 1;
  GeographyPointValue firstVertex=zeroDegreePoint.rotate(degreeRotate,m_center);
  m_polygon=PolygonFactory.CreateRegularConvex(m_center,firstVertex,5,sizeOfHole);
  m_pointInside=firstVertex.scale(m_center,sizeOfHole + m_incrementFactor);
  m_pointNearCellOutsidePolygon=GeographyPointValue.normalizeLngLat(m_center.getLongitude() + radiusInDegrees,m_center.getLatitude() + radiusInDegrees);
  m_pointOutsidePolygonCell=GeographyPointValue.normalizeLngLat(m_center.getLongitude() + radiusInDegrees + 1,m_center.getLatitude() + radiusInDegrees + 1);
}
