{
  GeographyValue poly=GeographyValue.fromWKT(WKT);
  ByteBuffer buf=ByteBuffer.allocate(poly.getLengthInBytes());
  poly.flattenToBuffer(buf);
  buf.position(0);
  int pos=0;
  pos+=printOneGVRowForDoc(pos,buf.get(pos),"IsValid.  Initially zero (0)");
  pos+=printOneGVRowForDoc(pos,buf.get(pos),"Internal.  Initially one (1)");
  pos+=printOneGVRowForDoc(pos,buf.get(pos),"Polygon has holes.");
  int nrings=buf.getInt(pos);
  pos+=printOneGVRowForDoc(pos,nrings,"Number of Rings");
  printOneGVRowMessageForDoc("Vertices follow here.");
  for (int ringNo=0; ringNo < nrings; ringNo+=1) {
    printOneGVRowMessageForDoc(String.format("Ring %d",ringNo + 1));
    pos+=printOneGVRowForDoc(pos,buf.get(pos),"Is initialized.  Initially zero (0)");
    int numVerts=buf.getInt(pos);
    pos+=printOneGVRowForDoc(pos,numVerts,String.format("Number Vertices in ring %d",ringNo + 1));
    for (int vertNo=0; vertNo < numVerts; vertNo+=1) {
      pos+=printOneGVRowForDoc(pos,buf.getDouble(pos),String.format("X Coordinate for ring %d, vertex %d",ringNo + 1,vertNo + 1));
      pos+=printOneGVRowForDoc(pos,buf.getDouble(pos),String.format("Y Coordinate for ring %d, vertex %d",ringNo + 1,vertNo + 1));
      pos+=printOneGVRowForDoc(pos,buf.getDouble(pos),String.format("Z Coordinate for ring %d, vertex %d",ringNo + 1,vertNo + 1));
    }
    pos+=printOneGVRowOfZerosForDoc(pos,38,"Internal plus the bounding box of the ring.  Initially zero (0).");
  }
  pos+=printOneGVRowOfZerosForDoc(pos,33,"Internal fields plus the bounding box of the polygon.  Initially zero(0).");
}
