{
  final double EPSILON=1.0e-13;
  final int NUMBER_TRANSFORMS=1;
  final int NUM_PTS=2000;
  final int MIN_PTS=-(NUM_PTS / 2);
  final int MAX_PTS=(NUM_PTS / 2);
  double max_latitude_error=0;
  double max_longitude_error=0;
  for (int ycoord=MIN_PTS; ycoord <= MAX_PTS; ycoord+=1) {
    double latitude=ycoord * (90.0 / NUM_PTS);
    for (int xcoord=MIN_PTS; xcoord <= MAX_PTS; xcoord+=1) {
      double longitude=xcoord * (180.0 / NUM_PTS);
      GeographyPointValue PT_point=new GeographyPointValue(longitude,latitude);
      for (int idx=0; idx < NUMBER_TRANSFORMS; idx+=1) {
        GeographyValue.XYZPoint xyz_point=GeographyValue.XYZPoint.fromGeographyPointValue(PT_point);
        PT_point=xyz_point.toGeographyPointValue();
        double laterr=Math.abs(latitude - PT_point.getLatitude());
        double lngerr=Math.abs(longitude - PT_point.getLongitude());
        if (laterr > max_latitude_error) {
          max_latitude_error=laterr;
          assertTrue(String.format("Maximum Latitude Error out of range: error=%e >= epsilon = %e, latitude = %f, num_transforms = %d\n",max_latitude_error,EPSILON,latitude,idx),max_latitude_error < EPSILON);
        }
        if (lngerr > max_longitude_error) {
          max_longitude_error=lngerr;
          assertTrue(String.format("Maximum LongitudeError out of range: error=%e >= epsilon = %e, longitude = %f, num_transforms = %d\n",max_longitude_error,EPSILON,longitude,idx),max_longitude_error < EPSILON);
        }
      }
    }
  }
}
