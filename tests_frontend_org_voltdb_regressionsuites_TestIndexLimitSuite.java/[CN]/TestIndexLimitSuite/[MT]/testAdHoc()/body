{
  Client client=getClient();
  client.callProcedure("TU1.insert",1,1);
  client.callProcedure("TU1.insert",2,2);
  client.callProcedure("TU1.insert",3,-3);
  client.callProcedure("TU2.insert",1,-1,"jim");
  client.callProcedure("TU2.insert",2,2,"jim");
  client.callProcedure("TU2.insert",3,3,"jim");
  client.callProcedure("TU2.insert",4,-1,"thea");
  client.callProcedure("TU2.insert",5,2,"thea");
  client.callProcedure("TU2.insert",6,3,"thea");
  client.callProcedure("TU2.insert",7,-1,"betty");
  client.callProcedure("TU2.insert",8,2,"betty");
  client.callProcedure("TU2.insert",9,3,"betty");
  client.callProcedure("TU3.insert",1,1,1);
  client.callProcedure("TU3.insert",2,2,1);
  client.callProcedure("TU3.insert",3,3,1);
  client.callProcedure("TU3.insert",4,1,2);
  client.callProcedure("TU3.insert",5,2,2);
  client.callProcedure("TU3.insert",6,3,2);
  client.callProcedure("TU3.insert",7,1,3);
  client.callProcedure("TU3.insert",8,2,3);
  client.callProcedure("TU3.insert",9,3,3);
  client.callProcedure("TU4.insert",1,1,"jim",0);
  client.callProcedure("TU4.insert",2,2,"jim",0);
  client.callProcedure("TU4.insert",3,3,"jim",0);
  client.callProcedure("TU4.insert",4,4,"thea",1);
  client.callProcedure("TU4.insert",5,5,"betty",1);
  VoltTable table;
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(-3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(UNAME) FROM TU2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals("thea",table.getString(0));
  table=client.callProcedure("@Explain","SELECT MAX(UNAME) FROM TU2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU3 WHERE TEL = 3").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU3 WHERE TEL = 3").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(TEL) FROM TU3 WHERE TEL = 3").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(TEL) FROM TU3 WHERE TEL = 3").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU4 WHERE UNAME = 'jim' AND SEX = 0").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU4 WHERE UNAME = 'jim' AND SEX = 0").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(ABS(POINTS)) FROM TU1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(ABS(POINTS)) FROM TU1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS + ID) FROM TU1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(0,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS + ID) FROM TU1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU2 WHERE UNAME = 'betty'").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU2 WHERE UNAME = 'betty'").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(UNAME) FROM TU2 WHERE POINTS * 2 = 4").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals("thea",table.getString(0));
  table=client.callProcedure("@Explain","SELECT MAX(UNAME) FROM TU2 WHERE POINTS * 2 = 4").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(ABS(POINTS)) FROM TU2 WHERE ABS(POINTS) = 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(ABS(POINTS)) FROM TU2 WHERE ABS(POINTS) = 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(CHAR_LENGTH(UNAME)) FROM TU2 WHERE ABS(POINTS) = 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(5,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(CHAR_LENGTH(UNAME)) FROM TU2 WHERE ABS(POINTS) = 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU1 WHERE POINTS > 0").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU1 WHERE POINTS > 0").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU1 WHERE POINTS >= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU1 WHERE POINTS >= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU1 WHERE POINTS < 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(-3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU1 WHERE POINTS < 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU1 WHERE POINTS <= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(-3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU1 WHERE POINTS <= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU1 WHERE POINTS > 0").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU1 WHERE POINTS > 0").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU1 WHERE POINTS >= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU1 WHERE POINTS >= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU1 WHERE POINTS < 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU1 WHERE POINTS < 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU1 WHERE POINTS <= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU1 WHERE POINTS <= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU2 WHERE UNAME = 'jim' AND POINTS < 5").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(-1,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU2 WHERE UNAME = 'jim' AND POINTS < 5").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU2 WHERE UNAME = 'thea' AND POINTS > 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU2 WHERE UNAME = 'thea' AND POINTS > 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS) FROM TU2 WHERE POINTS < 5 AND UNAME = 'jim'").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(-1,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS) FROM TU2 WHERE POINTS < 5 AND UNAME = 'jim'").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS) FROM TU2 WHERE POINTS > 1 AND UNAME = 'thea'").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS) FROM TU2 WHERE POINTS > 1 AND UNAME = 'thea'").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS * 2) FROM TU2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS * 3) FROM TU2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS * 2) FROM TU2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS * 2) FROM TU2 WHERE POINTS * 2 = 100").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS + 200) FROM TU3").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS + 100) FROM TU3").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MIN(POINTS + 10) FROM TU2 WHERE UNAME = 'jim' AND POINTS + 10 > 5").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(9,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS + 10) FROM TU2 WHERE UNAME = 'jim' AND POINTS + 10 > 5").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertTrue(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@Explain","SELECT MIN(POINTS + 11) FROM TU2 WHERE UNAME = 'jim' AND POINTS + 10 > 5").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
  table=client.callProcedure("@AdHoc","SELECT MAX(POINTS + 10) FROM TU2 WHERE UNAME = 'betty' AND POINTS + 10 > 7").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(13,table.getLong(0));
  table=client.callProcedure("@Explain","SELECT MAX(POINTS + 10) FROM TU2 WHERE UNAME = 'betty' AND POINTS + 10 > 7").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertFalse(table.getString(0).contains("LIMIT"));
}
