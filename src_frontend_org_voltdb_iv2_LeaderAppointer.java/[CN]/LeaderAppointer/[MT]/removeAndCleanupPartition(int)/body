{
  tmLog.info("Removing and cleanup up partition info for partition " + pid);
  if (m_removedPartitionsAtPromotionTime != null) {
    m_removedPartitionsAtPromotionTime.add(pid);
    tmLog.info("Partition " + pid + " was cleaned up during LeaderAppointer promotion and should be skipped");
  }
  BabySitter sitter=m_partitionWatchers.remove(pid);
  if (sitter != null) {
    sitter.shutdown();
  }
  m_callbacks.remove(pid);
  try {
    ZKUtil.asyncDeleteRecursively(m_zk,ZKUtil.joinZKPath(VoltZK.iv2masters,String.valueOf(pid)));
    ZKUtil.asyncDeleteRecursively(m_zk,ZKUtil.joinZKPath(VoltZK.iv2appointees,String.valueOf(pid)));
    ZKUtil.asyncDeleteRecursively(m_zk,ZKUtil.joinZKPath(VoltZK.leaders_initiators,"partition_" + String.valueOf(pid)));
  }
 catch (  Exception e) {
    tmLog.error("Error removing partition info",e);
  }
}
