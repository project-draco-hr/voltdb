{
  Client client=getClient();
  client.callProcedure("TU1.insert",1,1);
  client.callProcedure("TU1.insert",2,2);
  client.callProcedure("TU1.insert",3,3);
  client.callProcedure("TU1.insert",6,6);
  client.callProcedure("TU1.insert",8,8);
  client.callProcedure("TU1.insert",10,null);
  VoltTable table;
  table=client.callProcedure("@Explain","SELECT COUNT(ID) FROM TU1 WHERE POINTS < -1").getResults()[0];
  String explainPlan=table.toString();
  assertTrue(explainPlan.contains("INDEX COUNT"));
  assertFalse(explainPlan.contains("INDEX SCAN"));
  table=client.callProcedure("@AdHoc","SELECT (COUNT(ID) + 1) FROM TU1 WHERE POINTS < 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS < -1",0);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS < 1",0);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS <= 1",1);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS < 5",3);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS <= 5",3);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS < 6",3);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS <= 6",4);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS < 8",4);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS <= 8",5);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS < 1000",5);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS <= 1000",5);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > -1",5);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= -1",5);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 1",4);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 1",5);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 2",3);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 2",4);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 4",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 4",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 8",0);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 8",1);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 1000",0);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 1000",0);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > -1 AND POINTS <= 6",4);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > -1 AND POINTS < 6",3);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= -1 AND POINTS <= 6",4);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= -1 AND POINTS < 6",3);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 2 AND POINTS <= 6",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 2 AND POINTS <= 6",3);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 2 AND POINTS < 6",1);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 2 AND POINTS < 6",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 5 AND POINTS <= 8",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 5 AND POINTS < 8",1);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 5 AND POINTS <= 8",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 5 AND POINTS < 8",1);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 4 AND POINTS <= 9",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS > 4 AND POINTS < 9",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 4 AND POINTS <= 9",2);
  callAdHocFilterWithExpectedCount(client,"TU1","POINTS >= 4 AND POINTS < 9",2);
}
