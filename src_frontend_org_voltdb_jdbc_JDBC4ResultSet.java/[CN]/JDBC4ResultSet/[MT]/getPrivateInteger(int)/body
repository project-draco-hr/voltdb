{
  final VoltType type=table.getColumnType(columnIndex - 1);
  Long longValue=null;
switch (type) {
case TINYINT:
    longValue=new Long(table.getLong(columnIndex - 1));
  break;
case SMALLINT:
longValue=new Long(table.getLong(columnIndex - 1));
break;
case INTEGER:
longValue=new Long(table.getLong(columnIndex - 1));
break;
case BIGINT:
longValue=new Long(table.getLong(columnIndex - 1));
break;
case FLOAT:
final Double retDouble=new Double(table.getDouble(columnIndex - 1));
if (retDouble.equals(new Double(Math.ceil(retDouble)))) {
longValue=retDouble.longValue();
break;
}
throw new IllegalArgumentException("Cannot get integer value from: " + retDouble);
case DECIMAL:
final BigDecimal retDec=table.getDecimalAsBigDecimal(columnIndex - 1);
if (retDec == null) break;
try {
longValue=new Long(retDec.longValueExact());
break;
}
 catch (ArithmeticException e) {
throw new IllegalArgumentException("Cannot get integer value from: " + retDec.toString());
}
default :
throw new IllegalArgumentException("Cannot get integer value for column type '" + type + "'");
}
return table.wasNull() ? new Long(0) : longValue;
}
