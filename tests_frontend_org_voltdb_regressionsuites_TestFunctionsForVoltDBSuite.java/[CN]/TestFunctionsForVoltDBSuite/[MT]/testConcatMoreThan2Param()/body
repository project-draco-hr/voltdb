{
  System.out.println("STARTING test Concat with more than two parameters");
  Client client=getClient();
  ClientResponse cr;
  VoltTable result;
  cr=client.callProcedure("P1.insert",1,"Yetian",1,1.0);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("CONCAT3","@Volt","DB",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT3","","@VoltDB",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT4","@Volt","","DB",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT4","","@VoltDB","",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT5","@Volt","D","B",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB1"});
  cr=client.callProcedure("CONCAT5","","@VoltDB","",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB1"});
  try {
    cr=client.callProcedure("@AdHoc","select CONCAT('a', 'b', id) from p1 where id = 1");
  }
 catch (  ProcCallException pcex) {
    assertTrue(pcex.getMessage().contains("can't be cast as VARCHAR"));
  }
}
