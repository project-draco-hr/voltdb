{
  System.out.println("STARTING test Concat with more than two parameters");
  Client client=getClient();
  ClientResponse cr;
  VoltTable result;
  cr=client.callProcedure("P1.insert",1,"Yetian",1,1.0);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("CONCAT3","@Volt","DB",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT3","","@VoltDB",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT4","@Volt","","DB",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT4","","@VoltDB","",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB"});
  cr=client.callProcedure("CONCAT5","@Volt","D","B",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB1"});
  cr=client.callProcedure("CONCAT5","","@VoltDB","",1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  validateTableColumnOfScalarVarchar(result,1,new String[]{"Yetian@VoltDB1"});
  cr=client.callProcedure("CONCAT2",1,1);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals("Yetian1",result.getString(1));
}
