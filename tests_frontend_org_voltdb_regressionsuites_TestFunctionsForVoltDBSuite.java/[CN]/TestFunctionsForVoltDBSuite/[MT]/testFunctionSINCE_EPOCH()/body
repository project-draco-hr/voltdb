{
  System.out.println("STARTING SINCE_EPOCH");
  Client client=getClient();
  ClientResponse cr;
  VoltTable result;
  cr=client.callProcedure("P2.insert",0,new Timestamp(0L));
  cr=client.callProcedure("P2.insert",1,new Timestamp(1L));
  cr=client.callProcedure("P2.insert",2,new Timestamp(1000L));
  cr=client.callProcedure("P2.insert",3,new Timestamp(-1000L));
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  String[] procedures={"SINCE_EPOCH_SECOND","SINCE_EPOCH_MILLIS","SINCE_EPOCH_MICROS"};
  for (int i=0; i < procedures.length; i++) {
    String proc=procedures[i];
    cr=client.callProcedure(proc,0);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    result=cr.getResults()[0];
    assertEquals(1,result.getRowCount());
    assertTrue(result.advanceRow());
    if (proc == "SINCE_EPOCH_SECOND") {
      assertEquals(0,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MILLIS") {
      assertEquals(0,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MICROS") {
      assertEquals(0,result.getLong(0));
    }
    cr=client.callProcedure(proc,1);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    result=cr.getResults()[0];
    assertEquals(1,result.getRowCount());
    assertTrue(result.advanceRow());
    if (proc == "SINCE_EPOCH_SECOND") {
      assertEquals(0,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MILLIS") {
      assertEquals(1,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MICROS") {
      assertEquals(1000,result.getLong(0));
    }
    cr=client.callProcedure(proc,2);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    result=cr.getResults()[0];
    assertEquals(1,result.getRowCount());
    assertTrue(result.advanceRow());
    if (proc == "SINCE_EPOCH_SECOND") {
      assertEquals(1,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MILLIS") {
      assertEquals(1000,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MICROS") {
      assertEquals(1000000,result.getLong(0));
    }
    cr=client.callProcedure(proc,3);
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    result=cr.getResults()[0];
    assertEquals(1,result.getRowCount());
    assertTrue(result.advanceRow());
    if (proc == "SINCE_EPOCH_SECOND") {
      assertEquals(-1,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MILLIS") {
      assertEquals(-1000,result.getLong(0));
    }
 else     if (proc == "SINCE_EPOCH_MICROS") {
      assertEquals(-1000000,result.getLong(0));
    }
  }
}
