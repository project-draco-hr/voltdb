{
  ClientResponse cr;
  VoltTable result;
  Client client=getClient();
  loadJS1(client);
  cr=client.callProcedure("IdFieldProc","id","1");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals(1L,result.getLong(0));
  try {
    cr=client.callProcedure("IdFieldProc","id",1);
    fail("parameter check failed");
  }
 catch (  ProcCallException pcex) {
    assertTrue(pcex.getMessage().contains("TYPE ERROR FOR PARAMETER 1"));
  }
  try {
    cr=client.callProcedure("IdFieldProc",1,"1");
    fail("parameter check failed");
  }
 catch (  ProcCallException pcex) {
    assertTrue(pcex.getMessage().contains("TYPE ERROR FOR PARAMETER 0"));
  }
  cr=client.callProcedure("IdFieldProc","tag","three");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals(3L,result.getLong(0));
  cr=client.callProcedure("IdFieldProc","bool","false");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals(4L,result.getLong(0));
  cr=client.callProcedure("IdFieldProc","??????Vo","??????????????????");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals(9L,result.getLong(0));
  cr=client.callProcedure("NullFieldProc","funky");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(9,result.getRowCount());
  cr=client.callProcedure("NullFieldProc","id");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(3,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals(5L,result.getLong(0));
  assertTrue(result.advanceRow());
  assertEquals(6L,result.getLong(0));
  assertTrue(result.advanceRow());
  assertEquals(8L,result.getLong(0));
  cr=client.callProcedure("InnerFieldProc","??????Vo","wakarimasen");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(3,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals(1L,result.getLong(0));
  assertTrue(result.advanceRow());
  assertEquals(2L,result.getLong(0));
  assertTrue(result.advanceRow());
  assertEquals(3L,result.getLong(0));
  cr=client.callProcedure("IdFieldProc","arr","[0,2,100]");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  assertEquals(2L,result.getLong(0));
  cr=client.callProcedure("@AdHoc","SELECT FIELD(FIELD(DOC, 'id'), 'value') FROM JS1 WHERE ID = 1");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  result.getString(0);
  assertTrue(result.wasNull());
  cr=client.callProcedure("@AdHoc","SELECT FIELD(FIELD(DOC, 'arr'), 'value') FROM JS1 WHERE ID = 1");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  result=cr.getResults()[0];
  assertEquals(1,result.getRowCount());
  assertTrue(result.advanceRow());
  result.getString(0);
  assertTrue(result.wasNull());
}
