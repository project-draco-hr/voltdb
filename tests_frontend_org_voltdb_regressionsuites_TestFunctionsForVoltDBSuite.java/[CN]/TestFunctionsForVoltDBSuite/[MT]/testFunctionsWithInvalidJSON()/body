{
  Client client=getClient();
  ClientResponse cr;
  cr=client.callProcedure("JSBAD.insert",1,"{\"id\":1 \"bool\": false}");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("JSBAD.insert",2,"{\"id\":2, \"bool\"; false, \"??????Vo\":\"????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\"}");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  String[] jsonProcs={"BadIdFieldProc","BadIdArrayProc","BadIdArrayLengthProc"};
  for (  String procname : jsonProcs) {
    try {
      cr=client.callProcedure(procname,1,"id","1");
      fail("document validity check failed for " + procname);
    }
 catch (    ProcCallException pcex) {
      assertTrue(pcex.getMessage().contains("Invalid JSON * Line 1, Column 9"));
    }
    try {
      cr=client.callProcedure(procname,2,"id","2");
      fail("document validity check failed for " + procname);
    }
 catch (    ProcCallException pcex) {
      assertTrue(pcex.getMessage().contains("Invalid JSON * Line 1, Column 16"));
    }
  }
}
