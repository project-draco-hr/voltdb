{
  VoltTable[] results;
  final long now=System.currentTimeMillis();
  if ((selector.toUpperCase().equals(SysProcSelector.MEMORY.name())) || (selector.toUpperCase().equals("NODEMEMORY"))) {
    results=getMemoryData();
    assert(results.length == 1);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.TABLE.name())) {
    results=getTableData(interval,now);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.INDEX.name())) {
    results=getIndexData(interval,now);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.PROCEDURE.name())) {
    results=getProcedureData(interval,now);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.INITIATOR.name())) {
    results=getInitiatorData(interval,now);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.PARTITIONCOUNT.name())) {
    results=getPartitionCountData();
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.IOSTATS.name())) {
    results=getIOStatsData(interval,now);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.STARVATION.name())) {
    results=getStarvationData(interval,now);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.MANAGEMENT.name())) {
    VoltTable[] memoryResults=getMemoryData();
    VoltTable[] tableResults=getTableData(interval,now);
    VoltTable[] indexResults=getIndexData(interval,now);
    VoltTable[] procedureResults=getProcedureData(interval,now);
    VoltTable[] initiatorResults=getInitiatorData(interval,now);
    VoltTable[] ioResults=getIOStatsData(interval,now);
    VoltTable[] starvationResults=getIOStatsData(interval,now);
    results=new VoltTable[]{memoryResults[0],initiatorResults[0],procedureResults[0],ioResults[0],tableResults[0],indexResults[0],starvationResults[0]};
    final long endTime=System.currentTimeMillis();
    final long delta=endTime - now;
    HOST_LOG.info("Statistics invocation of MANAGEMENT selector took " + delta + " milliseconds");
  }
 else {
    throw new VoltAbortException(String.format("Invalid Statistics selector %s.",selector));
  }
  return results;
}
