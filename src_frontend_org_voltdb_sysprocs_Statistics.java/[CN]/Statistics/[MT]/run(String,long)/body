{
  VoltTable[] results;
  if (selector.toUpperCase().equals(SysProcSelector.TABLE.name())) {
    SynthesizedPlanFragment pfs[]=new SynthesizedPlanFragment[2];
    pfs[1]=new SynthesizedPlanFragment();
    pfs[1].fragmentId=SysProcFragmentId.PF_tableData;
    pfs[1].outputDepId=DEP_tableData;
    pfs[1].inputDepIds=new int[]{};
    pfs[1].multipartition=true;
    pfs[1].nonExecSites=false;
    pfs[1].parameters=new ParameterSet();
    pfs[0]=new SynthesizedPlanFragment();
    pfs[0].fragmentId=SysProcFragmentId.PF_tableAggregator;
    pfs[0].outputDepId=DEP_tableAggregator;
    pfs[0].inputDepIds=new int[]{DEP_tableData};
    pfs[0].multipartition=false;
    pfs[0].nonExecSites=false;
    pfs[0].parameters=new ParameterSet();
    results=executeSysProcPlanFragments(pfs,DEP_tableAggregator);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.PROCEDURE.name())) {
    SynthesizedPlanFragment pfs[]=new SynthesizedPlanFragment[2];
    pfs[1]=new SynthesizedPlanFragment();
    pfs[1].fragmentId=SysProcFragmentId.PF_procedureData;
    pfs[1].outputDepId=DEP_procedureData;
    pfs[1].inputDepIds=new int[]{};
    pfs[1].multipartition=true;
    pfs[1].nonExecSites=false;
    pfs[1].parameters=new ParameterSet();
    pfs[1].parameters.setParameters((byte)resetCounters);
    pfs[0]=new SynthesizedPlanFragment();
    pfs[0].fragmentId=SysProcFragmentId.PF_procedureAggregator;
    pfs[0].outputDepId=DEP_procedureAggregator;
    pfs[0].inputDepIds=new int[]{DEP_procedureData};
    pfs[0].multipartition=false;
    pfs[0].nonExecSites=false;
    pfs[0].parameters=new ParameterSet();
    results=executeSysProcPlanFragments(pfs,DEP_procedureAggregator);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.INITIATOR.name())) {
    SynthesizedPlanFragment pfs[]=new SynthesizedPlanFragment[2];
    pfs[1]=new SynthesizedPlanFragment();
    pfs[1].fragmentId=SysProcFragmentId.PF_initiatorData;
    pfs[1].outputDepId=DEP_initiatorData;
    pfs[1].inputDepIds=new int[]{};
    pfs[1].multipartition=false;
    pfs[1].nonExecSites=true;
    pfs[1].parameters=new ParameterSet();
    pfs[1].parameters.setParameters((byte)resetCounters);
    pfs[0]=new SynthesizedPlanFragment();
    pfs[0].fragmentId=SysProcFragmentId.PF_initiatorAggregator;
    pfs[0].outputDepId=DEP_initiatorAggregator;
    pfs[0].inputDepIds=new int[]{DEP_initiatorData};
    pfs[0].multipartition=false;
    pfs[0].nonExecSites=false;
    pfs[0].parameters=new ParameterSet();
    results=executeSysProcPlanFragments(pfs,DEP_initiatorAggregator);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.PARTITIONCOUNT.name())) {
    SynthesizedPlanFragment pfs[]=new SynthesizedPlanFragment[1];
    pfs[0]=new SynthesizedPlanFragment();
    pfs[0].fragmentId=SysProcFragmentId.PF_partitionCount;
    pfs[0].outputDepId=DEP_partitionCount;
    pfs[0].inputDepIds=new int[]{};
    pfs[0].multipartition=false;
    pfs[0].nonExecSites=false;
    pfs[0].parameters=new ParameterSet();
    results=executeSysProcPlanFragments(pfs,DEP_partitionCount);
  }
 else   if (selector.toUpperCase().equals(SysProcSelector.IOSTATS.name())) {
    final long now=System.currentTimeMillis();
    SynthesizedPlanFragment pfs[]=new SynthesizedPlanFragment[2];
    pfs[1]=new SynthesizedPlanFragment();
    pfs[1].fragmentId=SysProcFragmentId.PF_ioData;
    pfs[1].outputDepId=DEP_ioData;
    pfs[1].inputDepIds=new int[]{};
    pfs[1].multipartition=false;
    pfs[1].nonExecSites=true;
    pfs[1].parameters=new ParameterSet();
    pfs[1].parameters.setParameters((byte)resetCounters,now);
    pfs[0]=new SynthesizedPlanFragment();
    pfs[0].fragmentId=SysProcFragmentId.PF_ioDataAggregator;
    pfs[0].outputDepId=DEP_ioDataAggregator;
    pfs[0].inputDepIds=new int[]{DEP_ioData};
    pfs[0].multipartition=false;
    pfs[0].nonExecSites=false;
    pfs[0].parameters=new ParameterSet();
    results=executeSysProcPlanFragments(pfs,DEP_ioDataAggregator);
  }
 else {
    throw new VoltAbortException("Invalid Statistics selector.");
  }
  return results;
}
