{
  if (typeCode == other.typeCode) {
    return precision >= other.precision ? this : other;
  }
  if (other.isCharacterType()) {
    return other.getAggregateType(this);
  }
switch (other.typeCode) {
case Types.SQL_ALL_TYPES:
    return this;
case Types.SQL_BIT:
case Types.SQL_BIT_VARYING:
{
    long bytePrecision=(other.precision + 7) / 8;
    return precision >= bytePrecision ? this : getBinaryType(this.typeCode,bytePrecision);
  }
case Types.SQL_BINARY:
return precision >= other.precision ? this : getBinaryType(typeCode,other.precision);
case Types.SQL_VARBINARY:
if (typeCode == Types.SQL_BLOB) {
return precision >= other.precision ? this : getBinaryType(typeCode,other.precision);
}
 else {
return other.precision >= precision ? other : getBinaryType(other.typeCode,precision);
}
case Types.SQL_BLOB:
return other.precision >= precision ? other : getBinaryType(other.typeCode,precision);
default :
throw Error.error(ErrorCode.X_42562);
}
}
