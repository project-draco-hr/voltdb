{
  String procName=null;
  if (test.getClass() == LikeTest.class) {
    procName="SelectLike";
  }
 else   if (test instanceof NotLikeTest) {
    procName="NotLike";
  }
 else   if (test instanceof EscapeLikeTest) {
    return;
  }
  if (test.getClass() == LikeTest.class) {
    System.out.printf("SelectLike pattern \"%s\"\n",test.pattern);
    try {
      VoltTable result=client.callProcedure(procName,test.pattern).getResults()[0];
      assertEquals(String.format("\"%s\": bad row count:",test.pattern),test.matches,result.getRowCount());
      System.out.println(result.toString());
      assertFalse(String.format("Expected to crash on \"%s\", but didn't",test.pattern),test.crashes);
    }
 catch (    ProcCallException e) {
      System.out.printf("LIKE pattern \"%s\" failed\n",test.pattern);
      System.out.println(e.toString());
      assertTrue("This failure was unexpected",test.crashes);
      System.out.println("(This failure was expected)");
    }
  }
}
