{
switch (typeCode) {
case Types.SQL_INTERVAL_YEAR:
    return (int)precision + 1;
case Types.SQL_INTERVAL_YEAR_TO_MONTH:
  return (int)precision + 4;
case Types.SQL_INTERVAL_MONTH:
return (int)precision + 1;
case Types.SQL_INTERVAL_DAY:
return (int)precision + 1;
case Types.SQL_INTERVAL_DAY_TO_HOUR:
return (int)precision + 4;
case Types.SQL_INTERVAL_DAY_TO_MINUTE:
return (int)precision + 7;
case Types.SQL_INTERVAL_DAY_TO_SECOND:
return (int)precision + 10 + (scale == 0 ? 0 : scale + 1);
case Types.SQL_INTERVAL_HOUR:
return (int)precision + 1;
case Types.SQL_INTERVAL_HOUR_TO_MINUTE:
return (int)precision + 4;
case Types.SQL_INTERVAL_HOUR_TO_SECOND:
return (int)precision + 7 + (scale == 0 ? 0 : scale + 1);
case Types.SQL_INTERVAL_MINUTE:
return (int)precision + 1;
case Types.SQL_INTERVAL_MINUTE_TO_SECOND:
return (int)precision + 4 + (scale == 0 ? 0 : scale + 1);
case Types.SQL_INTERVAL_SECOND:
return (int)precision + 1 + (scale == 0 ? 0 : scale + 1);
default :
throw Error.runtimeError(ErrorCode.U_S0500,"IntervalType");
}
}
