{
  if (a == null || b == null) {
    return null;
  }
  if (a instanceof Number) {
    Object temp=a;
    a=b;
    b=temp;
  }
  if (divide && NumberType.isZero(b)) {
    throw Error.error(ErrorCode.X_22012);
  }
  NumberType factorType=NumberType.getNumberType(Types.SQL_DECIMAL,40,maxFractionPrecision);
  BigDecimal factor=(BigDecimal)factorType.convertToDefaultType(null,b);
  BigDecimal units;
  if (isYearMonth) {
    units=BigDecimal.valueOf(((IntervalMonthData)a).units);
  }
 else {
    long value=((IntervalSecondData)a).units * DTIType.nanoScaleFactors[0] + ((IntervalSecondData)a).nanos;
    units=BigDecimal.valueOf(value,9);
  }
  BigDecimal result=divide ? (BigDecimal)factorType.divide(units,factor) : (BigDecimal)factorType.multiply(units,factor);
  if (!NumberType.isInLongLimits(result)) {
    throw Error.error(ErrorCode.X_22015);
  }
  if (isYearMonth) {
    return new IntervalMonthData(result.longValue(),this);
  }
  int nanos=(int)NumberType.scaledDecimal(result,DTIType.maxFractionPrecision);
  return new IntervalSecondData(result.longValue(),nanos,this,true);
}
