{
  Map<MailboxType,List<MailboxNodeContent>> objects=new HashMap<VoltZK.MailboxType,List<MailboxNodeContent>>();
  List<String> mailboxes=m_zk.getChildren(VoltZK.mailboxes,false);
  Map<MailboxType,ChildrenCallback> callbacks=new HashMap<MailboxType,ChildrenCallback>();
  for (  String dir : mailboxes) {
    MailboxType type=MailboxType.valueOf(dir);
    ChildrenCallback cb=new ChildrenCallback();
    m_zk.getChildren(ZKUtil.joinZKPath(VoltZK.mailboxes,dir),m_watcher,cb,null);
    callbacks.put(type,cb);
  }
  for (  java.util.Map.Entry<MailboxType,ChildrenCallback> e : callbacks.entrySet()) {
    Object[] result=e.getValue().get();
    String dir=(String)result[1];
    @SuppressWarnings("unchecked") List<String> children=(List<String>)result[3];
    List<MailboxNodeContent> contents=readContents(dir,children);
    objects.put(e.getKey(),contents);
  }
  m_handler.handleMailboxUpdate(objects);
}
