{
  int c=charAt(currentPosition);
switch (c) {
case '"':
    charWriter.reset(charBuffer);
  scanStringPart('"');
if (token.isMalformed) {
  return;
}
token.tokenType=Tokens.X_DELIMITED_IDENTIFIER;
token.tokenString=charWriter.toString();
token.isDelimiter=true;
break;
case 'u':
case 'U':
if (charAt(currentPosition + 1) == '&') {
if (charAt(currentPosition + 1) == '"') {
currentPosition+=3;
boolean result=scanUnicodeIdentifier();
if (!result) {
return;
}
token.tokenType=Tokens.X_DELIMITED_IDENTIFIER;
token.isDelimiter=false;
break;
}
}
default :
boolean result=scanUndelimitedIdentifier();
if (!result) {
return;
}
token.tokenType=Tokens.X_IDENTIFIER;
token.isDelimiter=false;
}
c=charAt(currentPosition);
if (c == '.') {
currentPosition++;
c=charAt(currentPosition);
if (c == '*') {
currentPosition++;
shiftPrefixes();
token.tokenString=Tokens.T_ASTERISK;
token.tokenType=Tokens.ASTERISK;
}
 else {
shiftPrefixes();
scanIdentifierChain();
}
}
}
