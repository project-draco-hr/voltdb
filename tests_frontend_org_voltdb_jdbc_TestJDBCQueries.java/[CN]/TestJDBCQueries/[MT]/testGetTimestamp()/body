{
  Timestamp ts;
  PreparedStatement ps;
  ResultSet rs;
  PreparedStatement ins=conn.prepareStatement("insert into T_TIMESTAMP values (?, ?)");
  ts=Timestamp.valueOf("2014-03-23 05:12:08.156000");
  ins.setTimestamp(1,ts);
  ins.setString(2,"badinput");
  ins.executeUpdate();
  ps=conn.prepareStatement("select ID from T_TIMESTAMP where VALUE='badinput'");
  ps.executeQuery();
  rs=ps.getResultSet();
  while (rs.next()) {
    assertEquals(ts,rs.getTimestamp(1));
    assertEquals(new Date(ts.getTime()),rs.getDate(1));
    assertEquals(new Time(ts.getTime()),rs.getTime(1));
  }
  ts=new Timestamp(System.currentTimeMillis());
  ins.setTimestamp(1,ts);
  ins.setString(2,"timestamp");
  ins.executeUpdate();
  ps=conn.prepareStatement("select ID from T_TIMESTAMP where VALUE='timestamp'");
  ps.executeQuery();
  rs=ps.getResultSet();
  while (rs.next()) {
    assertEquals(ts,rs.getTimestamp(1));
    assertEquals(new Date(ts.getTime()),rs.getDate(1));
    assertEquals(new Time(ts.getTime()),rs.getTime(1));
  }
  ins.setTimestamp(1,null);
  ins.setString(2,"crashy");
  ins.executeUpdate();
  ps=conn.prepareStatement("select ID from T_TIMESTAMP where VALUE='crashy'");
  ps.executeQuery();
  rs=ps.getResultSet();
  while (rs.next()) {
    assertEquals(null,rs.getTimestamp(1));
    assertEquals(null,rs.getDate(1));
    assertEquals(null,rs.getTime(1));
  }
  ts=new Timestamp(-10100);
  ts.setNanos(800000000);
  System.out.println("BEFORE TIME: " + ts.toString());
  ins.setTimestamp(1,ts);
  ins.setString(2,"beforetime");
  ins.executeUpdate();
  ps=conn.prepareStatement("select ID from T_TIMESTAMP where VALUE='beforetime'");
  ps.executeQuery();
  rs=ps.getResultSet();
  while (rs.next()) {
    Timestamp ts1=rs.getTimestamp(1);
    assertEquals(ts,ts1);
  }
}
