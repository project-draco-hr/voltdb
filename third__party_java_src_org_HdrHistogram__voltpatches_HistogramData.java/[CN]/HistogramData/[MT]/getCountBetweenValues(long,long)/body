{
  long count=0;
  int lowBucketIndex=histogram.getBucketIndex(lowValue);
  int lowSubBucketIndex=histogram.getSubBucketIndex(lowValue,lowBucketIndex);
  long valueAtlowValue=valueFromIndex(lowBucketIndex,lowSubBucketIndex,histogram.unitMagnitude);
  int highBucketIndex=histogram.getBucketIndex(highValue);
  int highSubBucketIndex=histogram.getSubBucketIndex(highValue,highBucketIndex);
  long valueAtHighValue=valueFromIndex(highBucketIndex,highSubBucketIndex,histogram.unitMagnitude);
  if ((lowBucketIndex >= bucketCount) || (highBucketIndex >= bucketCount))   throw new ArrayIndexOutOfBoundsException();
  for (int i=lowBucketIndex; i <= highBucketIndex; i++) {
    int j=(i == 0) ? 0 : (subBucketCount / 2);
    for (; j < subBucketCount; j++) {
      long valueAtIndex=valueFromIndex(i,j,histogram.unitMagnitude);
      if (valueAtIndex > valueAtHighValue)       return count;
      if (valueAtIndex >= valueAtlowValue)       count+=histogram.getCountAt(i,j);
    }
  }
  return count;
}
