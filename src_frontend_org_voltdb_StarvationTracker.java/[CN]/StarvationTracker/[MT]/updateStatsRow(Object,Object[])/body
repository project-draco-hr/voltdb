{
  if (m_interval) {
    final long now=System.nanoTime();
    final long totalTime=now - m_lastStartTime;
    final long count=m_count - m_lastCount;
    final long totalStarvedTime=m_totalTime - m_lastTotalTime;
    final long sumOfSquares=m_sumOfSquares - m_lastSumOfSquares;
    m_lastStartTime=now;
    m_lastSumOfSquares=m_sumOfSquares;
    m_lastTotalTime=m_totalTime;
    m_lastCount=m_count;
    rowValues[columnNameToIndex.get("COUNT")]=count;
    rowValues[columnNameToIndex.get("PERCENT")]=totalStarvedTime / (totalTime / 100.0);
    long uSecs=totalStarvedTime / 1000;
    rowValues[columnNameToIndex.get("AVG")]=(totalStarvedTime / count) / 1000;
    rowValues[columnNameToIndex.get("MIN")]=m_lastMin;
    rowValues[columnNameToIndex.get("MAX")]=m_lastMax;
    m_lastMax=0;
    m_lastMin=Long.MAX_VALUE;
    rowValues[columnNameToIndex.get("STDDEV")]=Math.sqrt(sumOfSquares / count - uSecs * uSecs);
  }
 else {
    final long totalTime=System.nanoTime() - m_startTime;
    rowValues[columnNameToIndex.get("COUNT")]=m_count;
    rowValues[columnNameToIndex.get("PERCENT")]=m_totalTime / (totalTime / 100.0);
    long uSecs=(m_totalTime / m_count) / 1000;
    rowValues[columnNameToIndex.get("AVG")]=(m_totalTime / m_count) / 1000;
    rowValues[columnNameToIndex.get("MIN")]=m_min;
    rowValues[columnNameToIndex.get("MAX")]=m_max;
    rowValues[columnNameToIndex.get("STDDEV")]=Math.sqrt(m_sumOfSquares / m_count - uSecs * uSecs);
  }
  super.updateStatsRow(rowKey,rowValues);
}
