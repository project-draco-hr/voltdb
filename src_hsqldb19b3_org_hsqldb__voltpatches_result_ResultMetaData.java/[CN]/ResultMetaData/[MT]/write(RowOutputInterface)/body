{
  out.writeInt(type);
  out.writeInt(columnCount);
switch (type) {
case UPDATE_RESULT_METADATA:
case SIMPLE_RESULT_METADATA:
{
      for (int i=0; i < columnCount; i++) {
        out.writeType(columnTypes[i].typeCode);
      }
      return;
    }
case GENERATED_INDEX_METADATA:
{
    for (int i=0; i < columnCount; i++) {
      out.writeInt(colIndexes[i]);
    }
    return;
  }
case GENERATED_NAME_METADATA:
{
  for (int i=0; i < columnCount; i++) {
    out.writeString(columnLabels[i]);
  }
  return;
}
case PARAM_METADATA:
for (int i=0; i < columnCount; i++) {
writeDataType(out,columnTypes[i]);
out.writeString(columnLabels[i]);
out.writeByte(encodeParamColumnAttrs(i));
}
return;
case RESULT_METADATA:
{
out.writeInt(extendedColumnCount);
for (int i=0; i < extendedColumnCount; i++) {
if (columnTypes[i] == null) {
ColumnBase column=columns[i];
columnTypes[i]=column.getDataType();
}
writeDataType(out,columnTypes[i]);
}
for (int i=0; i < columnCount; i++) {
ColumnBase column=columns[i];
out.writeString(columnLabels[i]);
out.writeString(column.getCatalogNameString());
out.writeString(column.getSchemaNameString());
out.writeString(column.getTableNameString());
out.writeString(column.getNameString());
out.writeByte(encodeTableColumnAttrs(column));
}
if (columnCount != extendedColumnCount) {
for (int i=0; i < colIndexes.length; i++) {
out.writeInt(colIndexes[i]);
}
}
return;
}
default :
{
throw Error.runtimeError(ErrorCode.U_S0500,"");
}
}
}
