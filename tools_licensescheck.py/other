import os, sys, re
basepath = (os.path.dirname(os.path.dirname(os.path.realpath(__file__))) + os.sep)
ascommithook = False
prunelist = ('hsqldb19b3', 'hsqldb', 'jetty716', 'proj_gen', 'jni_md.h', 'jni.h', 'org_voltdb_jni_ExecutionEngine.h', 'org_voltcore_utils_DBBPool.h', 'org_voltcore_utils_DBBPool_DBBContainer.h', 'simplejson', 'projectfile', 'deploymentfile', 'xml', 'helloworld', 'jaxb', 'pmsg')
testLicenses = [(basepath + 'tools/approved_licenses/mit_x11_hstore_and_voltdb.txt'), (basepath + 'tools/approved_licenses/mit_x11_evanjones_and_voltdb.txt'), (basepath + 'tools/approved_licenses/mit_x11_michaelmccanna_and_voltdb.txt'), (basepath + 'tools/approved_licenses/mit_x11_voltdb.txt')]
srcLicenses = [(basepath + 'tools/approved_licenses/gpl3_hstore_and_voltdb.txt'), (basepath + 'tools/approved_licenses/gpl3_evanjones_and_voltdb.txt'), (basepath + 'tools/approved_licenses/gpl3_base64_and_voltdb.txt'), (basepath + 'tools/approved_licenses/gpl3_voltdb.txt')]
testLicensesPy = [(basepath + 'tools/approved_licenses/mit_x11_voltdb_python.txt')]
srcLicensesPy = [(basepath + 'tools/approved_licenses/gpl3_voltdb_python.txt')]
errcount = 0
errcount += processAllFiles((basepath + 'src'), tuple([readFile(f) for f in srcLicenses]), tuple([readFile(f) for f in srcLicensesPy]))
errcount += processAllFiles((basepath + 'tests'), tuple([readFile(f) for f in testLicenses]), tuple([readFile(f) for f in testLicensesPy]))
errcount += processAllFiles((basepath + 'examples'), tuple([readFile(f) for f in testLicenses]), tuple([readFile(f) for f in testLicensesPy]))
if (errcount == 0):
    print 'SUCCESS. Found 0 license text errors, 0 files containing tabs or trailing whitespace.'
else:
    print ('FAILURE. Found %d license text or whitespace errors.' % errcount)
if (not ascommithook):
    for arg in sys.argv[1:]:
        if (arg != '${voltpro}'):
            print ('Checking additional repository: ' + arg)
            proLicenses = [(('../' + arg) + '/tools/approved_licenses/license.txt')]
            proLicensesPy = [(('../' + arg) + '/tools/approved_licenses/license_python.txt')]
            errcount = 0
            errcount += processAllFiles((('../' + arg) + '/src/'), tuple([readFile(f) for f in proLicenses]), tuple([readFile(f) for f in proLicensesPy]))
            errcount += processAllFiles((('../' + arg) + '/tests/'), tuple([readFile(f) for f in proLicenses]), tuple([readFile(f) for f in proLicensesPy]))
            if (errcount == 0):
                print 'SUCCESS. Found 0 license text errors, 0 files containing tabs or trailing whitespace.'
            else:
                print ('FAILURE (%s). Found %d license text or whitespace errors.' % (arg, errcount))
sys.exit(errcount)
