{
  finalizeChildValueTypes();
  ExpressionType type=getExpressionType();
switch (type) {
case AGGREGATE_COUNT:
case AGGREGATE_COUNT_STAR:
case AGGREGATE_APPROX_COUNT_DISTINCT:
case AGGREGATE_HYPERLOGLOGS_TO_CARD:
case AGGREGATE_WINDOWED_RANK:
    m_valueType=VoltType.BIGINT;
  m_valueSize=m_valueType.getLengthInBytesForFixedTypes();
break;
case AGGREGATE_VALS_TO_HYPERLOGLOG:
m_valueType=VoltType.VARBINARY;
m_valueSize=65537;
break;
case AGGREGATE_AVG:
case AGGREGATE_MAX:
case AGGREGATE_MIN:
m_valueType=m_left.getValueType();
m_valueSize=m_left.getValueSize();
if (m_valueType == VoltType.FLOAT && type == ExpressionType.AGGREGATE_AVG) {
updateContentDeterminismMessage(FLOAT_AGG_ERR_MSG);
}
break;
case AGGREGATE_SUM:
if (m_left.getValueType() == VoltType.TINYINT || m_left.getValueType() == VoltType.SMALLINT || m_left.getValueType() == VoltType.INTEGER) {
m_valueType=VoltType.BIGINT;
m_valueSize=m_valueType.getLengthInBytesForFixedTypes();
}
 else {
m_valueType=m_left.getValueType();
m_valueSize=m_left.getValueSize();
}
if (m_valueType == VoltType.FLOAT) {
updateContentDeterminismMessage(FLOAT_AGG_ERR_MSG);
}
break;
default :
throw new RuntimeException("ERROR: Invalid Expression type '" + type + "' for Expression '"+ this+ "'");
}
}
