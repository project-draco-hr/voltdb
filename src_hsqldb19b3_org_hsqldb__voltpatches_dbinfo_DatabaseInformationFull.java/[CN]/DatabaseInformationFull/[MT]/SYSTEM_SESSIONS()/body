{
  Table t=sysTables[SYSTEM_SESSIONS];
  if (t == null) {
    t=createBlankTable(sysTableHsqlNames[SYSTEM_SESSIONS]);
    addColumn(t,"SESSION_ID",CARDINAL_NUMBER);
    addColumn(t,"CONNECTED",TIME_STAMP);
    addColumn(t,"USER_NAME",SQL_IDENTIFIER);
    addColumn(t,"IS_ADMIN",Type.SQL_BOOLEAN);
    addColumn(t,"AUTOCOMMIT",Type.SQL_BOOLEAN);
    addColumn(t,"READONLY",Type.SQL_BOOLEAN);
    addColumn(t,"MAXROWS",CARDINAL_NUMBER);
    addColumn(t,"LAST_IDENTITY",CARDINAL_NUMBER);
    addColumn(t,"TRANSACTION_SIZE",CARDINAL_NUMBER);
    addColumn(t,"SCHEMA",SQL_IDENTIFIER);
    HsqlName name=HsqlNameManager.newInfoSchemaObjectName(sysTableHsqlNames[SYSTEM_SESSIONS].name,false,SchemaObject.INDEX);
    t.createPrimaryKey(name,new int[]{0},true);
    return t;
  }
  final int isid=0;
  final int ict=1;
  final int iuname=2;
  final int iis_admin=3;
  final int iautocmt=4;
  final int ireadonly=5;
  final int imaxrows=6;
  final int ilast_id=7;
  final int it_size=8;
  final int it_schema=9;
  PersistentStore store=database.persistentStoreCollection.getStore(t);
  Session[] sessions;
  Session s;
  Object[] row;
  sessions=ns.listVisibleSessions(session);
  for (int i=0; i < sessions.length; i++) {
    s=sessions[i];
    row=t.getEmptyRowData();
    row[isid]=ValuePool.getLong(s.getId());
    row[ict]=new TimestampData(s.getConnectTime() / 1000);
    row[iuname]=s.getUsername();
    row[iis_admin]=ValuePool.getBoolean(s.isAdmin());
    row[iautocmt]=ValuePool.getBoolean(s.isAutoCommit());
    row[ireadonly]=ValuePool.getBoolean(s.isReadOnlyDefault());
    row[imaxrows]=ValuePool.getInt(s.getSQLMaxRows());
    row[ilast_id]=ValuePool.getLong((s.getLastIdentity()).longValue());
    row[it_size]=ValuePool.getInt(s.getTransactionSize());
    row[it_schema]=s.getCurrentSchemaHsqlName().name;
    t.insertSys(store,row);
  }
  return t;
}
