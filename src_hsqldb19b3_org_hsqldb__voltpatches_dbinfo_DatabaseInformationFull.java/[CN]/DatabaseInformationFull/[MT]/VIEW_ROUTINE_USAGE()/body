{
  Table t=sysTables[VIEW_ROUTINE_USAGE];
  if (t == null) {
    t=createBlankTable(sysTableHsqlNames[VIEW_ROUTINE_USAGE]);
    addColumn(t,"VIEW_CATALOG",SQL_IDENTIFIER);
    addColumn(t,"VIEW_SCHEMA",SQL_IDENTIFIER);
    addColumn(t,"VIEW_NAME",SQL_IDENTIFIER);
    addColumn(t,"SPECIFIC_CATALOG",SQL_IDENTIFIER);
    addColumn(t,"SPECIFIC_SCHEMA",SQL_IDENTIFIER);
    addColumn(t,"SPECIFIC_NAME",SQL_IDENTIFIER);
    HsqlName name=HsqlNameManager.newInfoSchemaObjectName(sysTableHsqlNames[VIEW_ROUTINE_USAGE].name,false,SchemaObject.INDEX);
    t.createPrimaryKey(name,new int[]{0,1,2,3,4,5},false);
    return t;
  }
  PersistentStore store=database.persistentStoreCollection.getStore(t);
  Iterator tables;
  Table table;
  Object[] row;
  final int view_catalog=0;
  final int view_schema=1;
  final int view_name=2;
  final int specific_catalog=3;
  final int specific_schema=4;
  final int specific_name=5;
  tables=database.schemaManager.databaseObjectIterator(SchemaObject.TABLE);
  while (tables.hasNext()) {
    table=(Table)tables.next();
    if (table.isView() && session.getGrantee().isFullyAccessibleByRole(table)) {
    }
 else {
      continue;
    }
    OrderedHashSet set=table.getReferences();
    for (int i=0; i < set.size(); i++) {
      HsqlName refName=(HsqlName)set.get(i);
      if (!session.getGrantee().isFullyAccessibleByRole(refName)) {
        continue;
      }
      row=t.getEmptyRowData();
      row[view_catalog]=database.getCatalogName().name;
      row[view_schema]=table.getSchemaName().name;
      row[view_name]=table.getName().name;
      row[specific_catalog]=database.getCatalogName().name;
      row[specific_schema]=refName.schema.name;
      row[specific_name]=refName.name;
      try {
        t.insertSys(store,row);
      }
 catch (      HsqlException e) {
      }
    }
  }
  return t;
}
