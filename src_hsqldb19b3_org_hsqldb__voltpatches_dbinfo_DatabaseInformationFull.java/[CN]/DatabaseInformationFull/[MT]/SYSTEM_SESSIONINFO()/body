{
  Table t=sysTables[SYSTEM_SESSIONINFO];
  if (t == null) {
    t=createBlankTable(sysTableHsqlNames[SYSTEM_SESSIONINFO]);
    addColumn(t,"KEY",CHARACTER_DATA);
    addColumn(t,"VALUE",CHARACTER_DATA);
    HsqlName name=HsqlNameManager.newInfoSchemaObjectName(sysTableHsqlNames[SYSTEM_SESSIONINFO].name,false,SchemaObject.INDEX);
    t.createPrimaryKey(name,new int[]{0},true);
    return t;
  }
  PersistentStore store=database.persistentStoreCollection.getStore(t);
  Object[] row;
  row=t.getEmptyRowData();
  row[0]="SESSION_ID";
  row[1]=String.valueOf(session.getId());
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="AUTOCOMMIT";
  row[1]=session.isAutoCommit() ? "TRUE" : "FALSE";
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="USER";
  row[1]=session.getUsername();
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="SESSION_READONLY";
  row[1]=session.isReadOnlyDefault() ? "TRUE" : "FALSE";
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="DATABASE_READONLY";
  row[1]=database.isReadOnly() ? "TRUE" : "FALSE";
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="MAXROWS";
  row[1]=String.valueOf(session.getSQLMaxRows());
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="DATABASE";
  row[1]=database.getURI();
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="IDENTITY";
  row[1]=String.valueOf(session.getLastIdentity());
  t.insertSys(store,row);
  row=t.getEmptyRowData();
  row[0]="SCHEMA";
  row[1]=String.valueOf(session.getSchemaName(null));
  t.insertSys(store,row);
  return t;
}
