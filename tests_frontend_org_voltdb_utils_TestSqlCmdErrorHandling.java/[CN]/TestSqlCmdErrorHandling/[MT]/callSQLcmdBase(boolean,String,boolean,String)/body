{
  String commandPath="bin/sqlcmd";
  File f=new File("ddl.sql");
  f.deleteOnExit();
  FileOutputStream fos=new FileOutputStream(f);
  fos.write(inputText.getBytes());
  fos.close();
  File out=new File("out.log");
  File error=new File("error.log");
  ProcessBuilder pb=null;
  if (fastModeDDL) {
    pb=new ProcessBuilder(commandPath,"--ddl-file=" + f.getPath());
  }
 else {
    pb=new ProcessBuilder(commandPath,"--stop-on-error=" + (stopOnError ? "true" : "false"));
    pb.redirectInput(f);
  }
  pb.redirectOutput(out);
  pb.redirectError(error);
  Process process=pb.start();
  final long timeout=60000;
  long starttime=System.currentTimeMillis();
  long elapsedtime=0;
  long pollcount=1;
  do {
    Thread.sleep(1000);
    try {
      int exitValue=process.exitValue();
      if (pollcount > 1) {
        elapsedtime=System.currentTimeMillis() - starttime;
        System.err.println("External process (" + commandPath + ") exited after being polled "+ pollcount+ " times over "+ elapsedtime+ "ms");
      }
      if (fastModeDDL) {
        String errorMsg=new Scanner(error).useDelimiter("\\Z").next();
        if (expectedErrorMsg != null && !expectedErrorMsg.equals("")) {
          assertTrue(errorMsg.contains(expectedErrorMsg));
        }
      }
      return exitValue;
    }
 catch (    Exception e) {
      elapsedtime=System.currentTimeMillis() - starttime;
      ++pollcount;
      System.err.println("External process (" + commandPath + ") has not yet exited after "+ elapsedtime+ "ms");
    }
  }
 while (elapsedtime < timeout);
  System.err.println("Standard output from timed out " + commandPath + ":");
  FileInputStream cmdOut=new FileInputStream(out);
  byte[] transfer=new byte[1000];
  while (cmdOut.read(transfer) != -1) {
    System.err.write(transfer);
  }
  cmdOut.close();
  System.err.println("Error outpout from timed out " + commandPath + ":");
  FileInputStream cmdErr=new FileInputStream(error);
  while (cmdErr.read(transfer) != -1) {
    System.err.write(transfer);
  }
  cmdErr.close();
  fail("External process (" + commandPath + ") timed out after "+ elapsedtime+ "ms on input:\n"+ inputText);
  return -1;
}
