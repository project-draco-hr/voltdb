{
  ZooKeeper zk=getClient(0);
  ZooKeeper zk2=getClient(0);
  MailboxTracker tracker=new MailboxTracker(zk,handler);
  MailboxPublisher publisher=new MailboxPublisher(VoltZK.mailboxes + "/1");
  VoltZK.createPersistentZKNodes(zk);
  publisher.registerMailbox(MailboxType.ExecutionSite,new MailboxNodeContent(1L,0));
  publisher.publish(zk2);
  publisher=new MailboxPublisher(VoltZK.mailboxes + "/2");
  publisher.registerMailbox(MailboxType.ExecutionSite,new MailboxNodeContent(2L,1));
  publisher.publish(zk);
  tracker.start();
  zk2.close();
  Thread.sleep(50);
  ArgumentCaptor<Map> captor=ArgumentCaptor.forClass(Map.class);
  verify(handler,times(2)).handleMailboxUpdate(captor.capture());
  List<Map> values=captor.getAllValues();
  Map<MailboxType,List<MailboxNodeContent>> value=values.get(1);
  assertTrue(value.containsKey(MailboxType.ExecutionSite));
  List<MailboxNodeContent> list=value.get(MailboxType.ExecutionSite);
  assertEquals(1,list.size());
  assertEquals(2,list.get(0).HSId.longValue());
  assertEquals(1,list.get(0).partitionId.intValue());
  tracker.shutdown();
}
