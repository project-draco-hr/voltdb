{
  VoltDB.replaceVoltDBInstanceForTest(m_mockVoltDB);
  Table table=m_mockVoltDB.getCatalogContext().database.getTables().get("TableName");
  ExportDataSource s=new ExportDataSource("database",table.getTypeName(),m_part,m_site,table.getRelativeIndex(),table.getColumns(),"/tmp");
  ByteBuffer foo=ByteBuffer.allocate(20);
  s.pushExportBuffer(23,0,foo.duplicate(),false);
  assertEquals(s.sizeInBytes(),20);
  s.pushExportBuffer(43,0,foo.duplicate(),false);
  assertEquals(s.sizeInBytes(),40);
  s.pushExportBuffer(63,0,foo.duplicate(),false);
  assertEquals(s.sizeInBytes(),72);
  s.pushExportBuffer(63,0,null,true);
  assertEquals(96,s.sizeInBytes());
  ExportProtoMessage m=new ExportProtoMessage(m_part,table.getRelativeIndex());
  RawProcessor.ExportInternalMessage pair=new RawProcessor.ExportInternalMessage(null,m);
  final AtomicReference<ExportInternalMessage> ref=new AtomicReference<ExportInternalMessage>();
  ExportManager.setInstanceForTest(new ExportManager(){
    @Override public void queueMessage(    ExportInternalMessage mbp){
      ref.set(mbp);
    }
  }
);
  m.poll();
  s.exportAction(pair);
  assertEquals(96,s.sizeInBytes());
  ExportInternalMessage mbp=ref.get();
  assertEquals(m_part,mbp.m_m.m_partitionId);
  assertEquals(table.getRelativeIndex(),mbp.m_m.m_tableId);
  assertEquals(43,mbp.m_m.m_offset);
  foo=ByteBuffer.allocate(24);
  foo.order(ByteOrder.LITTLE_ENDIAN);
  foo.putInt(20);
  foo.position(0);
  assertEquals(foo,mbp.m_m.m_data);
  m.ack(43);
  s.exportAction(pair);
  assertEquals(96,s.sizeInBytes());
  mbp=ref.get();
  assertEquals(m_part,mbp.m_m.m_partitionId);
  assertEquals(table.getRelativeIndex(),mbp.m_m.m_tableId);
  assertEquals(63,mbp.m_m.m_offset);
  assertEquals(foo,mbp.m_m.m_data);
  m.ack(63);
  s.exportAction(pair);
  assertEquals(32,s.sizeInBytes());
  mbp=ref.get();
  assertEquals(m_part,mbp.m_m.m_partitionId);
  assertEquals(table.getRelativeIndex(),mbp.m_m.m_tableId);
  assertEquals(83,mbp.m_m.m_offset);
  assertEquals(foo,mbp.m_m.m_data);
  m.ack(83);
  s.exportAction(pair);
  assertEquals(0,s.sizeInBytes());
  System.out.println(s.sizeInBytes());
  mbp=ref.get();
  assertEquals(m_part,mbp.m_m.m_partitionId);
  assertEquals(table.getRelativeIndex(),mbp.m_m.m_tableId);
  assertEquals(83,mbp.m_m.m_offset);
  assertEquals(0,mbp.m_m.m_data.getInt());
}
