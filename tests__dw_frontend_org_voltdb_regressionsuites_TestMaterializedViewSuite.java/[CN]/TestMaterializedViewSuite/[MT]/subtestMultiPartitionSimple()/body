{
  Client client=getClient();
  truncateBeforeTest(client);
  VoltTable[] results=null;
  results=client.callProcedure("AggAges",1).getResults();
  assertEquals(1,results.length);
  assertEquals(0,results[0].getRowCount());
  assert(results != null);
  results=client.callProcedure("AddPerson",1,1L,31L,1000.0,3,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",1,2L,2L,1000.0,3,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",2,3L,23L,1000.0,3,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",2,4L,23L,1000.0,3,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",2,5L,35L,1000.0,3,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",2,6L,35L,1000.0,3,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("UpdatePerson",1,2L,32L,1000.0,3).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("DeletePerson",2,6L,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AggAges",1).getResults();
  assert(results != null);
  assertEquals(1,results.length);
  VoltTable results2[]=client.callProcedure("AggAges",2).getResults();
  assert(results != null);
  assertEquals(1,results2.length);
  int totalRows=results[0].getRowCount() + results2[0].getRowCount();
  assertTrue((4 == totalRows) || (results[0].getRowCount() == 4) || (results2[0].getRowCount() == 4));
}
