{
  m_taskQueue.offer(task);
  if (!m_multipartBacklog.isEmpty()) {
    Iterator<Long> key_iter=m_multipartBacklog.navigableKeySet().iterator();
    Long headkey=key_iter.next();
    MpTransactionState txn=(MpTransactionState)m_multipartBacklog.get(headkey).getFirst().getTransactionState();
    FragmentTaskMessage dummy=new FragmentTaskMessage(0L,0L,0L,0L,false,false,false);
    FragmentResponseMessage poison=new FragmentResponseMessage(dummy,0L);
    SerializableException forcedTermination=new SerializableException("Transaction rolled back by fault recovery or shutdown.");
    poison.setStatus(FragmentResponseMessage.UNEXPECTED_ERROR,forcedTermination);
    txn.offerReceivedFragmentResponse(poison);
    while (key_iter.hasNext()) {
      Long key=key_iter.next();
      ((MpProcedureTask)m_multipartBacklog.get(key).getFirst()).updateMasters(masters);
    }
  }
}
