{
  int offered=0;
  if (!m_backlog.isEmpty()) {
    if (m_backlog.getFirst().getTransactionState().isDone()) {
      m_backlog.removeFirst();
      while (!m_backlog.isEmpty()) {
        TransactionTask next=m_backlog.getFirst();
        taskQueueOffer(next);
        ++offered;
        if (next.getTransactionState().isSinglePartition()) {
          m_backlog.removeFirst();
        }
 else {
          Iterator<TransactionTask> iter=m_backlog.iterator();
          iter.next();
          while (iter.hasNext()) {
            TransactionTask task=iter.next();
            if (task.getTxnId() == next.getTxnId()) {
              iter.remove();
              taskQueueOffer(task);
              ++offered;
            }
          }
          break;
        }
      }
    }
  }
  return offered;
}
