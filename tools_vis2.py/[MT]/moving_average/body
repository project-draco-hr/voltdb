def moving_average(x, n, type='simple'):
    "\n    compute an n period moving average.\n\n    type is 'simple' | 'exponential'\n\n    "
    if (len(x) < n):
        return ([], NaN, [], NaN)
    x = np.asarray(x)
    if (type == 'simple'):
        weights = np.ones(n)
    else:
        weights = np.exp(np.linspace((-1.0), 0.0, n))
    weights /= weights.sum()
    a = (([NaN] * (n - 1)) + list(np.convolve(x, weights, mode='valid')))
    ama = np.average(a[(len(a) - n):])
    s = ([NaN] * (n - 1))
    for d in range(0, ((len(x) - n) + 1)):
        s.append(np.std(x[d:(d + n)]))
    z = np.std(a[(n - 1):])
    return (a, ama, s, z)
