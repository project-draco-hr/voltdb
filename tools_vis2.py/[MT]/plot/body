def plot(title, xlabel, ylabel, filename, width, height, app, data, data_type):
    plot_data = dict()
    for run in data:
        if (run['branch'] not in plot_data):
            plot_data[run['branch']] = {data_type: [], }
        if (data_type == 'tps'):
            value = (run['tps'] / run['nodes'])
        else:
            value = run[data_type]
        datenum = matplotlib.dates.date2num(run['date'])
        plot_data[run['branch']][data_type].append((datenum, value))
    if (len(plot_data) == 0):
        return
    i = 0
    pl = Plot(title, xlabel, ylabel, filename, width, height, 1)
    for (b, bd) in plot_data.items():
        for (k, v) in bd.items():
            v = sorted(v, key=(lambda x: x[0]))
            u = zip(*v)
            pl.plot(u[0], u[1], COLORS(i), MARKERS[(i % len(MARKERS))], b)
            x = u[0][(-1)]
            y = u[1][(-1)]
            pl.ax.annotate(str(y), xy=(x, y), xycoords='data', xytext=(5, 0), textcoords='offset points', ha='left')
            (xmin, ymin) = [(u[0][i], y) for (i, y) in enumerate(u[1]) if (y == min(u[1]))][(-1)]
            (xmax, ymax) = [(u[0][i], y) for (i, y) in enumerate(u[1]) if (y == max(u[1]))][(-1)]
            if (ymax != ymin):
                if (xmax != x):
                    pl.ax.annotate(str(ymax), xy=(xmax, ymax), textcoords='offset points', ha='center', va='bottom', xytext=(0, 5))
                if (xmin != x):
                    pl.ax.annotate(str(ymin), xy=(xmin, ymin), textcoords='offset points', ha='center', va='top', xytext=(0, (-5)))
            i += 3
    pl.close()
