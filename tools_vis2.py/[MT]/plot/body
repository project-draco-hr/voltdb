def plot(title, xlabel, ylabel, filename, width, height, app, data, series):
    global mc
    plot_data = dict()
    for run in data:
        if (run['branch'] not in plot_data):
            plot_data[run['branch']] = {series: [], }
        if (series == 'tppn'):
            value = (run['tps'] / run['nodes'])
        else:
            value = run[series]
        datenum = matplotlib.dates.date2num(run['date'])
        plot_data[run['branch']][series].append((datenum, value))
    if (len(plot_data) == 0):
        return
    pl = Plot(title, xlabel, ylabel, filename, width, height, 1)
    for (b, bd) in plot_data.items():
        for (k, v) in bd.items():
            v = sorted(v, key=(lambda x: x[0]))
            u = zip(*v)
            if (b not in mc):
                mc[b] = (COLORS[(len(mc.keys()) % len(COLORS))], MARKERS[(len(mc.keys()) % len(MARKERS))])
            pl.plot(u[0], u[1], mc[b][0], mc[b][1], b)
            '\n            #pl.ax.annotate(b, xy=(u[0][-1],u[1][-1]), xycoords=\'data\',\n            #        xytext=(0, 0), textcoords=\'offset points\') #, arrowprops=dict(arrowstyle="->"))\n            x = u[0][-1]\n            y = u[1][-1]\n            pl.ax.annotate(str(y), xy=(x,y), xycoords=\'data\', xytext=(5,0),\n                textcoords=\'offset points\', ha=\'left\')\n            xmin, ymin = [(u[0][i],y) for i,y in enumerate(u[1]) if y == min(u[1])][-1]\n            xmax, ymax= [(u[0][i],y) for i,y in enumerate(u[1]) if y == max(u[1])][-1]\n            if ymax != ymin:\n                if xmax != x:\n                    pl.ax.annotate(str(ymax), xy=(xmax,ymax),\n                        textcoords=\'offset points\', ha=\'center\', va=\'bottom\', xytext=(0,5))\n                if xmin != x:\n                    pl.ax.annotate(str(ymin), xy=(xmin,ymin),\n                        textcoords=\'offset points\', ha=\'center\', va=\'top\', xytext=(0,-5))\n            '
    pl.close()
