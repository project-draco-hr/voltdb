@classmethod
def generate_statements_from_list(cls, stmt, generators, field_map):
    'A utility that generates multiple statement strings by substituting a set of values for each\n           specially marked field in the input string, resulting in all the possible combinations.\n           Each generator is responsible for recognizing its unique field mark and providing its set of\n           substitutions.\n        '
    if generators:
        for generated_stmt in generators[0].generate_statements(stmt):
            for complete_statement in BaseGenerator.generate_statements_from_list(generated_stmt, generators[1:], field_map):
                yield complete_statement
    else:
        yield stmt
