def prepare_operands(self, statement):
    "mark with a unique field name a definition with the generator's token and any (like-labeled) occurrences\n        "
    definition = self._expr_builder(self.__token)
    match = definition.search(statement)
    if (not match):
        return None
    self.__label = match.group(self.LABEL_PATTERN_GROUP)
    self.__fn = self.fn_gen.next()
    stmt = definition.sub(self.__fn, statement, 1)
    self.prepare_params(match.groupdict())
    if self.__label:
        recurrence = self._recurrence_builder(self.__token, self.__label)
        stmt = recurrence.sub(self.__fn, stmt, 0)
    return stmt
