def generate(self, summarize_successes=False):
    for s in self.__statements:
        results = 0
        for i in self.__generate_statement(s):
            results += 1
            yield i
            if (self.__subversion_generation and re.match('(?i)\\s*SELECT', i)):
                results += 1
                yield (('SELECT * FROM (' + i) + ') subquery')
            if i.upper().startswith('INSERT'):
                self.__num_insert_statements += 1
        if (results == 0):
            print ('Template "%s" failed to yield SQL statements' % s)
        if summarize_successes:
            print ('%d SQL statements generated by template:  "%s"' % (results, s))
        self.__min_statements_per_pattern = min(self.__min_statements_per_pattern, results)
        self.__max_statements_per_pattern = max(self.__max_statements_per_pattern, results)
