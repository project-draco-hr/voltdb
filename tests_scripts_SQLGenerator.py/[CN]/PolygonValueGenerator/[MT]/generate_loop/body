def generate_loop(self, longmin, longmax, latmin, latmax, clockwise=False):
    'Generates a loop, which can be used as the exterior ring or an interior\n           ring (i.e., a hole) of a polygon, with between 4 and 8 vertices, at\n           random locations in between the specified minimum and maximum longitude\n           and latitude values; clockwise=True should be used if and only if\n           this is an interior ring.\n        '
    octants = [[1, 0], [2, 0], [2, 1], [2, 2], [1, 2], [0, 2], [0, 1]]
    if clockwise:
        octants.reverse()
    long_delta = ((longmax - longmin) / 3.0)
    lat_delta = ((latmax - latmin) / 3.0)
    first_and_last_vertex = self.generate_vertex(longmin, (longmin + long_delta), latmin, (latmin + lat_delta))
    loop = (('(' + first_and_last_vertex) + ', ')
    for oct in range(len(octants)):
        (i, j) = (octants[oct][0], octants[oct][1])
        if ((i == 1) or ((j == 1) and (random.randint(0, 100) < 50))):
            continue
        loop += (self.generate_vertex((longmin + (i * long_delta)), (longmin + ((i + 1) * long_delta)), (latmin + (j * lat_delta)), (latmin + ((j + 1) * lat_delta))) + ', ')
    return ((loop + first_and_last_vertex) + ')')
