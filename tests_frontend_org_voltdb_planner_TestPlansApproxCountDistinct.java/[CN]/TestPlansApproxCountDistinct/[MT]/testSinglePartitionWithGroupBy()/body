{
  List<AbstractPlanNode> pn=compileToFragments("SELECT id, approx_count_distinct(age) " + "from T1 " + "group by id");
  assertEquals(1,pn.size());
  assertFragContainsAggWithFunctions(pn.get(COORDINATOR_FRAG),AGGREGATE_APPROX_COUNT_DISTINCT);
  pn=compileToFragments("select age, approx_count_distinct(points), max(username) " + "from t2 " + "group by age");
  assertEquals(1,pn.size());
  assertFragContainsAggWithFunctions(pn.get(COORDINATOR_FRAG),AGGREGATE_APPROX_COUNT_DISTINCT,AGGREGATE_MAX);
  pn=compileToFragments("select username, approx_count_distinct(age), avg(distinct points) " + "from t2 " + "group by username");
  assertEquals(1,pn.size());
  assertFragContainsAggWithFunctions(pn.get(COORDINATOR_FRAG),AGGREGATE_APPROX_COUNT_DISTINCT,AGGREGATE_AVG);
}
