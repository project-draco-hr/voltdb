{
  if (m_recovering) {
    m_recoveryLog.fatal("Aborting recovery due to a remote node failure. Retry again.");
    VoltDB.crashVoltDB();
  }
  Set<NodeFailureFault> failures=faultMessage.nodeFaults;
  Set<Integer> failedSiteIds=getFaultingSites(faultMessage);
  m_knownFailedSites.addAll(failedSiteIds);
  m_siteIds.removeAll(m_knownFailedSites);
  HashMap<Integer,Integer> expectedResponseCounts=new HashMap<Integer,Integer>();
  int expectedResponses=discoverGlobalFaultData_send(expectedResponseCounts);
  HashMap<Integer,Long> initiatorSafeInitPoint=discoverGlobalFaultData_rcv(expectedResponses,expectedResponseCounts);
  if (initiatorSafeInitPoint == null) {
    return;
  }
  HashSet<Integer> newFailedSiteIds=new HashSet<Integer>(failedSiteIds);
  newFailedSiteIds.removeAll(m_handledFailedSites);
  handleSiteFaults(newFailedSiteIds,initiatorSafeInitPoint);
  m_handledFailedSites.addAll(failedSiteIds);
  for (  NodeFailureFault fault : failures) {
    if (newFailedSiteIds.containsAll(fault.getFailedNonExecSites())) {
      m_faultDistributor.reportFaultHandled(m_faultHandler,fault);
    }
  }
}
