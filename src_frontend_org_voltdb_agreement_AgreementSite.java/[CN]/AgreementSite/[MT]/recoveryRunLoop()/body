{
  long lastHeartbeatTime=System.currentTimeMillis();
  while (m_recovering && m_shouldContinue) {
    if (m_recoveryStage == RecoveryStage.WAITING_FOR_SAFETY) {
      Long safeTxnId=m_txnQueue.safeToRecover();
      if (safeTxnId != null) {
        m_recoveryStage=RecoveryStage.SENT_PROPOSAL;
        m_recoverBeforeTxn=safeTxnId;
        int sourceSiteId=0;
        for (        Integer siteId : m_siteIds) {
          if (siteId != m_siteId) {
            sourceSiteId=siteId;
            break;
          }
        }
        ByteBuffer buf=ByteBuffer.allocate(2048);
        BBContainer container=DBBPool.wrapBB(buf);
        RecoveryMessage recoveryMessage=new RecoveryMessage(container,m_siteId,safeTxnId,new byte[4],-1);
        m_mailbox.send(sourceSiteId,VoltDB.AGREEMENT_MAILBOX_ID,recoveryMessage);
      }
    }
    VoltMessage message=m_mailbox.recvBlocking(5);
    if (message != null) {
      processMessage(message);
    }
    final long now=System.currentTimeMillis();
    if (now - lastHeartbeatTime > 5) {
      lastHeartbeatTime=now;
      sendHeartbeats();
    }
    if (m_recoverBeforeTxn == null) {
      continue;
    }
    if (m_txnQueue.peek() != null && m_txnQueue.peek().txnId < m_recoverBeforeTxn.longValue()) {
      m_transactionsById.remove(m_txnQueue.poll().txnId);
    }
 else     if (m_recoveryStage == RecoveryStage.RECEIVED_SNAPSHOT) {
      processZKSnapshot();
      return;
    }
  }
}
