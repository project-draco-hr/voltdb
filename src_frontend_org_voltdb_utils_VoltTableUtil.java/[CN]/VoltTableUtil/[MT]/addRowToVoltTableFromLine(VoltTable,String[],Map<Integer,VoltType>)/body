{
  if (fields == null || fields.length <= 0) {
    return false;
  }
  Object row_args[]=new Object[fields.length];
  int parsedCnt=0;
  for (int i=0; i < fields.length; i++) {
    final VoltType type=columnTypes.get(i);
    if (type == VoltType.BIGINT || type == VoltType.INTEGER || type == VoltType.SMALLINT || type == VoltType.TINYINT) {
      if (fields[i] != null) {
        NumberFormat nf=NumberFormat.getInstance();
        Number n=nf.parse(fields[i]);
        row_args[i]=n;
      }
 else {
        row_args[i]=0L;
      }
      parsedCnt++;
    }
 else     if (type == VoltType.FLOAT) {
      if (fields[i] != null) {
        Double l=Double.parseDouble(fields[i]);
        row_args[i]=l;
      }
 else {
        row_args[i]=0.0;
      }
      parsedCnt++;
    }
 else     if (type == VoltType.DECIMAL) {
      if (fields[i] != null) {
        row_args[i]=VoltDecimalHelper.deserializeBigDecimalFromString(fields[i]);
      }
 else {
        row_args[i]=new BigDecimal(0.0);
      }
      parsedCnt++;
    }
 else     if (type == VoltType.STRING) {
      if (fields[i] != null) {
        row_args[i]=fields[i];
      }
 else {
        row_args[i]="";
      }
      parsedCnt++;
    }
 else     if (type == VoltType.TIMESTAMP) {
      if (fields[i] != null) {
        TimestampType ts=new TimestampType(fields[i]);
        row_args[i]=ts;
        parsedCnt++;
      }
    }
 else     if (type == VoltType.VARBINARY) {
      if (fields[i] != null) {
        row_args[i]=fields[i].getBytes();
        parsedCnt++;
      }
    }
  }
  if (parsedCnt == fields.length) {
    table.addRow(row_args);
    return true;
  }
  return false;
}
