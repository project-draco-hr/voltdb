{
  if (!isOpenResponse()) {
    return null;
  }
  ArrayList<AdvertisedDataSource> sources=new ArrayList<AdvertisedDataSource>();
  ArrayList<String> nodes=new ArrayList<String>();
  Pair<ArrayList<AdvertisedDataSource>,ArrayList<String>> retval=new Pair<ArrayList<AdvertisedDataSource>,ArrayList<String>>(sources,nodes);
  FastDeserializer fds=new FastDeserializer(m_data);
  int count=m_data.getInt();
  for (int i=0; i < count; i++) {
    ArrayList<VoltType> types=new ArrayList<VoltType>();
    ArrayList<String> names=new ArrayList<String>();
    long generation=fds.readLong();
    int p_id=fds.readInt();
    String t_signature=fds.readString();
    String t_name=fds.readString();
    long sysStartTimestamp=fds.readLong();
    int colcnt=fds.readInt();
    for (int jj=0; jj < colcnt; jj++) {
      names.add(fds.readString());
      types.add(VoltType.get((byte)fds.readInt()));
    }
    sources.add(new AdvertisedDataSource(p_id,t_signature,t_name,sysStartTimestamp,generation,names,types));
  }
  count=m_data.getInt();
  for (int i=0; i < count; i++) {
    String hostname=fds.readString();
    nodes.add(hostname);
  }
  return retval;
}
