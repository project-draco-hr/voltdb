{
  final String ddlCreateTableAndView="create table AllTypes (" + "clm_integer integer not null, " + "clm_tinyint tinyint default 0, "+ "clm_smallint smallint default 0, "+ "clm_bigint bigint default 0, "+ "clm_string varchar(20) default null, "+ "clm_decimal decimal default null, "+ "clm_float float default null, "+ "clm_timestamp timestamp default null, "+ "clm_point geography_point default null, "+ "clm_geography geography default null, "+ "PRIMARY KEY(clm_integer) "+ ");\n"+ "create view IntFamily (clm_tinyint, clm_smallint, clm_bigint, num) as \n"+ "  select clm_tinyint, clm_smallint, clm_bigint, count(*)"+ "   from ALLTypes"+ "   group by clm_tinyint, clm_smallint, clm_bigint;";
  String reportCreateTableAndView=compileAndGenerateCatalogReport(ddlCreateTableAndView);
  String targetDDL="CREATE VIEW INTFAMILY (\n" + "   CLM_TINYINT,\n" + "   CLM_SMALLINT,\n"+ "   CLM_BIGINT,\n"+ "   NUM\n"+ ") AS \n"+ "   SELECT CLM_TINYINT,CLM_SMALLINT,CLM_BIGINT,COUNT(*) FROM ALLTYPES GROUP BY CLM_TINYINT,CLM_SMALLINT,CLM_BIGINT;";
  assertTrue(reportCreateTableAndView.contains(targetDDL));
}
