{
  Client client=getClient();
  boolean success;
  ClientResponse cr=null;
  try {
    cr=client.callProcedure(insertProcName,insertValue);
    success=true;
  }
 catch (  Exception ex) {
    success=false;
  }
  assertEquals(getRoundingString("Insert Statement Compilation Failure"),expectSuccess,success);
  if (!success) {
    return;
  }
  assertEquals(getRoundingString("Insert Statement Execution Failure"),ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure(fetchProcName);
  assertEquals(getRoundingString("Fetch Data Failure"),ClientResponse.SUCCESS,cr.getStatus());
  VoltTable[] tbls=cr.getResults();
  assertEquals(getRoundingString("Number of results incorrect."),1,tbls.length);
  VoltTable tbl=tbls[0];
  int idx=0;
  while (tbl.advanceRow()) {
    BigDecimal actual=tbl.getDecimalAsBigDecimal(idx);
    assertNotSame(getRoundingString("Null Table Failure"),null,expected);
    assertEquals(getRoundingString("Decimal scale failure"),expected,actual);
  }
  if (expected == null) {
    assertEquals(getRoundingString("Empty Results Expected."),0,idx);
  }
  cr=client.callProcedure("@AdHoc",cleanupProcedure);
  assertEquals(getRoundingString(null),ClientResponse.SUCCESS,cr.getStatus());
}
