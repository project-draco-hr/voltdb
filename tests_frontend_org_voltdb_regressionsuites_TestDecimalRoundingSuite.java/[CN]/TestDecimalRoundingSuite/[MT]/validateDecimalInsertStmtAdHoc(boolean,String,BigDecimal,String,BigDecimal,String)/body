{
  Client client=getClient();
  ClientResponse cr=null;
  boolean success;
  try {
    cr=client.callProcedure("@AdHoc",insertStmt,insertValue);
    success=true;
  }
 catch (  Exception ex) {
    success=false;
  }
  assertEquals(getRoundingString("Insert statement Invocation Failure"),expectSuccess,success);
  if (!success) {
    return;
  }
  assertEquals(getRoundingString("Insert Statement Failure."),ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("@AdHoc",fetchStmt);
  assertEquals(getRoundingString("Fetch Data Failure"),ClientResponse.SUCCESS,cr.getStatus());
  VoltTable[] tbls=cr.getResults();
  assertEquals(getRoundingString("Volt Table Size Failure"),1,tbls.length);
  int idx=0;
  VoltTable tbl=tbls[0];
  while (tbl.advanceRow()) {
    BigDecimal actual=tbl.getDecimalAsBigDecimal(0);
    assertNotSame(getRoundingString("Unexpected null table."),null,expected);
    assertEquals(getRoundingString("Decimal Scale Failure"),expected,actual);
  }
  if (expected == null) {
    assertEquals(getRoundingString("Null expected:"),0,idx);
  }
  cr=client.callProcedure("@AdHoc",cleanupStmt);
  assertEquals(getRoundingString("Cleanup Statement Failure"),ClientResponse.SUCCESS,cr.getStatus());
}
