{
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestDecimalRoundingSuite.class);
  VoltProjectBuilder project=new VoltProjectBuilder();
  final String literalSchema="CREATE TABLE P1 ( id integer );" + "CREATE TABLE DECIMALTABLE ( " + "dec decimal"+ ");"+ "CREATE PROCEDURE INSERT_DECIMAL AS "+ "INSERT INTO DECIMALTABLE VALUES ?;"+ "CREATE PROCEDURE FETCH_DECIMAL AS "+ "SELECT DEC FROM DECIMALTABLE;"+ "CREATE PROCEDURE TRUNCATE_DECIMAL AS "+ "TRUNCATE TABLE DECIMALTABLE;"+ "";
  try {
    project.addLiteralSchema(literalSchema);
  }
 catch (  IOException e) {
    assertFalse(true);
  }
  int idx=0;
  addConfig(idx++,builder,project,null);
  addConfig(idx++,builder,project,makePropertiesMap(m_roundingEnabledProperty,"true"));
  addConfig(idx++,builder,project,makePropertiesMap(m_roundingEnabledProperty,"true",m_roundingModeProperty,"HALF_UP"));
  addConfig(idx++,builder,project,makePropertiesMap(m_roundingEnabledProperty,"true",m_roundingModeProperty,"HALF_DOWN"));
  addConfig(idx++,builder,project,makePropertiesMap(m_roundingEnabledProperty,"true",m_roundingModeProperty,"CEILING"));
  addConfig(idx++,builder,project,makePropertiesMap(m_roundingEnabledProperty,"true",m_roundingModeProperty,"FLOOR"));
  addConfig(idx++,builder,project,makePropertiesMap(m_roundingEnabledProperty,"true",m_roundingModeProperty,"UP"));
  addConfig(idx++,builder,project,makePropertiesMap(m_roundingEnabledProperty,"true",m_roundingModeProperty,"DOWN"));
  return builder;
}
