{
  long timeFiveMinutesAgoMillis=called_time_milliseconds - (1000l * 60l * 5l);
  VoltTable vtMoved=new VoltTable(new VoltTable.ColumnInfo("userId",VoltType.BIGINT),new VoltTable.ColumnInfo("field1",VoltType.BIGINT),new VoltTable.ColumnInfo("field2",VoltType.BIGINT),new VoltTable.ColumnInfo("field3",VoltType.BIGINT),new VoltTable.ColumnInfo("visitTime",VoltType.BIGINT));
  Object rowMoved[]=new Object[5];
  voltQueueSQL(getUnArchived,timeFiveMinutesAgoMillis,numMoves);
  VoltTable results1[]=voltExecuteSQL();
  int rowCount=results1[0].getRowCount();
  int sqlStatements=0;
  if (rowCount > 0) {
    for (int ii=0; ii < rowCount; ii++) {
      VoltTableRow row=results1[0].fetchRow(ii);
      long userId=row.getLong(0);
      long field1=row.getLong(1);
      long field2=row.getLong(2);
      long field3=row.getLong(3);
      long visitTimeLong=row.getLong(4);
      voltQueueSQL(insertArchived,userId,field1,field2,field3,visitTimeLong);
      voltQueueSQL(deleteUnArchived,userId,field1,field2,field3,visitTimeLong);
      sqlStatements+=2;
      if (sqlStatements > 900) {
        VoltTable results2[]=voltExecuteSQL();
        sqlStatements=0;
      }
      rowMoved[0]=userId;
      rowMoved[1]=field1;
      rowMoved[2]=field2;
      rowMoved[3]=field3;
      rowMoved[4]=visitTimeLong;
      vtMoved.addRow(rowMoved);
    }
    if (sqlStatements > 0) {
      VoltTable results3[]=voltExecuteSQL(true);
    }
  }
  VoltTable vtMetric=new VoltTable(new VoltTable.ColumnInfo("called_time_milliseconds",VoltType.BIGINT),new VoltTable.ColumnInfo("rows_moved",VoltType.BIGINT));
  Object rowMetric[]=new Object[1];
  rowMetric[0]=called_time_milliseconds;
  vtMetric.addRow(rowMetric);
  final VoltTable[] vtReturn={vtMoved,vtMetric};
  return vtReturn;
}
