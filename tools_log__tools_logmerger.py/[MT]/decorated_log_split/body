def decorated_log_split(f, offset, keyfunc, fnamedict={}):
    ' Generator that splits on timestamps. This returns\n    (millis-since-epoch, {"datetime":<original timestamp> ,\n                          "newdatetime":<offset timestamp>,\n                          "message": <log message>\n                          "filename":<filename>})\n    '
    ts_date = '\\d{0,4}-?\\d{2}-\\d{2}'
    ts_mmm = '\\w{3}'
    ts_day = '\\d{1,2}'
    ts_time = '\\d{2}:\\d{2}:\\d{2},?\\d{0,3}'
    ts_format = ((ts_date + '\\s+') + ts_time)
    ts_format_syslog = ((((ts_mmm + '\\s+') + ts_day) + '\\s+') + ts_time)
    log_re = re.compile(('(?P<datetime>%s|%s)\n                             \\s+\n                             (?P<message>.*)\n                             ' % (ts_format, ts_format_syslog)), re.VERBOSE)
    new_epoch_ms = None
    if (f.name in fnamedict):
        fname = fnamedict[f.name]
    elif hasattr(f, 'name'):
        fname = os.path.basename(f.name)
    else:
        fname = ''
    currentdict = {}
    for line in f:
        m = log_re.match(line)
        if m:
            if currentdict:
                yield (keyfunc(currentdict['newdatetime']), currentdict)
            currentdict = copy.deepcopy(m.groupdict())
            currentdict['filename'] = fname
            if re.match(ts_format_syslog, currentdict['datetime']):
                ts = time.strptime(((str(datetime.now().year) + ' ') + currentdict['datetime']), '%Y %b %d %H:%M:%S')
                currentdict['datetime'] = time.strftime('%Y-%m-%d %H:%M:%S', ts)
            if (currentdict['datetime'][4] != '-'):
                currentdict['datetime'] = ((str(datetime.now().year) + '-') + currentdict['datetime'])
            new_epoch_ms = (keyfunc(currentdict['datetime']) + offset)
            currentdict['newdatetime'] = time_str = ('%s,%03d' % (time.strftime('%Y-%m-%d %H:%M:%S', time.localtime((new_epoch_ms / 1000))), (new_epoch_ms % 1000)))
        elif ('message' in currentdict):
            currentdict['message'] += line
    if (not new_epoch_ms):
        sys.stderr.write(('Entry in %s had no valid timestamp' % f.name))
        sys.stderr.write(('    %s' % line))
    yield (new_epoch_ms, currentdict)
