{
  final MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestCSVFormatterSuite.class);
  Map<String,String> additionalEnv=new HashMap<String,String>();
  String bundleLocation=System.getProperty("user.dir") + "/bundles";
  System.out.println("Bundle location is: " + bundleLocation);
  additionalEnv.put("voltdbbundlelocation",bundleLocation);
  VoltProjectBuilder project=new VoltProjectBuilder();
  project.setUseDDLSchema(true);
  project.addSchema(TestSQLTypesSuite.class.getResource("sqltypessuite-import-ddl.sql"));
  project.addPartitionInfo("importCSVTable","clm_integer");
  Properties props=buildProperties("port","7001","decode","true","procedure","importCSVTable.insert");
  Properties formatConfig=buildProperties("nullstring","test","separator",",","blank","empty","escape","\\","quotechar","\"","nowhitespace","true");
  project.addImport(true,"custom","csv","socketstream.jar",props,formatConfig);
  props=buildProperties("port","7002","decode","true","procedure","importCSVTable.insert");
  formatConfig=buildProperties("nullstring","test","separator",",","blank","error","escape","\\","quotechar","\"","strictquotes","true","trimunquoted","false");
  project.addImport(true,"custom","csv","socketstream.jar",props,formatConfig);
  project.addPartitionInfo("importCSVTable","clm_integer");
  LocalCluster config=new LocalCluster("import-ddl-cluster-rep.jar",4,1,0,BackendTarget.NATIVE_EE_JNI,LocalCluster.FailureState.ALL_RUNNING,true,false,additionalEnv);
  config.setHasLocalServer(false);
  boolean compile=config.compile(project);
  assertTrue(compile);
  builder.addServerConfig(config);
  return builder;
}
