{
  boolean hi=true;
  byte b=0;
  reset(s);
  resetState();
  byteOutputStream.reset(byteBuffer);
  for (; currentPosition < limit; currentPosition++, hi=!hi) {
    int c=sqlString.charAt(currentPosition);
    c=getHexValue(c);
    if (c == -1) {
      token.tokenType=Tokens.X_MALFORMED_BINARY_STRING;
      token.isMalformed=true;
      break;
    }
    if (hi) {
      b=(byte)(c << 4);
    }
 else {
      b+=(byte)c;
      byteOutputStream.writeByte(b);
    }
  }
  if (!hi) {
    token.tokenType=Tokens.X_MALFORMED_BINARY_STRING;
    token.isMalformed=true;
  }
  if (token.isMalformed) {
    throw Error.error(ErrorCode.X_22018);
  }
  BinaryData data=new BinaryData(byteOutputStream.toByteArray(),false);
  byteOutputStream.reset(byteBuffer);
  return data;
}
