{
  boolean complete=false;
  boolean hi=true;
  byte b=0;
  currentPosition++;
  for (; currentPosition < limit; currentPosition++) {
    int c=sqlString.charAt(currentPosition);
    if (c == ' ') {
      continue;
    }
    if (c == '\'') {
      complete=true;
      currentPosition++;
      break;
    }
    c=getHexValue(c);
    if (c == -1) {
      token.tokenType=Tokens.X_MALFORMED_BINARY_STRING;
      token.isMalformed=true;
      return;
    }
    if (hi) {
      b=(byte)(c << 4);
      hi=false;
    }
 else {
      b+=(byte)c;
      byteOutputStream.writeByte(b);
      hi=true;
    }
  }
  if (!hi) {
    token.tokenType=Tokens.X_MALFORMED_BINARY_STRING;
    token.isMalformed=true;
    return;
  }
  if (!complete) {
    token.tokenType=Tokens.X_MALFORMED_BINARY_STRING;
    token.isMalformed=true;
    return;
  }
}
