{
  String msg;
  try {
    if (m_client == null) {
      m_client=ClientFactory.createClient();
      m_client.createConnection("localhost",null,null);
    }
    String procName=parms.getProperty("Procedure");
    String params=parms.getProperty("Parameters");
    SyncCallback scb=new SyncCallback();
    boolean success;
    if (params != null) {
      ParameterSet paramSet=ParameterSet.fromJSONString(params);
      success=m_client.callProcedure(scb,procName,paramSet.toArray());
    }
 else {
      success=m_client.callProcedure(scb,procName);
    }
    if (!success) {
      throw new Exception("Server is not accepting work at this time.");
    }
    scb.waitForResponse();
    ClientResponseImpl rimpl=(ClientResponseImpl)scb.getResponse();
    msg=rimpl.toJSONString();
  }
 catch (  Exception e) {
    msg=e.getMessage();
    ClientResponseImpl rimpl=new ClientResponseImpl(ClientResponse.UNEXPECTED_FAILURE,new VoltTable[0],msg);
    e.printStackTrace();
    m_client=null;
    msg=rimpl.toJSONString();
  }
  return msg;
}
