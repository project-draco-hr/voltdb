{
  Client client=getClient();
  truncateBeforeTest(client);
  VoltTable[] results=null;
  assertAggNoGroupBy(client,"MATPEOPLE_COUNT","0");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT","0");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_SUM","0","null");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_MIN_MAX","0","null","null");
  results=client.callProcedure("AddPerson",1,1L,31L,1000.0,3,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",1,2L,31L,900.0,5,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",1,3L,31L,900.0,1,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",1,4L,31L,2500.0,5,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  results=client.callProcedure("AddPerson",1,5L,31L,null,null,NORMALLY).getResults();
  assertEquals(1,results.length);
  assertEquals(1L,results[0].asScalarLong());
  assertAggNoGroupBy(client,"MATPEOPLE_COUNT","5");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT","2");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_SUM","2","4");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_MIN_MAX","3","900.0","5");
  results=client.callProcedure("DeletePerson",1,2L,NORMALLY).getResults();
  assertAggNoGroupBy(client,"MATPEOPLE_COUNT","4");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT","1");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_SUM","2","4");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_MIN_MAX","2","1000.0","5");
  results=client.callProcedure("UpdatePerson",1,3L,31L,200,9).getResults();
  assertAggNoGroupBy(client,"MATPEOPLE_COUNT","4");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT","2");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_SUM","1","3");
  assertAggNoGroupBy(client,"MATPEOPLE_CONDITIONAL_COUNT_MIN_MAX","3","200.0","9");
}
