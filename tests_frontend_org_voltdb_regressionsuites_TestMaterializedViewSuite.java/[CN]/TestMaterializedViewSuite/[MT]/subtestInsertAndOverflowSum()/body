{
  if (isHSQL()) {
    return;
  }
  Client client=getClient();
  truncateBeforeTest(client);
  int invocationIndex=0;
  VoltTable[] results=client.callProcedure("OverflowTest",0,0,invocationIndex++).getResults();
  results=client.callProcedure("OverflowTest",2,0,invocationIndex++).getResults();
  results=client.callProcedure("OverflowTest",1,0,0).getResults();
  results[0].advanceRow();
  long preRollbackValue=results[0].getLong(3);
  boolean threwException=false;
  try {
    results=client.callProcedure("OverflowTest",0,0,invocationIndex++).getResults();
  }
 catch (  Exception e) {
    threwException=true;
  }
  assertTrue(threwException);
  results=client.callProcedure("OverflowTest",1,0,0).getResults();
  results[0].advanceRow();
  assertEquals(preRollbackValue,results[0].getLong(3));
  preRollbackValue=0;
  threwException=false;
  while (!threwException) {
    try {
      results=client.callProcedure("OverflowTest",2,0,invocationIndex++).getResults();
      results=client.callProcedure("OverflowTest",1,0,0).getResults();
      results[0].advanceRow();
      preRollbackValue=results[0].getLong(2);
    }
 catch (    Exception e) {
      threwException=true;
      break;
    }
  }
  results=client.callProcedure("OverflowTest",1,0,0).getResults();
  results[0].advanceRow();
  assertEquals(preRollbackValue,results[0].getLong(2));
}
