{
  Client client=getClient();
  truncateBeforeTest(client);
  VoltTable[] results=null;
  results=client.callProcedure("AggAges",1).getResults();
  assertEquals(1,results.length);
  assertEquals(0,results[0].getRowCount());
  assert(results != null);
  results=client.callProcedure("AddPerson",1,1L,31L,27500.20,7).getResults();
  assertEquals(1,results.length);
  results=client.callProcedure("AddPerson",1,2L,31L,28920.99,3).getResults();
  assertEquals(1,results.length);
  results=client.callProcedure("AddPerson",1,3L,33L,28920.99,3).getResults();
  assertEquals(1,results.length);
  results=client.callProcedure("UpdatePerson",1,2L,31L,15000.00,3).getResults();
  assertEquals(1,results.length);
  results=client.callProcedure("UpdatePerson",1,1L,31L,15000.00,5).getResults();
  assertEquals(1,results.length);
  results=client.callProcedure("AggAges",1).getResults();
  assert(results != null);
  assertEquals(1,results.length);
  assertEquals(2,results[0].getRowCount());
  System.out.println(results[0].toString());
  VoltTableRow r1=results[0].fetchRow(0);
  VoltTableRow r2=results[0].fetchRow(1);
  assertEquals(31L,r1.getLong(0));
  assertEquals(2L,r1.getLong(2));
  assertTrue(Math.abs(r1.getDouble(3) - 30000.0) < .01);
  assertEquals(8L,r1.getLong(4));
  assertEquals(33L,r2.getLong(0));
  assertEquals(1L,r2.getLong(2));
  assertTrue(Math.abs(r2.getDouble(3) - 28920.99) < .01);
  assertEquals(3L,r2.getLong(4));
}
