{
  boolean usedNullFragment=false;
  if (m_isRestart && m_remoteWork == null) {
    usedNullFragment=true;
    m_remoteWork=new FragmentTaskMessage(m_localWork.getInitiatorHSId(),m_localWork.getCoordinatorHSId(),m_localWork.getTxnId(),m_localWork.getUniqueId(),m_localWork.isReadOnly(),false,false);
    m_remoteWork.setEmptyForRestart(getNextDependencyId());
    if (!m_haveDistributedInitTask && !isForReplay() && !isReadOnly()) {
      m_haveDistributedInitTask=true;
      m_remoteWork.setStateForDurability((Iv2InitiateTaskMessage)getNotice(),m_masterHSIds.keySet());
    }
    long[] non_local_hsids=new long[m_useHSIds.size()];
    for (int i=0; i < m_useHSIds.size(); i++) {
      non_local_hsids[i]=m_useHSIds.get(i);
    }
    if (non_local_hsids.length > 0) {
      m_mbox.send(non_local_hsids,m_remoteWork);
    }
  }
  if (m_remoteWork != null) {
    m_remoteDeps=createTrackedDependenciesFromTask(m_remoteWork,m_useHSIds);
    while (!checkDoneReceivingFragResponses()) {
      FragmentResponseMessage msg=pollForResponses();
      handleReceivedFragResponse(msg);
    }
  }
  m_remoteWork=null;
  BorrowTaskMessage borrowmsg=new BorrowTaskMessage(m_localWork);
  m_localWork.m_sourceHSId=m_mbox.getHSId();
  if (!usedNullFragment) {
    borrowmsg.addInputDepMap(m_remoteDepTables);
  }
  m_mbox.send(m_buddyHSId,borrowmsg);
  FragmentResponseMessage msg;
  while (true) {
    msg=pollForResponses();
    if (msg.m_sourceHSId == m_buddyHSId) {
      break;
    }
 else {
      assert m_isRestart;
    }
  }
  m_localWork=null;
  Map<Integer,List<VoltTable>> results=new HashMap<Integer,List<VoltTable>>();
  for (int i=0; i < msg.getTableCount(); i++) {
    int this_depId=msg.getTableDependencyIdAtIndex(i);
    VoltTable this_dep=msg.getTableAtIndex(i);
    List<VoltTable> tables=results.get(this_depId);
    if (tables == null) {
      tables=new ArrayList<VoltTable>();
      results.put(this_depId,tables);
    }
    tables.add(this_dep);
  }
  return results;
}
