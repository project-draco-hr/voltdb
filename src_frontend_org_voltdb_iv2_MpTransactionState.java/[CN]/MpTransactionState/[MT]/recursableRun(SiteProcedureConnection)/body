{
  if (m_remoteWork != null) {
    m_remoteDeps=createTrackedDependenciesFromTask(m_remoteWork,m_useHSIds);
    Map<Integer,List<VoltTable>> local_frag=processLocalFragmentTask(m_remoteWork,siteConnection);
    for (    Entry<Integer,List<VoltTable>> dep : local_frag.entrySet()) {
      trackDependency(m_localHSId,dep.getKey(),dep.getValue().get(0));
    }
    while (!checkDoneReceivingFragResponses()) {
      try {
        FragmentResponseMessage msg=m_newDeps.take();
        handleReceivedFragResponse(msg);
      }
 catch (      InterruptedException e) {
        hostLog.warn("Interrupted coordinating a multi-partition transaction. " + "Terminating the transaction. " + e);
        terminateTransaction();
      }
    }
  }
  siteConnection.stashWorkUnitDependencies(m_remoteDepTables);
  System.out.printf("MPTXNSTATE AGG m_remoteDepTables.size(%d)\n",m_remoteDepTables.size());
  for (  Entry<Integer,List<VoltTable>> key : m_remoteDepTables.entrySet()) {
    System.out.printf("\tDEP list size: %d\n",key.getValue().size());
    System.out.printf("\tDEP key:%d table:%s\n",key.getKey(),key.getValue().get(0));
    System.out.printf("\tDEP key:%d table:%s\n",key.getKey(),key.getValue().get(1));
  }
  System.out.println("MPTSXNSTATE LOCALFRAGMENT AGG: " + m_localWork);
  Map<Integer,List<VoltTable>> results=processLocalFragmentTask(m_localWork,siteConnection);
  return results;
}
