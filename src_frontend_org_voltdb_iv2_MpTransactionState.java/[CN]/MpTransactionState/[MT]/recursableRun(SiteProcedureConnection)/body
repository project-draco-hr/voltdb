{
  if (m_remoteWork != null) {
    m_remoteDeps=createTrackedDependenciesFromTask(m_remoteWork,m_useHSIds);
    while (!checkDoneReceivingFragResponses()) {
      try {
        FragmentResponseMessage msg=m_newDeps.take();
        handleReceivedFragResponse(msg);
      }
 catch (      InterruptedException e) {
        hostLog.warn("Interrupted coordinating a multi-partition transaction. " + "Terminating the transaction. " + e);
        terminateTransaction();
      }
    }
  }
  BorrowTaskMessage borrowmsg=new BorrowTaskMessage(m_localWork);
  borrowmsg.addInputDepMap(m_remoteDepTables);
  m_mbox.send(m_buddyHSId,borrowmsg);
  FragmentResponseMessage msg=null;
  try {
    msg=m_newDeps.take();
  }
 catch (  InterruptedException e) {
    hostLog.warn("Interrupted coordinating a multi-partition transaction. " + "Terminating the transaction. " + e);
    terminateTransaction();
  }
  if (msg.getStatusCode() != FragmentResponseMessage.SUCCESS) {
    m_needsRollback=true;
    if (msg.getException() != null) {
      throw msg.getException();
    }
 else {
      throw new FragmentFailureException();
    }
  }
  Map<Integer,List<VoltTable>> results=new HashMap<Integer,List<VoltTable>>();
  for (int i=0; i < msg.getTableCount(); i++) {
    int this_depId=msg.getTableDependencyIdAtIndex(i);
    VoltTable this_dep=msg.getTableAtIndex(i);
    List<VoltTable> tables=results.get(this_depId);
    if (tables == null) {
      tables=new ArrayList<VoltTable>();
      results.put(this_depId,tables);
    }
    tables.add(this_dep);
  }
  return results;
}
