{
  System.out.println("Test MV partition agg query...");
  VoltTable vt=null;
  Client client=this.getClient();
  vt=client.callProcedure("@AdHoc","Select count(*) from V_P1").getResults()[0];
  assertEquals(0,vt.asScalarLong());
  loadTableForP1();
  String[] tbs={"V_P1","V_P1_ABS"};
  for (  String tb : tbs) {
    vt=client.callProcedure("@AdHoc","Select count(*) from " + tb).getResults()[0];
    assertEquals(4,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select sum(V_G1) from " + tb).getResults()[0];
    assertEquals(90,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select sum(V_G1) / 2 from " + tb).getResults()[0];
    assertEquals(45,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select sum(distinct V_G1) from " + tb).getResults()[0];
    assertEquals(60,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select sum(V_sum_rent) from " + tb).getResults()[0];
    assertEquals(95,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select count(V_sum_rent) from " + tb).getResults()[0];
    assertEquals(4,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select avg(V_sum_rent) from " + tb).getResults()[0];
    assertEquals(23,vt.asScalarLong());
    if (!isHSQL()) {
      vt=client.callProcedure("@AdHoc","Select sum(V_sum_age) + 5 from " + tb).getResults()[0];
      assertEquals(260,vt.asScalarLong());
    }
    vt=client.callProcedure("@AdHoc","Select avg(V_sum_age) from " + tb).getResults()[0];
    assertEquals(63,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select V_G1, sum(V_CNT) " + "from " + tb + " group by V_G1 "+ "order by V_G1").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10,4},{20,2},{30,4}});
    vt=client.callProcedure("@AdHoc","Select V_G1, V_G2, sum(V_CNT) " + "from " + tb + " group by V_G1, V_G2 "+ "order by V_G1, V_G2").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10,1,4},{20,2,2},{30,2,1},{30,3,3}});
    vt=client.callProcedure("@AdHoc","Select V_sum_rent, sum(V_CNT) " + "from " + tb + " group by V_sum_rent order by V_sum_rent").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{8,1},{13,2},{37,7}});
    vt=client.callProcedure("@AdHoc","Select V_G1, V_sum_rent, sum(V_CNT) " + "from " + tb + " group by V_G1, V_sum_rent "+ "order by V_G1, V_sum_rent").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10,37,4},{20,13,2},{30,8,1},{30,37,3}});
    vt=client.callProcedure("@AdHoc","Select V_G1/V_G2, sum(V_CNT) " + "from " + tb + " group by V_G1/V_G2 "+ "order by V_G1/V_G2").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10,9},{15,1}});
    vt=client.callProcedure("@AdHoc","Select V_G1, sum(V_sum_age)/sum(V_CNT), " + "sum(V_sum_rent)/sum(V_CNT) " + ", sum(V_sum_age/V_sum_rent) + 1 "+ "from " + tb + " group by V_G1 "+ "order by V_G1").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10,25,9,3},{20,22,6,4},{30,27,11,6}});
  }
}
