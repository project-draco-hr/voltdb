{
  System.out.println("Test MV partition agg query where...");
  VoltTable vt=null;
  Client client=this.getClient();
  loadTableForMVFixSuite();
  String[] tbs={"V_P1","V_P1_ABS","V_P2","V_R4"};
  for (  String tb : tbs) {
    vt=client.callProcedure("@AdHoc","Select V_CNT from " + tb + " where v_sum_rent = 37 Order by V_CNT;").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{3},{4}});
    vt=client.callProcedure("@AdHoc","Select V_CNT from " + tb + " where V_G1 < 20 Order by V_CNT;").getResults()[0];
    assertEquals(4,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select count(*) from " + tb + " where V_G1 > 10 ;").getResults()[0];
    assertEquals(3,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select count(*) from " + tb + " where V_G1 > 10 ORDER BY V_CNT;").getResults()[0];
    assertEquals(3,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select V_CNT from " + tb + " where V_G1 > 10 AND v_sum_rent = 37 Order by V_CNT;").getResults()[0];
    assertEquals(3,vt.asScalarLong());
    vt=client.callProcedure("@AdHoc","Select V_CNT from " + tb + " where V_G1 > 10 OR v_sum_rent = 37 Order by V_CNT;").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{1},{2},{3},{4}});
    vt=client.callProcedure("@AdHoc","Select V_CNT from " + tb + " where V_G1 = 20 OR v_sum_rent = 37 Order by V_CNT;").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{2},{3},{4}});
    vt=client.callProcedure("@AdHoc","Select V_G1, V_CNT from " + tb + " where V_G1 = (v_sum_rent - 7) Order by V_CNT;").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{30,3}});
  }
}
