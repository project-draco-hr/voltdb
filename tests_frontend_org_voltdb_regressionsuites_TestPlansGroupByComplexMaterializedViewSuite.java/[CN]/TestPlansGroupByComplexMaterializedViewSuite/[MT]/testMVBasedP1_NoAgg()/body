{
  System.out.println("Test MV partition no agg query...");
  VoltTable vt=null;
  Client client=this.getClient();
  vt=client.callProcedure("@AdHoc","Select count(*) from V_P1").getResults()[0];
  assertEquals(0,vt.asScalarLong());
  loadTableForP1();
  String[] tbs={"V_P1","V_P1_ABS"};
  for (  String tb : tbs) {
    vt=client.callProcedure("@AdHoc","Select * from " + tb + " ORDER BY V_G1, V_G2").getResults()[0];
    System.out.println(vt);
    validateTableOfLongs(vt,new long[][]{{10,1,4,101,37},{20,2,2,45,13},{30,2,1,24,8},{30,3,3,85,37}});
    vt=client.callProcedure("@AdHoc","Select V_G1 from " + tb + " ORDER BY V_G1").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10},{20},{30},{30}});
    vt=client.callProcedure("@AdHoc","Select distinct V_G1 from " + tb + " ORDER BY V_G1").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10},{20},{30}});
    vt=client.callProcedure("@AdHoc","Select V_G1/2 from " + tb + " ORDER BY V_G1").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{5},{10},{15},{15}});
    vt=client.callProcedure("@AdHoc","Select V_G1, V_G2 from " + tb + " ORDER BY V_G1, V_G2").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{10,1},{20,2},{30,2},{30,3}});
    vt=client.callProcedure("@AdHoc","Select V_G1 + 1, V_G2 from " + tb + " ORDER BY V_G1, V_G2").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{11,1},{21,2},{31,2},{31,3}});
    vt=client.callProcedure("@AdHoc","Select V_sum_age from " + tb + " ORDER BY V_sum_age").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{24},{45},{85},{101}});
    vt=client.callProcedure("@AdHoc","Select abs(V_sum_rent - V_sum_age) from " + tb + " ORDER BY V_sum_age").getResults()[0];
    validateTableOfLongs(vt,new long[][]{{16},{32},{48},{64}});
  }
}
