{
  System.out.println("Test R4 update...");
  ClientResponse result;
  Client client=this.getClient();
  String insert="R4.insert";
  client.callProcedure(insert,1,10,-1,21,5);
  client.callProcedure(insert,2,20,1,22,6);
  client.callProcedure(insert,3,30,1,23,7);
  client.callProcedure(insert,4,40,2,24,8);
  client.callProcedure(insert,5,50,2,25,9);
  String mvTable="V2_R4";
  String orderbyStmt=mvTable + "_G1";
  compareMVcontentsOfLongs(client,mvTable,new long[][]{{1,-2,1,10},{1,2,2,50},{4,4,2,90}},orderbyStmt);
  result=client.callProcedure("R4.update",2,19,1,22,6,2);
  assertEquals(ClientResponse.SUCCESS,result.getStatus());
  assertEquals(1,result.getResults()[0].asScalarLong());
  compareMVcontentsOfLongs(client,mvTable,new long[][]{{1,-2,1,10},{1,2,2,49},{4,4,2,90}},orderbyStmt);
  result=client.callProcedure("R4.update",4,41,-1,24,8,4);
  assertEquals(ClientResponse.SUCCESS,result.getStatus());
  assertEquals(1,result.getResults()[0].asScalarLong());
  compareMVcontentsOfLongs(client,mvTable,new long[][]{{1,-2,2,51},{1,2,2,49},{4,4,1,50}},orderbyStmt);
  result=client.callProcedure("R4.update",5,55,1,25,9,5);
  assertEquals(ClientResponse.SUCCESS,result.getStatus());
  assertEquals(1,result.getResults()[0].asScalarLong());
  compareMVcontentsOfLongs(client,mvTable,new long[][]{{1,-2,2,51},{1,2,3,104}},orderbyStmt);
  result=client.callProcedure("@AdHoc","Delete from R4");
  assertEquals(ClientResponse.SUCCESS,result.getStatus());
  assertEquals(5,result.getResults()[0].asScalarLong());
  compareMVcontentsOfLongs(client,mvTable,null,orderbyStmt);
}
