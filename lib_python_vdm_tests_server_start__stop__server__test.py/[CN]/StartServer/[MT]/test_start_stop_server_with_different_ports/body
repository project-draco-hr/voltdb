def test_start_stop_server_with_different_ports(self):
    '\n        ensure Start and stop server is working properly using ports other than default ports\n        '
    response = requests.get(__db_url__)
    value = response.json()
    if value:
        db_length = len(value['databases'])
        last_db_id = value['databases'][(db_length - 1)]['id']
        server_url = ('http://%s:8000/api/1.0/databases/%u/servers/' % (__host_or_ip__, last_db_id))
        server_response = requests.get(server_url)
        server_value = server_response.json()
        if server_value:
            server_len = len(server_value['members'])
            last_server_id = server_value['members'][(server_len - 1)]['id']
            url = ('http://%s:8000/api/1.0/databases/%u/servers/%u/start' % (__host_or_ip__, last_db_id, last_server_id))
            print 'Starting...'
            response = requests.put(url)
            value = response.json()
            if (not value['statusstring']):
                print 'The Server list is empty'
            elif ('Success' in value['statusstring']):
                self.assertEqual(response.status_code, 200)
                time.sleep(20)
                CheckServerStatus(self, last_db_id, last_server_id, 'running')
                time.sleep(10)
                print 'Stopping Cluster....'
                url_stop = ('http://%s:8000/api/1.0/databases/%u/servers/%u/stop' % (__host_or_ip__, last_db_id, last_server_id))
                response = requests.put(url_stop)
                value = response.text
                if ('Server shutdown successfully.' in value):
                    self.assertEqual(response.status_code, 200)
                    time.sleep(15)
                    CheckServerStatus(self, last_db_id, last_server_id, 'stopped')
            elif ('A VoltDB Server process is already running' in value['statusstring']):
                print value['statusstring']
                assert True
            elif (response.status_code == 500):
                self.assertEqual(response.status_code, 500)
