{
  AbstractScanPlanNode dut=new SeqScanPlanNode(TABLE1,TABLE1);
  int[] scan_col_indexes={1,3};
  ArrayList<SchemaColumn> scanColumns=new ArrayList<SchemaColumn>();
  for (  int index : scan_col_indexes) {
    TupleValueExpression tve=new TupleValueExpression(TABLE1,TABLE1,COLS[index],COLS[index]);
    tve.setValueType(COLTYPES[index]);
    tve.setValueSize(COLTYPES[index].getLengthInBytesForFixedTypes());
    SchemaColumn col=new SchemaColumn(TABLE1,TABLE1,COLS[index],COLS[index],tve);
    scanColumns.add(col);
  }
  dut.setScanColumns(scanColumns);
  for (int i=0; i < 3; i++) {
    dut.generateOutputSchema(m_voltdb.getDatabase());
    NodeSchema dut_schema=dut.getOutputSchema();
    System.out.println(dut_schema.toString());
    assertEquals(scan_col_indexes.length,dut_schema.size());
    for (    int index : scan_col_indexes) {
      SchemaColumn col=dut_schema.find(TABLE1,TABLE1,COLS[index],"");
      assertNotNull(col);
      assertEquals(col.getExpression().getExpressionType(),ExpressionType.VALUE_TUPLE);
      assertEquals(col.getExpression().getValueType(),COLTYPES[index]);
    }
  }
}
