{
  System.out.println("test Having clause...");
  loadData();
  Client client=this.getClient();
  ClientResponse cr;
  VoltTable vt;
  long[][] expected;
  for (  String tb : tbs) {
    cr=client.callProcedure("@AdHoc","SELECT dept, sum(wage), count(wage)+5, " + "sum(wage)/count(wage) from " + tb + " GROUP BY dept ORDER BY dept DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2,90,7,45},{1,60,8,20}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, sum(wage) from " + tb + " GROUP BY dept HAVING sum(wage) > 60 ORDER BY dept DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2,90}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, sum(wage), count(wage)+5 from " + tb + " GROUP BY dept HAVING count(wage)+5 <> 7 ORDER BY dept DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,60,8}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, sum(wage) from " + tb + " GROUP BY dept HAVING count(wage)+5 <> 7 ORDER BY dept DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,60}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, sum(wage), count(wage)+5, " + "sum(wage)/count(wage) from " + tb + " GROUP BY dept HAVING  sum(wage) < 80 ORDER BY dept DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,60,8,20}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT count(*) from " + tb + " HAVING count(*) > 60 "+ " ORDER BY 1 DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    assertTrue(vt.getRowCount() == 0);
    cr=client.callProcedure("@AdHoc","SELECT AVG(wage) from " + tb + " HAVING SUM(id) > 20 "+ " ORDER BY 1 DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    assertTrue(vt.getRowCount() == 0);
  }
}
