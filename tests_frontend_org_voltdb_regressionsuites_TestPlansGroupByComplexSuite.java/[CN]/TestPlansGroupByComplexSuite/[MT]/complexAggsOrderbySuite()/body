{
  loadData();
  Client client=this.getClient();
  ClientResponse cr;
  VoltTable vt;
  long[][] expected;
  for (  String tb : tbs) {
    cr=client.callProcedure("@AdHoc","SELECT id+dept from " + tb + " ORDER BY ABS(id+dept)");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2},{3},{4},{6},{7}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT id+dept from " + tb + " ORDER BY id+dept");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2},{3},{4},{6},{7}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT id+dept from " + tb + " ORDER BY id+dept, wage");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2},{3},{4},{6},{7}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT id+dept, wage from " + tb + " ORDER BY id+dept, wage");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2,10},{3,20},{4,30},{6,40},{7,50}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, COUNT(*) as tag, sum(wage) from " + tb + " GROUP BY dept ORDER BY tag DESC");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,3,60},{2,2,90}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, COUNT(*) as tag, sum(wage) - 1 from " + tb + " GROUP BY dept ORDER BY tag DESC");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,3,59},{2,2,89}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT ABS(dept) as tag, SUM(ABS(wage) - 1) as tag, " + "(count(*)+sum(dept*2))/2 from " + tb + " GROUP BY dept ORDER BY tag");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,57,4},{2,88,5}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT ABS(dept), SUM(ABS(wage) - 1) as tag, " + "(count(*)+sum(dept*2))/2 from " + tb + " GROUP BY dept ORDER BY ABS(dept)");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,57,4},{2,88,5}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT SUM(ABS(wage) - 1) as tag, " + "(count(*)+sum(dept*2))/2 from " + tb + " GROUP BY dept ORDER BY ABS(dept)");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{57,4},{88,5}};
    System.out.println(vt.toString());
    validateTableOfLongs(vt,expected);
  }
}
