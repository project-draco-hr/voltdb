{
  Client client=this.getClient();
  ClientResponse cr;
  VoltTable vt;
  long[][] expected;
  String[] procs={"R1.insert","P1.insert"};
  for (  String tb : procs) {
    cr=client.callProcedure(tb,1,10,1,1.2);
    cr=client.callProcedure(tb,2,20,1,1.1);
    cr=client.callProcedure(tb,3,30,1,1.1);
    cr=client.callProcedure(tb,4,40,2,1.1);
    cr=client.callProcedure(tb,5,50,2,1.2);
  }
  String[] tbs={"R1","P1"};
  for (  String tb : tbs) {
    cr=client.callProcedure("@AdHoc","SELECT dept, SUM(wage), COUNT(wage), AVG(wage), MAX(wage), MIN(wage), SUM(wage)/COUNT(wage),  MAX(wage)+MIN(wage)+1 from " + tb + " GROUP BY dept ORDER BY dept");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,60,3,20,30,10,20,41},{2,90,2,45,50,40,45,91}};
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT id, id from " + tb + " GROUP BY id ORDER BY id");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,1},{2,2},{3,3},{4,4},{5,5}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, sum(wage), count(wage)+5 from " + tb + " GROUP BY dept ORDER BY dept DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2,90,7},{1,60,8}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT sum(wage)/count(wage) + 1, dept, SUM(wage+1), SUM(wage)/2 from " + tb + " GROUP BY dept ORDER BY dept");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{21,1,63,30},{46,2,92,45}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, SUM(ABS(wage) - 1) as tag, (count(*)+sum(dept*2))/2 from " + tb + " GROUP BY dept ORDER BY ABS(dept)");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,57,4},{2,88,5}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
  }
}
