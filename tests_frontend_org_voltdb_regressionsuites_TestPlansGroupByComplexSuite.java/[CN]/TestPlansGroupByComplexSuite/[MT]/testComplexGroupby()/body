{
  loadData();
  Client client=this.getClient();
  ClientResponse cr=null;
  VoltTable vt;
  long[][] expected;
  String[] procs={"R1.insert","P1.insert"};
  for (  String tb : procs) {
    cr=client.callProcedure(tb,6,10,2,1.2);
    cr=client.callProcedure(tb,7,40,2,1.1);
  }
  String[] tbs={"R1","P1"};
  for (  String tb : tbs) {
    cr=client.callProcedure("@AdHoc","SELECT abs(dept) as tag, count(wage) from " + tb + " GROUP BY abs(dept) ORDER BY tag ");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,3},{2,4}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT abs(dept-2) as tag, count(wage)+1 from " + tb + " GROUP BY abs(dept-2) ORDER BY tag;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{0,5},{1,4}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT abs(dept-2) as tag, wage, wage/2, count(*)*2, sum(id)/count(id)+1 from " + tb + " GROUP BY abs(dept-2), wage ORDER BY tag, wage;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{0,10,5,2,7},{0,40,20,4,6},{0,50,25,2,6},{1,10,5,2,2},{1,20,10,2,3},{1,30,15,2,4}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
  }
}
