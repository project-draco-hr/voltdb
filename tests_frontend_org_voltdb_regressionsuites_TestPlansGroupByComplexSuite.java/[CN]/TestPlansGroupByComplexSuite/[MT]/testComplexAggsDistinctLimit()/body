{
  loadData();
  Client client=this.getClient();
  ClientResponse cr=null;
  VoltTable vt;
  long[][] expected;
  String[] procs={"R1.insert","P1.insert"};
  for (  String tb : procs) {
    cr=client.callProcedure(tb,6,10,2,"2013-07-18 02:00:00.123457");
    cr=client.callProcedure(tb,7,40,2,"2013-07-18 02:00:00.123457");
  }
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  String[] tbs={"R1","P1"};
  for (  String tb : tbs) {
    cr=client.callProcedure("@AdHoc","SELECT dept, count(wage), sum(distinct wage), sum(wage), count(distinct wage)+5, " + "sum(wage)/(count(wage)+1) from " + tb + " GROUP BY dept ORDER BY dept DESC;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{2,4,100,140,8,28},{1,3,60,60,8,15}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT wage, sum(id)+1, sum(id+1),  sum(dept+3)/count(dept) from " + tb + " GROUP BY wage ORDER BY wage ASC LIMIT 4 ;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{10,8,9,4},{20,3,3,4},{30,4,4,4},{40,12,13,5}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT wage, sum(id)+1, sum(id+1),  sum(dept+3)/count(distinct dept) from " + tb + " GROUP BY wage ORDER BY wage ASC LIMIT 4 ;");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{10,8,9,4},{20,3,3,4},{30,4,4,4},{40,12,13,10}};
    System.out.println(vt.toString());
    compareTable(vt,expected);
  }
}
