{
  long currentTime=System.currentTimeMillis();
  if (currentTime == lastUsedTime) {
    counterValue++;
    if (counterValue > COUNTER_MAX_VALUE) {
      while (currentTime == lastUsedTime)       currentTime=System.currentTimeMillis();
      lastUsedTime=currentTime;
      counterValue=0;
    }
  }
 else {
    lastUsedTime=currentTime;
    counterValue=0;
  }
  long txnId=currentTime - VOLT_EPOCH;
  assert(txnId <= TIMESTAMP_MAX_VALUE);
  assert(counterValue <= COUNTER_MAX_VALUE);
  assert(initiatorId <= INITIATORID_MAX_VALUE);
  txnId=txnId << (COUNTER_BITS + INITIATORID_BITS);
  txnId|=counterValue << INITIATORID_BITS;
  txnId|=initiatorId;
  lastTxnId=txnId;
  return txnId;
}
