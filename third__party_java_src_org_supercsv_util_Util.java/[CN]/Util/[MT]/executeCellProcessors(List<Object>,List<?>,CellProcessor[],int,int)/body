{
  if (destination == null) {
    throw new NullPointerException("destination should not be null");
  }
 else   if (source == null) {
    throw new NullPointerException("source should not be null");
  }
 else   if (processors == null) {
    throw new NullPointerException("processors should not be null");
  }
  final CsvContext context=new CsvContext(lineNo,rowNo,1);
  context.setRowSource(new ArrayList<Object>(source));
  if (source.size() != processors.length) {
    throw new SuperCsvException(String.format("The number of columns to be processed (%d) must match the number of CellProcessors (%d): check that the number" + " of CellProcessors you have defined matches the expected number of columns being read/written",source.size(),processors.length),context);
  }
  destination.clear();
  for (int i=0; i < source.size(); i++) {
    context.setColumnNumber(i + 1);
    if (processors[i] == null) {
      destination.add(source.get(i));
    }
 else {
      destination.add(processors[i].execute(source.get(i),context));
    }
  }
}
