{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestApproxCountDistinctSuite.class);
  VoltProjectBuilder project=new VoltProjectBuilder();
  final String literalSchema="CREATE TABLE r ( " + "pk integer primary key not null, " + "bi bigint, "+ "ii integer, "+ "si smallint, "+ "ti tinyint, "+ "dd decimal, "+ "ts timestamp "+ ");"+ "CREATE TABLE p ( "+ "pk integer primary key not null, "+ "bi bigint, "+ "ii integer, "+ "si smallint, "+ "ti tinyint, "+ "dd decimal, "+ "ts timestamp "+ "); "+ "partition table p on column pk;"+ "CREATE TABLE unsupported_column_types ( "+ "vb varbinary(256), "+ "vc varchar(256),"+ "vb_inline varbinary(4), "+ "vc_inline varchar(4), "+ "ff float "+ ");";
  try {
    project.addLiteralSchema(literalSchema);
  }
 catch (  IOException e) {
    assertFalse(true);
  }
  boolean success;
  config=new LocalCluster("testApproxCountDistinctSuite-onesite.jar",3,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assert(success);
  builder.addServerConfig(config);
  config=new LocalCluster("testApproxCountDistinctSuite-onesite.jar",1,1,0,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assert(success);
  builder.addServerConfig(config);
  return builder;
}
