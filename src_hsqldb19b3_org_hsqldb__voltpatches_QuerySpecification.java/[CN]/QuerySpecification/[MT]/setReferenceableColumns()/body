{
  accessibleColumns=new boolean[indexLimitVisible];
  IntValueHashMap aliases=new IntValueHashMap();
  java.util.Set<String> userAliases=new java.util.HashSet<String>();
  java.util.Map<String,Integer> genAliases=new java.util.HashMap<String,Integer>();
  for (int i=0; i < indexLimitVisible; i++) {
    Expression expression=exprColumns[i];
    String alias=expression.getAlias();
    if (alias.length() == 0) {
      SimpleName name=HsqlNameManager.getAutoColumnName(i);
      expression.setAlias(name);
      genAliases.put(name.name,i);
      continue;
    }
    int index=aliases.get(alias,-1);
    userAliases.add(alias);
    if (index == -1) {
      aliases.put(alias,i);
      accessibleColumns[i]=true;
    }
 else {
      accessibleColumns[index]=false;
    }
  }
  for (  java.util.Map.Entry<String,Integer> genAlias : genAliases.entrySet()) {
    String alias=genAlias.getKey();
    while (userAliases.contains(alias)) {
      alias="_" + alias;
    }
    if (!alias.equals(genAlias.getKey())) {
      int idx=genAlias.getValue();
      SimpleName realAlias=HsqlNameManager.getAutoColumnName(alias);
      exprColumns[idx].setAlias(realAlias);
    }
  }
}
