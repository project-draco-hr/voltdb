{
  StringBuffer sb;
  String temp;
  sb=new StringBuffer();
  sb.append(super.toString()).append("[\n");
  if (sortAndSlice.limitCondition != null) {
    if (sortAndSlice.limitCondition.getLeftNode() != null) {
      sb.append("offset=[").append(sortAndSlice.limitCondition.getLeftNode().describe(session)).append("]\n");
    }
    if (sortAndSlice.limitCondition.getRightNode() != null) {
      sb.append("limit=[").append(sortAndSlice.limitCondition.getRightNode().describe(session)).append("]\n");
    }
  }
  sb.append("isDistinctSelect=[").append(isDistinctSelect).append("]\n");
  sb.append("isGrouped=[").append(isGrouped).append("]\n");
  sb.append("isAggregated=[").append(isAggregated).append("]\n");
  sb.append("columns=[");
  int columns=indexLimitVisible + groupByColumnCount + havingColumnCount;
  for (int i=0; i < columns; i++) {
    int index=i;
    if (exprColumns[i].getType() == OpTypes.SIMPLE_COLUMN) {
      index=exprColumns[i].columnIndex;
    }
    sb.append(exprColumns[index].describe(session));
  }
  sb.append("\n]\n");
  sb.append("range variables=[\n");
  for (int i=0; i < rangeVariables.length; i++) {
    sb.append("[\n");
    sb.append(rangeVariables[i].describe(session));
    sb.append("\n]");
  }
  sb.append("]\n");
  temp=queryCondition == null ? "null" : queryCondition.describe(session);
  sb.append("queryCondition=[").append(temp).append("]\n");
  temp=havingCondition == null ? "null" : havingCondition.describe(session);
  sb.append("havingCondition=[").append(temp).append("]\n");
  sb.append("groupColumns=[").append(groupColumnNames).append("]\n");
  return sb.toString();
}
