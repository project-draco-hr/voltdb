{
  buf.get();
  clientHandle=buf.getLong();
  byte presentFields=buf.get();
  status=buf.get();
  if ((presentFields & (1 << 5)) != 0) {
    statusString=SerializationHelper.getString(buf);
  }
 else {
    statusString=null;
  }
  appStatus=buf.get();
  if ((presentFields & (1 << 7)) != 0) {
    appStatusString=SerializationHelper.getString(buf);
  }
 else {
    appStatusString=null;
  }
  clusterRoundTripTime=buf.getInt();
  if ((presentFields & (1 << 6)) != 0) {
    throw new RuntimeException("Use of deprecated exception in Client Response serialization.");
  }
  if ((presentFields & (1 << 4)) != 0) {
    m_hash=buf.getInt();
  }
 else {
    m_hash=null;
  }
  int tableCount=buf.getInt();
  if (tableCount < 0) {
    throw new IOException("Table count is negative: " + tableCount);
  }
  results=new VoltTable[tableCount];
  for (int i=0; i < tableCount; i++) {
    int tableSize=buf.getInt();
    final int originalLimit=buf.limit();
    buf.limit(buf.position() + tableSize);
    final ByteBuffer slice=buf.slice();
    buf.position(buf.position() + tableSize);
    buf.limit(originalLimit);
    results[i]=new VoltTable(slice,false);
  }
  setProperly=true;
}
