{
{
    assert(params.toArray()[0] != null);
    assert(params.toArray()[1] != null);
    String file_path=(String)params.toArray()[0];
    String file_nonce=(String)params.toArray()[1];
    VoltTable result=constructNodeResultsTable();
    int host_id=context.getExecutionSite().getCorrespondingHostId();
    Integer lowest_site_id=VoltDB.instance().getCatalogContext().siteTracker.getLowestLiveExecSiteIdForHost(host_id);
    if (context.getExecutionSite().getSiteId() == lowest_site_id) {
      TRACE_LOG.trace("Checking feasibility of save with path and nonce: " + file_path + ", "+ file_nonce);
      if (SnapshotSiteProcessor.ExecutionSitesCurrentlySnapshotting.get() != -1) {
        result.addRow(Integer.parseInt(context.getSite().getHost().getTypeName()),hostname,"","FAILURE","SNAPSHOT IN PROGRESS");
        return new DependencyPair(DEP_saveTest,result);
      }
      for (      Table table : getTablesToSave(context.getDatabase())) {
        File saveFilePath=constructFileForTable(table,file_path,file_nonce,context.getSite().getHost().getTypeName());
        TRACE_LOG.trace("Host ID " + context.getSite().getHost().getTypeName() + " table: "+ table.getTypeName()+ " to path: "+ saveFilePath);
        String file_valid="SUCCESS";
        String err_msg="";
        if (saveFilePath.exists()) {
          file_valid="FAILURE";
          err_msg="SAVE FILE ALREADY EXISTS: " + saveFilePath;
        }
 else         if (!saveFilePath.getParentFile().canWrite()) {
          file_valid="FAILURE";
          err_msg="FILE LOCATION UNWRITABLE: " + saveFilePath;
        }
 else {
          try {
            saveFilePath.createNewFile();
          }
 catch (          IOException ex) {
            file_valid="FAILURE";
            err_msg="FILE CREATION OF " + saveFilePath + "RESULTED IN IOException: "+ ex.getMessage();
          }
        }
        result.addRow(Integer.parseInt(context.getSite().getHost().getTypeName()),hostname,table.getTypeName(),file_valid,err_msg);
      }
    }
    return new DependencyPair(DEP_saveTest,result);
  }
}
