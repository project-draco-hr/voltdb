{
  String hostname=CoreUtils.getHostnameOrAddress();
  if (fragmentId == SysProcFragmentId.PF_saveTest) {
    assert(params.toArray()[0] != null);
    assert(params.toArray()[1] != null);
    assert(params.toArray()[2] != null);
    String file_path=(String)params.toArray()[0];
    String file_nonce=(String)params.toArray()[1];
    SnapshotFormat format=SnapshotFormat.getEnumIgnoreCase((String)params.toArray()[2]);
    String data=(String)params.toArray()[3];
    return saveTest(file_path,file_nonce,format,data,context,hostname);
  }
 else   if (fragmentId == SysProcFragmentId.PF_saveTestResults) {
    return saveTestResults(dependencies);
  }
 else   if (fragmentId == SysProcFragmentId.PF_createSnapshotTargets) {
    assert(params.toArray()[0] != null);
    assert(params.toArray()[1] != null);
    assert(params.toArray()[2] != null);
    assert(params.toArray()[3] != null);
    assert(params.toArray()[4] != null);
    final String file_path=(String)params.toArray()[0];
    final String file_nonce=(String)params.toArray()[1];
    final long txnId=(Long)params.toArray()[2];
    byte block=(Byte)params.toArray()[3];
    SnapshotFormat format=SnapshotFormat.getEnumIgnoreCase((String)params.toArray()[4]);
    String data=(String)params.toArray()[5];
    SnapshotSaveAPI saveAPI=new SnapshotSaveAPI();
    VoltTable result=saveAPI.startSnapshotting(file_path,file_nonce,format,block,txnId,data,context,hostname);
    return new DependencyPair(SnapshotSave.DEP_createSnapshotTargets,result);
  }
 else   if (fragmentId == SysProcFragmentId.PF_createSnapshotTargetsResults) {
    return createSnapshotTargetsResults(dependencies);
  }
 else   if (fragmentId == SysProcFragmentId.PF_snapshotSaveQuiesce) {
    context.getExecutionEngine().quiesce(context.getLastCommittedTxnId());
    VoltTable results=new VoltTable(new ColumnInfo("id",VoltType.BIGINT));
    results.addRow(context.getSiteId());
    return new DependencyPair(DEP_snapshotSaveQuiesce,results);
  }
 else   if (fragmentId == SysProcFragmentId.PF_snapshotSaveQuiesceResults) {
    VoltTable dummy=new VoltTable(VoltSystemProcedure.STATUS_SCHEMA);
    dummy.addRow(VoltSystemProcedure.STATUS_OK);
    return new DependencyPair(DEP_snapshotSaveQuiesceResults,dummy);
  }
  assert(false);
  return null;
}
