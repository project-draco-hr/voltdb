{
  final LocalObjectMessage wrapper=(LocalObjectMessage)message;
  if (wrapper.payload instanceof AdHocPlannerWork) {
    final AdHocPlannerWork w=(AdHocPlannerWork)(wrapper.payload);
    final AsyncCompilerResult result=compileAdHocPlan(w);
    w.completionHandler.onCompletion(result);
  }
 else   if (wrapper.payload instanceof CatalogChangeWork) {
    final CatalogChangeWork w=(CatalogChangeWork)(wrapper.payload);
    if (VoltDB.instance().getConfig().m_isEnterprise) {
      try {
        Class<?> acahClz=getClass().getClassLoader().loadClass("org.voltdb.compiler.AsyncCompilerAgentHelper");
        Object acah=acahClz.newInstance();
        Method acahPrepareMethod=acahClz.getMethod("prepareApplicationCatalogDiff",new Class<?>[]{CatalogChangeWork.class});
        hostLog.info("Asynchronously preparing to update the application catalog and/or deployment settings.");
        final AsyncCompilerResult result=(AsyncCompilerResult)acahPrepareMethod.invoke(acah,w);
        if (result.errorMsg != null) {
          hostLog.info("A request to update the application catalog and/or deployment settings has been rejected. More info returned to client.");
        }
        w.completionHandler.onCompletion(result);
      }
 catch (      Exception e) {
        VoltDB.crashLocalVoltDB("Error preparing catalog diff.",true,e);
      }
    }
    assert(false);
  }
}
