{
  CatalogContext context=VoltDB.instance().getCatalogContext();
  if (m_ptool == null || m_ptool.m_context.catalogVersion != context.catalogVersion) {
    if (m_ptool != null) {
      m_ptool.shutdown();
    }
    m_ptool=new PlannerTool(context);
  }
  AdHocPlannedStmtBatch plannedStmtBatch=new AdHocPlannedStmtBatch(work.sqlBatchText,work.partitionParam,context.catalogVersion,work.clientHandle,work.connectionId,work.hostname,work.adminConnection,work.clientData);
  List<String> errorMsgs=new ArrayList<String>();
  if (work.sqlStatements != null) {
    for (    final String sqlStatement : work.sqlStatements) {
      try {
        PlannerTool.Result result=m_ptool.planSql(sqlStatement,work.partitionParam != null);
        plannedStmtBatch.addStatement(sqlStatement,result.onePlan,result.allPlan,result.replicatedDML);
      }
 catch (      Exception e) {
        errorMsgs.add("Unexpected Ad Hoc Planning Error: " + e.getMessage());
      }
    }
  }
  if (!errorMsgs.isEmpty()) {
    plannedStmtBatch.errorMsg=StringUtils.join(errorMsgs,"\n");
  }
  return plannedStmtBatch;
}
