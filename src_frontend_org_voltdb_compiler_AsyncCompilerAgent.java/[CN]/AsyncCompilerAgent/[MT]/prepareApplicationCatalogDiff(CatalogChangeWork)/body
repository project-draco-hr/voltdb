{
  CatalogChangeResult retval=new CatalogChangeResult();
  retval.clientData=work.clientData;
  retval.clientHandle=work.clientHandle;
  retval.connectionId=work.connectionId;
  retval.adminConnection=work.adminConnection;
  retval.hostname=work.hostname;
  retval.catalogBytes=work.catalogBytes;
  retval.deploymentString=work.deploymentString;
  try {
    String newCatalogCommands=CatalogUtil.loadCatalogFromJar(work.catalogBytes,null);
    if (newCatalogCommands == null) {
      retval.errorMsg="Unable to read from catalog bytes";
      return retval;
    }
    Catalog newCatalog=new Catalog();
    newCatalog.execute(newCatalogCommands);
    if (work.deploymentString != null) {
      retval.deploymentCRC=CatalogUtil.compileDeploymentStringAndGetCRC(newCatalog,work.deploymentString,false);
      if (retval.deploymentCRC < 0) {
        retval.errorMsg="Unable to read from deployment file string";
        return retval;
      }
    }
    CatalogContext context=VoltDB.instance().getCatalogContext();
    retval.expectedCatalogVersion=context.catalogVersion;
    CatalogDiffEngine diff=new CatalogDiffEngine(context.catalog,newCatalog);
    if (!diff.supported()) {
      throw new Exception("The requested catalog change is not a supported change at this time. " + diff.errors());
    }
    retval.encodedDiffCommands=Encoder.compressAndBase64Encode(diff.commands());
  }
 catch (  Exception e) {
    e.printStackTrace();
    retval.encodedDiffCommands=null;
    retval.errorMsg=e.getMessage();
  }
  return retval;
}
