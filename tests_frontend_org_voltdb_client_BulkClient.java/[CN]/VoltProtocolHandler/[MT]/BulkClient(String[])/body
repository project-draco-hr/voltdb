{
  String username="";
  String password="";
  ControlState state=ControlState.PREPARING;
  String reason="";
  int transactionRate=1;
  int numConnections=1;
  for (  String arg : args) {
    String[] parts=arg.split("=",2);
    if (parts.length == 1) {
      state=ControlState.ERROR;
      reason="Invalid parameter: " + arg;
      break;
    }
 else     if (parts[1].startsWith("${")) {
      continue;
    }
 else     if (parts[0].equals("USER")) {
      username=parts[1];
    }
 else     if (parts[0].equals("PASSWORD")) {
      password=parts[1];
    }
 else     if (parts[0].equals("NUMCONNECTIONS")) {
      numConnections=Integer.parseInt(parts[1]);
    }
 else     if (parts[0].equals("TXNRATE")) {
      transactionRate=Integer.parseInt(parts[1]);
    }
  }
  m_numConnections=numConnections;
  m_username=username;
  m_password=password;
  m_txnRate=transactionRate;
  if (state != ControlState.PREPARING)   setState(state,reason);
  for (  String arg : args) {
    String[] parts=arg.split("=",2);
    if (parts.length == 1) {
      continue;
    }
 else     if (parts[0].equals("HOST")) {
      String hostnport[]=parts[1].split("\\:",2);
      m_hosts.add(hostnport[0]);
    }
  }
  m_txnsPerMillisecond=(transactionRate / 1000.0);
  System.err.println("Transactions per millisecond " + m_txnsPerMillisecond);
  System.err.println(Runtime.getRuntime().maxMemory() + " max memory, " + Runtime.getRuntime().freeMemory()+ " free memory, "+ Runtime.getRuntime().totalMemory()+ " total memory");
  m_countDisplayNames=getTransactionDisplayNames();
  m_counts=new AtomicInteger[m_countDisplayNames.length];
  for (int ii=0; ii < m_counts.length; ii++) {
    m_counts[ii]=new AtomicInteger(0);
  }
}
