{
  for (  Option opt : options.helpOptions()) {
    opt.clearValues();
  }
  for (  OptionGroup group : options.getOptionGroups()) {
    group.setSelected(null);
  }
  setOptions(options);
  cmd=new CommandLine();
  boolean eatTheRest=false;
  if (arguments == null) {
    arguments=new String[0];
  }
  List<String> tokenList=Arrays.asList(flatten(getOptions(),arguments,stopAtNonOption));
  ListIterator<String> iterator=tokenList.listIterator();
  while (iterator.hasNext()) {
    String t=iterator.next();
    if ("--".equals(t)) {
      eatTheRest=true;
    }
 else     if ("-".equals(t)) {
      if (stopAtNonOption) {
        eatTheRest=true;
      }
 else {
        cmd.addArg(t);
      }
    }
 else     if (t.startsWith("-")) {
      if (stopAtNonOption && !getOptions().hasOption(t)) {
        eatTheRest=true;
        cmd.addArg(t);
      }
 else {
        processOption(t,iterator);
      }
    }
 else {
      cmd.addArg(t);
      if (stopAtNonOption) {
        eatTheRest=true;
      }
    }
    if (eatTheRest) {
      while (iterator.hasNext()) {
        String str=iterator.next();
        if (!"--".equals(str)) {
          cmd.addArg(str);
        }
      }
    }
  }
  processProperties(properties);
  checkRequiredOptions();
  return cmd;
}
