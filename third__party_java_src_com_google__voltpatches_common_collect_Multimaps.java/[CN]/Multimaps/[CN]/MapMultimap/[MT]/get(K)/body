{
  return new Sets.ImprovedAbstractSet<V>(){
    @Override public Iterator<V> iterator(){
      return new Iterator<V>(){
        int i;
        @Override public boolean hasNext(){
          return (i == 0) && map.containsKey(key);
        }
        @Override public V next(){
          if (!hasNext()) {
            throw new NoSuchElementException();
          }
          i++;
          return map.get(key);
        }
        @Override public void remove(){
          checkRemove(i == 1);
          i=-1;
          map.remove(key);
        }
      }
;
    }
    @Override public int size(){
      return map.containsKey(key) ? 1 : 0;
    }
  }
;
}
