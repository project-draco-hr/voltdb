{
  Catalog catalog=TPCCProjectBuilder.getTPCCSchemaCatalog();
  System.out.printf("Current catalog version info current/node/subtree: %d/%d/%d\n",catalog.m_currentCatalogVersion,catalog.m_nodeVersion,catalog.m_subTreeVersion);
  catalog.execute("add /clusters[cluster]/databases[database] tables FOO");
  System.out.printf("Current catalog version info current/node/subtree: %d/%d/%d\n",catalog.m_currentCatalogVersion,catalog.m_nodeVersion,catalog.m_subTreeVersion);
  Database database=catalog.getClusters().get("cluster").getDatabases().get("database");
  CatalogMap<Table> tables=database.getTables();
  CatalogMap<Procedure> procs=database.getProcedures();
  int tablesVersion=tables.getSubTreeVersion();
  int procsVersion=procs.getSubTreeVersion();
  int catalogVersion=catalog.getSubTreeVersion();
  assertTrue(tablesVersion > procsVersion);
  assertEquals(catalogVersion,tablesVersion);
  catalog.execute("delete /clusters[cluster]/databases[database] procedures InsertCustomer");
  System.out.printf("Current catalog version info current/node/subtree: %d/%d/%d\n",catalog.m_currentCatalogVersion,catalog.m_nodeVersion,catalog.m_subTreeVersion);
  tablesVersion=tables.getSubTreeVersion();
  procsVersion=procs.getSubTreeVersion();
  catalogVersion=catalog.getSubTreeVersion();
  assertTrue(tablesVersion < procsVersion);
  assertEquals(catalogVersion,procsVersion);
  catalog.execute("set /clusters[cluster]/databases[database]/procedures[InsertWarehouse] readonly true");
  System.out.printf("Current catalog version info current/node/subtree: %d/%d/%d\n",catalog.m_currentCatalogVersion,catalog.m_nodeVersion,catalog.m_subTreeVersion);
  catalog.execute("set /clusters[cluster]/databases[database]/procedures[InsertWarehouse] partitionparameter 4");
  System.out.printf("Current catalog version info current/node/subtree: %d/%d/%d\n",catalog.m_currentCatalogVersion,catalog.m_nodeVersion,catalog.m_subTreeVersion);
  tablesVersion=tables.getSubTreeVersion();
  procsVersion=procs.getSubTreeVersion();
  int procNVersion=procs.get("InsertWarehouse").getNodeVersion();
  int procSTVersion=procs.get("InsertWarehouse").getSubTreeVersion();
  catalogVersion=catalog.getSubTreeVersion();
  assertTrue(tablesVersion < procsVersion);
  assertEquals(procNVersion,procSTVersion);
  assertEquals(procNVersion,catalogVersion);
  assertEquals(procSTVersion,database.getSubTreeVersion());
  assertTrue(procSTVersion > database.getNodeVersion());
  assertEquals(catalogVersion,procsVersion);
}
