{
  System.out.println("Running testSaneWithNoMP");
  InitiatorMailbox mailbox=mock(MpInitiatorMailbox.class);
  doReturn(4L).when(mailbox).getHSId();
  ArrayList<Long> masters=new ArrayList<Long>();
  masters.add(1L);
  masters.add(2L);
  masters.add(3L);
  MpPromoteAlgo algo=new MpPromoteAlgo(masters,mailbox,"Test");
  long requestId=algo.getRequestId();
  Future<RepairResult> result=algo.start();
  verify(mailbox,times(1)).send(any(long[].class),any(Iv2RepairLogRequestMessage.class));
  algo.deliver(makeRealAckResponse(requestId,1L,0,1,Long.MAX_VALUE,m_hashinatorConfig));
  algo.deliver(makeRealAckResponse(requestId,2L,0,1,Long.MAX_VALUE,m_hashinatorConfig));
  algo.deliver(makeRealAckResponse(requestId,3L,0,1,Long.MAX_VALUE,m_hashinatorConfig));
  algo.deliver(makeRealAckResponse(requestId,4L,0,1,Long.MAX_VALUE,m_hashinatorConfig));
  assertEquals(TxnEgo.makeZero(MpInitiator.MP_INIT_PID).getTxnId(),result.get().m_txnId);
}
