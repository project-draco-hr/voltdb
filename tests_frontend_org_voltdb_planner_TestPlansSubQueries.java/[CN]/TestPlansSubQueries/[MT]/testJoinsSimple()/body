{
  AbstractPlanNode pn;
  AbstractPlanNode nlpn;
  String sql, sqlNoSimplification, equivalentSql;
  sql="select A, C FROM (SELECT A FROM R1) T1, (SELECT C FROM R2) T2 WHERE T1.A = T2.C";
  sqlNoSimplification="select A, C FROM (SELECT A FROM R1 LIMIT 10) T1, (SELECT C FROM R2 LIMIT 10) T2 WHERE T1.A = T2.C";
  equivalentSql="select T1.A, T2.C FROM R1 T1, R2 T2 WHERE T1.A = T2.C";
  pn=compile(sqlNoSimplification);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(2,nlpn.getChildCount());
  pn=nlpn.getChild(0);
  checkSeqScan(pn,"T1","A");
  pn=pn.getChild(0);
  checkSeqScan(pn,"R1","A");
  pn=nlpn.getChild(1);
  checkSeqScan(pn,"T2","C");
  pn=pn.getChild(0);
  checkSeqScan(pn,"R2","C");
  checkSubquerySimplification(sql,equivalentSql);
  sql="select A, C FROM (SELECT A FROM R1) T1, (SELECT C FROM R2) T2 WHERE A = C";
  sqlNoSimplification="select A, C FROM (SELECT A FROM R1 LIMIT 10) T1, (SELECT C FROM R2 LIMIT 10) T2 WHERE A = C";
  equivalentSql="select T1.A, T2.C FROM R1 T1, R2 T2 WHERE T1.A = T2.C";
  pn=compile(sqlNoSimplification);
  pn=pn.getChild(0);
  assertTrue(pn instanceof ProjectionPlanNode);
  nlpn=pn.getChild(0);
  assertTrue(nlpn instanceof NestLoopPlanNode);
  assertEquals(2,nlpn.getChildCount());
  pn=nlpn.getChild(0);
  checkSeqScan(pn,"T1","A");
  pn=pn.getChild(0);
  checkSeqScan(pn,"R1","A");
  pn=nlpn.getChild(1);
  checkSeqScan(pn,"T2","C");
  pn=pn.getChild(0);
  checkSeqScan(pn,"R2","C");
  checkSubquerySimplification(sql,equivalentSql);
}
