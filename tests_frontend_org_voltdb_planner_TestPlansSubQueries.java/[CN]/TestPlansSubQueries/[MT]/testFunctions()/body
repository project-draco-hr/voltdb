{
  String tbName="T1";
  String sql, sqlNoSimplification, equivalentSql;
  sql="select ABS(C) FROM (SELECT A, C FROM R1) T1";
  sqlNoSimplification="select ABS(C) FROM (SELECT A, C FROM R1 LIMIT 5) T1";
  equivalentSql="select ABS(C) FROM R1 T1";
  checkFunctions(sqlNoSimplification,tbName,new String[]{"C1"},"R1",new String[]{"A","C"});
  checkSubquerySimplification(sql,equivalentSql);
  sql="select A1, ABS(C) FROM (SELECT A A1, C FROM R1) T1";
  sqlNoSimplification="select A1, ABS(C) FROM (SELECT A A1, C FROM R1 LIMIT 5) T1";
  equivalentSql="select A A1, ABS(C) FROM R1 T1";
  checkFunctions(sqlNoSimplification,tbName,new String[]{"A1","C2"},"R1",new String[]{"A","C"});
  checkSubquerySimplification(sql,equivalentSql);
  sql="select A1 + 3, ABS(C) FROM (SELECT A A1, C FROM R1) T1";
  sqlNoSimplification="select A1 + 3, ABS(C) FROM (SELECT A A1, C FROM R1 LIMIT 5) T1";
  equivalentSql="select A + 3, ABS(C) FROM R1 T1";
  checkFunctions(sqlNoSimplification,tbName,new String[]{"C1","C2"},"R1",new String[]{"A","C"});
  checkSubquerySimplification(sql,equivalentSql);
  sql="select A1 + 3, ABS(C) FROM (SELECT A A1, C FROM R1) T1 WHERE ABS(A1) > 3";
  sqlNoSimplification="select A1 + 3, ABS(C) FROM (SELECT A A1, C FROM R1 LIMIT 5) T1 WHERE ABS(A1) > 3";
  equivalentSql="select A + 3, ABS(C) FROM R1 T1 WHERE ABS(A) > 3";
  checkFunctions(sqlNoSimplification,tbName,new String[]{"C1","C2"},"R1",new String[]{"A","C"});
  checkSubquerySimplification(sql,equivalentSql);
}
