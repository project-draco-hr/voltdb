{
  StringBuffer sb=new StringBuffer(64);
  String left=getContextSQL(nodes.length > 0 ? nodes[LEFT] : null);
switch (opType) {
case OpTypes.COUNT:
    sb.append(' ').append(Tokens.T_COUNT).append('(');
  break;
case OpTypes.SUM:
sb.append(' ').append(Tokens.T_SUM).append('(');
sb.append(left).append(')');
break;
case OpTypes.MIN:
sb.append(' ').append(Tokens.T_MIN).append('(');
sb.append(left).append(')');
break;
case OpTypes.MAX:
sb.append(' ').append(Tokens.T_MAX).append('(');
sb.append(left).append(')');
break;
case OpTypes.AVG:
sb.append(' ').append(Tokens.T_AVG).append('(');
sb.append(left).append(')');
break;
case OpTypes.EVERY:
sb.append(' ').append(Tokens.T_EVERY).append('(');
sb.append(left).append(')');
break;
case OpTypes.SOME:
sb.append(' ').append(Tokens.T_SOME).append('(');
sb.append(left).append(')');
break;
case OpTypes.STDDEV_POP:
sb.append(' ').append(Tokens.T_STDDEV_POP).append('(');
sb.append(left).append(')');
break;
case OpTypes.STDDEV_SAMP:
sb.append(' ').append(Tokens.T_STDDEV_SAMP).append('(');
sb.append(left).append(')');
break;
case OpTypes.VAR_POP:
sb.append(' ').append(Tokens.T_VAR_POP).append('(');
sb.append(left).append(')');
break;
case OpTypes.VAR_SAMP:
sb.append(' ').append(Tokens.T_VAR_SAMP).append('(');
sb.append(left).append(')');
break;
default :
throw Error.runtimeError(ErrorCode.U_S0500,"Expression");
}
return sb.toString();
}
