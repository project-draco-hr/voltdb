{
  int pos=0;
  while (Character.isWhitespace(stmt.charAt(pos))) {
    ++pos;
  }
  char cmd=stmt.charAt(pos++);
  while (stmt.charAt(pos++) != ' ')   ;
  int refStart=pos;
  while (stmt.charAt(pos++) != ' ')   ;
  String ref=stmt.substring(refStart,pos - 1);
  int argStart=pos;
  while (stmt.charAt(pos++) != ' ')   ;
  String arg1=stmt.substring(argStart,pos - 1);
  String arg2=stmt.substring(pos);
  CatalogType resolved=null;
  if (ref.startsWith("$")) {
    if (m_prevUsedPath == null) {
      throw new CatalogException("$PREV reference was not preceded by a cached reference.");
    }
    resolved=m_prevUsedPath;
  }
 else {
    resolved=getItemForRef(ref);
    if (resolved == null) {
      throw new CatalogException("Unable to find reference for catalog item '" + ref + "'");
    }
    m_prevUsedPath=resolved;
  }
  if (cmd == 'a') {
    resolved.getCollection(arg1).add(arg2);
  }
 else   if (cmd == 'd') {
    resolved.getCollection(arg1).delete(arg2);
    String toDelete=ref + "/" + arg1+ MAP_SEPARATOR+ arg2;
    m_pathCache.invalidate(toDelete);
  }
 else   if (cmd == 's') {
    resolved.set(arg1,arg2);
  }
}
