{
  Set<Entry<String,Config>> entrySet=SystemProcedureCatalog.listing.entrySet();
  for (  Entry<String,Config> entry : entrySet) {
    Config sysProc=entry.getValue();
    Procedure proc=sysProc.asCatalogProcedure();
    VoltSystemProcedure procedure=null;
    ProcedureRunner runner=null;
    final String className=sysProc.getClassname();
    Class<?> procClass=null;
    try {
      procClass=catalogContext.classForProcedure(className);
    }
 catch (    final ClassNotFoundException e) {
      if (sysProc.commercial) {
        continue;
      }
      hostLog.l7dlog(Level.WARN,LogKeys.host_ExecutionSite_GenericException.name(),new Object[]{m_siteId,m_siteIndex},e);
      VoltDB.crashLocalVoltDB(e.getMessage(),true,e);
    }
    if (procClass != null) {
      try {
        procedure=(VoltSystemProcedure)procClass.newInstance();
      }
 catch (      final InstantiationException e) {
        hostLog.l7dlog(Level.WARN,LogKeys.host_ExecutionSite_GenericException.name(),new Object[]{m_siteId,m_siteIndex},e);
      }
catch (      final IllegalAccessException e) {
        hostLog.l7dlog(Level.WARN,LogKeys.host_ExecutionSite_GenericException.name(),new Object[]{m_siteId,m_siteIndex},e);
      }
      runner=m_runnerFactory.create(procedure,proc,csp);
      procedure.initSysProc(m_site,this,proc,catalogContext.cluster);
      builder.put(entry.getKey().intern(),runner);
    }
  }
}
