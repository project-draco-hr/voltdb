{
  HsqlArrayList list=new HsqlArrayList();
  RangeVariable[] rangeVariables=context == null ? routine.getParameterRangeVariables() : context.getRangeVariables();
  HsqlList unresolved=null;
  Expression condition=null;
  Statement statement;
  Statement[] statements;
  Expression predicand=XreadRowValuePredicand();
  do {
    readThis(Tokens.WHEN);
    do {
      Expression newCondition=XreadPredicateRightPart(predicand);
      if (predicand == newCondition) {
        newCondition=new ExpressionLogical(predicand,XreadRowValuePredicand());
      }
      unresolved=newCondition.resolveColumnReferences(rangeVariables,rangeVariables.length,unresolved,false);
      ExpressionColumn.checkColumnsResolved(unresolved);
      unresolved=null;
      newCondition.resolveTypes(session,null);
      if (condition == null) {
        condition=newCondition;
      }
 else {
        condition=new ExpressionLogical(OpTypes.OR,condition,newCondition);
      }
      if (token.tokenType == Tokens.COMMA) {
        read();
      }
 else {
        break;
      }
    }
 while (true);
    statement=new StatementSimple(StatementTypes.CONDITION,condition);
    list.add(statement);
    readThis(Tokens.THEN);
    statements=readSQLProcedureStatementList(routine,context);
    for (int i=0; i < statements.length; i++) {
      list.add(statements[i]);
    }
    if (token.tokenType != Tokens.WHEN) {
      break;
    }
  }
 while (true);
  return list;
}
