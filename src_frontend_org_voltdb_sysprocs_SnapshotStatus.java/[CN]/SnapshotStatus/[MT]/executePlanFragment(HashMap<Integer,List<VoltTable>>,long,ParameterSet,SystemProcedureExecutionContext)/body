{
  String hn="";
  try {
    java.net.InetAddress localMachine=java.net.InetAddress.getLocalHost();
    hn=localMachine.getHostName();
  }
 catch (  java.net.UnknownHostException uhe) {
  }
  final String hostname=hn;
  final VoltTable results=constructFragmentResultsTable();
  if (fragmentId == SysProcFragmentId.PF_scanSnapshotRegistries) {
    int host_id=context.getExecutionSite().getCorrespondingHostId();
    Integer lowest_site_id=VoltDB.instance().getCatalogContext().siteTracker.getLowestLiveExecSiteIdForHost(host_id);
    if (context.getExecutionSite().getSiteId() == lowest_site_id) {
      TreeSet<Snapshot> snapshots=SnapshotRegistry.getSnapshotHistory();
      for (      final Snapshot s : snapshots) {
        s.iterateTables(new TableIterator(){
          @Override public void next(          Table t){
            results.addRow(context.getSite().getHost().getTypeName(),hostname,t.name,s.path,s.nonce,t.timeCreated,t.timeClosed,t.size,t.error == null ? "SUCCESS" : "FAILURE",t.error != null ? t.error.toString() : "");
          }
        }
);
      }
    }
    return new DependencyPair(DEP_scanSnapshotRegistries,results);
  }
 else   if (fragmentId == SysProcFragmentId.PF_scanSnapshotRegistriesResults) {
    TRACE_LOG.trace("Aggregating Snapshot Status Scan  results");
    assert(dependencies.size() > 0);
    List<VoltTable> dep=dependencies.get(DEP_scanSnapshotRegistries);
    for (    VoltTable table : dep) {
      while (table.advanceRow()) {
        results.add(table);
      }
    }
    return new DependencyPair(DEP_scanSnapshotRegistriesResults,results);
  }
  assert(false);
  return null;
}
