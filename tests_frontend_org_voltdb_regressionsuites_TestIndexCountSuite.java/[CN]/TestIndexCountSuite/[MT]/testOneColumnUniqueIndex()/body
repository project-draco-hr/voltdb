{
  Client client=getClient();
  client.callProcedure("TU1.insert",1,1);
  client.callProcedure("TU1.insert",2,2);
  client.callProcedure("TU1.insert",3,3);
  client.callProcedure("TU1.insert",6,6);
  client.callProcedure("TU1.insert",8,8);
  VoltTable table;
  table=client.callProcedure("@AdHoc","SELECT (COUNT(*) + 1) FROM TU1 WHERE POINTS < 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS < -1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(0,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS < 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(0,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS <= 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS < 5").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS <= 5").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS < 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS <= 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(4,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS < 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(4,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS <= 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(5,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS < 1000").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(5,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS <= 1000").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(5,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > -1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(5,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= -1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(5,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(4,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 1").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(5,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 2").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(4,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 4").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 4").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(0,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 1000").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(0,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 1000").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(0,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > -1 AND POINTS <= 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(4,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > -1 AND POINTS < 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= -1 AND POINTS <= 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(4,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= -1 AND POINTS < 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 2 AND POINTS <= 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 2 AND POINTS <= 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(3,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 2 AND POINTS < 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 2 AND POINTS < 6").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 5 AND POINTS <= 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 5 AND POINTS < 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 5 AND POINTS <= 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 5 AND POINTS < 8").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(1,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 4 AND POINTS <= 9").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS > 4 AND POINTS < 9").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 4 AND POINTS <= 9").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
  table=client.callProcedure("@AdHoc","SELECT COUNT(*) FROM TU1 WHERE POINTS >= 4 AND POINTS < 9").getResults()[0];
  assertTrue(table.getRowCount() == 1);
  assertTrue(table.advanceRow());
  assertEquals(2,table.getLong(0));
}
