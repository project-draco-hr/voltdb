{
  urlProperties=props;
  setState(Database.DATABASE_SHUTDOWN);
  sName=name;
  databaseType=type;
  sPath=path;
  if (databaseType == DatabaseURL.S_RES) {
    filesInJar=true;
    filesReadOnly=true;
  }
  String fileaccess_class_name=urlProperties.getProperty("fileaccess_class_name");
  if (fileaccess_class_name != null) {
    String storagekey=urlProperties.getProperty("storage_key");
    try {
      Class zclass=Class.forName(fileaccess_class_name);
      Constructor constructor=zclass.getConstructor(new Class[]{Object.class});
      fileaccess=(FileAccess)constructor.newInstance(new Object[]{storagekey});
      isStoredFileAccess=true;
    }
 catch (    java.lang.ClassNotFoundException e) {
      System.out.println("ClassNotFoundException");
    }
catch (    java.lang.InstantiationException e) {
      System.out.println("InstantiationException");
    }
catch (    java.lang.IllegalAccessException e) {
      System.out.println("IllegalAccessException");
    }
catch (    Exception e) {
      System.out.println("Exception");
    }
  }
 else {
    fileaccess=FileUtil.getDefaultInstance();
  }
  shutdownOnNoConnection=urlProperties.getProperty("shutdown","false").equals("true");
  logger=new Logger();
  compiledStatementManager=new StatementManager(this);
  lobManager=new LobManager(this);
}
