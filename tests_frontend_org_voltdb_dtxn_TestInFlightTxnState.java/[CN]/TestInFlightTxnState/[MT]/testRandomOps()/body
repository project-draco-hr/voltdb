{
  Random r=new Random();
  ClientResponseImpl cri=new ClientResponseImpl();
  for (int i=0; i < 10; i++) {
    int coordCount=r.nextInt(10) + 1;
    ArrayList<Integer> coords=new ArrayList<Integer>();
    int[] coordsArray=new int[coordCount];
    for (int j=0; j < coordCount; j++) {
      coords.add(j + 1);
      coordsArray[j]=j + 1;
    }
    InFlightTxnState state=createTxnState(1,coordsArray);
    boolean hasOneValidResponse=false;
    while (coords.size() > 0) {
      int coord=coords.remove(r.nextInt(coords.size()));
      if (r.nextBoolean()) {
        state.addResponse(coord,cri);
        hasOneValidResponse=true;
      }
 else {
        state.addFailedOrRecoveringResponse(coord);
      }
      assertEquals(state.countOutstandingResponses(),coords.size());
    }
    assertTrue(state.hasAllResponses());
    if (hasOneValidResponse) {
      assertTrue(state.hasSentResponse());
    }
  }
}
