{
  checkNotNull(loader);
  checkNotNull(executor);
  return new CacheLoader<K,V>(){
    @Override public V load(    K key) throws Exception {
      return loader.load(key);
    }
    @Override public ListenableFuture<V> reload(    final K key,    final V oldValue) throws Exception {
      ListenableFutureTask<V> task=ListenableFutureTask.create(new Callable<V>(){
        @Override public V call() throws Exception {
          return loader.reload(key,oldValue).get();
        }
      }
);
      executor.execute(task);
      return task;
    }
    @Override public Map<K,V> loadAll(    Iterable<? extends K> keys) throws Exception {
      return loader.loadAll(keys);
    }
  }
;
}
