import sys
import string
import os
buildFileContent = readfile('build.xml')
clientFileContent = readfile('Client.java')
ddlFileContent = readfile('ddl.sql')
deleteFileContent = readfile('Delete.java')
insertFileContent = readfile('Insert.java')
projectFileContent = readfile('project.xml')
selectFileContent = readfile('Insert.java')
if (len(sys.argv) != 4):
    print 'Usage: generate <name> <package_prefix> <destination>'
    sys.exit(0)
distpath = os.path.split(sys.path[0])[0]
voltpath = (distpath + '/voltdb')
project_name = string.strip(sys.argv[1])
package_prefix = string.strip(sys.argv[2])
package_prefix_wslashies = string.replace(package_prefix, '.', '/')
destination = sys.argv[3]
if isDestExist(destination):
    print 'Warning: Destination', destination, 'already exists.'
    print 'Please specify a different location.'
    sys.exit(0)
if isParentDir(distpath, destination):
    voltpath = relpath((distpath + '/voltdb'), destination)
os.system(('mkdir -p %s/src/%s/procedures' % (destination, package_prefix_wslashies)))
for proc in [('Insert.java', insertFileContent), ('Delete.java', deleteFileContent), ('Select.java', selectFileContent)]:
    dest_fn = ('%s/src/%s/procedures/%s' % (destination, package_prefix_wslashies, proc[0]))
    copyAndSubstituteTemplates(proc[1], dest_fn, package_prefix, project_name, voltpath)
dest_fn = ('%s/src/%s/Client.java' % (destination, package_prefix_wslashies))
copyAndSubstituteTemplates(clientFileContent, dest_fn, package_prefix, project_name, voltpath)
dest_fn = ('%s/build.xml' % destination)
copyAndSubstituteTemplates(buildFileContent, dest_fn, package_prefix, project_name, voltpath)
dest_fn = ('%s/project.xml' % destination)
copyAndSubstituteTemplates(projectFileContent, dest_fn, package_prefix, project_name, voltpath)
dest_fn = ('%s/%s-ddl.sql' % (destination, project_name))
copyAndSubstituteTemplates(ddlFileContent, dest_fn, package_prefix, project_name, voltpath)
print ('Generated skeleton Volt project in %s' % destination)
