{
  client.m_tpccSim.doPayment();
  assertTrue("paymentByCustomerName".equals(mockClient.calledName) || "paymentByCustomerNameC".equals(mockClient.calledName) || "paymentByCustomerNameW".equals(mockClient.calledName));
  assertEquals(7,mockClient.calledParameters.length);
  assertEquals(1L,mockClient.calledParameters[1]);
  assertEquals(Constants.MIN_PAYMENT,mockClient.calledParameters[2]);
  assertEquals(1L,mockClient.calledParameters[4]);
  assertEquals("BARBARBAR",mockClient.calledParameters[5]);
  assertEquals(Clock.Mock.NOW,mockClient.calledParameters[6]);
  generator.minimum=false;
  client.m_tpccSim.doPayment();
  assertTrue("paymentByCustomerId".equals(mockClient.calledName) || "paymentByCustomerIdC".equals(mockClient.calledName) || "paymentByCustomerIdW".equals(mockClient.calledName));
  assertEquals(7,mockClient.calledParameters.length);
  assertEquals((long)Constants.DISTRICTS_PER_WAREHOUSE,mockClient.calledParameters[1]);
  assertEquals(Constants.MAX_PAYMENT,mockClient.calledParameters[2]);
  assertEquals((long)Constants.DISTRICTS_PER_WAREHOUSE,mockClient.calledParameters[4]);
  assertEquals(72L,mockClient.calledParameters[5]);
  assertEquals(Clock.Mock.NOW,mockClient.calledParameters[6]);
}
