{
  if (queryExpr.getUnionType() == QueryExpression.NOUNION) {
    return voltGetXMLSpecification(queryExpr,session);
  }
 else {
    String unionType=queryExpr.operatorName();
    if (!"UNION".equalsIgnoreCase(unionType) && !"UNION_ALL".equalsIgnoreCase(unionType) && !"EXCEPT".equalsIgnoreCase(unionType)&& !"EXCEPT_ALL".equalsIgnoreCase(unionType)&& !"INTERSECT".equalsIgnoreCase(unionType)&& !"INTERSECT_ALL".equalsIgnoreCase(unionType)) {
      throw new HSQLParseException(queryExpression.operatorName() + "  tuple set operator is not supported.");
    }
    VoltXMLElement unionExpr=new VoltXMLElement("union");
    unionExpr.attributes.put("uniontype",unionType);
    VoltXMLElement leftExpr=voltGetXMLExpression(queryExpr.getLeftQueryExpression(),session);
    VoltXMLElement rightExpr=voltGetXMLExpression(queryExpr.getRightQueryExpression(),session);
    unionExpr=voltSimplifyUnionXMLExpression(unionExpr,leftExpr);
    unionExpr=voltSimplifyUnionXMLExpression(unionExpr,rightExpr);
    return unionExpr;
  }
}
