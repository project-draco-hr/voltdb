{
  int exprType=queryExpr.getUnionType();
  if (exprType == QueryExpression.NOUNION) {
    if (!(queryExpr instanceof QuerySpecification)) {
      throw new HSQLParseException(queryExpr.operatorName() + " is not supported.");
    }
    QuerySpecification select=(QuerySpecification)queryExpr;
    return voltGetXMLSpecification(select,session);
  }
 else   if (exprType == QueryExpression.UNION || exprType == QueryExpression.UNION_ALL || exprType == QueryExpression.EXCEPT || exprType == QueryExpression.EXCEPT_ALL || exprType == QueryExpression.INTERSECT || exprType == QueryExpression.INTERSECT_ALL) {
    VoltXMLElement unionExpr=new VoltXMLElement("union");
    unionExpr.attributes.put("uniontype",queryExpr.operatorName());
    VoltXMLElement params=new VoltXMLElement("parameters");
    unionExpr.children.add(params);
    assert(params != null);
    VoltXMLElement leftExpr=voltGetXMLExpression(queryExpr.getLeftQueryExpression(),session);
    VoltXMLElement rightExpr=voltGetXMLExpression(queryExpr.getRightQueryExpression(),session);
    unionExpr=voltTransformUnionXMLExpression(unionExpr,leftExpr);
    unionExpr=voltTransformUnionXMLExpression(unionExpr,rightExpr);
    return unionExpr;
  }
 else {
    throw new HSQLParseException(queryExpression.operatorName() + "  tuple set operator is not supported.");
  }
}
