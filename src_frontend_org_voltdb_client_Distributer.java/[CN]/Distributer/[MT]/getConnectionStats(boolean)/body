{
  final Long now=System.currentTimeMillis();
  final VoltTable retval=new VoltTable(statsColumns);
  final Map<Long,Pair<String,long[]>> networkStats=m_network.getIOStats(interval);
  long totalInvocations=0;
  long totalAbortedInvocations=0;
  long totalFailedInvocations=0;
synchronized (m_connections) {
    for (    NodeConnection cxn : m_connections) {
      long counters[];
      if (interval) {
        counters=cxn.getCountersInterval();
      }
 else {
        counters=cxn.getCounters();
      }
      totalInvocations+=counters[0];
      totalAbortedInvocations+=counters[1];
      totalFailedInvocations+=counters[2];
      final long networkCounters[]=networkStats.get(cxn.connectionId()).getSecond();
      final String hostname=networkStats.get(cxn.connectionId()).getFirst();
      long bytesRead=0;
      long messagesRead=0;
      long bytesWritten=0;
      long messagesWritten=0;
      if (networkCounters != null) {
        bytesRead=networkCounters[1];
        messagesRead=networkCounters[2];
        bytesWritten=networkCounters[3];
        messagesWritten=networkCounters[4];
      }
      retval.addRow(now,cxn.connectionId(),hostname,counters[0],counters[1],counters[2],bytesRead,messagesRead,bytesWritten,messagesWritten);
    }
  }
  final long globalIOStats[]=networkStats.get(-1L).getSecond();
  retval.addRow(now,-1,"GLOBAL",totalInvocations,totalAbortedInvocations,totalFailedInvocations,globalIOStats[0],globalIOStats[1],globalIOStats[2],globalIOStats[3]);
  return retval;
}
