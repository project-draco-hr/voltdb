{
  final Object socketChannelAndInstanceIdAndBuildString[]=ConnectionUtil.getAuthenticatedConnection(host,program,hashedPassword,port);
  InetSocketAddress address=new InetSocketAddress(host,port);
  final SocketChannel aChannel=(SocketChannel)socketChannelAndInstanceIdAndBuildString[0];
  final long instanceIdWhichIsTimestampAndLeaderIp[]=(long[])socketChannelAndInstanceIdAndBuildString[1];
  if (m_clusterInstanceId == null) {
    long timestamp=instanceIdWhichIsTimestampAndLeaderIp[2];
    int addr=(int)instanceIdWhichIsTimestampAndLeaderIp[3];
    m_clusterInstanceId=new Object[]{timestamp,addr};
  }
 else {
    if (!(((Long)m_clusterInstanceId[0]).longValue() == instanceIdWhichIsTimestampAndLeaderIp[2]) || !(((Integer)m_clusterInstanceId[1]).longValue() == instanceIdWhichIsTimestampAndLeaderIp[3])) {
      aChannel.close();
      throw new IOException("Cluster instance id mismatch. Current is " + m_clusterInstanceId[0] + ","+ m_clusterInstanceId[1]+ " and server's was "+ instanceIdWhichIsTimestampAndLeaderIp[2]+ ","+ instanceIdWhichIsTimestampAndLeaderIp[3]);
    }
  }
  m_buildString=(String)socketChannelAndInstanceIdAndBuildString[2];
  NodeConnection cxn=new NodeConnection(instanceIdWhichIsTimestampAndLeaderIp,address);
  m_connections.add(cxn);
  Connection c=m_network.registerChannel(aChannel,cxn);
  cxn.m_hostname=c.getHostnameOrIP();
  cxn.m_port=port;
  cxn.m_connection=c;
}
