{
  AbstractPlanNode n;
  AbstractPlanNode pn;
  pns=compileToFragments("UPDATE R1 SET C = 1 WHERE C = 0");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  pn=pns.get(1);
  n=pn.getChild(0);
  assertTrue(n instanceof UpdatePlanNode);
  pns=compileToFragments("DELETE FROM R1 WHERE C = 0");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  pn=pns.get(1);
  n=pn.getChild(0);
  assertTrue(n instanceof DeletePlanNode);
  pns=compileToFragments("INSERT INTO R1 VALUES (1, 2, 3)");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  pn=pns.get(1);
  n=pn.getChild(0);
  assertTrue(n instanceof InsertPlanNode);
  pns=compileToFragments("UPDATE P1 SET C = 1 WHERE C = 0");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  pn=pns.get(1);
  n=pn.getChild(0);
  assertTrue(n instanceof UpdatePlanNode);
  pns=compileToFragments("DELETE FROM P1 WHERE C = 0");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  pn=pns.get(1);
  n=pn.getChild(0);
  assertTrue(n instanceof DeletePlanNode);
  pns=compileToFragments("UPDATE P1 SET C = 1 WHERE A = 0");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  assertTrue(pn instanceof UpdatePlanNode);
  pns=compileToFragments("DELETE FROM P1 WHERE A = 0");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  assertTrue(pn instanceof DeletePlanNode);
  pns=compileToFragments("INSERT INTO P1 VALUES (1, 2)");
  pn=pns.get(0);
  System.out.println(pn.toExplainPlanString());
  assertTrue(pn instanceof InsertPlanNode);
}
