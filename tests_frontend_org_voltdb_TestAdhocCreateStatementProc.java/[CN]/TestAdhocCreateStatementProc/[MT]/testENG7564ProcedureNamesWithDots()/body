{
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchemaLines("create table t7564 (id smallint not null, val bigint not null)","partition table t7564 on column id");
  builder.setUseDDLSchema(true);
  boolean success=builder.compile(pathToCatalog,2,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  try {
    startSystem(config);
    try {
      m_client.callProcedure("@AdHoc","create procedure n7564.p7564_1 as select val from t7564 where id = ?;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to create statement procedure");
    }
    assertTrue(findProcedureInSystemCatalog("n7564.p7564_1"));
    assertFalse(verifySinglePartitionProcedure("n7564.p7564_1"));
    try {
      m_client.callProcedure("n7564.p7564_1",1000L);
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to call procedure n7564.p7564_1");
    }
    try {
      m_client.callProcedure("@AdHoc","partition procedure p7564_1 on table t7564 column id;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to partition the procedure n7564.p7564_1");
    }
    assertTrue(verifySinglePartitionProcedure("n7564.p7564_1"));
    try {
      m_client.callProcedure("n7564.p7564_1",1000L);
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to call procedure n7564.p7564_1");
    }
    try {
      m_client.callProcedure("@AdHoc","create procedure p7564_2 as select * from t7564;");
    }
 catch (    ProcCallException pce) {
      pce.printStackTrace();
      fail("Should be able to create another statement procedure");
    }
    assertTrue(findProcedureInSystemCatalog("n7564.p7564_1"));
  }
  finally {
    teardownSystem();
  }
}
