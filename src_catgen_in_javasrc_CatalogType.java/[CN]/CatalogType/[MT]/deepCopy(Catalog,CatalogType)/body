{
  CatalogType copy=null;
  try {
    copy=getClass().newInstance();
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new RuntimeException(e);
  }
  assert(parent.getCatalog() == catalog);
  copy.setBaseValues(catalog,parent,m_path,m_typename);
  copy.m_relativeIndex=m_relativeIndex;
  for (  Entry<String,Object> e : m_fields.entrySet()) {
    Object value=e.getValue();
    if (value instanceof CatalogType) {
      CatalogType type=(CatalogType)e.getValue();
      UnresolvedInfo uinfo=new UnresolvedInfo();
      uinfo.path=type.getPath();
      value=uinfo;
    }
    copy.m_fields.put(e.getKey(),value);
  }
  for (  Entry<String,CatalogMap<? extends CatalogType>> e : m_childCollections.entrySet()) {
    CatalogMap<? extends CatalogType> mapCopy=copy.m_childCollections.get(e.getKey());
    mapCopy.copyFrom(e.getValue());
  }
  copy.update();
  catalog.registerGlobally(copy);
  return copy;
}
