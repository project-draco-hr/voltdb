{
  Client client=this.getClient();
  client.callProcedure("InsertA",0,1);
  client.callProcedure("InsertB",1,1);
  client.callProcedure("InsertB",2,1);
  client.callProcedure("InsertC",1,2);
  client.callProcedure("InsertC",2,3);
  VoltTable result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION ALL SELECT I FROM B UNION ALL SELECT I FROM C;").getResults()[0];
  assertEquals(5,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION ALL SELECT I FROM B UNION ALL SELECT I FROM C LIMIT 3;").getResults()[0];
  assertEquals(3,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION ALL SELECT I FROM B UNION ALL SELECT I FROM C LIMIT ?;",3).getResults()[0];
  assertEquals(3,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION ALL SELECT I FROM B UNION ALL SELECT I FROM C OFFSET 3;").getResults()[0];
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION ALL SELECT I FROM B UNION ALL SELECT I FROM C LIMIT 2 OFFSET 2;").getResults()[0];
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION ALL SELECT I FROM B UNION ALL SELECT I FROM C LIMIT ? OFFSET ?;",2,2).getResults()[0];
  assertEquals(2,result.getRowCount());
  result=client.callProcedure("@AdHoc","(SELECT PKEY FROM A UNION ALL SELECT I FROM B LIMIT 1) UNION ALL SELECT I FROM C;").getResults()[0];
  assertEquals(3,result.getRowCount());
}
