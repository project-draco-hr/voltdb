{
  Client client=this.getClient();
  client.callProcedure("InsertA",0,0);
  client.callProcedure("InsertA",1,1);
  client.callProcedure("InsertA",2,1);
  client.callProcedure("InsertA",3,3);
  client.callProcedure("InsertA",4,3);
  client.callProcedure("InsertA",5,2);
  client.callProcedure("InsertB",0,1);
  client.callProcedure("InsertB",1,1);
  client.callProcedure("InsertB",2,1);
  client.callProcedure("InsertB",3,0);
  client.callProcedure("InsertC",0,1);
  client.callProcedure("InsertC",1,1);
  client.callProcedure("InsertC",2,2);
  client.callProcedure("InsertC",3,0);
  client.callProcedure("InsertC",4,0);
  VoltTable result=client.callProcedure("@AdHoc","SELECT I FROM A INTERSECT ALL SELECT I FROM B INTERSECT ALL SELECT I FROM C;").getResults()[0];
  assertEquals(3,result.getRowCount());
  result=client.callProcedure("@AdHoc","(SELECT I FROM A INTERSECT ALL SELECT I FROM B) INTERSECT ALL SELECT I FROM C;").getResults()[0];
  assertEquals(3,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT I FROM A INTERSECT ALL (SELECT I FROM B INTERSECT ALL SELECT I FROM C);").getResults()[0];
  assertEquals(3,result.getRowCount());
}
