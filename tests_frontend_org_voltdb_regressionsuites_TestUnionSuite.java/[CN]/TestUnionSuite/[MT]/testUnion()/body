{
  Client client=this.getClient();
  client.callProcedure("InsertA",0,1);
  client.callProcedure("InsertB",1,1);
  client.callProcedure("InsertB",2,1);
  client.callProcedure("InsertC",1,2);
  client.callProcedure("InsertC",2,3);
  client.callProcedure("InsertC",3,3);
  VoltTable result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION SELECT I FROM B UNION SELECT I FROM C;").getResults()[0];
  assertEquals(4,result.getRowCount());
  result=client.callProcedure("@AdHoc","(SELECT PKEY FROM A UNION SELECT I FROM B) UNION SELECT I FROM C;").getResults()[0];
  assertEquals(4,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A UNION (SELECT I FROM B UNION SELECT I FROM C);").getResults()[0];
  assertEquals(4,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A where PKEY = 0 UNION SELECT I FROM B UNION SELECT I FROM C WHERE I = 3;").getResults()[0];
  assertEquals(3,result.getRowCount());
  result=client.callProcedure("@AdHoc","SELECT PKEY FROM A where PKEY = 0 UNION SELECT I FROM B WHERE PKEY=? UNION SELECT I FROM C WHERE PKEY = ? AND I = 3;",3,2).getResults()[0];
  assertEquals(2,result.getRowCount());
  String sql;
  client.callProcedure("@AdHoc","INSERT INTO RPT_P (client_id, config_id, cost) VALUES (140,1,1.0);");
  client.callProcedure("@AdHoc","INSERT INTO RPT_P (client_id, config_id, cost) VALUES (140,3,3.0);");
  client.callProcedure("@AdHoc","INSERT INTO rpt_copy_p (client_id, config_id, cost) VALUES (140,2,2.0);");
  client.callProcedure("@AdHoc","INSERT INTO rpt_copy_p (client_id, config_id, cost) VALUES (140,1,1.0);");
  sql="select client_id, config_id from RPT_P where client_id=140 " + " UNION " + "select client_id, config_id from rpt_copy_p where client_id=140;";
  result=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertEquals(3,result.getRowCount());
  sql="select client_id, config_id, sum(cost) as cost from RPT_P where client_id=140 group by client_id, config_id " + " UNION " + "select client_id, config_id, sum(cost) as cost from rpt_copy_p where client_id=140 group by client_id, config_id;";
  result=client.callProcedure("@AdHoc",sql).getResults()[0];
  assertEquals(3,result.getRowCount());
  result=client.callProcedure("testunion_p",140,140).getResults()[0];
  assertEquals(3,result.getRowCount());
  result=client.callProcedure("testunion_p",10,10).getResults()[0];
  assertEquals(0,result.getRowCount());
}
