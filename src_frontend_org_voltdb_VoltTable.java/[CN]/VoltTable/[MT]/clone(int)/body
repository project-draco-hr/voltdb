{
  assert(verifyTableInvariants());
  final VoltTable cloned=new VoltTable();
  cloned.m_colCount=m_colCount;
  cloned.m_rowCount=0;
  cloned.m_rowStart=m_rowStart;
  if (m_name != null) {
    cloned.m_name=m_name;
    if (m_originalColumnInfos != null) {
      cloned.m_originalColumnInfos=new ColumnInfo[m_originalColumnInfos.length];
      for (int i=0; i < m_originalColumnInfos.length; i++) {
        cloned.m_originalColumnInfos[i]=m_originalColumnInfos[i].clone();
      }
    }
  }
  final int pos=m_buffer.position();
  m_buffer.position(0);
  m_buffer.limit(m_rowStart);
  cloned.m_buffer=ByteBuffer.allocate(m_rowStart + extraBytes + 100);
  cloned.m_buffer.put(m_buffer);
  m_buffer.limit(m_buffer.capacity());
  m_buffer.position(pos);
  cloned.m_buffer.putInt(0);
  assert(verifyTableInvariants());
  assert(cloned.verifyTableInvariants());
  return cloned;
}
