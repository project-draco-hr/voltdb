{
  VoltProjectBuilder builder=new VoltProjectBuilder();
  String schema="CREATE TABLE T4 (C1 TINYINT DEFAULT 127 NOT NULL, C2 SMALLINT DEFAULT 32767 NOT NULL, " + "C3 INTEGER DEFAULT 2147483647 NOT NULL, C4 BIGINT NOT NULL, C5 FLOAT NOT NULL, C6 DECIMAL NOT NULL, " + "C7 VARCHAR(32) NOT NULL, C8 VARBINARY(32) NOT NULL, C9 TIMESTAMP DEFAULT NOW NOT NULL, "+ "C10 TIMESTAMP DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (C1, C9));"+ "CREATE TABLE T5 (C VARCHAR(1048576 BYTES));"+ "CREATE TABLE T6 (C VARCHAR(262144));"+ "CREATE TABLE T7 (C VARBINARY(1048576));";
  builder.addLiteralSchema(schema);
  boolean success=builder.compile(pathToCatalog);
  assertTrue(success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  startSystem(config);
  assertTrue(findTableInSystemCatalogResults("T4"));
  assertTrue(findTableInSystemCatalogResults("T5"));
  assertTrue(findTableInSystemCatalogResults("T6"));
  assertTrue(findTableInSystemCatalogResults("T7"));
  ClientResponse resp;
  VoltTable vt;
  m_client.callProcedure("@AdHoc","insert into T4 values (1, 2, 3, 4, 5.5, 6.6, \'test\', \'010101\', 1000, 1111);");
  resp=m_client.callProcedure("@AdHoc","select * from T4;");
  vt=resp.getResults()[0];
  assertEquals(vt.m_rowCount,1);
  vt.advanceToRow(0);
  byte ret1=1;
  assertEquals(vt.get(0,VoltType.TINYINT),ret1);
  assertEquals(vt.get(2,VoltType.INTEGER),3);
  assertEquals(vt.get(4,VoltType.FLOAT),5.5);
  m_client.callProcedure("T5.insert","test");
  resp=m_client.callProcedure("@AdHoc","select * from T5;");
  assertEquals(resp.getResults()[0].m_rowCount,1);
  m_client.callProcedure("T5.insert","hahahaha");
  resp=m_client.callProcedure("@AdHoc","select * from T5;");
  vt=resp.getResults()[0];
  assertEquals(vt.m_rowCount,2);
  System.out.println(line + resp.getResults()[0] + line);
  vt.advanceToRow(0);
  assertEquals(vt.get(0,VoltType.STRING),"test");
  vt.advanceToRow(1);
  assertEquals(vt.get(0,VoltType.STRING),"hahahaha");
  m_client.callProcedure("T6.insert","test");
  resp=m_client.callProcedure("@AdHoc","select * from T6;");
  assertEquals(resp.getResults()[0].m_rowCount,1);
  m_client.callProcedure("@AdHoc","insert into T7 values (\'101010101010\')");
  resp=m_client.callProcedure("@AdHoc","select * from T7;");
  assertEquals(resp.getResults()[0].m_rowCount,1);
  teardownSystem();
}
