from optparse import OptionParser
from datetime import date, datetime, timedelta
import getpass
import re
from subprocess import Popen
import subprocess
import jiratools
exclusions = ['master']
jira_url = 'https://issues.voltdb.com/'
if (__name__ == '__main__'):
    parser = OptionParser()
    parser.add_option('-u', '--username', dest='username', action='store', help='username to use for Jira lookups', default=getpass.getuser())
    parser.add_option('-p', '--password', dest='password', action='store', help='password to use for Jira lookups')
    parser.add_option('--no-merged', dest='merged', action='store_false', help='find branches that are not merged to master', default=True)
    parser.add_option('--older', dest='olderthan', action='store', help='age of unmerged branches to list', type='int', default=21)
    (options, args) = parser.parse_args()
    user = options.username
    password = (options.password or getpass.getpass('Enter your Jira password: '))
    if (not options.merged):
        print ('# Branches with checkins within %d days will not be listed' % options.olderthan)
    branch_list = get_branch_list(options.merged)
    old_branches = weed_out_newer_branches(branch_list, options.olderthan)
    if options.merged:
        make_delete_branches_script(old_branches, dry_run=False)
    else:
        make_archive_branches_script(old_branches, dry_run=False)
