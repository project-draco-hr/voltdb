def _WrongMockMethodMacroDiagnoser(msg):
    'Diagnoses the WMM disease, given the error messages by the compiler.'
    gcc_regex = (_GCC_FILE_LINE_RE + '.*this_method_does_not_take_(?P<wrong_args>\\d+)_argument.*\\n.*\\n.*candidates are.*FunctionMocker<[^>]+A(?P<args>\\d+)\\)>')
    clang_regex = (_CLANG_NON_GMOCK_FILE_LINE_RE + 'error:.*array.*negative.*r?\\n(.*\\n)*?(?P=file):(?P=line):(?P=column): error: too few arguments to function call, expected (?P<args>\\d+), have (?P<wrong_args>\\d+)')
    clang11_re = (_CLANG_NON_GMOCK_FILE_LINE_RE + '.*this_method_does_not_take_(?P<wrong_args>\\d+)_argument.*')
    diagnosis = '\nYou are using MOCK_METHOD%(wrong_args)s to define a mock method that has\n%(args)s arguments. Use MOCK_METHOD%(args)s (or MOCK_CONST_METHOD%(args)s,\nMOCK_METHOD%(args)s_T, MOCK_CONST_METHOD%(args)s_T as appropriate) instead.'
    return _GenericDiagnoser('WMM', 'Wrong MOCK_METHODn Macro', [(gcc_regex, diagnosis), (clang11_re, (diagnosis % {'wrong_args': 'm', 'args': 'n', })), (clang_regex, diagnosis)], msg)
