def _OverloadedMethodActionDiagnoser(msg):
    'Diagnoses the OMA disease, given the error messages by the compiler.'
    gcc_regex = (_GCC_FILE_LINE_RE + "error: no matching function for call to \\'Invoke\\(.+, <unresolved overloaded function type>\\)")
    clang_regex = (_CLANG_FILE_LINE_RE + "error: no matching function for call to \\'Invoke\\'\\r?\\n(.*\\n)*?.*\\bgmock-generated-actions\\.h:\\d+:\\d+: note: candidate function template not viable: requires .*, but 2 (arguments )?were provided")
    diagnosis = '\nThe second argument you gave to Invoke() is an overloaded method.  Please\ntell your compiler which overloaded version you want to use.\n\nFor example, if you want to use the version whose signature is\n  class Foo {\n    ...\n    bool Bar(int n, double x);\n  };\nyou should write something like\n  Invoke(foo, static_cast<bool (Foo::*)(int n, double x)>(&Foo::Bar))'
    return _GenericDiagnoser('OMA', 'Overloaded Method Action', [(gcc_regex, diagnosis), (clang_regex, diagnosis)], msg)
