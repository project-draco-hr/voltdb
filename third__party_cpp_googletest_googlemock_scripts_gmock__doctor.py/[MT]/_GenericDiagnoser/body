def _GenericDiagnoser(short_name, long_name, diagnoses, msg):
    "Diagnoses the given disease by pattern matching.\n\n  Can provide different diagnoses for different patterns.\n\n  Args:\n    short_name: Short name of the disease.\n    long_name:  Long name of the disease.\n    diagnoses:  A list of pairs (regex, pattern for formatting the diagnosis\n                for matching regex).\n    msg:        Compiler's error messages.\n  Yields:\n    Tuples of the form\n      (short name of disease, long name of disease, diagnosis).\n  "
    for (regex, diagnosis) in diagnoses:
        if re.search(regex, msg):
            diagnosis = ('%(file)s:%(line)s:' + diagnosis)
            for m in _FindAllMatches(regex, msg):
                yield (short_name, long_name, (diagnosis % m.groupdict()))
