def _IncompleteByReferenceArgumentDiagnoser(msg):
    'Diagnoses the IBRA disease, given the error messages by the compiler.'
    gcc_regex = (_GCC_FILE_LINE_RE + "instantiated from here\\n.*gtest-printers\\.h.*error: invalid application of \\'sizeof\\' to incomplete type \\'(?P<type>.*)\\'")
    clang_regex = ((".*gtest-printers\\.h.*error: invalid application of \\'sizeof\\' to an incomplete type \\'(?P<type>.*)( const)?\\'\\r?\\n(.*\\n)*?" + _CLANG_NON_GMOCK_FILE_LINE_RE) + "note: in instantiation of member function \\'testing::internal2::TypeWithoutFormatter<.*>::PrintValue\\' requested here")
    diagnosis = '\nIn order to mock this function, Google Mock needs to see the definition\nof type "%(type)s" - declaration alone is not enough.  Either #include\nthe header that defines it, or change the argument to be passed\nby pointer.'
    return _GenericDiagnoser('IBRA', 'Incomplete By-Reference Argument Type', [(gcc_regex, diagnosis), (clang_regex, diagnosis)], msg)
