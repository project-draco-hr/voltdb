def _NeedToUseSymbolDiagnoser(msg):
    'Diagnoses the NUS disease, given the error messages by the compiler.'
    gcc_regex = (_GCC_FILE_LINE_RE + "error: \\'(?P<symbol>.+)\\' (was not declared in this scope|has not been declared)")
    clang_regex = (_CLANG_FILE_LINE_RE + "error: (use of undeclared identifier|unknown type name|no template named) \\'(?P<symbol>[^\\']+)\\'")
    diagnosis = "\n'%(symbol)s' is defined by Google Mock in the testing namespace.\nDid you forget to write\n  using testing::%(symbol)s;\n?"
    for m in (list(_FindAllMatches(gcc_regex, msg)) + list(_FindAllMatches(clang_regex, msg))):
        symbol = m.groupdict()['symbol']
        if (symbol in _COMMON_GMOCK_SYMBOLS):
            yield ('NUS', 'Need to Use Symbol', (diagnosis % m.groupdict()))
