{
  assert(plan != null);
  ArrayList<AbstractPlanNode> children=new ArrayList<AbstractPlanNode>();
  for (int i=0; i < plan.getChildCount(); i++)   children.add(plan.getChild(i));
  plan.clearChildren();
  for (  AbstractPlanNode child : children) {
    child=recursivelyApply(child);
    child.clearParents();
    plan.addAndLinkChild(child);
  }
  if ((plan instanceof LimitPlanNode) == false)   return plan;
  if (plan.getChildCount() != 1)   return plan;
  AbstractPlanNode child=plan.getChild(0);
  if (child instanceof AbstractScanPlanNode) {
    plan.clearChildren();
    child.clearParents();
    child.addInlinePlanNode(plan);
    return child;
  }
  if ((child instanceof ProjectionPlanNode) && (child.getChild(0) instanceof NestLoopIndexPlanNode) && (((NestLoopIndexPlanNode)(child.getChild(0))).getSortDirection() != SortDirectionType.INVALID)) {
    plan.clearChildren();
    child.clearParents();
    child.getChild(0).addInlinePlanNode(plan);
    return child;
  }
  return plan;
}
