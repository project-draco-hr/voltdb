{
  String schema="create table PARTED1 (" + "PARTVAL bigint not null, " + "NONPART bigint not null,"+ "PRIMARY KEY(PARTVAL));"+ "create table PARTED2 ("+ "PARTVAL bigint not null, "+ "NONPART bigint not null,"+ "PRIMARY KEY(PARTVAL));"+ "create table PARTED3 ("+ "PARTVAL bigint not null, "+ "NONPART bigint not null ASSUMEUNIQUE,"+ "PRIMARY KEY(NONPART, PARTVAL));"+ "create table REPPED1 ("+ "REPPEDVAL bigint not null, "+ "NONPART bigint not null,"+ "PRIMARY KEY(REPPEDVAL));"+ "create table REPPED2 ("+ "REPPEDVAL bigint not null, "+ "NONPART bigint not null,"+ "PRIMARY KEY(REPPEDVAL));"+ "create view V_PARTED1 (PARTVAL, num_rows, sum_bigint) as "+ "select PARTVAL, count(*), sum(NONPART) from PARTED1 group by PARTVAL;"+ "create view V_SCATTERED1 (NONPART, PARTVAL, num_rows, sum_bigint) as "+ "select NONPART, PARTVAL, count(*), sum(PARTVAL) from PARTED1 group by NONPART, PARTVAL;"+ "create view V_REPPED1 (REPPEDVAL, num_rows, sum_bigint) as "+ "select REPPEDVAL, count(*), sum(NONPART) from REPPED1 group by REPPEDVAL;"+ "";
  builder.addLiteralSchema(schema);
  builder.addPartitionInfo("PARTED1","PARTVAL");
  builder.addPartitionInfo("PARTED2","PARTVAL");
  builder.addPartitionInfo("PARTED3","PARTVAL");
  builder.addProcedures(new Class<?>[]{org.voltdb_testprocs.adhoc.executeSQLMP.class,org.voltdb_testprocs.adhoc.executeSQLSP.class,org.voltdb_testprocs.adhoc.executeSQLMPWRITE.class,org.voltdb_testprocs.adhoc.executeSQLSPWRITE.class});
}
