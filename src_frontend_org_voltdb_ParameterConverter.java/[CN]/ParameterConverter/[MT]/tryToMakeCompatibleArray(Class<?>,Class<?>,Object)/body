{
  Class<?> pSubCls=pclass.getComponentType();
  Class<?> sSubCls=paramTypeComponentType;
  int inputLength=Array.getLength(param);
  if (pSubCls == sSubCls) {
    return param;
  }
 else   if (inputLength == 0) {
    return Array.newInstance(sSubCls,0);
  }
 else   if ((pSubCls == byte[].class) && (sSubCls == String.class)) {
    String[] values=new String[inputLength];
    for (int i=0; i < inputLength; i++) {
      values[i]=new String((byte[])Array.get(param,i),"UTF-8");
    }
    return values;
  }
 else   if ((pSubCls == String.class) && (sSubCls == byte[].class)) {
    byte[][] values=new byte[inputLength][];
    for (int i=0; i < inputLength; i++) {
      values[i]=Encoder.hexDecode((String)Array.get(param,i));
    }
    return values;
  }
 else {
    throw new Exception("tryScalarMakeCompatible: Unable to match parameter array:" + sSubCls.getName() + " to provided "+ pSubCls.getName());
  }
}
