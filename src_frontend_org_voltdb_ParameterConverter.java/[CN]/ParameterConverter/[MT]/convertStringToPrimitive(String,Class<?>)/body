{
  value=value.trim();
  if (value.equals(Constants.CSV_NULL))   return nullValueForType(expectedClz);
  String commaFreeValue=thousandSeparator.matcher(value).replaceAll("");
  try {
    if (expectedClz == long.class) {
      return Long.parseLong(commaFreeValue);
    }
    if (expectedClz == int.class) {
      return Integer.parseInt(commaFreeValue);
    }
    if (expectedClz == short.class) {
      return Short.parseShort(commaFreeValue);
    }
    if (expectedClz == byte.class) {
      return Byte.parseByte(commaFreeValue);
    }
    if (expectedClz == double.class) {
      return Double.parseDouble(commaFreeValue);
    }
  }
 catch (  NumberFormatException nfe) {
    if (expectedClz != double.class) {
      String hexDigits=SQLParser.getDigitsFromHexLiteral(value);
      if (hexDigits != null) {
        try {
          return SQLParser.hexDigitsToLong(hexDigits);
        }
 catch (        SQLParser.Exception spe) {
        }
      }
    }
  }
  throw new VoltTypeException("tryToMakeCompatible: Unable to convert string " + value + " to "+ expectedClz.getName()+ " value for target parameter.");
}
