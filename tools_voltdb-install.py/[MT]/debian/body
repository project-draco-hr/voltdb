def debian():
    with ChDir(meta.volt_root):
        blddir = os.path.join(meta.build_root, 'build')
        debdir = os.path.join(blddir, 'DEBIAN')
        meta.options.prefix = blddir
        if os.path.exists(meta.build_root):
            info(('Removing existing output directory "%s"...' % meta.build_root))
            if (not meta.options.dryrun):
                fix_ownership(meta.build_root)
                shutil.rmtree(meta.build_root)
        install()
        if meta.options.dryrun:
            return
        for line in pipe_cmd('du', '-s', blddir):
            installed_size = int(line.split()[0])
        if (not os.path.exists(debdir)):
            os.makedirs(debdir)
        with open(os.path.join(debdir, 'conffiles'), 'w'):
            pass
        syms = copy(locals())
        syms.update(meta.control)
        with open(os.path.join(debdir, 'control'), 'w') as fout:
            fout.write((meta.control_template % syms))
        pkgfile = os.path.join(meta.output_root, ('%(pkgname)s_%(pkgversion)s-%(pkgrelease)d_%(arch)s.deb' % syms))
        info(('Creating Debian package "%s"...' % pkgfile))
        run_cmd('dpkg-deb', '-b', blddir, pkgfile)
        fix_ownership(meta.build_root)
        if (not meta.options.keep):
            info(('Wiping build directory "%s"...' % blddir))
            shutil.rmtree(blddir)
        info(('Done creating Debian package: %s' % pkgfile))
