def rpm():
    blddir = os.path.join(meta.build_root, 'rpmbuild')
    installtree = os.path.join(meta.build_root, 'installtree')
    if os.path.exists(meta.build_root):
        info(('Removing existing output directory "%s"...' % meta.build_root))
        if (not meta.options.dryrun):
            fix_ownership(meta.build_root)
            shutil.rmtree(meta.build_root)
    for D in ['BUILD', 'SOURCES', 'RPMS', 'SPECS', 'SRPMS', 'BUILDROOT']:
        p = os.path.join(blddir, D)
        if (not os.path.exists(p)):
            os.makedirs(os.path.join(blddir, D))
    with open(os.path.join(os.environ['HOME'], '.rpmmacros'), 'w') as fout:
        fout.write(('%%_topdir\t%s\n' % blddir))
        fout.write('%_buildrootdir\t%{_topdir}/BUILDROOT\n')
        fout.write('%_buildroot\t%{_buildrootdir}/%{name}-%{version}-%{release}.%{_arch}\n')
    syms = copy(locals())
    syms.update(meta.rpm_control)
    with open(os.path.join(blddir, 'SPECS', 'voltdb.spec'), 'w') as fout:
        fout.write((meta.rpm_control_template % syms))
    voltdb_dist = ('%(pkgname)s-%(pkgversion)s' % syms)
    voltdb_build = (voltdb_dist + ('-%(pkgrelease)d.%(arch)s' % syms))
    buildroot = os.path.join(installtree, voltdb_build)
    meta.options.prefix = buildroot
    install()
    with ChDir(buildroot):
        files = []
        for l in pipe_cmd('find', '.', '-not', '-type', 'd'):
            files.append(string.lstrip(l, '.'))
        links = []
        for l in pipe_cmd('find', '.', '-type', 'l'):
            print l
            links.append(string.lstrip(l, '.'))
    with open(os.path.join(blddir, 'SPECS', 'myfiles'), 'w') as fout:
        for f in files:
            fout.write(('"%s"\n' % f))
    with open(os.path.join(blddir, 'SPECS', 'preuncmd'), 'w') as uout:
        for l in links:
            uout.write(('unlink %s\n' % l))
    rpm_sources = os.path.join(blddir, 'SOURCES')
    os.mkdir(os.path.join(rpm_sources, voltdb_dist))
    with ChDir(rpm_sources):
        run_cmd('tar', '-cf', (voltdb_dist + '.tar.gz'), voltdb_dist)
        os.rmdir(voltdb_dist)
    with ChDir(os.path.join(blddir, 'SPECS')):
        run_cmd('rpmbuild', '-bb', 'voltdb.spec')
    shutil.copy(os.path.join(blddir, 'RPMS', 'x86_64', ('%(pkgname)s-%(pkgversion)s-%(pkgrelease)d.%(arch)s.rpm' % syms)), meta.output_root)
