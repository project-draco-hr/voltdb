def initialize(self, volt_root, deb_build_root, deb_output_root, clean_up_items):
    self.volt_root = volt_root
    self.deb_build_root = deb_build_root
    self.deb_output_root = deb_output_root
    self.clean_up_items = clean_up_items
    myroot = find_volt_root(os.path.realpath(__file__))
    self.version = None
    with open(os.path.join(myroot, 'version.txt')) as f:
        self.version = f.readline().strip()
    assert (self.version is not None)
    if os.path.exists(os.path.join(self.volt_root, 'README.thirdparty.ent')):
        self.edition = 'voltdb-ent'
        src_dist_subdir = os.path.join('obj', 'pro', ('%s-%s' % (self.edition, self.version)))
    else:
        self.edition = 'voltdb'
        src_dist_subdir = os.path.join('obj', 'release', 'dist')
    if os.path.isdir(os.path.join(self.volt_root, 'obj')):
        self.dist_subdir = src_dist_subdir
    else:
        self.dist_subdir = ''
    self.control = dict(pkgname=self.edition, pkgrelease=1, arch='amd64', provides='voltdb', conflicts='voltdb', replaces='voltdb', depends='default-jdk,libc6', priority='extra', section='database', maintainer='VoltDB', pkgversion=self.version, description=format_debian_description("\nVoltDB is a blazingly fast NewSQL database system.\n\nIt is specifically designed to run on modern scale-out architectures - fast,\ninexpensive servers connected via high-speed data networks.\n\nVoltDB is aimed at a new generation of database applications - real-time feeds,\nsensor-driven data streams, micro-transactions, low-latency trading systems -\nrequiring database throughput that can reach millions of operations per second.\nWhat's more, the applications that use this data must scale on demand, provide\nflawless fault tolerance and enable real-time visibility into the data that\ndrives business value."))
    self.control_template = 'Package: %(pkgname)s\nPriority: %(priority)s\nSection: %(section)s\nInstalled-Size: %(installed_size)d\nMaintainer: %(maintainer)s\nArchitecture: %(arch)s\nVersion: %(pkgversion)s-%(pkgrelease)d\nDepends: %(depends)s\nProvides: %(provides)s\nConflicts: %(conflicts)s\nReplaces: %(replaces)s\nDescription: %(description)s\n'
