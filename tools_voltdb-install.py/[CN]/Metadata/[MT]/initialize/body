def initialize(self, version, volt_root, build_root, output_root, clean_up_items):
    self.version = version
    self.volt_root = volt_root
    self.build_root = build_root
    self.output_root = output_root
    self.clean_up_items = clean_up_items
    if os.path.exists(os.path.join(self.volt_root, 'README.thirdparty.ent')):
        self.edition = 'voltdb-ent'
        self.summary = 'VoltDB In-Memory Database Enterprise Edition'
        self.license = 'Proprietary'
        src_dist_subdir = os.path.join('obj', 'pro', ('%s-%s' % (self.edition, self.version)))
    else:
        self.edition = 'voltdb'
        self.summary = 'VoltDB In-Memory Database Community Edition'
        self.license = 'AGPL'
        src_dist_subdir = os.path.join('obj', 'release', 'dist')
    if os.path.isdir(os.path.join(self.volt_root, 'obj')):
        self.dist_subdir = src_dist_subdir
    else:
        self.dist_subdir = ''
    self.deb_control = dict(pkgname=self.edition, pkgrelease=1, arch='amd64', provides='voltdb', conflicts='voltdb', replaces='voltdb', depends='default-jdk,libc6', priority='extra', section='database', maintainer='VoltDB', pkgversion=self.version, description=format_debian_description("\nVoltDB is a blazingly fast NewSQL database system.\n\nIt is specifically designed to run on modern scale-out architectures - fast,\ninexpensive servers connected via high-speed data networks.\n\nVoltDB is aimed at a new generation of database applications - real-time feeds,\nsensor-driven data streams, micro-transactions, low-latency trading systems -\nrequiring database throughput that can reach millions of operations per second.\nWhat's more, the applications that use this data must scale on demand, provide\nflawless fault tolerance and enable real-time visibility into the data that\ndrives business value."))
    self.deb_control_template = 'Package: %(pkgname)s\nPriority: %(priority)s\nSection: %(section)s\nInstalled-Size: %(installed_size)d\nMaintainer: %(maintainer)s\nArchitecture: %(arch)s\nVersion: %(pkgversion)s-%(pkgrelease)d\nDepends: %(depends)s\nProvides: %(provides)s\nConflicts: %(conflicts)s\nReplaces: %(replaces)s\nDescription: %(description)s\n'
    self.rpm_control = dict(pkgname=self.edition, pkgversion=self.version, pkgrelease=1, arch='x86_64', summary=self.summary, license=self.license, prefix='/usr/share')
    self.rpm_control_template = '%%define        __spec_install_post %%{nil}\n%%define          debug_package %%{nil}\n\nSummary: %(summary)s\nName: %(pkgname)s\nVersion: %(pkgversion)s\nRelease: %(pkgrelease)d\nLicense: %(license)s\nGroup: Applications/Databases\nDistribution: .el6\nSOURCE0 : %%{name}-%%{version}.tar.gz\nURL: http://www.voltdb.com\nProvides: voltdb\nConflicts: voltdb\nRequires: libgcc >= 4.1.2, libstdc++ >= 4.1.2, python >= 2.6\nRequires: java >= 1.7_13, java-devel >= 1.7_13\nPrefix: %(prefix)s\n\nBuildRoot: %%{_tmppath}/%%{name}-%%{version}-%%{release}\n\n%%description\nVoltDB is a blazingly fast in memory (IMDB) NewSQL database system.\n\nIt is specifically designed to run on modern scale-out architectures - fast,\ninexpensive servers connected via high-speed data networks.\n\nVoltDB is aimed at a new generation of database applications - real-time feeds,\nsensor-driven data streams, micro-transactions, low-latency trading systems -\nrequiring database throughput that can reach millions of operations per second.\nWhat\'s more, the applications that use this data must scale on demand, provide\nflawless fault tolerance and enable real-time visibility into the data that\ndrives business value.\n\n%%prep\n%%setup -q\n\n%%build\n\n%%install\n\n%%clean\n\n%%files\n%%defattr(-,root,root,-)\n%%include myfiles\n\n%%post\n%%include postcmd\nln -sf %%{prefix}/%%{name}-%%{version} %%{prefix}/voltdb\n\n%%preun\nunlink %%{prefix}/voltdb\n%%include preuncmd\n\n%%postun\n# remove voltdb directory tree\nif [ -n "%%{name}-%%{version}" ]; then\n    rm -rf %%{prefix}/%%{name}-%%{version}\nfi\n\n%%changelog\n* Fri Jan 14 2013  Phil Rosegay <support@voltdb.com> 3.0-1\n- GA-3.0\n'
