{
  if (m_initialized)   return new Object[]{m_joiner.m_timestamp,m_joiner.m_addr};
  try {
    m_joiner.join();
    if (!m_joiner.getSuccess()) {
      throw new RuntimeException("The joiner thread was not successful");
    }
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
  m_localHostId=m_joiner.getLocalHostId();
  Hashtable<Integer,SocketChannel> sockets=m_joiner.getHostsAndSockets();
  for (  Integer hostId : sockets.keySet()) {
    SocketChannel socket=sockets.get(hostId);
    try {
      socket.socket().setSendBufferSize(1024 * 1024 * 2);
      socket.socket().setReceiveBufferSize(1024 * 1024 * 2);
    }
 catch (    SocketException e) {
      e.printStackTrace();
    }
    ForeignHost fhost=null;
    try {
      fhost=new ForeignHost(this,hostId,socket);
    }
 catch (    java.io.IOException e) {
      e.printStackTrace();
    }
    m_foreignHosts[hostId]=fhost;
  }
  m_initialized=true;
  return new Object[]{m_joiner.m_timestamp,m_joiner.m_addr};
}
