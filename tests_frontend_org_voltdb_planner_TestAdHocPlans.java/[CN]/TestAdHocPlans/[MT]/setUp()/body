{
  String spSchema="create table PARTED1 (" + "PARTVAL bigint not null, " + "NONPART bigint not null,"+ "PRIMARY KEY(PARTVAL));"+ "create table PARTED2 ("+ "PARTVAL bigint not null, "+ "NONPART bigint not null,"+ "PRIMARY KEY(PARTVAL));"+ "create table PARTED3 ("+ "PARTVAL bigint not null, "+ "NONPART bigint not null,"+ "PRIMARY KEY(NONPART));"+ "create table REPPED1 ("+ "REPPEDVAL bigint not null, "+ "NONPART bigint not null,"+ "PRIMARY KEY(REPPEDVAL));"+ "create table REPPED2 ("+ "REPPEDVAL bigint not null, "+ "NONPART bigint not null,"+ "PRIMARY KEY(REPPEDVAL));";
  String pathToCatalog=Configuration.getPathToCatalogForTest("adhocsp.jar");
  String pathToDeployment=Configuration.getPathToCatalogForTest("adhocsp.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema(spSchema);
  builder.addPartitionInfo("PARTED1","PARTVAL");
  builder.addPartitionInfo("PARTED2","PARTVAL");
  builder.addPartitionInfo("PARTED3","PARTVAL");
  boolean success=builder.compile(pathToCatalog,2,1,0);
  assertTrue(success);
  MiscUtils.copyFile(builder.getPathToDeployment(),pathToDeployment);
  VoltDB.Configuration config=new VoltDB.Configuration();
  config.m_pathToCatalog=pathToCatalog;
  config.m_pathToDeployment=pathToDeployment;
  byte[] bytes=CatalogUtil.toBytes(new File(pathToCatalog));
  String serializedCatalog=CatalogUtil.loadCatalogFromJar(bytes,null);
  Catalog catalog=new Catalog();
  catalog.execute(serializedCatalog);
  CatalogContext context=new CatalogContext(0,catalog,bytes,0,0,0);
  m_pt=new PlannerTool(context);
}
