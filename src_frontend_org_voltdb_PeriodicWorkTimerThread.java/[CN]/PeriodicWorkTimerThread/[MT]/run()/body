{
  Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
  Thread.currentThread().setName("PeriodicWork");
  LinkedBlockingDeque<Object> foo=new LinkedBlockingDeque<Object>();
  while (true) {
    try {
      try {
        foo.poll(5,TimeUnit.MILLISECONDS);
      }
 catch (      InterruptedException e) {
        return;
      }
      for (      ClientInterface ci : m_clientInterfaces) {
        ci.processPeriodicWork();
      }
      final long currentTime=System.currentTimeMillis();
      if (m_statsManager != null && (currentTime - m_lastStatsManagerTime) >= StatsManager.POLL_INTERVAL) {
        m_lastStatsManagerTime=currentTime;
        m_statsManager.sendNotification();
      }
      if ((currentTime - m_lastSysStatsSCollection) >= 5000) {
        m_lastSysStatsSCollection=currentTime;
        boolean medium=false, large=false;
        if ((currentTime - m_lastSysStatsMCollection) >= 60000) {
          m_lastSysStatsMCollection=currentTime;
          medium=true;
        }
        if ((currentTime - m_lastSysStatsLCollection) >= 360000) {
          m_lastSysStatsLCollection=currentTime;
          large=true;
        }
        SystemStatsCollector.asyncSampleSystemNow(medium,large);
      }
    }
 catch (    Exception ex) {
      log.warn(ex.getMessage(),ex);
    }
  }
}
