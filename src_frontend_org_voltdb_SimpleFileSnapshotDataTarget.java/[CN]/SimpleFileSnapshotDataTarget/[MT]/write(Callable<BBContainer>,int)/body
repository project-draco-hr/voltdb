{
  final ListenableFuture<BBContainer> computedData=VoltDB.instance().getComputationService().submit(tupleData);
  return m_es.submit(new Callable<Object>(){
    @Override public Object call() throws Exception {
      try {
        final BBContainer data=computedData.get();
        if (data == null)         return null;
        if (m_writeFailed) {
          data.discard();
          return null;
        }
        try {
          int totalWritten=0;
          final ByteBuffer dataBuf=data.b();
          DefaultSnapshotDataTarget.enforceSnapshotRateLimit(dataBuf.remaining());
          while (dataBuf.hasRemaining()) {
            int written=m_fc.write(dataBuf);
            if (written > 0) {
              m_bytesWritten+=written;
              totalWritten+=written;
            }
          }
          if (m_bytesSinceLastSync.addAndGet(totalWritten) > m_bytesAllowedBeforeSync) {
            m_fc.force(false);
            m_bytesSinceLastSync.set(0);
          }
        }
  finally {
          data.discard();
        }
      }
 catch (      Throwable t) {
        m_writeException=t;
        m_writeFailed=true;
        throw Throwables.propagate(t);
      }
      return null;
    }
  }
);
}
