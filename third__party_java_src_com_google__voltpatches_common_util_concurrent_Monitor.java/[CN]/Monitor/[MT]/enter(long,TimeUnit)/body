{
  long timeoutNanos=unit.toNanos(time);
  final ReentrantLock lock=this.lock;
  if (!fair && lock.tryLock()) {
    return true;
  }
  long deadline=System.nanoTime() + timeoutNanos;
  boolean interrupted=Thread.interrupted();
  try {
    while (true) {
      try {
        return lock.tryLock(timeoutNanos,TimeUnit.NANOSECONDS);
      }
 catch (      InterruptedException interrupt) {
        interrupted=true;
        timeoutNanos=deadline - System.nanoTime();
      }
    }
  }
  finally {
    if (interrupted) {
      Thread.currentThread().interrupt();
    }
  }
}
