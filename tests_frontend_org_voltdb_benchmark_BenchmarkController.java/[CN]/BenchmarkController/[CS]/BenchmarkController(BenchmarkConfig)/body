{
  m_config=config;
  try {
    m_clientClass=(Class<? extends ClientMain>)Class.forName(m_config.benchmarkClient);
    Field builderClassField=m_clientClass.getField("m_projectBuilderClass");
    Field loaderClassField=m_clientClass.getField("m_loaderClass");
    Field jarFileNameField=m_clientClass.getField("m_jarFileName");
    m_builderClass=(Class<? extends VoltProjectBuilder>)builderClassField.get(null);
    m_loaderClass=(Class<? extends ClientMain>)loaderClassField.get(null);
    m_jarFileName=(String)jarFileNameField.get(null);
  }
 catch (  Exception e) {
    LogKeys logkey=LogKeys.benchmark_BenchmarkController_ErrorDuringReflectionForClient;
    benchmarkLog.l7dlog(Level.FATAL,logkey.name(),new Object[]{m_config.benchmarkClient},e);
    System.exit(-1);
  }
  uploader=new ResultsUploader(m_config.benchmarkClient,config);
  try {
    m_projectBuilder=m_builderClass.newInstance();
  }
 catch (  Exception e) {
    LogKeys logkey=LogKeys.benchmark_BenchmarkController_UnableToInstantiateProjectBuilder;
    benchmarkLog.l7dlog(Level.FATAL,logkey.name(),new Object[]{m_builderClass.getSimpleName()},e);
    System.exit(-1);
  }
  m_projectBuilder.addAllDefaults();
  if (config.snapshotFrequency != null && config.snapshotPath != null && config.snapshotPrefix != null && config.snapshotRetain > 0) {
    m_projectBuilder.setSnapshotSettings(config.snapshotFrequency,config.snapshotRetain,config.snapshotPath,config.snapshotPrefix);
  }
}
