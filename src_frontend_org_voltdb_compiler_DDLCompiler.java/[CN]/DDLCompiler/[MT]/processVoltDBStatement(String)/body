{
  if (statement == null) {
    return false;
  }
  String[] tokens=statement.trim().split("\\s+");
  if (tokens.length == 0) {
    return false;
  }
  if (tokens[0].equalsIgnoreCase("PARTITION")) {
    tokens=cleanupVoltDBDDLTerminator("PARTITION",tokens);
    if (tokens.length != 6 || !tokens[1].equalsIgnoreCase("table") || !tokens[3].equalsIgnoreCase("on") || !tokens[4].equalsIgnoreCase("column")) {
      throw m_compiler.new VoltCompilerException(String.format("Bad PARTITION DDL statement: \"%s\", " + "expected syntax: PARTITION TABLE <table> ON COLUMN <column>",StringUtils.join(tokens,' ')));
    }
    m_partitionMap.put(tokens[2],tokens[5]);
    return true;
  }
 else   if (tokens[0].equalsIgnoreCase("REPLICATE")) {
    tokens=cleanupVoltDBDDLTerminator("REPLICATE",tokens);
    if (tokens.length != 3 || !tokens[1].equalsIgnoreCase("table")) {
      throw m_compiler.new VoltCompilerException(String.format("Bad REPLICATE DDL statement: \"%s\", " + "expected syntax: REPLICATE TABLE <table>",StringUtils.join(tokens,' ')));
    }
    m_partitionMap.put(tokens[2],null);
    return true;
  }
  return false;
}
