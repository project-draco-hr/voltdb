{
  PartitionMetadata returnMetaData=null;
  loop:   for (  HostAndPort broker : m_brokers) {
    SimpleConsumer consumer=null;
    try {
      consumer=new SimpleConsumer(broker.getHost(),broker.getPort(),m_consumerSocketTimeout,m_fetchSize,"findLeader");
      List<String> topics=singletonList(m_topicAndPartition.topic());
      TopicMetadataRequest req=new TopicMetadataRequest(topics);
      kafka.javaapi.TopicMetadataResponse resp=consumer.send(req);
      List<TopicMetadata> metaData=resp.topicsMetadata();
      for (      TopicMetadata item : metaData) {
        for (        PartitionMetadata part : item.partitionsMetadata()) {
          if (part.partitionId() == m_topicAndPartition.partition()) {
            returnMetaData=part;
            break loop;
          }
        }
      }
    }
 catch (    Exception e) {
      error(e,"Error in finding leader for %s",m_topicAndPartition);
    }
 finally {
      closeConsumer(consumer);
    }
  }
  if (returnMetaData == null) {
    error(null,"Failed to find Leader for %s",m_topicAndPartition);
  }
  return returnMetaData;
}
