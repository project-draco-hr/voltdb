{
  File subroot=null;
  if (clearLocalDataDirectories) {
    try {
      subroot=VoltFile.initNewSubrootForThisProcess();
      m_subRoots.add(subroot);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    subroot=m_subRoots.get(0);
  }
  CommandLine cmdln=(templateCmdLine.makeCopy());
  cmdln.setJavaProperty(clusterHostIdProperty,String.valueOf(hostId));
  if (this.m_additionalProcessEnv != null) {
    for (    String name : this.m_additionalProcessEnv.keySet()) {
      cmdln.setJavaProperty(name,this.m_additionalProcessEnv.get(name));
    }
  }
  cmdln.internalPort(portGenerator.nextInternalPort());
  cmdln.voltFilePrefix(subroot.getPath());
  cmdln.internalPort(portGenerator.nextInternalPort());
  cmdln.port(portGenerator.nextClient());
  cmdln.adminPort(portGenerator.nextAdmin());
  cmdln.zkport(portGenerator.nextZkPort());
  cmdln.httpPort(portGenerator.nextHttp());
  cmdln.drAgentStartPort(portGenerator.nextReplicationPort());
  portGenerator.nextReplicationPort();
  portGenerator.nextReplicationPort();
  if (m_target == BackendTarget.NATIVE_EE_VALGRIND_IPC) {
    EEProcess proc=m_eeProcs.get(0);
    assert(proc != null);
    cmdln.m_ipcPort=proc.port();
  }
  if (m_target == BackendTarget.NATIVE_EE_IPC) {
    cmdln.m_ipcPort=portGenerator.next();
  }
  if ((m_versionOverrides != null) && (m_versionOverrides.length > 0)) {
    assert(m_versionOverrides[0] != null);
    assert(m_versionCheckRegexOverrides[0] != null);
    cmdln.m_versionStringOverrideForTest=m_versionOverrides[0];
    cmdln.m_versionCompatibilityRegexOverrideForTest=m_versionCheckRegexOverrides[0];
  }
  m_cluster.add(null);
  m_pipes.add(null);
  m_cmdLines.add(cmdln);
  m_localServer=new ServerThread(cmdln);
  m_localServer.start();
}
