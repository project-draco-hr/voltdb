{
  File subroot=null;
  if (clearLocalDataDirectories) {
    try {
      subroot=VoltFile.initNewSubrootForThisProcess();
      m_subRoots.add(subroot);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    subroot=m_subRoots.get(0);
  }
  CommandLine cmdln=(templateCmdLine.makeCopy());
  if (this.m_additionalProcessEnv != null) {
    for (    String name : this.m_additionalProcessEnv.keySet()) {
      cmdln.setJavaProperty(name,this.m_additionalProcessEnv.get(name));
    }
  }
  cmdln.internalPort(portGenerator.next());
  cmdln.voltFilePrefix(subroot.getPath());
  cmdln.internalPort(portGenerator.next());
  cmdln.port(portGenerator.nextClient());
  cmdln.adminPort(portGenerator.nextAdmin());
  cmdln.zkport(portGenerator.nextZkPort());
  cmdln.drAgentStartPort(portGenerator.nextReplicationPort());
  portGenerator.nextReplicationPort();
  portGenerator.nextReplicationPort();
  if (m_target == BackendTarget.NATIVE_EE_VALGRIND_IPC) {
    for (    EEProcess proc : m_eeProcs.get(0)) {
      assert(proc != null);
      cmdln.ipcPort(proc.port());
    }
  }
  if (m_target == BackendTarget.NATIVE_EE_IPC) {
    for (int i=0; i < m_siteCount; i++) {
      cmdln.m_ipcPorts.add(portGenerator.next());
    }
  }
  m_cluster.add(null);
  m_pipes.add(null);
  m_cmdLines.add(cmdln);
  m_localServer=new ServerThread(cmdln);
  m_localServer.start();
}
