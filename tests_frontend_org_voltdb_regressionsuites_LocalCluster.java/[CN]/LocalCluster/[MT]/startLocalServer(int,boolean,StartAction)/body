{
  File subroot=null;
  if (!isNewCli) {
    try {
      if (m_filePrefix != null) {
        subroot=m_filePrefix;
        m_subRoots.add(subroot);
      }
 else       if (clearLocalDataDirectories) {
        subroot=VoltFile.initNewSubrootForThisProcess();
        m_subRoots.add(subroot);
      }
 else {
        if (m_subRoots.size() <= hostId) {
          m_subRoots.add(VoltFile.initNewSubrootForThisProcess());
        }
        subroot=m_subRoots.get(hostId);
      }
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  CommandLine cmdln=(templateCmdLine.makeCopy());
  cmdln.startCommand(action);
  cmdln.setJavaProperty(clusterHostIdProperty,String.valueOf(hostId));
  if (this.m_additionalProcessEnv != null) {
    for (    String name : this.m_additionalProcessEnv.keySet()) {
      cmdln.setJavaProperty(name,this.m_additionalProcessEnv.get(name));
    }
  }
  if (!isNewCli) {
    cmdln.voltFilePrefix(subroot.getPath());
  }
  cmdln.internalPort(internalPortGenerator.nextInternalPort(hostId));
  cmdln.coordinators(internalPortGenerator.getCoordinators());
  cmdln.port(portGenerator.nextClient());
  cmdln.adminPort(portGenerator.nextAdmin());
  cmdln.zkport(portGenerator.nextZkPort());
  cmdln.httpPort(portGenerator.nextHttp());
  cmdln.drAgentStartPort(portGenerator.nextReplicationPort());
  portGenerator.nextReplicationPort();
  portGenerator.nextReplicationPort();
  if (m_target == BackendTarget.NATIVE_EE_VALGRIND_IPC) {
    EEProcess proc=m_eeProcs.get(hostId);
    assert(proc != null);
    cmdln.m_ipcPort=proc.port();
  }
  if (m_target == BackendTarget.NATIVE_EE_IPC) {
    cmdln.m_ipcPort=portGenerator.next();
  }
  if ((m_versionOverrides != null) && (m_versionOverrides.length > hostId)) {
    assert(m_versionOverrides[hostId] != null);
    assert(m_versionCheckRegexOverrides[hostId] != null);
    cmdln.m_versionStringOverrideForTest=m_versionOverrides[hostId];
    cmdln.m_versionCompatibilityRegexOverrideForTest=m_versionCheckRegexOverrides[hostId];
    if ((m_buildStringOverrides != null) && (m_buildStringOverrides.length > hostId)) {
      assert(m_buildStringOverrides[hostId] != null);
      cmdln.m_buildStringOverrideForTest=m_buildStringOverrides[hostId];
    }
  }
  if ((m_modeOverrides != null) && (m_modeOverrides.length > hostId)) {
    assert(m_modeOverrides[hostId] != null);
    cmdln.m_modeOverrideForTest=m_modeOverrides[hostId];
  }
  m_cluster.add(null);
  m_pipes.add(null);
  m_cmdLines.add(cmdln);
  if (isNewCli) {
    cmdln.m_startAction=StartAction.PROBE;
    cmdln.m_hostCount=m_hostCount;
    String hostIdStr=cmdln.getJavaProperty(clusterHostIdProperty);
    String root=m_hostRoots.get(hostIdStr);
    cmdln.pathToDeployment(null);
    cmdln.voltdbRoot(root);
  }
  m_localServer=new ServerThread(cmdln);
  m_localServer.start();
}
