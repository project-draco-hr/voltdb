{
  assert(jarFileName != null);
  assert(siteCount > 0);
  assert(hostCount > 0);
  StackTraceElement[] traces=Thread.currentThread().getStackTrace();
  m_callingClassName="UnknownClass";
  m_callingMethodName="unknownMethod";
  int i;
  for (i=0; traces[i].getClassName().equals(getClass().getName()) == false; i++)   ;
  for (; traces[i].getClassName().equals(getClass().getName()); i++)   ;
  int dot=traces[i].getClassName().lastIndexOf('.');
  m_callingClassName=traces[i].getClassName().substring(dot + 1);
  m_callingMethodName=traces[i].getMethodName();
  log.info("Instantiating LocalCluster for " + jarFileName + " with class.method: "+ m_callingClassName+ "."+ m_callingMethodName);
  log.info("Sites: " + siteCount + " hosts: "+ hostCount+ " replication factor: "+ kfactor);
  m_cluster.ensureCapacity(hostCount);
  m_siteCount=siteCount;
  m_hostCount=hostCount;
  m_kfactor=kfactor;
  m_debug=debug;
  m_target=target;
  m_jarFileName=jarFileName;
  m_failureState=kfactor < 1 ? FailureState.ALL_RUNNING : failureState;
  m_pipes=new ArrayList<PipeToFile>();
  m_cmdLines=new ArrayList<CommandLine>();
  String buildDir=System.getenv("VOLTDB_BUILD_DIR");
  if (buildDir == null) {
    buildDir=System.getProperty("user.dir") + "/obj/release";
  }
  String jzmq_dir=System.getenv("VOLTDB_JZMQ_DIR");
  if (jzmq_dir == null) {
    jzmq_dir=System.getProperty("user.dir") + "/third_party/cpp/jnilib";
  }
  String java_library_path=buildDir + "/nativelibs" + ":"+ jzmq_dir;
  java_library_path=System.getProperty("java.library.path",java_library_path);
  String classPath=System.getProperty("java.class.path") + ":" + buildDir+ File.separator+ m_jarFileName+ ":"+ buildDir+ File.separator+ "prod";
  String log4j=System.getProperty("log4j.configuration");
  if (log4j == null) {
    log4j="file://" + System.getProperty("user.dir") + "/tests/log4j-allconsole.xml";
  }
  boolean enable_iv2=false;
  String iv2=System.getenv().get("VOLT_ENABLEIV2");
  System.out.println("LOCALCLUSTER ENABLE IV2: " + iv2);
  if (iv2 != null && iv2.equals("true")) {
    enable_iv2=true;
  }
  m_procBuilder=new ProcessBuilder();
  m_procBuilder.redirectErrorStream(true);
  Thread shutdownThread=new Thread(new ShutDownHookThread());
  java.lang.Runtime.getRuntime().addShutdownHook(shutdownThread);
  this.templateCmdLine.addTestOptions(true).leader("").target(target).startCommand("create").jarFileName(VoltDB.Configuration.getPathToCatalogForTest(m_jarFileName)).buildDir(buildDir).javaLibraryPath(java_library_path).classPath(classPath).pathToLicense(ServerThread.getTestLicensePath()).log4j(log4j).enableIV2(enable_iv2);
}
