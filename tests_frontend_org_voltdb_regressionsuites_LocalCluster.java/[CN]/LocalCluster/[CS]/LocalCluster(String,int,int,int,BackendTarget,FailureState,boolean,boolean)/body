{
  System.out.println("Instantiating LocalCluster for " + jarFileName);
  System.out.println("Sites: " + siteCount + " hosts: "+ hostCount+ " replication factor: "+ kfactor);
  assert(jarFileName != null);
  assert(siteCount > 0);
  assert(hostCount > 0);
  m_cluster.ensureCapacity(hostCount);
  m_siteCount=siteCount;
  m_hostCount=hostCount;
  m_kfactor=kfactor;
  m_debug=debug;
  m_failureState=kfactor < 1 ? FailureState.ALL_RUNNING : failureState;
  m_pipes=new ArrayList<PipeToFile>();
  m_cmdLines=new ArrayList<CommandLine>();
  String buildDir=System.getenv("VOLTDB_BUILD_DIR");
  if (buildDir == null) {
    buildDir=System.getProperty("user.dir") + "/obj/release";
  }
  String jzmq_dir=System.getenv("VOLTDB_JZMQ_DIR");
  if (jzmq_dir == null) {
    jzmq_dir=System.getProperty("user.dir") + "/third_party/cpp/jnilib";
  }
  String classPath=System.getProperty("java.class.path") + ":" + buildDir+ File.separator+ jarFileName+ ":"+ buildDir+ File.separator+ "prod";
  String log4j=System.getProperty("log4j.configuration");
  if (log4j == null) {
    log4j="file://" + System.getProperty("user.dir") + "/src/frontend/junit_log4j.properties";
  }
  m_procBuilder=new ProcessBuilder();
  m_procBuilder.redirectErrorStream(true);
  Thread shutdownThread=new Thread(new ShutDownHookThread());
  java.lang.Runtime.getRuntime().addShutdownHook(shutdownThread);
  this.templateCmdLine.target(target).startCommand(VoltDB.START_ACTION.CREATE).jarFileName(VoltDB.Configuration.getPathToCatalogForTest(jarFileName)).buildDir(buildDir).jzmqDir(jzmq_dir).classPath(classPath).pathToLicense(ServerThread.getTestLicensePath()).log4j(log4j);
}
