def sanitize_replace(match):
    if (not match.re.groups):
        return ''
    spans = []
    group_start = match.start()
    for idx in range(match.re.groups):
        (start, end) = match.span((idx + 1))
        if (start < end):
            start -= group_start
            end -= group_start
            spans.append((end, start))
    spans.sort()
    spans.reverse()
    text = match.group()
    last_cut = len(text)
    for (end, start) in spans:
        end = min(end, last_cut)
        if (start >= end):
            continue
        text = (text[:start] + text[end:])
        last_cut = start
    return text
