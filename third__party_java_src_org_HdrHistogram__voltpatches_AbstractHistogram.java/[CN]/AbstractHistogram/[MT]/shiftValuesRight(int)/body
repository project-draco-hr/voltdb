{
  if (numberOfBinaryOrdersOfMagnitude < 0) {
    throw new IllegalArgumentException("Cannot shift by a negative number of magnitudes");
  }
  if (numberOfBinaryOrdersOfMagnitude == 0) {
    return;
  }
  if (getTotalCount() == getCountAtIndex(0)) {
    return;
  }
  final int shiftAmount=subBucketHalfCount * numberOfBinaryOrdersOfMagnitude;
  int minNonZeroValueIndex=countsArrayIndex(getMinNonZeroValue());
  if (minNonZeroValueIndex < shiftAmount + subBucketHalfCount) {
    throw new ArrayIndexOutOfBoundsException("Operation would underflow and lose precision of already recorded value counts");
  }
  long maxValueBeforeShift=maxValueUpdater.getAndSet(this,0);
  long minNonZeroValueBeforeShift=minNonZeroValueUpdater.getAndSet(this,Long.MAX_VALUE);
  shiftNormalizingIndexByOffset(-shiftAmount,false);
  updateMinAndMax(maxValueBeforeShift >> numberOfBinaryOrdersOfMagnitude);
  if (minNonZeroValueBeforeShift < Long.MAX_VALUE) {
    updateMinAndMax(minNonZeroValueBeforeShift >> numberOfBinaryOrdersOfMagnitude);
  }
}
