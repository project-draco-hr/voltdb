{
  this.highestTrackableValue=highestTrackableValue;
  this.numberOfSignificantValueDigits=numberOfSignificantValueDigits;
  this.lowestTrackableValue=lowestTrackableValue;
  final long largestValueWithSingleUnitResolution=2 * (long)Math.pow(10,numberOfSignificantValueDigits);
  unitMagnitude=(int)Math.floor(Math.log(lowestTrackableValue) / Math.log(2));
  int subBucketCountMagnitude=(int)Math.ceil(Math.log(largestValueWithSingleUnitResolution) / Math.log(2));
  subBucketHalfCountMagnitude=((subBucketCountMagnitude > 1) ? subBucketCountMagnitude : 1) - 1;
  subBucketCount=(int)Math.pow(2,(subBucketHalfCountMagnitude + 1));
  subBucketHalfCount=subBucketCount / 2;
  subBucketMask=(subBucketCount - 1) << unitMagnitude;
  long trackableValue=(subBucketCount - 1) << unitMagnitude;
  int bucketsNeeded=1;
  while (trackableValue < highestTrackableValue) {
    trackableValue<<=1;
    bucketsNeeded++;
  }
  this.bucketCount=bucketsNeeded;
  countsArrayLength=(bucketCount + 1) * (subBucketCount / 2);
  setTotalCount(totalCount);
  histogramData=new HistogramData(this);
}
