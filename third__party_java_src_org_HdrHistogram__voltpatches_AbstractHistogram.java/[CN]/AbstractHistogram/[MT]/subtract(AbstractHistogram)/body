{
  long highestRecordableValue=valueFromIndex(countsArrayLength - 1);
  if (highestRecordableValue < otherHistogram.getMaxValue()) {
    if (!isAutoResize()) {
      throw new ArrayIndexOutOfBoundsException("The other histogram includes values that do not fit in this histogram's range.");
    }
    resize(otherHistogram.getMaxValue());
  }
  if ((bucketCount == otherHistogram.bucketCount) && (subBucketCount == otherHistogram.subBucketCount) && (unitMagnitude == otherHistogram.unitMagnitude)&& (getNormalizingIndexOffset() == otherHistogram.getNormalizingIndexOffset())) {
    long observedOtherTotalCount=0;
    for (int i=0; i < otherHistogram.countsArrayLength; i++) {
      long otherCount=otherHistogram.getCountAtIndex(i);
      if (otherCount > 0) {
        if (getCountAtIndex(i) < otherCount) {
          throw new IllegalArgumentException("otherHistogram count (" + otherCount + ") at value "+ valueFromIndex(i)+ " is larger than this one's ("+ getCountAtIndex(i)+ ")");
        }
        addToCountAtIndex(i,-otherCount);
        observedOtherTotalCount+=otherCount;
      }
    }
    setTotalCount(getTotalCount() - observedOtherTotalCount);
    updatedMaxValue(Math.max(getMaxValue(),otherHistogram.getMaxValue()));
    updateMinNonZeroValue(Math.min(getMinNonZeroValue(),otherHistogram.getMinNonZeroValue()));
  }
 else {
    for (int i=0; i < otherHistogram.countsArrayLength; i++) {
      long otherCount=otherHistogram.getCountAtIndex(i);
      if (otherCount > 0) {
        long otherValue=otherHistogram.valueFromIndex(i);
        if (getCountAtValue(otherValue) < otherCount) {
          throw new IllegalArgumentException("otherHistogram count (" + otherCount + ") at value "+ otherValue+ " is larger than this one's ("+ getCountAtValue(otherValue)+ ")");
        }
        recordValueWithCount(otherValue,-otherCount);
      }
    }
  }
  if ((getCountAtValue(getMaxValue()) <= 0) || getCountAtValue(getMinNonZeroValue()) <= 0) {
    establishInternalTackingValues();
  }
}
