{
  if (useCsvFormat) {
    printStream.format("\"Value\",\"Percentile\",\"TotalCount\",\"1/(1-Percentile)\"\n");
  }
 else {
    printStream.format("%12s %14s %10s %14s\n\n","Value","Percentile","TotalCount","1/(1-Percentile)");
  }
  PercentileIterator iterator=percentileIterator;
  iterator.reset(percentileTicksPerHalfDistance);
  String percentileFormatString;
  String lastLinePercentileFormatString;
  if (useCsvFormat) {
    percentileFormatString="%." + numberOfSignificantValueDigits + "f,%.12f,%d,%.2f\n";
    lastLinePercentileFormatString="%." + numberOfSignificantValueDigits + "f,%.12f,%d,Infinity\n";
  }
 else {
    percentileFormatString="%12." + numberOfSignificantValueDigits + "f %2.12f %10d %14.2f\n";
    lastLinePercentileFormatString="%12." + numberOfSignificantValueDigits + "f %2.12f %10d\n";
  }
  while (iterator.hasNext()) {
    HistogramIterationValue iterationValue=iterator.next();
    if (iterationValue.getPercentileLevelIteratedTo() != 100.0D) {
      printStream.format(Locale.US,percentileFormatString,iterationValue.getValueIteratedTo() / outputValueUnitScalingRatio,iterationValue.getPercentileLevelIteratedTo() / 100.0D,iterationValue.getTotalCountToThisValue(),1 / (1.0D - (iterationValue.getPercentileLevelIteratedTo() / 100.0D)));
    }
 else {
      printStream.format(Locale.US,lastLinePercentileFormatString,iterationValue.getValueIteratedTo() / outputValueUnitScalingRatio,iterationValue.getPercentileLevelIteratedTo() / 100.0D,iterationValue.getTotalCountToThisValue());
    }
  }
  if (!useCsvFormat) {
    double mean=getMean() / outputValueUnitScalingRatio;
    double std_deviation=getStdDeviation() / outputValueUnitScalingRatio;
    printStream.format(Locale.US,"#[Mean    = %12." + numberOfSignificantValueDigits + "f, StdDeviation   = %12."+ numberOfSignificantValueDigits+ "f]\n",mean,std_deviation);
    printStream.format(Locale.US,"#[Max     = %12." + numberOfSignificantValueDigits + "f, Total count    = %12d]\n",getMaxValue() / outputValueUnitScalingRatio,getTotalCount());
    printStream.format(Locale.US,"#[Buckets = %12d, SubBuckets     = %12d]\n",bucketCount,subBucketCount);
  }
}
