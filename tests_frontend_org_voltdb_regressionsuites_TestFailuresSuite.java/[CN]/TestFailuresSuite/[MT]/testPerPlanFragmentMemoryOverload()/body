{
  if (isHSQL())   return;
  System.out.println("STARTING testPerPlanFragmentMemoryOverload");
  Client client=getClient();
  VoltTable[] results=null;
  int nextId=0;
  for (int mb=0; mb < 75; mb+=5) {
    results=client.callProcedure("InsertLotsOfData",0,nextId);
    assertEquals(1,results.length);
    assertTrue(nextId < results[0].asScalarLong());
    nextId=(int)results[0].asScalarLong();
    System.err.println("Inserted " + (mb + 5) + "mb");
  }
  results=client.callProcedure("FetchTooMuch",0);
  assertEquals(1,results.length);
  assertTrue(1 < results[0].asScalarLong());
  System.out.println("Fetched the 75 megabytes");
  for (int mb=0; mb < 75; mb+=5) {
    results=client.callProcedure("InsertLotsOfData",0,nextId);
    assertEquals(1,results.length);
    assertTrue(nextId < results[0].asScalarLong());
    nextId=(int)results[0].asScalarLong();
    System.err.println("Inserted " + (mb + 80) + "mb");
  }
  try {
    results=client.callProcedure("FetchTooMuch",0);
  }
 catch (  ProcCallException e) {
    e.printStackTrace();
    return;
  }
  fail("Should gracefully fail from using too much temp table memory, but didn't.");
}
