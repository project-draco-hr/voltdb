{
  super(type);
  nodes=new Expression[BINARY];
  nodes[LEFT]=left;
  nodes[RIGHT]=right;
switch (opType) {
case OpTypes.EQUAL:
    if (left.opType == OpTypes.COLUMN && right.opType == OpTypes.COLUMN) {
      isColumnEqual=true;
    }
case OpTypes.GREATER_EQUAL:
case OpTypes.GREATER:
case OpTypes.SMALLER:
case OpTypes.SMALLER_EQUAL:
case OpTypes.NOT_EQUAL:
case OpTypes.OVERLAPS:
case OpTypes.NOT_DISTINCT:
case OpTypes.IN:
case OpTypes.MATCH_SIMPLE:
case OpTypes.MATCH_PARTIAL:
case OpTypes.MATCH_FULL:
case OpTypes.MATCH_UNIQUE_SIMPLE:
case OpTypes.MATCH_UNIQUE_PARTIAL:
case OpTypes.MATCH_UNIQUE_FULL:
case OpTypes.AND:
case OpTypes.OR:
  dataType=Type.SQL_BOOLEAN;
break;
default :
throw Error.runtimeError(ErrorCode.U_S0500,"Expression");
}
}
