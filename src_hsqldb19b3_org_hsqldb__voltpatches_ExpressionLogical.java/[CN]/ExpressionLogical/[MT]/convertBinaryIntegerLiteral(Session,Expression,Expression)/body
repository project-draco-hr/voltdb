{
  Expression nonIntegralExpr;
  if (lhs.dataType.isIntegralType()) {
    nonIntegralExpr=rhs;
  }
 else   if (rhs.dataType.isIntegralType()) {
    nonIntegralExpr=lhs;
  }
 else {
    return false;
  }
  if (nonIntegralExpr.opType == OpTypes.VALUE && nonIntegralExpr.dataType.isBinaryType()) {
    int whichChild=(nonIntegralExpr == rhs) ? RIGHT : LEFT;
    ExpressionValue exprVal=(ExpressionValue)nonIntegralExpr;
    return exprVal.mutateToBigintType(this,whichChild);
  }
  return false;
}
