{
switch (opType) {
case OpTypes.IS_NULL:
    return nodes[LEFT].opType == OpTypes.COLUMN && nodes[LEFT].getRangeVariable() == rangeVar ? this : null;
case OpTypes.NOT:
  return nodes[LEFT].opType == OpTypes.IS_NULL && nodes[LEFT].nodes[LEFT].opType == OpTypes.COLUMN && nodes[LEFT].nodes[LEFT].getRangeVariable() == rangeVar ? this : null;
case OpTypes.EQUAL:
if (exprSubType == OpTypes.ANY_QUANTIFIED) {
  if (nodes[RIGHT].isCorrelated) {
    return null;
  }
  return nodes[LEFT].nodes[0].opType == OpTypes.COLUMN && nodes[LEFT].nodes[0].getRangeVariable() == rangeVar ? this : null;
}
case OpTypes.GREATER:
case OpTypes.GREATER_EQUAL:
case OpTypes.SMALLER:
case OpTypes.SMALLER_EQUAL:
if (exprSubType != 0) {
return null;
}
if (nodes[LEFT].opType == OpTypes.COLUMN && nodes[LEFT].getRangeVariable() == rangeVar) {
if (nodes[RIGHT].hasReference(rangeVar)) {
return null;
}
return this;
}
if (nodes[RIGHT].opType == OpTypes.COLUMN && nodes[RIGHT].getRangeVariable() == rangeVar) {
swapCondition();
if (nodes[RIGHT].hasReference(rangeVar)) {
return null;
}
return this;
}
default :
return null;
}
}
