{
  try {
    stringer.key("drTupleStreamStateInfo");
    stringer.object();
    for (    Map.Entry<Integer,TupleStreamStateInfo> e : m_drTupleStreamInfo.entrySet()) {
      stringer.key(e.getKey().toString());
      stringer.object();
      if (e.getKey() != MpInitiator.MP_INIT_PID) {
        stringer.key("sequenceNumber").value(e.getValue().partitionInfo.drId);
        stringer.key("spUniqueId").value(e.getValue().partitionInfo.spUniqueId);
        stringer.key("mpUniqueId").value(e.getValue().partitionInfo.mpUniqueId);
      }
 else {
        stringer.key("sequenceNumber").value(e.getValue().replicatedInfo.drId);
        stringer.key("spUniqueId").value(e.getValue().replicatedInfo.spUniqueId);
        stringer.key("mpUniqueId").value(e.getValue().replicatedInfo.mpUniqueId);
      }
      stringer.endObject();
    }
    stringer.endObject();
  }
 catch (  JSONException e) {
    throw new IOException(e);
  }
}
