{
  JSONObject dcIdMap;
  if (jsonObj.has("remoteDCLastIds")) {
    dcIdMap=jsonObj.getJSONObject("remoteDCLastIds");
  }
 else {
    dcIdMap=new JSONObject();
    jsonObj.put("remoteDCLastIds",dcIdMap);
  }
  for (  Map.Entry<Integer,Map<Integer,DRConsumerDrIdTracker>> dcEntry : m_remoteDCLastIds.entrySet()) {
    JSONObject lastSeenIds;
    final String dcKeyString=dcEntry.getKey().toString();
    if (dcIdMap.has(dcKeyString)) {
      lastSeenIds=dcIdMap.getJSONObject(dcKeyString);
    }
 else {
      lastSeenIds=new JSONObject();
      dcIdMap.put(dcKeyString,lastSeenIds);
    }
    for (    Map.Entry<Integer,DRConsumerDrIdTracker> partitionEntry : dcEntry.getValue().entrySet()) {
      final String partitionIdString=partitionEntry.getKey().toString();
      if (!lastSeenIds.has(partitionIdString)) {
        JSONObject ids=new JSONObject();
        ids.put("lastAckedDrId",partitionEntry.getValue().getLastAckedDrId());
        ids.put("spUniqueId",partitionEntry.getValue().getLastSpUniqueId());
        ids.put("mpUniqueId",partitionEntry.getValue().getLastMpUniqueId());
        JSONObject drIdRanges=new JSONObject();
        for (        Map.Entry<Long,Long> sequenceRange : partitionEntry.getValue().getDrIdRanges().entrySet()) {
          drIdRanges.put(sequenceRange.getKey().toString(),sequenceRange.getValue());
        }
        ids.put("drIdRanges",drIdRanges);
      }
    }
  }
}
