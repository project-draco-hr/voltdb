{
  JSONObject stateInfoMap;
  long clusterCreateTime=VoltDB.instance().getClusterCreateTime();
  assert(!jsonObj.has("clusterCreateTime") || (clusterCreateTime == jsonObj.getLong("clusterCreateTime")));
  jsonObj.put("clusterCreateTime",clusterCreateTime);
  if (jsonObj.has("drTupleStreamStateInfo")) {
    stateInfoMap=jsonObj.getJSONObject("drTupleStreamStateInfo");
  }
 else {
    stateInfoMap=new JSONObject();
    jsonObj.put("drTupleStreamStateInfo",stateInfoMap);
  }
  for (  Map.Entry<Integer,TupleStreamStateInfo> e : m_drTupleStreamInfo.entrySet()) {
    final String partitionId=e.getKey().toString();
    DRLogSegmentId partitionStateInfo;
    if (e.getKey() != MpInitiator.MP_INIT_PID) {
      partitionStateInfo=e.getValue().partitionInfo;
    }
 else {
      partitionStateInfo=e.getValue().replicatedInfo;
    }
    JSONObject existingStateInfo=stateInfoMap.optJSONObject(partitionId);
    if (existingStateInfo == null || partitionStateInfo.drId > existingStateInfo.getLong("sequenceNumber")) {
      JSONObject stateInfo=new JSONObject();
      stateInfo.put("sequenceNumber",partitionStateInfo.drId);
      stateInfo.put("spUniqueId",partitionStateInfo.spUniqueId);
      stateInfo.put("mpUniqueId",partitionStateInfo.mpUniqueId);
      stateInfo.put("drVersion",e.getValue().drVersion);
      stateInfoMap.put(partitionId,stateInfo);
    }
  }
}
