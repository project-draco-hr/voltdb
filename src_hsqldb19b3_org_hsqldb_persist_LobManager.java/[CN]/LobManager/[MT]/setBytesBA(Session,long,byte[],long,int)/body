{
  Object[] data=getLobHeader(session,lobID);
  if (data == null) {
    return Result.newErrorResult(Error.error(ErrorCode.X_0F502));
  }
  long oldLength=((Long)data[1]).longValue();
  int blockOffset=(int)(offset / lobBlockSize);
  int byteBlockOffset=(int)(offset % lobBlockSize);
  int blockLimit=(int)((offset + length) / lobBlockSize);
  int byteLimitOffset=(int)((offset + length) % lobBlockSize);
  if (byteLimitOffset == 0) {
    byteLimitOffset=lobBlockSize;
  }
 else {
    blockLimit++;
  }
  int[][] blockAddresses=getBlockAddresses(session,lobID,blockOffset,blockLimit);
  byte[] newBytes=new byte[(blockLimit - blockOffset) * lobBlockSize];
  if (blockAddresses.length > 0) {
    int blockAddress=blockAddresses[0][0] + (blockOffset - blockAddresses[0][2]);
    try {
      byte[] block=lobStore.getBlockBytes(blockAddress,1);
      System.arraycopy(block,0,newBytes,0,lobBlockSize);
      if (blockAddresses.length > 1) {
        blockAddress=blockAddresses[blockAddresses.length - 1][0] + (blockLimit - blockAddresses[blockAddresses.length - 1][2] - 1);
        block=lobStore.getBlockBytes(blockAddress,1);
        System.arraycopy(block,0,newBytes,blockLimit - blockOffset - 1,lobBlockSize);
      }
 else       if (blockLimit - blockOffset > 1) {
        blockAddress=blockAddresses[0][0] + (blockLimit - blockAddresses[0][2] - 1);
        block=lobStore.getBlockBytes(blockAddress,1);
        System.arraycopy(block,0,newBytes,(blockLimit - blockOffset - 1) * lobBlockSize,lobBlockSize);
      }
    }
 catch (    HsqlException e) {
      return Result.newErrorResult(e);
    }
    divideBlockAddresses(session,lobID,blockOffset);
    divideBlockAddresses(session,lobID,blockLimit);
    deleteBlockAddresses(session,lobID,blockOffset,blockLimit);
  }
  createBlockAddresses(session,lobID,blockOffset,blockLimit - blockOffset);
  System.arraycopy(dataBytes,0,newBytes,byteBlockOffset,length);
  blockAddresses=getBlockAddresses(session,lobID,blockOffset,blockLimit);
  try {
    for (int i=0; i < blockAddresses.length; i++) {
      lobStore.setBlockBytes(newBytes,blockAddresses[i][0],blockAddresses[i][1]);
    }
  }
 catch (  HsqlException e) {
    return Result.newErrorResult(e);
  }
  if (offset + length > oldLength) {
    oldLength=offset + length;
    setLength(session,lobID,oldLength);
  }
  return ResultLob.newLobSetResponse(lobID,0);
}
