{
  VoltXMLElement winspec=new VoltXMLElement("winspec");
  VoltXMLElement winargs=new VoltXMLElement("winargs");
  exp.children.add(winspec);
  exp.children.add(winargs);
  if (nodes.length > 0) {
    for (    Expression expr : nodes) {
      winargs.children.add(expr.voltGetXML(context,null));
    }
  }
  if (m_partitionByList.size() > 0) {
    VoltXMLElement pxe=new VoltXMLElement("partitionbyList");
    winspec.children.add(pxe);
    for (    Expression e : m_partitionByList) {
      pxe.children.add(e.voltGetXML(context,null));
    }
  }
  VoltXMLElement rxe=new VoltXMLElement("orderbyList");
  winspec.children.add(rxe);
  if (m_sortAndSlice != null) {
    for (int i=0; i < m_sortAndSlice.exprList.size(); i++) {
      Expression e=(Expression)m_sortAndSlice.exprList.get(i);
      assert(e instanceof ExpressionOrderBy);
      ExpressionOrderBy expr=(ExpressionOrderBy)e;
      VoltXMLElement orderby=expr.voltGetXML(context,null);
      boolean isDecending=expr.isDescending();
      orderby.attributes.put("decending",isDecending ? "true" : "false");
      rxe.children.add(orderby);
    }
  }
  return exp;
}
