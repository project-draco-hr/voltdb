{
  System.out.println("\n\nTESTING INDEX STATS\n\n\n");
  Client client=getFullyConnectedClient();
  ColumnInfo[] expectedSchema=new ColumnInfo[12];
  expectedSchema[0]=new ColumnInfo("TIMESTAMP",VoltType.BIGINT);
  expectedSchema[1]=new ColumnInfo("HOST_ID",VoltType.INTEGER);
  expectedSchema[2]=new ColumnInfo("HOSTNAME",VoltType.STRING);
  expectedSchema[3]=new ColumnInfo("SITE_ID",VoltType.INTEGER);
  expectedSchema[4]=new ColumnInfo("PARTITION_ID",VoltType.BIGINT);
  expectedSchema[5]=new ColumnInfo("INDEX_NAME",VoltType.STRING);
  expectedSchema[6]=new ColumnInfo("TABLE_NAME",VoltType.STRING);
  expectedSchema[7]=new ColumnInfo("INDEX_TYPE",VoltType.STRING);
  expectedSchema[8]=new ColumnInfo("IS_UNIQUE",VoltType.TINYINT);
  expectedSchema[9]=new ColumnInfo("IS_COUNTABLE",VoltType.TINYINT);
  expectedSchema[10]=new ColumnInfo("ENTRY_COUNT",VoltType.BIGINT);
  expectedSchema[11]=new ColumnInfo("MEMORY_ESTIMATE",VoltType.INTEGER);
  VoltTable expectedTable=new VoltTable(expectedSchema);
  VoltTable[] results=null;
  boolean success=false;
  long start=System.currentTimeMillis();
  while (!success) {
    if (System.currentTimeMillis() - start > 120000)     fail("Took too long");
    success=true;
    results=client.callProcedure("@Statistics","index",0).getResults();
    System.out.println("Index results: " + results[0].toString());
    assertEquals(1,results.length);
    validateSchema(results[0],expectedTable);
    if (success) {
      success=validateRowSeenAtAllSites(results[0],"INDEX_NAME","W_PK_TREE",true);
    }
    if (success) {
      success=validateRowSeenAtAllSites(results[0],"INDEX_NAME","I_PK_TREE",true);
    }
    if (success)     break;
  }
}
