{
  System.out.println("\n\nTESTING INITIATOR STATS\n\n\n");
  Client client=getFullyConnectedClient();
  ColumnInfo[] expectedSchema=new ColumnInfo[13];
  expectedSchema[0]=new ColumnInfo("TIMESTAMP",VoltType.BIGINT);
  expectedSchema[1]=new ColumnInfo("HOST_ID",VoltType.INTEGER);
  expectedSchema[2]=new ColumnInfo("HOSTNAME",VoltType.STRING);
  expectedSchema[3]=new ColumnInfo("SITE_ID",VoltType.INTEGER);
  expectedSchema[4]=new ColumnInfo("CONNECTION_ID",VoltType.BIGINT);
  expectedSchema[5]=new ColumnInfo("CONNECTION_HOSTNAME",VoltType.STRING);
  expectedSchema[6]=new ColumnInfo("PROCEDURE_NAME",VoltType.STRING);
  expectedSchema[7]=new ColumnInfo("INVOCATIONS",VoltType.BIGINT);
  expectedSchema[8]=new ColumnInfo("AVG_EXECUTION_TIME",VoltType.INTEGER);
  expectedSchema[9]=new ColumnInfo("MIN_EXECUTION_TIME",VoltType.INTEGER);
  expectedSchema[10]=new ColumnInfo("MAX_EXECUTION_TIME",VoltType.INTEGER);
  expectedSchema[11]=new ColumnInfo("ABORTS",VoltType.BIGINT);
  expectedSchema[12]=new ColumnInfo("FAILURES",VoltType.BIGINT);
  VoltTable expectedTable=new VoltTable(expectedSchema);
  VoltTable results[]=null;
  for (int i=0; i < SITES * HOSTS; i++) {
    results=client.callProcedure("NEW_ORDER.insert",i).getResults();
  }
  results=client.callProcedure("@Statistics","INITIATOR",0).getResults();
  assertEquals(1,results.length);
  System.out.println("Test initiators table: " + results[0].toString());
  validateSchema(results[0],expectedTable);
  assertEquals(HOSTS + 1,results[0].getRowCount());
  int counts=0;
  while (results[0].advanceRow()) {
    String procName=results[0].getString("PROCEDURE_NAME");
    if (procName.equals("@SystemCatalog")) {
      assertEquals(HOSTS,results[0].getLong("INVOCATIONS"));
    }
 else     if (procName.equals("NEW_ORDER.insert")) {
      counts+=results[0].getLong("INVOCATIONS");
    }
  }
  assertEquals(HOSTS * SITES,counts);
  validateRowSeenAtAllHosts(results[0],"PROCEDURE_NAME","NEW_ORDER.insert",true);
}
