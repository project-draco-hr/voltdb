{
  System.out.println("\n\nTESTING TABLE STATS\n\n\n");
  Client client=getFullyConnectedClient();
  ColumnInfo[] expectedSchema=new ColumnInfo[11];
  expectedSchema[0]=new ColumnInfo("TIMESTAMP",VoltType.BIGINT);
  expectedSchema[1]=new ColumnInfo("HOST_ID",VoltType.BIGINT);
  expectedSchema[2]=new ColumnInfo("HOSTNAME",VoltType.STRING);
  expectedSchema[3]=new ColumnInfo("SITE_ID",VoltType.BIGINT);
  expectedSchema[4]=new ColumnInfo("PARTITION_ID",VoltType.BIGINT);
  expectedSchema[5]=new ColumnInfo("TABLE_NAME",VoltType.STRING);
  expectedSchema[6]=new ColumnInfo("TABLE_TYPE",VoltType.STRING);
  expectedSchema[7]=new ColumnInfo("TUPLE_COUNT",VoltType.BIGINT);
  expectedSchema[8]=new ColumnInfo("TUPLE_ALLOCATED_MEMORY",VoltType.INTEGER);
  expectedSchema[9]=new ColumnInfo("TUPLE_DATA_MEMORY",VoltType.INTEGER);
  expectedSchema[10]=new ColumnInfo("STRING_DATA_MEMORY",VoltType.INTEGER);
  VoltTable expectedTable=new VoltTable(expectedSchema);
  VoltTable[] results=null;
  results=client.callProcedure("@Statistics","table",0).getResults();
  System.out.println("Test statistics table: " + results[0].toString());
  assertEquals(1,results.length);
  validateSchema(results[0],expectedTable);
  assertEquals(hosts * sites * 3,results[0].getRowCount());
  validateRowSeenAtAllSites(results[0],"TABLE_NAME","WAREHOUSE",true);
  validateRowSeenAtAllSites(results[0],"TABLE_NAME","NEW_ORDER",true);
  validateRowSeenAtAllSites(results[0],"TABLE_NAME","ITEM",true);
}
