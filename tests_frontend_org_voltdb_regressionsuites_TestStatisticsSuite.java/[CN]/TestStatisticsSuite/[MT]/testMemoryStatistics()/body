{
  System.out.println("\n\nTESTING MEMORY STATS\n\n\n");
  Client client=getFullyConnectedClient();
  ColumnInfo[] expectedSchema=new ColumnInfo[13];
  expectedSchema[0]=new ColumnInfo("TIMESTAMP",VoltType.BIGINT);
  expectedSchema[1]=new ColumnInfo("HOST_ID",VoltType.INTEGER);
  expectedSchema[2]=new ColumnInfo("HOSTNAME",VoltType.STRING);
  expectedSchema[3]=new ColumnInfo("RSS",VoltType.INTEGER);
  expectedSchema[4]=new ColumnInfo("JAVAUSED",VoltType.INTEGER);
  expectedSchema[5]=new ColumnInfo("JAVAUNUSED",VoltType.INTEGER);
  expectedSchema[6]=new ColumnInfo("TUPLEDATA",VoltType.INTEGER);
  expectedSchema[7]=new ColumnInfo("TUPLEALLOCATED",VoltType.INTEGER);
  expectedSchema[8]=new ColumnInfo("INDEXMEMORY",VoltType.INTEGER);
  expectedSchema[9]=new ColumnInfo("STRINGMEMORY",VoltType.INTEGER);
  expectedSchema[10]=new ColumnInfo("TUPLECOUNT",VoltType.BIGINT);
  expectedSchema[11]=new ColumnInfo("POOLEDMEMORY",VoltType.BIGINT);
  expectedSchema[12]=new ColumnInfo("PHYSICALMEMORY",VoltType.BIGINT);
  VoltTable expectedTable=new VoltTable(expectedSchema);
  VoltTable[] results=null;
  Thread.sleep(1000);
  results=client.callProcedure("@Statistics","memory",0).getResults();
  System.out.println("Node memory statistics table: " + results[0].toString());
  assertEquals(1,results.length);
  validateSchema(results[0],expectedTable);
  results[0].advanceRow();
  validateRowSeenAtAllHosts(results[0],"HOSTNAME",results[0].getString("HOSTNAME"),true);
}
