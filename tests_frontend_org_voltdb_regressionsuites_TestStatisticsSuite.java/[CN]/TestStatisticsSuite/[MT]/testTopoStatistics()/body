{
  System.out.println("\n\nTESTING TOPO STATS\n\n\n");
  Client client=getFullyConnectedClient();
  ColumnInfo[] expectedSchema1=new ColumnInfo[3];
  expectedSchema1[0]=new ColumnInfo("Partition",VoltType.INTEGER);
  expectedSchema1[1]=new ColumnInfo("Sites",VoltType.STRING);
  expectedSchema1[2]=new ColumnInfo("Leader",VoltType.STRING);
  VoltTable expectedTable1=new VoltTable(expectedSchema1);
  ColumnInfo[] expectedSchema2=new ColumnInfo[2];
  expectedSchema2[0]=new ColumnInfo("HASHTYPE",VoltType.STRING);
  expectedSchema2[1]=new ColumnInfo("HASHCONFIG",VoltType.VARBINARY);
  VoltTable expectedTable2=new VoltTable(expectedSchema2);
  VoltTable[] results=null;
  results=client.callProcedure("@Statistics","TOPO",0).getResults();
  assertEquals(2,results.length);
  System.out.println("Test TOPO table: " + results[0].toString());
  System.out.println("Test TOPO table: " + results[1].toString());
  validateSchema(results[0],expectedTable1);
  validateSchema(results[1],expectedTable2);
  VoltTable topo=results[0];
  assertEquals(PARTITIONS + 1,results[0].getRowCount());
  boolean found=false;
  while (topo.advanceRow()) {
    if ((int)topo.getLong("Partition") == TxnEgo.MP_PARTITIONID) {
      found=true;
    }
  }
  assertTrue(found);
  assertEquals(1,results[1].getRowCount());
}
