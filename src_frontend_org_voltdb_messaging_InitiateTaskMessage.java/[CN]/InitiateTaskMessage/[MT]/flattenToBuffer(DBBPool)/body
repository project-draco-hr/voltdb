{
  FastSerializer fs=new FastSerializer();
  try {
    fs.writeObject(m_invocation);
  }
 catch (  IOException e) {
    e.printStackTrace();
    assert(false);
  }
  ByteBuffer invocationBytes=fs.getBuffer();
  int msgsize=super.getMessageByteCount();
  msgsize+=1 + 2 + 8+ invocationBytes.remaining();
  if (m_nonCoordinatorSites != null)   msgsize+=m_nonCoordinatorSites.length * 4;
  if (m_buffer == null) {
    m_container=pool.acquire(msgsize + 1 + HEADER_SIZE);
    m_buffer=m_container.b;
  }
  setBufferSize(msgsize + 1,pool);
  m_buffer.position(HEADER_SIZE);
  m_buffer.put(INITIATE_TASK_ID);
  super.writeToBuffer();
  m_buffer.putLong(m_lastSafeTxnID);
  m_buffer.put(m_isSinglePartition ? (byte)1 : (byte)0);
  if (m_nonCoordinatorSites == null)   m_buffer.putShort((short)0);
 else {
    m_buffer.putShort((short)m_nonCoordinatorSites.length);
    for (int i=0; i < m_nonCoordinatorSites.length; i++)     m_buffer.putInt(m_nonCoordinatorSites[i]);
  }
  m_buffer.put(invocationBytes);
  m_buffer.limit(m_buffer.position());
}
