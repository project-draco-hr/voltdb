{
  this.rawHeader=rawHeader;
  Long expectedCheckSum=readInteger(TarHeaderFields.CHECKSUM);
  try {
    if (expectedCheckSum == null) {
      throw new MissingField(TarHeaderFields.CHECKSUM);
    }
    long calculatedCheckSum=headerChecksum();
    if (expectedCheckSum.longValue() != calculatedCheckSum) {
      throw new TarMalformatException(RB.singleton.getString(RB.CHECKSUM_MISMATCH,expectedCheckSum.toString(),Long.toString(calculatedCheckSum)));
    }
    path=readString(TarHeaderFields.NAME);
    if (path == null) {
      throw new MissingField(TarHeaderFields.NAME);
    }
    Long longObject=readInteger(TarHeaderFields.MODE);
    if (longObject == null) {
      throw new MissingField(TarHeaderFields.MODE);
    }
    fileMode=(int)longObject.longValue();
    longObject=readInteger(TarHeaderFields.SIZE);
    if (longObject != null) {
      dataSize=longObject.longValue();
    }
    longObject=readInteger(TarHeaderFields.MTIME);
    if (longObject == null) {
      throw new MissingField(TarHeaderFields.MTIME);
    }
    modTime=longObject.longValue();
  }
 catch (  MissingField mf) {
    throw new TarMalformatException(mf.getMessage());
  }
  entryType=readChar(TarHeaderFields.TYPEFLAG);
  ownerName=readString(TarHeaderFields.UNAME);
  String pathPrefix=readString(TarHeaderFields.PREFIX);
  if (pathPrefix != null) {
    path=pathPrefix + '/' + path;
  }
  ustar=isUstar();
}
