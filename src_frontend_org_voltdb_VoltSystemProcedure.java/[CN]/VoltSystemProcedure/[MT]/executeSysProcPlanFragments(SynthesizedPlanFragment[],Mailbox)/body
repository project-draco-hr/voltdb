{
  Set<Integer> dependencyIds=new HashSet<Integer>();
  VoltTable results[]=new VoltTable[1];
  for (int ii=0; ii < pfs.length - 1; ii++) {
    SynthesizedPlanFragment pf=pfs[ii];
    dependencyIds.add(pf.outputDepId);
    ByteBuffer parambytes=null;
    if (pf.parameters != null) {
      FastSerializer fs=new FastSerializer();
      try {
        fs.writeObject(pf.parameters);
      }
 catch (      IOException e) {
        e.printStackTrace();
        assert(false);
      }
      parambytes=fs.getBuffer();
    }
    FragmentTaskMessage ftm=FragmentTaskMessage.createWithOneFragment(0,m.getHSId(),0,false,pf.fragmentId,pf.outputDepId,parambytes,false);
    m.send(pf.siteId,ftm);
  }
  Map<Integer,List<VoltTable>> receivedDependencyIds=new HashMap<Integer,List<VoltTable>>();
  while (true) {
    VoltMessage vm=m.recvBlocking(1000);
    if (vm == null)     continue;
    if (vm instanceof FragmentTaskMessage) {
      FragmentTaskMessage ftm=(FragmentTaskMessage)vm;
      DependencyPair dp=m_runner.executePlanFragment(null,null,ftm.getFragmentId(0),ftm.getParameterSetForFragment(0));
      FragmentResponseMessage frm=new FragmentResponseMessage(ftm,m.getHSId());
      frm.addDependency(dp.depId,dp.dependency);
      m.send(ftm.getCoordinatorHSId(),frm);
    }
 else     if (vm instanceof FragmentResponseMessage) {
      FragmentResponseMessage frm=(FragmentResponseMessage)vm;
      receivedDependencyIds.put(frm.getTableDependencyIdAtIndex(0),Arrays.asList(new VoltTable[]{frm.getTableAtIndex(0)}));
      if (receivedDependencyIds.size() == dependencyIds.size() && receivedDependencyIds.keySet().equals(dependencyIds)) {
        break;
      }
    }
  }
  results[0]=m_runner.executePlanFragment(null,receivedDependencyIds,pfs[pfs.length - 1].fragmentId,pfs[pfs.length - 1].parameters).dependency;
  return results;
}
