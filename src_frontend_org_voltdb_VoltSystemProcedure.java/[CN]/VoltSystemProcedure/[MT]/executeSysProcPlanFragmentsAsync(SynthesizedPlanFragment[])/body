{
  TransactionState txnState=m_runner.getTxnState();
  for (  SynthesizedPlanFragment pf : pfs) {
    assert(pf.parameters != null);
    if (pf.multipartition) {
      assert((pf.outputDepId & DtxnConstants.MULTIPARTITION_DEPENDENCY) == DtxnConstants.MULTIPARTITION_DEPENDENCY);
    }
    ByteBuffer parambytes=null;
    if (pf.parameters != null) {
      FastSerializer fs=new FastSerializer();
      try {
        fs.writeObject(pf.parameters);
      }
 catch (      IOException e) {
        e.printStackTrace();
        assert(false);
      }
      parambytes=fs.getBuffer();
    }
    FragmentTaskMessage task=FragmentTaskMessage.createWithOneFragment(txnState.initiatorHSId,m_site.getCorrespondingSiteId(),txnState.txnId,false,pf.fragmentId,pf.outputDepId,parambytes,false);
    if (pf.inputDepIds != null) {
      for (      int depId : pf.inputDepIds) {
        task.addInputDepId(0,depId);
      }
    }
    task.setFragmentTaskType(FragmentTaskMessage.SYS_PROC_PER_SITE);
    if (pf.suppressDuplicates) {
      task.setFragmentTaskType(FragmentTaskMessage.SYS_PROC_PER_PARTITION);
    }
    if (pf.multipartition) {
      txnState.createAllParticipatingFragmentWork(task);
    }
 else {
      if (pf.siteId == -1)       txnState.createLocalFragmentWork(task,false);
 else       txnState.createFragmentWork(new long[]{pf.siteId},task);
    }
  }
}
