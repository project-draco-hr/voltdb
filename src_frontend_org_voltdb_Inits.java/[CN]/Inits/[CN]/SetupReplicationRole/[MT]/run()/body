{
  try {
    JSONStringer js=new JSONStringer();
    js.object();
    js.key("role").value(m_config.m_replicationRole.ordinal());
    js.key("active").value(m_rvdb.getReplicationActive());
    js.endObject();
    ZooKeeper zk=m_rvdb.getHostMessenger().getZK();
    if (!m_isRejoin) {
      try {
        zk.create(VoltZK.replicationconfig,js.toString().getBytes("UTF-8"),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
      }
 catch (      KeeperException.NodeExistsException e) {
      }
      String discoveredReplicationConfig=new String(zk.getData(VoltZK.replicationconfig,false,null),"UTF-8");
      JSONObject discoveredjsObj=new JSONObject(discoveredReplicationConfig);
      ReplicationRole discoveredRole=ReplicationRole.get((byte)discoveredjsObj.getLong("role"));
      if (!discoveredRole.equals(m_config.m_replicationRole)) {
        VoltDB.crashGlobalVoltDB("Discovered replication role " + discoveredRole + " doesn't match locally specified replication role "+ m_config.m_replicationRole,true,null);
      }
      m_rvdb.setReplicationRole(discoveredRole);
    }
 else {
      String discoveredReplicationConfig=new String(zk.getData(VoltZK.replicationconfig,false,null),"UTF-8");
      JSONObject discoveredjsObj=new JSONObject(discoveredReplicationConfig);
      ReplicationRole discoveredRole=ReplicationRole.get((byte)discoveredjsObj.getLong("role"));
      boolean replicationActive=discoveredjsObj.getBoolean("active");
      m_rvdb.setReplicationRole(discoveredRole);
      m_rvdb.setReplicationActive(replicationActive);
    }
  }
 catch (  Exception e) {
    VoltDB.crashGlobalVoltDB("Error discovering replication role",false,e);
  }
}
