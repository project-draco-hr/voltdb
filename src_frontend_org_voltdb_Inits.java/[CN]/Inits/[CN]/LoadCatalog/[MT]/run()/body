{
  CatalogAndIds catalogStuff=null;
  do {
    try {
      catalogStuff=CatalogUtil.getCatalogFromZK(m_rvdb.getHostMessenger().getZK());
    }
 catch (    org.apache.zookeeper_voltpatches.KeeperException.NoNodeException e) {
    }
catch (    Exception e) {
      VoltDB.crashLocalVoltDB("System was interrupted while waiting for a catalog.",false,null);
    }
  }
 while (catalogStuff == null || catalogStuff.catalogBytes.length == 0);
  String serializedCatalog=null;
  byte[] catalogJarBytes=null;
  byte[] catalogJarHash=null;
  try {
    Pair<InMemoryJarfile,String> loadResults=CatalogUtil.loadAndUpgradeCatalogFromJar(catalogStuff.catalogBytes);
    serializedCatalog=CatalogUtil.getSerializedCatalogStringFromJar(loadResults.getFirst());
    catalogJarBytes=loadResults.getFirst().getFullJarBytes();
    catalogJarHash=loadResults.getFirst().getSha1Hash();
  }
 catch (  IOException e) {
    VoltDB.crashLocalVoltDB("Unable to load catalog",false,e);
  }
  if ((serializedCatalog == null) || (serializedCatalog.length() == 0))   VoltDB.crashLocalVoltDB("Catalog loading failure",false,null);
  Catalog catalog=new Catalog();
  catalog.execute(serializedCatalog);
  serializedCatalog=null;
  String result=CatalogUtil.checkLicenseConstraint(catalog,m_rvdb.getLicenseApi());
  if (result != null) {
    VoltDB.crashLocalVoltDB(result);
  }
  result=CatalogUtil.compileDeployment(catalog,m_deployment,false);
  if (result != null) {
    VoltDB.crashLocalVoltDB(result);
  }
  try {
    m_rvdb.m_catalogContext=new CatalogContext(catalogStuff.txnId,catalogStuff.uniqueId,catalog,catalogJarBytes,catalogJarHash,m_rvdb.m_catalogContext.getDeploymentBytes(),catalogStuff.version);
  }
 catch (  Exception e) {
    VoltDB.crashLocalVoltDB("Error agreeing on starting catalog version",true,e);
  }
}
