{
  byte[] catalogBytes=null;
  do {
    try {
      catalogBytes=m_rvdb.getHostMessenger().getZK().getData(VoltZK.catalogbytes,false,null);
    }
 catch (    org.apache.zookeeper_voltpatches.KeeperException.NoNodeException e) {
    }
catch (    Exception e) {
      hostLog.fatal("System was interrupted while waiting for a catalog.");
      VoltDB.crashVoltDB();
    }
  }
 while (catalogBytes == null);
  m_rvdb.m_serializedCatalog=CatalogUtil.loadCatalogFromJar(catalogBytes,hostLog);
  if ((m_rvdb.m_serializedCatalog == null) || (m_rvdb.m_serializedCatalog.length() == 0))   VoltDB.crashVoltDB();
  Catalog catalog=new Catalog();
  catalog.execute(m_rvdb.m_serializedCatalog);
  try {
    m_rvdb.m_depCRC=CatalogUtil.compileDeploymentAndGetCRC(catalog,m_deployment,true,false);
    if (m_rvdb.m_depCRC < 0)     System.exit(-1);
  }
 catch (  Exception e) {
    hostLog.fatal("Error parsing deployment file",e);
    System.exit(-1);
  }
  Cluster newCluster=catalog.getClusters().get("cluster");
  Cluster oldCluster=m_rvdb.m_catalogContext.cluster;
  for (  Site site : oldCluster.getSites()) {
    newCluster.getSites().get(site.getTypeName()).setIsup(site.getIsup());
  }
  long existingCatalogTxnId=m_rvdb.m_catalogContext.m_transactionId;
  int existingCatalogVersion=0;
  m_rvdb.m_serializedCatalog=catalog.serialize();
  MailboxTracker mailboxTracker=m_rvdb.m_catalogContext.siteTracker.getMailboxTracker();
  m_rvdb.m_catalogContext=new CatalogContext(existingCatalogTxnId,catalog,catalogBytes,m_rvdb.m_depCRC,existingCatalogVersion,-1);
  m_rvdb.m_catalogContext.siteTracker.setMailboxTracker(mailboxTracker);
}
