def create(self):
    "\n        Generate the SQL to create (ADD) this foreign key\n\n          >>> schema.databases['sakila'].tables['rental'].foreign_keys['fk_rental_inventory'].create()\n          'ADD CONSTRAINT `fk_rental_inventory`\n          FOREIGN KEY `fk_rental_inventory` (`inventory_id`)\n          REFERENCES `inventory` (`inventory_id`)\n          ON DELETE RESTRICT ON UPDATE CASCADE'\n\n        .. note:\n          match_option is ignored when creating a foreign key.\n        "
    sql = []
    sql.append(('ADD CONSTRAINT `%s`' % self.symbol))
    sql.append(('FOREIGN KEY `%s` (%s)' % (self.symbol, ','.join([('`%s`' % c) for c in self.columns]))))
    if (self.referenced_table_schema != self.table_schema):
        sql.append(('REFERENCES `%s`.`%s`' % (self.referenced_table_schema, self.referenced_table_name)))
    else:
        sql.append(('REFERENCES `%s`' % self.referenced_table_name))
    sql.append(('(%s)' % ','.join([('`%s`' % c) for c in self.referenced_columns])))
    if self.delete_rule:
        sql.append(('ON DELETE %s' % self.delete_rule))
    if self.update_rule:
        sql.append(('ON UPDATE %s' % self.update_rule))
    return ' '.join(sql)
