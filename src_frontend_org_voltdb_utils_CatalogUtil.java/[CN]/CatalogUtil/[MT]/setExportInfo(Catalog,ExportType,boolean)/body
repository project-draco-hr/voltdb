{
  if (exportType == null || dummy) {
    return;
  }
  boolean adminstate=exportType.isEnabled();
  Database db=catalog.getClusters().get("cluster").getDatabases().get("database");
  org.voltdb.catalog.Connector catconn=db.getConnectors().get("0");
  if (catconn == null) {
    if (adminstate) {
      hostLog.info("Export configuration enabled in deployment file however no export " + "tables are present in the project file. Export disabled.");
    }
    return;
  }
  String connector="org.voltdb.export.processors.GuestProcessor";
  catconn.setLoaderclass(connector);
  catconn.setEnabled(adminstate);
  String exportClientClassName=null;
switch (exportType.getTarget()) {
case FILE:
    exportClientClassName="org.voltdb.exportclient.ExportToFileClient";
  break;
case JDBC:
exportClientClassName="org.voltdb.exportclient.JDBCExportClient";
break;
case CUSTOM:
try {
CatalogUtil.class.getClassLoader().loadClass(exportType.getExportconnectorclass());
exportClientClassName=exportType.getExportconnectorclass();
}
 catch (ClassNotFoundException ex) {
hostLog.error("Custom Export failed to configure, failed to load " + " export plugin class: " + exportType.getExportconnectorclass() + " Disabling export.");
exportType.setEnabled(false);
return;
}
break;
}
if (exportClientClassName != null && exportClientClassName.trim().length() > 0) {
ConnectorProperty prop=catconn.getConfig().add(ExportDataProcessor.EXPORT_TO_TYPE);
prop.setName(ExportDataProcessor.EXPORT_TO_TYPE);
String dexportClientClassName=System.getProperty(ExportDataProcessor.EXPORT_TO_TYPE,exportClientClassName);
prop.setValue(dexportClientClassName);
}
ExportConfigurationType exportConfiguration=exportType.getConfiguration();
if (exportConfiguration != null) {
List<PropertyType> configProperties=exportConfiguration.getProperty();
if (configProperties != null && !configProperties.isEmpty()) {
for (PropertyType configProp : configProperties) {
ConnectorProperty prop=catconn.getConfig().add(configProp.getName());
prop.setName(configProp.getName());
prop.setValue(configProp.getValue());
}
}
}
if (!adminstate) {
hostLog.info("Export configuration is present and is " + "configured to be disabled. Export will be disabled.");
}
}
