{
  File voltDbRoot;
  final Cluster cluster=catalog.getClusters().get("cluster");
  if (paths == null || paths.getVoltdbroot() == null || paths.getVoltdbroot().getPath() == null) {
    voltDbRoot=new VoltFile("voltdbroot");
    if (!voltDbRoot.exists()) {
      hostLog.info("Creating voltdbroot directory: " + voltDbRoot.getAbsolutePath());
      if (!voltDbRoot.mkdir()) {
        hostLog.fatal("Failed to create voltdbroot directory \"" + voltDbRoot + "\"");
      }
    }
  }
 else {
    voltDbRoot=new VoltFile(paths.getVoltdbroot().getPath());
  }
  validateDirectory("volt root",voltDbRoot,crashOnFailedValidation);
  hostLog.info("Using \"" + voltDbRoot.getAbsolutePath() + "\" for voltdbroot directory.");
  PathEntry path_entry=null;
  if (paths != null) {
    path_entry=paths.getSnapshots();
  }
  File snapshotPath=getFeaturePath(paths,path_entry,voltDbRoot,"snapshot","snapshots");
  validateDirectory("snapshot path",snapshotPath,crashOnFailedValidation);
  path_entry=null;
  if (paths != null) {
    path_entry=paths.getExportoverflow();
  }
  File exportOverflowPath=getFeaturePath(paths,path_entry,voltDbRoot,"export overflow","export_overflow");
  validateDirectory("export overflow",exportOverflowPath,crashOnFailedValidation);
  path_entry=null;
  if (paths != null) {
    path_entry=paths.getCommandlog();
  }
  File commandLogPath=getFeaturePath(paths,path_entry,voltDbRoot,"command log","command_log");
  validateDirectory("command log",commandLogPath,crashOnFailedValidation);
  path_entry=null;
  if (paths != null) {
    path_entry=paths.getCommandlogsnapshot();
  }
  File commandLogSnapshotPath=getFeaturePath(paths,path_entry,voltDbRoot,"command log snapshot","command_log_snapshot");
  validateDirectory("command log snapshot",commandLogSnapshotPath,crashOnFailedValidation);
  catalog.getClusters().get("cluster").setVoltroot(voltDbRoot.getPath());
  SnapshotSchedule schedule=cluster.getDatabases().get("database").getSnapshotschedule().get("default");
  if (schedule != null) {
    schedule.setPath(snapshotPath.getPath());
  }
  schedule=cluster.getFaultsnapshots().get("CLUSTER_PARTITION");
  if (schedule != null) {
    schedule.setPath(snapshotPath.getPath());
  }
  cluster.setExportoverflow(exportOverflowPath.getPath());
  final org.voltdb.catalog.CommandLog commandLogConfig=cluster.getLogconfig().add("log");
  commandLogConfig.setInternalsnapshotpath(commandLogSnapshotPath.getPath());
  commandLogConfig.setLogpath(commandLogPath.getPath());
}
