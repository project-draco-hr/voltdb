{
  assert(paths != null);
  File voltRoot=new VoltFile(paths.getVoltroot().getPath());
  validateDirectory("volt root",voltRoot);
  File snapshotPath;
  if (paths.getSnapshots() == null) {
    snapshotPath=new VoltFile(voltRoot,"snapshots");
    if (!snapshotPath.exists()) {
      if (!snapshotPath.mkdir()) {
        hostLog.fatal("Failed to create snapshot directory \"" + snapshotPath + "\"");
      }
    }
  }
 else {
    snapshotPath=new VoltFile(paths.getSnapshots().getPath());
  }
  validateDirectory("snapshot path",snapshotPath);
  File ppdSnapshotPath;
  if (paths.getPartitiondetectionsnapshot() == null) {
    ppdSnapshotPath=new VoltFile(voltRoot,"partition_detection_snapshot");
    if (!ppdSnapshotPath.exists()) {
      if (!ppdSnapshotPath.mkdir()) {
        hostLog.fatal("Failed to create partition detection snapshot directory \"" + ppdSnapshotPath + "\"");
      }
    }
  }
 else {
    ppdSnapshotPath=new VoltFile(paths.getPartitiondetectionsnapshot().getPath());
  }
  validateDirectory("partition detection snapshot path",ppdSnapshotPath);
  File exportOverflowPath;
  if (paths.getExportoverflow() == null) {
    exportOverflowPath=new VoltFile(voltRoot,"export_overflow");
    if (!exportOverflowPath.exists()) {
      if (!exportOverflowPath.mkdir()) {
        hostLog.fatal("Failed to create export overflow directory \"" + exportOverflowPath + "\"");
      }
    }
  }
 else {
    exportOverflowPath=new VoltFile(paths.getExportoverflow().getPath());
  }
  validateDirectory("export overflow",exportOverflowPath);
  catalog.getClusters().get("cluster").setVoltroot(voltRoot.getPath());
  SnapshotSchedule schedule=catalog.getClusters().get("cluster").getDatabases().get("database").getSnapshotschedule().get("default");
  if (schedule != null) {
    schedule.setPath(snapshotPath.getPath());
  }
  schedule=catalog.getClusters().get("cluster").getFaultsnapshots().get("CLUSTER_PARTITION");
  if (schedule != null) {
    schedule.setPath(ppdSnapshotPath.getPath());
  }
  catalog.getClusters().get("cluster").setVoltroot(voltRoot.getPath());
  catalog.getClusters().get("cluster").setExportoverflow(exportOverflowPath.getPath());
}
