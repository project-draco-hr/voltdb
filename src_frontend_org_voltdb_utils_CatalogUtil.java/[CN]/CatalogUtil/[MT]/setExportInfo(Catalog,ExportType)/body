{
  if (exportType == null) {
    return;
  }
  boolean adminstate=exportType.isEnabled();
  String connector=RawProcessor.class.getName();
  if (exportType.getOnserver() != null) {
    connector=GuestProcessor.class.getName();
  }
  Database db=catalog.getClusters().get("cluster").getDatabases().get("database");
  org.voltdb.catalog.Connector catconn=db.getConnectors().get("0");
  if (catconn == null) {
    if (adminstate) {
      hostLog.info("Export configuration enabled in deployment file however no export " + "tables are present in the project file. Export disabled.");
    }
    return;
  }
  catconn.setLoaderclass(connector);
  catconn.setEnabled(adminstate);
  ExportOnServerType exportOnServer=exportType.getOnserver();
  if (exportOnServer != null) {
    String exportClientClassName=null;
switch (exportOnServer.getExportto()) {
case FILE:
      exportClientClassName=ExportToFileClient.class.getName();
    break;
case JDBC:
  exportClientClassName="org.voltdb.exportclient.JDBCExportClient";
break;
case CUSTOM:
try {
CatalogUtil.class.getClassLoader().loadClass(exportOnServer.getExportconnectorclass());
exportClientClassName=exportOnServer.getExportconnectorclass();
}
 catch (ClassNotFoundException ex) {
hostLog.error("Custom Export failed to configure, failed to load " + " export plugin class: " + exportOnServer.getExportconnectorclass() + " Disabling export.");
exportType.setEnabled(false);
return;
}
break;
}
if (exportClientClassName != null && exportClientClassName.length() > 0) {
ConnectorProperty prop=catconn.getConfig().add(GuestProcessor.EXPORT_TO_TYPE);
prop.setName(GuestProcessor.EXPORT_TO_TYPE);
prop.setValue(exportClientClassName);
}
ExportConfigurationType exportConfiguration=exportOnServer.getConfiguration();
if (exportConfiguration != null) {
List<PropertyType> configProperties=exportConfiguration.getProperty();
if (configProperties != null && !configProperties.isEmpty()) {
for (PropertyType configProp : configProperties) {
ConnectorProperty prop=catconn.getConfig().add(configProp.getName());
prop.setName(configProp.getName());
prop.setValue(configProp.getValue());
}
}
}
}
if (!adminstate) {
hostLog.info("Export configuration is present and is " + "configured to be disabled. Export will be disabled.");
}
}
