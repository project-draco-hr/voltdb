{
  if (users == null) {
    return;
  }
  Database db=catalog.getClusters().get("cluster").getDatabases().get("database");
  SecureRandom sr=new SecureRandom();
  for (  UsersType.User user : users.getUser()) {
    String sha1hex=user.getPassword();
    String sha256hex=user.getPassword();
    if (user.isPlaintext()) {
      sha1hex=extractPassword(user.getPassword(),ClientAuthHashScheme.HASH_SHA1);
      sha256hex=extractPassword(user.getPassword(),ClientAuthHashScheme.HASH_SHA256);
    }
    org.voltdb.catalog.User catUser=db.getUsers().add(user.getName());
    String hashedPW=BCrypt.hashpw(sha1hex,BCrypt.gensalt(BCrypt.GENSALT_DEFAULT_LOG2_ROUNDS,sr));
    String hashedPW256=BCrypt.hashpw(sha256hex,BCrypt.gensalt(BCrypt.GENSALT_DEFAULT_LOG2_ROUNDS,sr));
    catUser.setShadowpassword(hashedPW);
    catUser.setSha256shadowpassword(hashedPW256);
    for (    final String role : extractUserRoles(user)) {
      final Group catalogGroup=db.getGroups().get(role);
      if (catalogGroup != null) {
        final GroupRef groupRef=catUser.getGroups().add(role);
        groupRef.setGroup(catalogGroup);
      }
 else {
        hostLog.warn("User \"" + user.getName() + "\" is assigned to non-existent role \""+ role+ "\" "+ "and may not have the expected database permissions.");
      }
    }
  }
}
