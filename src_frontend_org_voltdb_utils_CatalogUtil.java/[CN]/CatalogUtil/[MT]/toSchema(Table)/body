{
  assert(!catalog_tbl.getColumns().isEmpty());
  final String spacer="   ";
  Set<Index> skip_indexes=new HashSet<Index>();
  Set<Constraint> skip_constraints=new HashSet<Constraint>();
  String ret="CREATE TABLE " + catalog_tbl.getTypeName() + " (";
  String add="\n";
  for (  Column catalog_col : CatalogUtil.getSortedCatalogItems(catalog_tbl.getColumns(),"index")) {
    VoltType col_type=VoltType.get((byte)catalog_col.getType());
    ret+=add + spacer + catalog_col.getTypeName()+ " "+ col_type.toSQLString()+ (col_type == VoltType.STRING && catalog_col.getSize() > 0 ? "(" + catalog_col.getSize() + ")" : "");
    String defaultvalue=catalog_col.getDefaultvalue();
    boolean nullable=catalog_col.getNullable();
    if (defaultvalue != null && defaultvalue.toLowerCase().equals("null") && nullable) {
      defaultvalue=null;
    }
 else {
      defaultvalue="'" + defaultvalue + "'";
    }
    ret+=" DEFAULT " + (defaultvalue != null ? defaultvalue : "NULL") + (!nullable ? " NOT NULL" : "");
    for (    ConstraintRef catalog_const_ref : catalog_col.getConstraints()) {
      Constraint catalog_const=catalog_const_ref.getConstraint();
      ConstraintType const_type=ConstraintType.get(catalog_const.getType());
      boolean found=false;
      for (      Column catalog_other_col : catalog_tbl.getColumns()) {
        if (catalog_other_col.equals(catalog_col))         continue;
        if (catalog_other_col.getConstraints().getIgnoreCase(catalog_const.getTypeName()) != null) {
          found=true;
          break;
        }
      }
      if (!found) {
switch (const_type) {
case FOREIGN_KEY:
{
            Table catalog_fkey_tbl=catalog_const.getForeignkeytable();
            Column catalog_fkey_col=null;
            for (            ColumnRef ref : catalog_const.getForeignkeycols()) {
              catalog_fkey_col=ref.getColumn();
              break;
            }
            assert(catalog_fkey_col != null);
            ret+=" REFERENCES " + catalog_fkey_tbl.getTypeName() + " ("+ catalog_fkey_col.getTypeName()+ ")";
            skip_constraints.add(catalog_const);
            break;
          }
default :
      }
    }
  }
  add=",\n";
}
for (Constraint catalog_const : catalog_tbl.getConstraints()) {
  if (skip_constraints.contains(catalog_const))   continue;
  ConstraintType const_type=ConstraintType.get(catalog_const.getType());
  if (const_type == ConstraintType.PRIMARY_KEY || const_type == ConstraintType.UNIQUE) {
    Index catalog_idx=catalog_const.getIndex();
    IndexType idx_type=IndexType.get(catalog_idx.getType());
    String idx_suffix=idx_type.getSQLSuffix();
    ret+=add + spacer + (!idx_suffix.isEmpty() ? "CONSTRAINT " + catalog_const.getTypeName() + " " : "")+ (const_type == ConstraintType.PRIMARY_KEY ? "PRIMARY KEY" : "UNIQUE")+ " (";
    String col_add="";
    for (    ColumnRef catalog_colref : CatalogUtil.getSortedCatalogItems(catalog_idx.getColumns(),"index")) {
      ret+=col_add + catalog_colref.getColumn().getTypeName();
      col_add=", ";
    }
    ret+=")";
    skip_indexes.add(catalog_idx);
  }
 else   if (const_type == ConstraintType.FOREIGN_KEY) {
    Table catalog_fkey_tbl=catalog_const.getForeignkeytable();
    String col_add="";
    String our_columns="";
    String fkey_columns="";
    for (    ColumnRef catalog_colref : catalog_const.getForeignkeycols()) {
      Column our_column=catalog_tbl.getColumns().getIgnoreCase(catalog_colref.getTypeName());
      assert(our_column != null);
      our_columns+=col_add + our_column.getTypeName();
      Column fkey_column=catalog_colref.getColumn();
      assert(fkey_column != null);
      fkey_columns+=col_add + fkey_column.getTypeName();
      col_add=", ";
    }
    ret+=add + spacer + "CONSTRAINT "+ catalog_const.getTypeName()+ " "+ "FOREIGN KEY ("+ our_columns+ ") "+ "REFERENCES "+ catalog_fkey_tbl.getTypeName()+ " ("+ fkey_columns+ ")";
  }
  skip_constraints.add(catalog_const);
}
ret+="\n);\n";
for (Index catalog_idx : catalog_tbl.getIndexes()) {
  if (skip_indexes.contains(catalog_idx))   continue;
  ret+="CREATE INDEX " + catalog_idx.getTypeName() + " ON "+ catalog_tbl.getTypeName()+ " (";
  add="";
  for (  ColumnRef catalog_colref : CatalogUtil.getSortedCatalogItems(catalog_idx.getColumns(),"index")) {
    ret+=add + catalog_colref.getColumn().getTypeName();
    add=", ";
  }
  ret+=");\n";
}
return ret;
}
