{
  Map<String,StmtTargetTableScan> tablesRead=new TreeMap<String,StmtTargetTableScan>();
  Collection<String> indexes=new TreeSet<String>();
  if (topPlan != null) {
    topPlan.getTablesAndIndexes(tablesRead,indexes);
  }
  if (bottomPlan != null) {
    bottomPlan.getTablesAndIndexes(tablesRead,indexes);
  }
  String updated=null;
  if (!stmt.getReadonly()) {
    updated=topPlan.getUpdatedTable();
    if (updated == null) {
      updated=bottomPlan.getUpdatedTable();
    }
    assert(updated != null);
  }
  Set<String> readTableNames=tablesRead.keySet();
  for (  Table table : db.getTables()) {
    if (readTableNames.contains(table.getTypeName())) {
      readTableNames.remove(table.getTypeName());
      for (      String indexName : indexes) {
        Index index=table.getIndexes().get(indexName);
        if (index != null) {
          updateIndexUsageAnnotation(index,stmt);
        }
      }
      if (updated != null && updated.equals(table.getTypeName())) {
        updateTableUsageAnnotation(table,stmt,true);
        updated=null;
        continue;
      }
      updateTableUsageAnnotation(table,stmt,false);
    }
 else     if (updated != null && updated.equals(table.getTypeName())) {
      updateTableUsageAnnotation(table,stmt,true);
      updated=null;
    }
  }
  assert(tablesRead.size() == 0);
  assert(updated == null);
}
