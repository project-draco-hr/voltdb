{
  PartitionDetectionType pd=deployment.getPartitionDetection();
  if (pd == null) {
    pd=new PartitionDetectionType();
    deployment.setPartitionDetection(pd);
  }
  if (pd.getSnapshot() == null) {
    PartitionDetectionType.Snapshot sshot=new PartitionDetectionType.Snapshot();
    pd.setSnapshot(sshot);
  }
  if (deployment.getAdminMode() == null) {
    AdminModeType amode=new AdminModeType();
    deployment.setAdminMode(amode);
  }
  if (deployment.getHeartbeat() == null) {
    HeartbeatType hb=new HeartbeatType();
    deployment.setHeartbeat(hb);
  }
  HttpdType httpd=deployment.getHttpd();
  if (httpd == null) {
    httpd=new HttpdType();
    httpd.setPort(Constants.HTTP_PORT_AUTO);
    deployment.setHttpd(httpd);
  }
  HttpdType.Jsonapi jsonApi=httpd.getJsonapi();
  if (jsonApi == null) {
    jsonApi=new HttpdType.Jsonapi();
    httpd.setJsonapi(jsonApi);
  }
  if (deployment.getSnapshot() == null) {
    SnapshotType snap=new SnapshotType();
    snap.setEnabled(false);
    deployment.setSnapshot(snap);
  }
  if (deployment.getSecurity() == null) {
    SecurityType sec=new SecurityType();
    deployment.setSecurity(sec);
  }
  if (deployment.getPaths() == null) {
    PathsType paths=new PathsType();
    deployment.setPaths(paths);
  }
  PathsType paths=deployment.getPaths();
  if (paths.getVoltdbroot() == null) {
    PathsType.Voltdbroot root=new PathsType.Voltdbroot();
    paths.setVoltdbroot(root);
  }
  if (paths.getSnapshots() == null) {
    PathsType.Snapshots snap=new PathsType.Snapshots();
    paths.setSnapshots(snap);
  }
  if (paths.getCommandlog() == null) {
    PathsType.Commandlog cl=new PathsType.Commandlog();
    paths.setCommandlog(cl);
  }
  if (paths.getCommandlogsnapshot() == null) {
    PathsType.Commandlogsnapshot clsnap=new PathsType.Commandlogsnapshot();
    paths.setCommandlogsnapshot(clsnap);
  }
  if (paths.getExportoverflow() == null) {
    PathsType.Exportoverflow exp=new PathsType.Exportoverflow();
    paths.setExportoverflow(exp);
  }
  if (paths.getDroverflow() == null) {
    final PathsType.Droverflow droverflow=new PathsType.Droverflow();
    paths.setDroverflow(droverflow);
  }
  if (deployment.getCommandlog() == null) {
    boolean enabled=false;
    if (MiscUtils.isPro()) {
      enabled=true;
    }
    CommandLogType cl=new CommandLogType();
    cl.setEnabled(enabled);
    Frequency freq=new Frequency();
    cl.setFrequency(freq);
    deployment.setCommandlog(cl);
  }
  SystemSettingsType ss=deployment.getSystemsettings();
  if (deployment.getSystemsettings() == null) {
    ss=new SystemSettingsType();
    deployment.setSystemsettings(ss);
  }
  SystemSettingsType.Elastic sse=ss.getElastic();
  if (sse == null) {
    sse=new SystemSettingsType.Elastic();
    ss.setElastic(sse);
  }
  SystemSettingsType.Query query=ss.getQuery();
  if (query == null) {
    query=new SystemSettingsType.Query();
    ss.setQuery(query);
  }
  SystemSettingsType.Snapshot snap=ss.getSnapshot();
  if (snap == null) {
    snap=new SystemSettingsType.Snapshot();
    ss.setSnapshot(snap);
  }
  SystemSettingsType.Temptables tt=ss.getTemptables();
  if (tt == null) {
    tt=new SystemSettingsType.Temptables();
    ss.setTemptables(tt);
  }
  ResourceMonitorType rm=ss.getResourcemonitor();
  if (rm == null) {
    rm=new ResourceMonitorType();
    ss.setResourcemonitor(rm);
  }
  ResourceMonitorType.Memorylimit mem=rm.getMemorylimit();
  if (mem == null) {
    mem=new ResourceMonitorType.Memorylimit();
    rm.setMemorylimit(mem);
  }
}
