{
  Vector imKeys=new Vector(20);
  Vector imKeyNames=null;
  Vector refTabs=new Vector(20);
  Vector refCols=new Vector(20);
  Vector refColNames=null;
  try {
    if (cConn == null) {
      return;
    }
    if (dbmeta == null) {
      dbmeta=cConn.getMetaData();
    }
    ResultSet colList=dbmeta.getImportedKeys(null,null,tableName);
    String pkTable, pkColumn, fkColumn;
    int keySeq;
    while (colList.next()) {
      pkTable=colList.getString("PKTABLE_NAME");
      pkColumn=colList.getString("PKCOLUMN_NAME");
      fkColumn=colList.getString("FKCOLUMN_NAME");
      keySeq=colList.getInt("KEY_SEQ");
      if (keySeq == 1) {
        if (imKeyNames != null) {
          imKeys.addElement(imKeyNames);
          refCols.addElement(refColNames);
        }
        imKeyNames=new Vector(20);
        refColNames=new Vector(20);
        refTabs.addElement(pkTable);
      }
      imKeyNames.addElement(fkColumn);
      refColNames.addElement(pkColumn);
    }
    if (imKeyNames != null) {
      imKeys.addElement(imKeyNames);
      refCols.addElement(refColNames);
    }
    colList.close();
  }
 catch (  SQLException e) {
    ZaurusEditor.printStatus("SQL Exception: " + e.getMessage());
  }
  int numberOfConstraints=imKeys.size();
  importedKeys=new String[numberOfConstraints][];
  imColIndex=new int[numberOfConstraints][];
  refTables=new String[numberOfConstraints];
  refColumns=new String[numberOfConstraints][];
  refColIndex=new int[numberOfConstraints][];
  for (int i=0; i < numberOfConstraints; i++) {
    Vector keys=(Vector)imKeys.elementAt(i);
    Vector cols=(Vector)refCols.elementAt(i);
    int numberOfKeys=keys.size();
    importedKeys[i]=new String[numberOfKeys];
    imColIndex[i]=new int[numberOfKeys];
    refColumns[i]=new String[numberOfKeys];
    refColIndex[i]=new int[numberOfKeys];
    refTables[i]=(String)refTabs.elementAt(i);
    for (int j=0; j < numberOfKeys; j++) {
      importedKeys[i][j]=(String)keys.elementAt(j);
      imColIndex[i][j]=this.getColIndex(importedKeys[i][j]);
      refColumns[i][j]=(String)cols.elementAt(j);
      refColIndex[i][j]=this.getColIndex(refColumns[i][j],refTables[i]);
    }
  }
}
