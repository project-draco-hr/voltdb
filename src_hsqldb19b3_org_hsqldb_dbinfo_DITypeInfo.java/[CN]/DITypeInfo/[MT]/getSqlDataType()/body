{
switch (type) {
case Types.SQL_ARRAY:
    return ValuePool.getInt(Types.SQL_ARRAY);
case Types.SQL_BIGINT:
  return ValuePool.getInt(Types.SQL_BIGINT);
case Types.SQL_BINARY:
return ValuePool.getInt(Types.SQL_BLOB);
case Types.SQL_BOOLEAN:
return ValuePool.getInt(Types.SQL_BOOLEAN);
case Types.SQL_BLOB:
return ValuePool.getInt(Types.SQL_BLOB);
case Types.SQL_CHAR:
return ValuePool.getInt(Types.SQL_CHAR);
case Types.SQL_NCHAR:
return ValuePool.getInt(Types.SQL_NCHAR);
case Types.SQL_CLOB:
return ValuePool.getInt(Types.SQL_CLOB);
case Types.NCLOB:
return ValuePool.getInt(Types.SQL_CLOB);
case Types.SQL_DATALINK:
return ValuePool.getInt(Types.SQL_DATALINK);
case Types.SQL_DATE:
return ValuePool.getInt(Types.SQL_DATETIME);
case Types.SQL_DECIMAL:
return ValuePool.getInt(Types.SQL_DECIMAL);
case Types.DISTINCT:
return ValuePool.getInt(Types.SQL_UDT);
case Types.SQL_DOUBLE:
return ValuePool.getInt(Types.SQL_DOUBLE);
case Types.SQL_FLOAT:
return ValuePool.getInt(Types.SQL_FLOAT);
case Types.SQL_INTEGER:
return ValuePool.getInt(Types.SQL_INTEGER);
case Types.JAVA_OBJECT:
return ValuePool.getInt(Types.JAVA_OBJECT);
case Types.SQL_ALL_TYPES:
return ValuePool.getInt(Types.SQL_ALL_TYPES);
case Types.SQL_NUMERIC:
return ValuePool.getInt(Types.SQL_NUMERIC);
case Types.OTHER:
return ValuePool.getInt(Types.OTHER);
case Types.SQL_REAL:
return ValuePool.getInt(Types.SQL_REAL);
case Types.ROWID:
return ValuePool.getInt(Types.SQL_GUID);
case Types.SQL_REF:
return ValuePool.getInt(Types.SQL_REF);
case Types.SQL_SMALLINT:
return ValuePool.getInt(Types.SQL_SMALLINT);
case Types.STRUCT:
return ValuePool.getInt(Types.SQL_UDT);
case Types.SQL_TIME:
return ValuePool.getInt(Types.SQL_DATETIME);
case Types.SQL_TIMESTAMP:
return ValuePool.getInt(Types.SQL_DATETIME);
case Types.TINYINT:
return ValuePool.getInt(Types.TINYINT);
case Types.SQL_VARBINARY:
return ValuePool.getInt(Types.SQL_BLOB);
case Types.SQL_VARCHAR:
return ValuePool.getInt(Types.SQL_VARCHAR);
case Types.VARCHAR_IGNORECASE:
return ValuePool.getInt(Types.SQL_VARCHAR);
case Types.SQL_NVARCHAR:
return ValuePool.getInt(Types.SQL_NVARCHAR);
case Types.SQL_XML:
return ValuePool.getInt(Types.SQL_XML);
default :
return null;
}
}
