{
  Relation relation;
  int memberSequenceId;
  relation=relationContainer.getEntity();
  try {
    client.callProcedure(new InsertCallback(),INS_RELATIONS_PROC,relation.getId(),relation.getVersion(),relation.getUser().getId(),relation.getTimestamp(),relation.getChangesetId());
  }
 catch (  NoConnectionsException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  memberSequenceId=0;
  for (  RelationMember member : relation.getMembers()) {
    try {
      client.callProcedure(new InsertCallback(),INS_RELATIONS_MEMBER_PROC,relation.getId(),member.getMemberId(),member.getMemberType().ordinal(),member.getMemberRole(),memberSequenceId);
    }
 catch (    NoConnectionsException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
    memberSequenceId++;
  }
  for (  Tag tag : relation.getTags()) {
    try {
      client.callProcedure(new InsertCallback(),INS_RELATION_TAGS_PROC,relation.getId(),tag.getKey(),tag.getValue());
    }
 catch (    NoConnectionsException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
}
