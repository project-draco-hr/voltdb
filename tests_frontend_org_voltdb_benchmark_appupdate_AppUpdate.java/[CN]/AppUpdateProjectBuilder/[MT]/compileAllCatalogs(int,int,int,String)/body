{
  String tableA="CREATE TABLE A (PID INTEGER NOT NULL, I INTEGER, PAYLOAD VARCHAR(128));";
  String tableB="CREATE TABLE B (PID INTEGER NOT NULL, S VARCHAR(6), PAYLOAD VARCHAR(128));";
  String tableFK="CREATE TABLE FK (I INTEGER, S VARCHAR(6), PAYLOAD VARCHAR(128));";
  String loadSQL="INSERT INTO FK VALUES (?,?,?);";
  try {
    VoltProjectBuilder pba=new VoltProjectBuilder();
    pba.addProcedures(InsertA.class);
    pba.addStmtProcedure(Transaction.Load.name,loadSQL);
    pba.addLiteralSchema(tableA);
    pba.addLiteralSchema(tableFK);
    pba.addPartitionInfo("A","PID");
    if (!pba.compile(Transaction.CatalogA.name,sitesPerHost,length,kFactor,leader)) {
      throw new RuntimeException("AppUpdate project builder failed app compilation (a).");
    }
    VoltProjectBuilder pbb=new VoltProjectBuilder();
    pbb.addProcedures(InsertB.class);
    pbb.addStmtProcedure(Transaction.Load.name,loadSQL);
    pbb.addLiteralSchema(tableB);
    pbb.addLiteralSchema(tableFK);
    pbb.addPartitionInfo("B","PID");
    if (!pbb.compile(Transaction.CatalogB.name,sitesPerHost,length,kFactor,leader)) {
      throw new RuntimeException("AppUpdate project builder failed app compilation (b)");
    }
    VoltProjectBuilder pb=new VoltProjectBuilder();
    pb.addProcedures(InsertA.class,InsertB.class);
    pb.addStmtProcedure(Transaction.Load.name,loadSQL);
    pb.addLiteralSchema(tableA);
    pb.addLiteralSchema(tableB);
    pb.addLiteralSchema(tableFK);
    pb.addPartitionInfo("A","PID");
    pb.addPartitionInfo("B","PID");
    if (!pb.compile(Transaction.CatalogAB.name,sitesPerHost,length,kFactor,leader)) {
      throw new RuntimeException("AppUpdate project builder failed app compilation (ab)");
    }
  }
 catch (  IOException e) {
    throw new RuntimeException("AppUpdate project builder failed app compilation (io)");
  }
  return new String[]{Transaction.CatalogAB.name,Transaction.CatalogA.name,Transaction.CatalogB.name};
}
