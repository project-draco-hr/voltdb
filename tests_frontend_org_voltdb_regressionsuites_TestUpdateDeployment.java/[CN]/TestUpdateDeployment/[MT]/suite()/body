{
  TheHashinator.initialize(TheHashinator.getConfiguredHashinatorClass(),TheHashinator.getConfigureBytes(2));
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestUpdateDeployment.class);
  VoltServerConfig config=new LocalCluster("catalogupdate-cluster-base.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  ((LocalCluster)config).setHasLocalServer(true);
  TPCCProjectBuilder project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  project.addProcedures(BASEPROCS);
  boolean basecompile=config.compile(project);
  assertTrue(basecompile);
  MiscUtils.copyFile(project.getPathToDeployment(),Configuration.getPathToCatalogForTest("catalogupdate-cluster-base.xml"));
  builder.addServerConfig(config);
  config=new LocalCluster("catalogupdate-cluster-addtable.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  project.addLiteralSchema("CREATE TABLE NEWTABLE (A1 INTEGER, PRIMARY KEY (A1));");
  project.setDeadHostTimeout(6);
  boolean compile=config.compile(project);
  assertTrue(compile);
  MiscUtils.copyFile(project.getPathToDeployment(),Configuration.getPathToCatalogForTest("catalogupdate-cluster-addtable.xml"));
  config=new LocalCluster("catalogupdate-cluster-enable_snapshot.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  project.addProcedures(BASEPROCS);
  project.setSnapshotSettings("1s",3,"/tmp/snapshotdir1","foo1");
  compile=config.compile(project);
  assertTrue(compile);
  MiscUtils.copyFile(project.getPathToDeployment(),Configuration.getPathToCatalogForTest("catalogupdate-cluster-enable_snapshot.xml"));
  config=new LocalCluster("catalogupdate-cluster-change_snapshot.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  project.addProcedures(BASEPROCS);
  project.setSnapshotSettings("1s",3,"/tmp/snapshotdir2","foo2");
  compile=config.compile(project);
  assertTrue(compile);
  MiscUtils.copyFile(project.getPathToDeployment(),Configuration.getPathToCatalogForTest("catalogupdate-cluster-change_snapshot.xml"));
  config=new LocalCluster("catalogupdate-cluster-change_snapshot_dir_not_exist.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  project.addProcedures(BASEPROCS);
  project.setSnapshotSettings("1s",3,"/tmp/snapshotdirasda2","foo2");
  compile=config.compile(project);
  assertTrue(compile);
  MiscUtils.copyFile(project.getPathToDeployment(),Configuration.getPathToCatalogForTest("catalogupdate-cluster-change_snapshot_dir_not_exist.xml"));
  config=new LocalCluster("catalogupdate-cluster-change_schema_update.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  project.addProcedures(BASEPROCS);
  project.setUseDDLSchema(true);
  compile=config.compile(project);
  assertTrue(compile);
  MiscUtils.copyFile(project.getPathToDeployment(),Configuration.getPathToCatalogForTest("catalogupdate-cluster-change_schema_update.xml"));
  return builder;
}
