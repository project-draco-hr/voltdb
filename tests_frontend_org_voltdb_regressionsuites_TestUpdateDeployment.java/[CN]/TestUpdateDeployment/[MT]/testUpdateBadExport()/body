{
  System.out.println("\n\n-----\n testUpdateBadExport \n-----\n\n");
  System.setProperty(ExportDataProcessor.EXPORT_TO_TYPE,"org.voltdb.export.ExportTestClient");
  Map<String,String> additionalEnv=new HashMap<String,String>();
  additionalEnv.put(ExportDataProcessor.EXPORT_TO_TYPE,"org.voltdb.export.ExportTestClient");
  LocalCluster config=new LocalCluster("catalogupdate-bad-export.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI,LocalCluster.FailureState.ALL_RUNNING,true,false,additionalEnv);
  TPCCProjectBuilder project=new TPCCProjectBuilder();
  project.addDefaultSchema();
  project.addDefaultPartitioning();
  project.addProcedures(BASEPROCS);
  Properties props=new Properties();
  props.putAll(ImmutableMap.<String,String>of("type","csv","batched","false","with-schema","true","complain","true","outdir","/tmp/" + System.getProperty("user.name")));
  project.addExport(true,"custom",props);
  boolean compile=config.compile(project);
  assertTrue(compile);
  Client client=getClient();
  loadSomeData(client,0,10);
  client.drain();
  assertTrue(callbackSuccess);
  SyncCallback cb=new SyncCallback();
  client.updateApplicationCatalog(cb,null,new File(project.getPathToDeployment()));
  cb.waitForResponse();
  assertEquals(ClientResponse.GRACEFUL_FAILURE,cb.getResponse().getStatus());
  System.out.println(cb.getResponse().getStatusString());
  assertTrue(cb.getResponse().getStatusString().contains("Unable to update"));
}
