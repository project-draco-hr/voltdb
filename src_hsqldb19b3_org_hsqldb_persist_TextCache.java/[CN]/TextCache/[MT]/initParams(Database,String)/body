{
  fileName=baseFileName;
  this.database=database;
  fa=FileUtil.getDefaultInstance();
  HsqlProperties tableprops=HsqlProperties.delimitedArgPairsToProps(fileName,"=",";",null);
  fileName=tableprops.errorKeys[0].trim();
  HsqlDatabaseProperties dbProps=database.getProperties();
  fs=translateSep(tableprops.getProperty("fs",dbProps.getProperty(HsqlDatabaseProperties.textdb_fs,",")));
  vs=translateSep(tableprops.getProperty("vs",dbProps.getProperty(HsqlDatabaseProperties.textdb_vs,fs)));
  lvs=translateSep(tableprops.getProperty("lvs",dbProps.getProperty(HsqlDatabaseProperties.textdb_lvs,fs)));
  ignoreFirst=tableprops.isPropertyTrue("ignore_first",dbProps.isPropertyTrue(HsqlDatabaseProperties.textdb_ignore_first,false));
  isQuoted=tableprops.isPropertyTrue("quoted",dbProps.isPropertyTrue(HsqlDatabaseProperties.textdb_quoted,true));
  isAllQuoted=tableprops.isPropertyTrue("all_quoted",dbProps.isPropertyTrue(HsqlDatabaseProperties.textdb_all_quoted,false));
  stringEncoding=translateSep(tableprops.getProperty("encoding",dbProps.getProperty(HsqlDatabaseProperties.textdb_encoding,"ASCII")));
  int cacheScale=tableprops.getIntegerProperty("cache_scale",dbProps.getIntegerProperty(HsqlDatabaseProperties.textdb_cache_scale,10,8,16));
  int cacheSizeScale=tableprops.getIntegerProperty("cache_size_scale",dbProps.getIntegerProperty(HsqlDatabaseProperties.textdb_cache_size_scale,10,8,20));
  int lookupTableLength=1 << cacheScale;
  int avgRowBytes=1 << cacheSizeScale;
  maxCacheSize=lookupTableLength * 3;
  maxCacheBytes=maxCacheSize * avgRowBytes;
  maxDataFileSize=Integer.MAX_VALUE;
  cachedRowPadding=1;
  cacheFileScale=1;
}
