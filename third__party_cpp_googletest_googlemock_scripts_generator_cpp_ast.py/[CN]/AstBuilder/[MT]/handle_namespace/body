def handle_namespace(self):
    token = self._GetNextToken()
    name = None
    if (token.token_type == tokenize.NAME):
        name = token.name
        token = self._GetNextToken()
    self.namespace_stack.append(name)
    assert (token.token_type == tokenize.SYNTAX), token
    internal_token = tokenize.Token(_INTERNAL_TOKEN, _NAMESPACE_POP, None, None)
    internal_token.whence = token.whence
    if (token.name == '='):
        (name, next_token) = self.GetName()
        assert (next_token.name == ';'), next_token
        self._AddBackToken(internal_token)
    else:
        assert (token.name == '{'), token
        tokens = list(self.GetScope())
        tokens[(-1)] = internal_token
        self._AddBackTokens(tokens)
    return None
