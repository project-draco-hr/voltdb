def _GetBases(self):
    bases = []
    while 1:
        token = self._GetNextToken()
        assert (token.token_type == tokenize.NAME), token
        if (token.name not in ('public', 'protected', 'private')):
            self._AddBackToken(token)
        else:
            token = self._GetNextToken()
            if (token.name != 'virtual'):
                self._AddBackToken(token)
            else:
                pass
        (base, next_token) = self.GetName()
        bases_ast = self.converter.ToType(base)
        assert (len(bases_ast) == 1), bases_ast
        bases.append(bases_ast[0])
        assert (next_token.token_type == tokenize.SYNTAX), next_token
        if (next_token.name == '{'):
            token = next_token
            break
        assert (next_token.name == ','), next_token
    return (bases, token)
