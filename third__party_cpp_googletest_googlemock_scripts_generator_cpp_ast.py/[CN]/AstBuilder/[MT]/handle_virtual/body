def handle_virtual(self):
    token = token2 = self._GetNextToken()
    if (token.name == 'inline'):
        token2 = self._GetNextToken()
    if ((token2.token_type == tokenize.SYNTAX) and (token2.name == '~')):
        return self.GetMethod((FUNCTION_VIRTUAL + FUNCTION_DTOR), None)
    assert ((token.token_type == tokenize.NAME) or (token.name == '::')), token
    return_type_and_name = self._GetTokensUpTo(tokenize.SYNTAX, '(')
    return_type_and_name.insert(0, token)
    if (token2 is not token):
        return_type_and_name.insert(1, token2)
    return self._GetMethod(return_type_and_name, FUNCTION_VIRTUAL, None, False)
