{
  assert((params != null) || (serializedParams != null));
  int startPosition=buf.position();
  buf.put(CURRENT_MOST_RECENT_VERSION);
  SerializationHelper.writeVarbinary(getProcNameBytes(),buf);
  buf.putLong(clientHandle);
  buf.put(m_extensionCount);
  if (batchTimeout != BatchTimeoutOverrideType.NO_TIMEOUT) {
    ProcedureInvocationExtensions.writeBatchTimeout(buf,batchTimeout);
  }
  if (serializedParams != null) {
    if (serializedParams.hasArray()) {
      assert(serializedParams.position() == 0);
      buf.put(serializedParams.array(),serializedParams.position() + serializedParams.arrayOffset(),serializedParams.remaining());
    }
 else {
      assert(serializedParams.position() == 0);
      ByteBuffer dup=serializedParams.duplicate();
      dup.rewind();
      buf.put(dup);
    }
  }
 else   if (params != null) {
    try {
      getParams().flattenToBuffer(buf);
    }
 catch (    BufferOverflowException e) {
      hostLog.info("SP \"" + procName + "\" has thrown BufferOverflowException");
      hostLog.info(toString());
      throw e;
    }
  }
  int len=buf.position() - startPosition;
  assert(len == getSerializedSize());
}
