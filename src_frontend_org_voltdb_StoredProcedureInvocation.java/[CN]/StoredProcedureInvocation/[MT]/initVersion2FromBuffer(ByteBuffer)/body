{
  setProcName(SerializationHelper.getVarbinary(buf));
  clientHandle=buf.getLong();
  assert(getProcName().length() < 100);
  batchTimeout=BatchTimeoutOverrideType.NO_TIMEOUT;
  int extensionCount=buf.get();
  assert(extensionCount < 2);
  for (int i=0; i < extensionCount; ++i) {
    final byte type=ProcedureInvocationExtensions.readNextType(buf);
switch (type) {
case ProcedureInvocationExtensions.BATCH_TIMEOUT:
      batchTimeout=ProcedureInvocationExtensions.readBatchTimeout(buf);
default :
    ProcedureInvocationExtensions.skipUnknownExtension(buf);
}
}
serializedParams=buf.slice();
final ByteBuffer duplicate=serializedParams.duplicate();
params=new FutureTask<ParameterSet>(new Callable<ParameterSet>(){
@Override public ParameterSet call() throws Exception {
  return ParameterSet.fromByteBuffer(duplicate);
}
}
);
}
