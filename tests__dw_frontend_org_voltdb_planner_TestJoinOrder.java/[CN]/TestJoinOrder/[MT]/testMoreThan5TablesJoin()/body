{
  String sql;
  sql="select * FROM T1, T2, T3, T4, T5, T6, T7";
  checkJoinOrder(sql,-1);
  sql="select * FROM T1, T2, T3, T4, T5, T6 left outer join T7 on T6.F = T7.G";
  checkJoinOrder(sql,-1);
  sql="select * FROM T1, T2, T3 LEFT JOIN T4 ON T3.C = T4.D LEFT JOIN T5 ON T3.C = T5.E, T6,T7";
  checkJoinOrder(sql,-1);
  sql="select * FROM T1, T2, T3, T4, T5, T6 right outer join T7 on T6.F = T7.G";
  checkJoinOrder(sql,7);
  sql="select * FROM T1, T2, T3, T4, T5 right outer join T6 on T6.F = T5.E, T7";
  checkJoinOrder(sql,6);
  sql="select * FROM T1, T2, T3, T4 right outer join T5 on T5.E = T4.D right outer join T6 on T6.F = T5.E, T7";
  checkJoinOrder(sql,5,6);
  AbstractPlanNode pn;
  sql="select * FROM T1, T2, (select T4.D from T3 right outer join T4 on T4.D = T3.C) TM1 LEFT OUTER JOIN T5 on T5.E = TM1.D, T6, T7";
  pn=compile(sql);
  validJoinOrder(pn.toExplainPlanString(),"T1","T2","T4","T3","T5","T6","T7");
  pn=compileSPWithJoinOrder(sql,"T1,T2,TM1,T5,T6,T7");
  validJoinOrder(pn.toExplainPlanString(),"T1","T2","T4","T3","T5","T6","T7");
}
