{
  loadData(false);
  Client client=this.getClient();
  ClientResponse cr=null;
  VoltTable vt;
  long[][] expected;
  for (  String tb : tbs) {
    cr=client.callProcedure("@AdHoc","SELECT dept, count(*), sum(wage) from " + tb + " GROUP BY dept ORDER BY sum(wage)");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,3,60},{2,2,90}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, COUNT(*) as tag, sum(wage) from " + tb + " GROUP BY dept ORDER BY COUNT(*) DESC");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,3,60},{2,2,90}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, COUNT(*), sum(wage) from " + tb + " GROUP BY dept ORDER BY COUNT(*) DESC");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,3,60},{2,2,90}};
    validateTableOfLongs(vt,expected);
    cr=client.callProcedure("@AdHoc","SELECT dept, COUNT(*) as tag, sum(wage) - 1 from " + tb + " GROUP BY dept ORDER BY COUNT(*) DESC");
    assertEquals(ClientResponse.SUCCESS,cr.getStatus());
    vt=cr.getResults()[0];
    expected=new long[][]{{1,3,59},{2,2,89}};
    validateTableOfLongs(vt,expected);
  }
}
