{
  AbstractPlanNode p;
  AggregatePlanNode aggNode;
  List<AbstractPlanNode> pns;
  pns=compileToFragments("SELECT A1 from T1 group by A1");
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AbstractScanPlanNode);
  assertNotNull(p.getInlinePlanNode(PlanNodeType.HASHAGGREGATE));
  pns=compileToFragments("SELECT A1, count(*) from T1 group by A1 Having count(*) > 3");
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  aggNode=(AggregatePlanNode)p;
  assertNotNull(aggNode.getPostPredicate());
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AbstractScanPlanNode);
  assertNotNull(p.getInlinePlanNode(PlanNodeType.HASHAGGREGATE));
  aggNode=(AggregatePlanNode)p.getInlinePlanNode(PlanNodeType.HASHAGGREGATE);
  assertNull(aggNode.getPostPredicate());
}
