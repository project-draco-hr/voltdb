{
  AbstractPlanNode p=pns.get(0);
  List<AbstractPlanNode> nodes=p.findAllNodesOfClass(AbstractReceivePlanNode.class);
  assertEquals(1,nodes.size());
  p=nodes.get(0);
  assertTrue(p instanceof ReceivePlanNode);
  assertTrue(p.getParent(0) instanceof HashAggregatePlanNode);
  HashAggregatePlanNode reAggNode=(HashAggregatePlanNode)p.getParent(0);
  String reAggNodeStr=reAggNode.toExplainPlanString().toLowerCase();
  p=pns.get(1);
  assert(p.getScanNodeList().size() == 1);
  p=p.getScanNodeList().get(0);
  String scanNodeStr=p.toExplainPlanString().toLowerCase();
  if (aggFilters != null) {
    String[] aggFilterStrings=null;
    if (aggFilters instanceof String) {
      aggFilterStrings=new String[]{(String)aggFilters};
    }
 else {
      aggFilterStrings=(String[])aggFilters;
    }
    for (    String aggFilter : aggFilterStrings) {
      assertTrue(reAggNodeStr.contains(aggFilter.toLowerCase()));
      assertFalse(scanNodeStr.contains(aggFilter.toLowerCase()));
    }
  }
 else {
    assertNull(reAggNode.getPostPredicate());
  }
  if (scanFilters != null) {
    String[] scanFilterStrings=null;
    if (scanFilters instanceof String) {
      scanFilterStrings=new String[]{(String)scanFilters};
    }
 else {
      scanFilterStrings=(String[])scanFilters;
    }
    for (    String scanFilter : scanFilterStrings) {
      assertFalse(reAggNodeStr.contains(scanFilter.toLowerCase()));
      assertTrue(scanNodeStr.contains(scanFilter.toLowerCase()));
    }
  }
}
