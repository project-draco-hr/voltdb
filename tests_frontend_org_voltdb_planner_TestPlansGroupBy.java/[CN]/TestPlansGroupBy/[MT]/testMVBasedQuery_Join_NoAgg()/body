{
  boolean asItWas=AbstractExpression.disableVerboseExplainForDebugging();
  String sql="";
  sql="select v_a1 from v_p1 @joinType v_r1 using(v_a1)";
  checkMVFixWithJoin_ReAgg(sql,2,0,null,null);
  sql="select v_a1 from v_p1 @joinType v_r1 using(v_a1) " + "where v_a1 > 1 and v_p1.v_cnt > 2 and v_r1.v_b1 < 3 ";
  checkMVFixWithJoin_ReAgg(sql,2,1,"v_cnt > 2",null);
  sql="select v_p1.v_cnt from v_p1 @joinType v_r1 on v_p1.v_cnt = v_r1.v_cnt " + "where v_p1.v_cnt > 1 and v_p1.v_a1 > 2 and v_p1.v_sum_c1 < 3 and v_r1.v_b1 < 4 ";
  checkMVFixWithJoin_ReAgg(sql,2,2,new String[]{"v_sum_c1 < 3)","v_cnt > 1)"},"v_a1 > 2");
  sql="select v_p1.v_cnt from v_r1 @joinType v_p1 on v_r1.v_sum_c1 = v_p1.v_sum_d1 ";
  checkMVFixWithJoin_ReAgg(sql,2,2,null,null);
  sql="select v_r1.v_a1, v_r1.v_cnt from v_p1 @joinType v_r1 on v_p1.v_a1 = v_r1.v_a1 " + "@joinType r1v on v_p1.v_a1 = r1v.v_a1 ";
  checkMVFixWithJoin_ReAgg(sql,2,0,null,null);
  sql="select v_r1.v_cnt, v_r1.v_a1 from v_p1 @joinType v_r1 on v_p1.v_cnt = v_r1.v_cnt " + "@joinType r1v on v_p1.v_cnt = r1v.v_cnt ";
  checkMVFixWithJoin_ReAgg(sql,2,1,null,null);
  sql="select v_p1.v_cnt from v_r1 @joinType v_p1 on v_r1.v_sum_c1 = v_p1.v_sum_d1 " + "@joinType r1v on v_p1.v_cnt = r1v.v_sum_c1";
  checkMVFixWithJoin_ReAgg(sql,2,2,null,null);
  sql="select v_r1.v_cnt, v_r1.v_a1 from v_p1 @joinType v_r1 on v_p1.v_cnt = v_r1.v_cnt " + "@joinType r1v on v_p1.v_cnt = r1v.v_cnt " + "where v_p1.v_cnt > 1 and v_p1.v_a1 > 2 and v_p1.v_sum_c1 < 3 and v_r1.v_b1 < 4 ";
  checkMVFixWithJoin(sql,-1,-1,2,2,new String[]{"v_cnt > 1","v_sum_c1 < 3"},"v_a1 > 2");
  sql="select v_r1.v_cnt, v_r1.v_a1 from v_p1 @joinType v_r1 on v_p1.v_cnt = v_r1.v_cnt " + "@joinType r1v on v_p1.v_cnt = r1v.v_cnt where v_p1.v_cnt > 1 and v_p1.v_a1 > 2 and " + "v_p1.v_sum_c1 < 3 and v_r1.v_b1 < 4 and r1v.v_sum_c1 > 6";
  checkMVFixWithJoin(sql,-1,-1,2,2,new String[]{"v_cnt > 1","v_sum_c1 < 3"},"v_a1 > 2");
  AbstractExpression.restoreVerboseExplainForDebugging(asItWas);
}
