{
  String sql;
  List<AbstractPlanNode> pns;
  checkMVNoFix_NoAgg_NormalQueries("SELECT * FROM V_P1_NO_FIX_NEEDED");
  sql="SELECT V_SUM_C1 FROM V_P1_NO_FIX_NEEDED ORDER BY V_A1";
  checkMVNoFix_NoAgg_NormalQueries_MergeReceive(sql,SortDirectionType.ASC);
  sql="SELECT V_SUM_C1 FROM V_P1_NO_FIX_NEEDED LIMIT 1";
  checkMVNoFix_NoAgg_NormalQueries(sql);
  sql="SELECT DISTINCT V_SUM_C1 FROM V_P1_NO_FIX_NEEDED";
  checkMVNoFix_NoAgg(sql,1,0,true,true);
  sql="SELECT V_SUM_C1 FROM V_P1_NO_FIX_NEEDED GROUP by V_SUM_C1";
  checkMVNoFix_NoAgg(sql,1,0,true,true);
  sql="SELECT V_SUM_C1, sum(V_CNT) FROM V_P1_NO_FIX_NEEDED " + "GROUP by V_SUM_C1";
  checkMVNoFix_NoAgg(sql,1,1,true,true);
  pns=compileToFragments("SELECT SUM(V_SUM_C1) FROM V_P1");
  checkMVReaggregateFeature(pns,false,0,1,-1,-1,true,true);
  pns=compileToFragments("SELECT MIN(V_MIN_C1) FROM V_P1_NEW");
  checkMVReaggregateFeature(pns,false,0,1,-1,-1,true,true);
  pns=compileToFragments("SELECT MAX(V_MAX_D1) FROM V_P1_NEW");
  checkMVReaggregateFeature(pns,false,0,1,-1,-1,true,true);
  sql="SELECT MAX(V_MAX_D1) FROM V_P1_NEW GROUP BY V_A1";
  checkMVNoFix_NoAgg(sql,1,1,true,true);
  sql="SELECT V_A1, MAX(V_MAX_D1) FROM V_P1_NEW GROUP BY V_A1";
  checkMVNoFix_NoAgg(sql,1,1,true,true);
  sql="SELECT V_A1,V_B1, MAX(V_MAX_D1) FROM V_P1_NEW GROUP BY V_A1, V_B1";
  checkMVNoFix_NoAgg(sql,2,1,true,true);
  sql="   SELECT a.contestant_name   AS contestant_name" + "        , a.contestant_number AS contestant_number" + "        , SUM(b.num_votes)    AS total_votes"+ "     FROM v_votes_by_contestant_number_state AS b"+ "        , contestants AS a"+ "    WHERE a.contestant_number = b.contestant_number"+ " GROUP BY a.contestant_name"+ "        , a.contestant_number"+ " ORDER BY total_votes DESC"+ "        , contestant_number ASC"+ "        , contestant_name ASC;";
  checkMVNoFix_NoAgg(sql,2,1,true,true);
  sql="select sum(v_p1.v_cnt) " + "from v_p1 INNER JOIN v_r1 using(v_a1)";
  checkMVNoFix_NoAgg(sql,0,1,true,true);
  sql="select v_p1.v_b1, sum(v_p1.v_sum_d1) " + "from v_p1 INNER JOIN v_r1 on v_p1.v_a1 > v_r1.v_a1 " + "group by v_p1.v_b1;";
  checkMVNoFix_NoAgg(sql,1,1,true,true);
  sql="select MAX(v_r1.v_a1) " + "from v_p1 INNER JOIN v_r1 on v_p1.v_a1 = v_r1.v_a1 " + "INNER JOIN r1v on v_p1.v_a1 = r1v.v_a1 ";
  checkMVNoFix_NoAgg(sql,0,1,true,true);
}
