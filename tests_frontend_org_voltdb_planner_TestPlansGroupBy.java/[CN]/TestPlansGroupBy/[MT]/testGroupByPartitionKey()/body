{
  AbstractPlanNode p;
  AggregatePlanNode aggNode;
  pns=compileToFragments("SELECT PKEY, COUNT(*) from T1 group by PKEY");
  for (  AbstractPlanNode apn : pns) {
    System.out.println(apn.toExplainPlanString());
  }
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof ProjectionPlanNode);
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  assertTrue(p.getChild(0) instanceof AbstractScanPlanNode);
  pns=compileToFragments("SELECT PKEY, COUNT(*) from T1 group by PKEY Having count(*) > 3");
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof ProjectionPlanNode);
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  aggNode=(AggregatePlanNode)p;
  assertNotNull(aggNode.getPostPredicate());
  assertTrue(p.getChild(0) instanceof AbstractScanPlanNode);
  pns=compileToFragments("SELECT A3, COUNT(*) from T3 group by A3");
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof ProjectionPlanNode);
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  assertTrue(p.getChild(0) instanceof AbstractScanPlanNode);
  pns=compileToFragments("SELECT A3, COUNT(*) from T3 group by A3 Having count(*) > 3");
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof ProjectionPlanNode);
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  aggNode=(AggregatePlanNode)p;
  assertNotNull(aggNode.getPostPredicate());
  assertTrue(p.getChild(0) instanceof AbstractScanPlanNode);
  pns=compileToFragments("SELECT B3, A3, COUNT(*) from T3 group by B3, A3");
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof ProjectionPlanNode);
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  assertTrue(p.getChild(0) instanceof AbstractScanPlanNode);
  pns=compileToFragments("SELECT B3, A3, COUNT(*) from T3 group by B3, A3 Having count(*) > 3");
  p=pns.get(0).getChild(0);
  assertTrue(p instanceof ProjectionPlanNode);
  assertTrue(p.getChild(0) instanceof ReceivePlanNode);
  p=pns.get(1).getChild(0);
  assertTrue(p instanceof AggregatePlanNode);
  aggNode=(AggregatePlanNode)p;
  assertNotNull(aggNode.getPostPredicate());
  assertTrue(p.getChild(0) instanceof AbstractScanPlanNode);
}
