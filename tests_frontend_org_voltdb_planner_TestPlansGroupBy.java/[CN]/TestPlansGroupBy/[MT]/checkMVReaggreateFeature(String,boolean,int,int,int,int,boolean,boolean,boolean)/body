{
  pns=compileToFragments(sql);
  for (  AbstractPlanNode apn : pns) {
    System.out.println(apn.toExplainPlanString());
  }
  assertTrue(pns.size() == 2);
  AbstractPlanNode p=pns.get(0);
  assertTrue(p instanceof SendPlanNode);
  p=p.getChild(0);
  if (projectionNode) {
    assertTrue(p instanceof ProjectionPlanNode);
    p=p.getChild(0);
  }
  if (p instanceof LimitPlanNode) {
    p=p.getChild(0);
  }
  if (p instanceof OrderByPlanNode) {
    p=p.getChild(0);
  }
  if (p instanceof DistinctPlanNode) {
    p=p.getChild(0);
  }
  HashAggregatePlanNode reAggNode=null;
  if (numGroupbyOfTopAggNode == -1) {
    if (needFix) {
      assertTrue(p instanceof HashAggregatePlanNode);
      reAggNode=(HashAggregatePlanNode)p;
      assertEquals(numGroupbyOfReaggNode,reAggNode.getGroupByExpressionsSize());
      assertEquals(numAggsOfReaggNode,reAggNode.getAggregateTypesSize());
      p=p.getChild(0);
    }
    assertTrue(p instanceof ReceivePlanNode);
    p=pns.get(1);
    assertTrue(p instanceof SendPlanNode);
    p=p.getChild(0);
    if (distinctPushdown) {
      assertTrue(p instanceof DistinctPlanNode);
      p=p.getChild(0);
    }
    assertTrue(p instanceof AbstractScanPlanNode);
  }
 else {
    assertTrue(p instanceof AggregatePlanNode);
    AggregatePlanNode topAggNode=(AggregatePlanNode)p;
    assertEquals(numGroupbyOfTopAggNode,topAggNode.getGroupByExpressionsSize());
    assertEquals(numAggsOfTopAggNode,topAggNode.getAggregateTypesSize());
    p=p.getChild(0);
    if (needFix) {
      assertTrue(p instanceof HashAggregatePlanNode);
      reAggNode=(HashAggregatePlanNode)p;
      assertEquals(numGroupbyOfReaggNode,reAggNode.getGroupByExpressionsSize());
      assertEquals(numAggsOfReaggNode,reAggNode.getAggregateTypesSize());
      p=p.getChild(0);
    }
    assertTrue(p instanceof ReceivePlanNode);
    p=pns.get(1);
    assertTrue(p instanceof SendPlanNode);
    p=p.getChild(0);
    if (aggPushdown) {
      assertTrue(!needFix);
      assertTrue(p instanceof AggregatePlanNode);
      p=p.getChild(0);
    }
    assertTrue(p instanceof AbstractScanPlanNode);
  }
}
