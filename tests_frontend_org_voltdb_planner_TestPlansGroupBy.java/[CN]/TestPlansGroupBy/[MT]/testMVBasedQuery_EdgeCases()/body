{
  String sql;
  List<AbstractPlanNode> pns;
  sql="SELECT count(*) FROM V_P1";
  checkMVFix_TopAgg_ReAgg(sql,0,1,2,0);
  sql="SELECT SUM(v_a1) FROM V_P1";
  checkMVFix_TopAgg_ReAgg(sql,0,1,2,0);
  sql="SELECT count(v_a1) FROM V_P1";
  checkMVFix_TopAgg_ReAgg(sql,0,1,2,0);
  sql="SELECT max(v_a1) FROM V_P1";
  checkMVFix_TopAgg_ReAgg(sql,0,1,2,0);
  sql="SELECT SUM(V_SUM_C1+1) FROM V_P1";
  checkMVFix_TopAgg_ReAgg(sql,0,1,2,1);
  sql="SELECT SUM(V_SUM_C1) FROM V_P1 WHERE V_SUM_C1 > 3";
  checkMVFix_TopAgg_ReAgg(sql,0,1,2,1);
  sql="SELECT V_SUM_C1, MAX(V_MAX_D1) FROM V_P1_NEW GROUP BY V_SUM_C1";
  checkMVFix_TopAgg_ReAgg(sql,1,1,2,2);
  sql="SELECT SUM(V_SUM_C1) FROM V_P1 HAVING MAX(V_SUM_D1) > 3";
  checkMVFix_TopAgg_ReAgg(sql,0,2,2,2);
  sql="SELECT SUM(V_SUM_C1) FROM V_P1 HAVING SUM(V_SUM_D1) > 3";
  pns=compileToFragments(sql);
  checkMVReaggregateFeature(pns,false,0,2,-1,-1,true,true);
  sql="SELECT distinct v_a1 FROM V_P1";
  checkMVFix_TopAgg_ReAgg(sql,1,0,1,0);
  sql="SELECT v_a1 FROM V_P1 group by v_a1";
  checkMVFix_TopAgg_ReAgg(sql,1,0,1,0);
  sql="SELECT distinct v_cnt FROM V_P1";
  checkMVFix_TopAgg_ReAgg(sql,1,0,2,1);
  sql="SELECT v_cnt FROM V_P1 group by v_cnt";
  checkMVFix_TopAgg_ReAgg(sql,1,0,2,1);
}
