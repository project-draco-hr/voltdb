{
  for (  AbstractPlanNode apn : pns) {
    System.out.println(apn.toExplainPlanString());
  }
  assertTrue(pns.size() == 2);
  AbstractPlanNode p=pns.get(0);
  assertTrue(p instanceof SendPlanNode);
  p=p.getChild(0);
  if (p instanceof LimitPlanNode) {
    p=p.getChild(0);
  }
  assertTrue(p instanceof ProjectionPlanNode);
  p=p.getChild(0);
  if (p instanceof OrderByPlanNode) {
    p=p.getChild(0);
  }
  if (p instanceof DistinctPlanNode) {
    p=p.getChild(0);
  }
  HashAggregatePlanNode reAggNode=null;
  if (numOfGroupbyOfTopAggNode == -1) {
    assertTrue(p instanceof HashAggregatePlanNode);
    reAggNode=(HashAggregatePlanNode)p;
    assertEquals(numGroupbyOfReaggNode,reAggNode.getGroExpressionTypes().size());
    assertEquals(numAggsOfReaggNode,reAggNode.getAggregateTypes().size());
    for (    ExpressionType type : reAggNode.getAggregateTypes()) {
      assertEquals(ExpressionType.AGGREGATE_SUM,type);
    }
    assertTrue(reAggNode.getChild(0) instanceof ReceivePlanNode);
    p=pns.get(1).getChild(0);
    if (distinctPushdown) {
      assertTrue(p instanceof DistinctPlanNode);
      p=p.getChild(0);
    }
    assertTrue(p instanceof AbstractScanPlanNode);
  }
 else {
    assertTrue(p instanceof AggregatePlanNode);
    AggregatePlanNode topAggNode=(AggregatePlanNode)p;
    assertEquals(numOfGroupbyOfTopAggNode,topAggNode.getGroExpressionTypes().size());
    assertEquals(numAggsOfTopAggNode,topAggNode.getAggregateTypes().size());
    assertTrue(p.getChild(0) instanceof HashAggregatePlanNode);
    reAggNode=(HashAggregatePlanNode)p.getChild(0);
    assertEquals(numGroupbyOfReaggNode,reAggNode.getGroExpressionTypes().size());
    assertEquals(numAggsOfReaggNode,reAggNode.getAggregateTypes().size());
    for (    ExpressionType type : reAggNode.getAggregateTypes()) {
      assertEquals(ExpressionType.AGGREGATE_SUM,type);
    }
    assertTrue(reAggNode.getChild(0) instanceof ReceivePlanNode);
    p=pns.get(1);
    assertTrue(p instanceof SendPlanNode);
    p=pns.get(1).getChild(0);
    if (aggPushdown) {
      assertTrue(p instanceof AggregatePlanNode);
      AggregatePlanNode aggNode=(AggregatePlanNode)p;
      assertEquals(numOfGroupbyOfAggNode,aggNode.getGroExpressionTypes().size());
      assertEquals(numAggsOfAggNode,aggNode.getAggregateTypes().size());
      p=p.getChild(0);
    }
    assertTrue(p instanceof AbstractScanPlanNode);
  }
}
