{
  FaultDistributor dut=new FaultDistributor();
  OrderTracker order_tracker=new OrderTracker(-1);
  MockFaultHandler node_handler1=new MockFaultHandler(FaultType.NODE_FAILURE,1,order_tracker);
  MockFaultHandler node_handler2=new MockFaultHandler(FaultType.NODE_FAILURE,2,order_tracker);
  MockFaultHandler node_handler2a=new MockFaultHandler(FaultType.NODE_FAILURE,2,order_tracker);
  MockFaultHandler node_handler5=new MockFaultHandler(FaultType.NODE_FAILURE,5,order_tracker);
  MockFaultHandler node_handler5a=new MockFaultHandler(FaultType.NODE_FAILURE,5,order_tracker);
  MockFaultHandler node_handler7=new MockFaultHandler(FaultType.NODE_FAILURE,7,order_tracker);
  dut.registerFaultHandler(FaultType.NODE_FAILURE,node_handler7,7);
  dut.registerFaultHandler(FaultType.NODE_FAILURE,node_handler2a,2);
  dut.registerFaultHandler(FaultType.NODE_FAILURE,node_handler5,5);
  dut.registerFaultHandler(FaultType.NODE_FAILURE,node_handler1,1);
  dut.registerFaultHandler(FaultType.NODE_FAILURE,node_handler5a,5);
  dut.registerFaultHandler(FaultType.NODE_FAILURE,node_handler2,2);
  dut.reportFault(new VoltFault(FaultType.NODE_FAILURE));
  node_handler7.m_handledFaults.acquire();
  assertTrue(node_handler1.m_gotFault);
  assertTrue(node_handler2.m_gotFault);
  assertTrue(node_handler2a.m_gotFault);
  assertTrue(node_handler5.m_gotFault);
  assertTrue(node_handler5a.m_gotFault);
  assertTrue(node_handler7.m_gotFault);
  assertTrue(order_tracker.m_goodOrder);
}
