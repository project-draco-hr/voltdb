{
  return new ImmutableMapEntrySet<K,V>(){
    @Override ImmutableMap<K,V> map(){
      return ImmutableEnumMap.this;
    }
    @Override public UnmodifiableIterator<Entry<K,V>> iterator(){
      return new UnmodifiableIterator<Entry<K,V>>(){
        private final Iterator<Entry<K,V>> backingIterator=delegate.entrySet().iterator();
        @Override public boolean hasNext(){
          return backingIterator.hasNext();
        }
        @Override public Entry<K,V> next(){
          Entry<K,V> entry=backingIterator.next();
          return Maps.immutableEntry(entry.getKey(),entry.getValue());
        }
      }
;
    }
  }
;
}
