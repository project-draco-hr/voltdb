{
  if (n < 0) {
    buffer.put((byte)'-');
    if (n == Integer.MIN_VALUE) {
      buffer.put((byte)(0x7f & '8'));
      buffer.put((byte)(0x7f & '0'));
      buffer.put((byte)(0x7f & '0'));
      buffer.put((byte)(0x7f & '0'));
      buffer.put((byte)(0x7f & '0'));
      buffer.put((byte)(0x7f & '0'));
      buffer.put((byte)(0x7f & '0'));
      buffer.put((byte)(0x7f & '0'));
      return;
    }
    n=-n;
  }
  if (n < 0x10) {
    buffer.put(DIGIT[n]);
  }
 else {
    boolean started=false;
    for (int i=0; i < hexDivisors.length; i++) {
      if (n < hexDivisors[i]) {
        if (started)         buffer.put((byte)'0');
        continue;
      }
      started=true;
      int d=n / hexDivisors[i];
      buffer.put(DIGIT[d]);
      n=n - d * hexDivisors[i];
    }
  }
}
