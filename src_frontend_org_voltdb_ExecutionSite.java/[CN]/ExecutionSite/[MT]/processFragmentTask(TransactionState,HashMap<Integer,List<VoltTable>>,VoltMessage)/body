{
  final FragmentTaskMessage ftask=(FragmentTaskMessage)task;
  final FragmentResponseMessage currentFragResponse=new FragmentResponseMessage(ftask,getSiteId());
  currentFragResponse.setStatus(FragmentResponseMessage.SUCCESS,null);
  if (!ftask.isSysProcTask()) {
    if (dependencies != null) {
      ee.stashWorkUnitDependencies(dependencies);
    }
  }
  for (int frag=0; frag < ftask.getFragmentCount(); frag++) {
    final long fragmentId=ftask.getFragmentId(frag);
    final int outputDepId=ftask.getOutputDepId(frag);
    ParameterSet params=null;
    final ByteBuffer paramData=ftask.getParameterDataForFragment(frag);
    if (paramData != null) {
      final FastDeserializer fds=new FastDeserializer(paramData);
      try {
        params=fds.readObject(ParameterSet.class);
      }
 catch (      final IOException e) {
        hostLog.l7dlog(Level.FATAL,LogKeys.host_ExecutionSite_FailedDeserializingParamsForFragmentTask.name(),e);
        VoltDB.crashLocalVoltDB(e.getMessage(),true,e);
      }
    }
 else {
      params=new ParameterSet();
    }
    if (ftask.isSysProcTask()) {
      return processSysprocFragmentTask(txnState,dependencies,fragmentId,currentFragResponse,params);
    }
 else {
      final int inputDepId=ftask.getOnlyInputDepId(frag);
      try {
        final VoltTable dependency=executePlanFragment(fragmentId,inputDepId,params,txnState.txnId,txnState.isReadOnly());
        sendDependency(currentFragResponse,outputDepId,dependency);
      }
 catch (      final EEException e) {
        hostLog.l7dlog(Level.TRACE,LogKeys.host_ExecutionSite_ExceptionExecutingPF.name(),new Object[]{fragmentId},e);
        currentFragResponse.setStatus(FragmentResponseMessage.UNEXPECTED_ERROR,e);
        break;
      }
catch (      final SQLException e) {
        hostLog.l7dlog(Level.TRACE,LogKeys.host_ExecutionSite_ExceptionExecutingPF.name(),new Object[]{fragmentId},e);
        currentFragResponse.setStatus(FragmentResponseMessage.UNEXPECTED_ERROR,e);
        break;
      }
    }
  }
  return currentFragResponse;
}
