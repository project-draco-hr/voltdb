{
  Set<Long> failingInitiators=new HashSet<Long>(sitesBeingFailed);
  failingInitiators.retainAll(m_tracker.getAllInitiators());
  List<Pair<Long,Long>> missingMessages=new ArrayList<Pair<Long,Long>>();
  for (  long otherSite : newTracker.getAllSites()) {
    for (    Long failingInitiator : failingInitiators) {
      Pair<Long,Long> key=Pair.of(otherSite,failingInitiator);
      if (!m_failureSiteUpdateLedger.containsKey(key)) {
        missingMessages.add(key);
      }
    }
  }
  if (log) {
    StringBuilder sb=new StringBuilder();
    sb.append('[');
    boolean first=true;
    for (    Pair<Long,Long> p : missingMessages) {
      if (!first)       sb.append(", ");
      first=false;
      sb.append(CoreUtils.hsIdToString(p.getFirst()));
      sb.append('-');
      sb.append(CoreUtils.hsIdToString(p.getSecond()));
    }
    sb.append(']');
    m_recoveryLog.warn("Failure resolution stalled waiting for ( ExecutionSite, Initiator ) " + "information: " + sb.toString());
  }
  return missingMessages.isEmpty();
}
