{
  if (message instanceof TransactionInfoBaseMessage) {
    TransactionInfoBaseMessage info=(TransactionInfoBaseMessage)message;
    assertTxnIdOrdering(info);
    if (info instanceof HeartbeatMessage) {
      long lastSeenTxnFromInitiator=m_transactionQueue.noteTransactionRecievedAndReturnLastSeen(info.getInitiatorSiteId(),info.getTxnId(),true,((HeartbeatMessage)info).getLastSafeTxnId());
      HeartbeatResponseMessage response=new HeartbeatResponseMessage(m_siteId,lastSeenTxnFromInitiator,m_transactionQueue.getQueueState() == QueueState.BLOCKED_SAFETY);
      try {
        m_mailbox.send(info.getInitiatorSiteId(),VoltDB.DTXN_MAILBOX_ID,response);
      }
 catch (      MessagingException e) {
        throw new RuntimeException(e);
      }
      return;
    }
 else     if (info instanceof InitiateTaskMessage) {
      m_transactionQueue.noteTransactionRecievedAndReturnLastSeen(info.getInitiatorSiteId(),info.getTxnId(),false,((InitiateTaskMessage)info).getLastSafeTxnId());
    }
 else     if (info instanceof MultiPartitionParticipantMessage) {
      m_transactionQueue.noteTransactionRecievedAndReturnLastSeen(info.getInitiatorSiteId(),info.getTxnId(),false,DtxnConstants.DUMMY_LAST_SEEN_TXN_ID);
    }
 else {
      assert(info instanceof FragmentTaskMessage);
    }
    TransactionState ts=m_transactionsById.get(info.getTxnId());
    if (ts == null) {
      if (info.isSinglePartition()) {
        ts=new SinglePartitionTxnState(m_mailbox,this,info);
      }
 else {
        ts=new MultiPartitionParticipantTxnState(m_mailbox,this,info);
      }
      m_transactionQueue.add(ts);
      m_transactionsById.put(ts.txnId,ts);
    }
    if (message instanceof FragmentTaskMessage) {
      ts.createLocalFragmentWork((FragmentTaskMessage)message,false);
    }
  }
 else   if (message instanceof FragmentResponseMessage) {
    FragmentResponseMessage response=(FragmentResponseMessage)message;
    TransactionState txnState=m_transactionsById.get(response.getTxnId());
    if (txnState != null) {
      assert(txnState instanceof MultiPartitionParticipantTxnState);
      txnState.processRemoteWorkResponse(response);
    }
  }
 else   if (message instanceof DebugMessage) {
    DebugMessage dmsg=(DebugMessage)message;
    if (dmsg.shouldDump)     DumpManager.putDump(m_dumpId,m_currentDumpTimestamp,true,getDumpContents());
  }
 else   if (message instanceof ExecutionSiteNodeFailureMessage) {
    discoverGlobalFaultData(((ExecutionSiteNodeFailureMessage)message).m_failedHostId);
  }
 else   if (message instanceof CheckTxnStateCompletionMessage) {
    long txn_id=((CheckTxnStateCompletionMessage)message).m_txnId;
    TransactionState txnState=m_transactionsById.get(txn_id);
    assert(txnState instanceof MultiPartitionParticipantTxnState);
    ((MultiPartitionParticipantTxnState)txnState).checkWorkUnits();
  }
 else {
    hostLog.l7dlog(Level.FATAL,LogKeys.org_voltdb_dtxn_SimpleDtxnConnection_UnkownMessageClass.name(),new Object[]{message.getClass().getName()},null);
    VoltDB.crashVoltDB();
  }
}
