{
  m_rejoinCoordinatorHSId=rejoinCoordinatorHSId;
  m_haveRecoveryPermit=true;
  m_recoveryStartTime=System.currentTimeMillis();
  m_rejoinSnapshotProcessor=new StreamSnapshotSink();
  long hsId=m_rejoinSnapshotProcessor.initialize(1,null);
  int partition=getCorrespondingPartitionId();
  File overflowDir=new File(VoltDB.instance().getCatalogContext().cluster.getVoltroot(),"rejoin_overflow");
  Class<?> taskLogKlass=MiscUtils.loadProClass("org.voltdb.rejoin.TaskLogImpl","Rejoin",false);
  Constructor<?> taskLogConstructor;
  try {
    taskLogConstructor=taskLogKlass.getConstructor(int.class,File.class,boolean.class);
    m_rejoinTaskLog=(TaskLog)taskLogConstructor.newInstance(partition,overflowDir,false);
  }
 catch (  InvocationTargetException e) {
    VoltDB.crashLocalVoltDB("Unable to construct rejoin task log",true,e.getCause());
  }
catch (  Exception e) {
    VoltDB.crashLocalVoltDB("Unable to construct rejoin task log",true,e);
  }
  m_rejoinLog.info("Initiating rejoin for site " + CoreUtils.hsIdToString(getSiteId()));
  initiateRejoinSnapshot(hsId);
}
