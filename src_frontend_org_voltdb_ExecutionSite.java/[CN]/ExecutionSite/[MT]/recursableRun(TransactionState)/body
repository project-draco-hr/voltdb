{
  while (m_shouldContinue) {
    if (currentTxnState.doWork(m_rejoining)) {
      if (currentTxnState.needsRollback()) {
        rollbackTransaction(currentTxnState);
      }
      completeTransaction(currentTxnState);
      m_transactionsById.remove(currentTxnState.txnId);
      return null;
    }
 else     if (currentTxnState.shouldResumeProcedure()) {
      Map<Integer,List<VoltTable>> retval=currentTxnState.getPreviousStackFrameDropDependendencies();
      assert(retval != null);
      return retval;
    }
 else     if (currentTxnState.isBlocked() && !currentTxnState.isDone() && currentTxnState.isCoordinator()&& currentTxnState.isReadOnly()&& !currentTxnState.hasTransactionalWork()) {
      assert(!currentTxnState.isSinglePartition());
      tryToSneakInASinglePartitionProcedure();
      if (m_recoveryProcessor != null) {
        m_recoveryProcessor.notifyBlockedOnMultiPartTxn(currentTxnState.txnId);
      }
    }
 else {
      VoltMessage message=m_mailbox.recvBlocking(5);
      tick();
      if (message != null) {
        handleMailboxMessage(message);
      }
 else {
        m_snapshotter.doSnapshotWork(getCorrespondingPartitionId(),ee,EstTime.currentTimeMillis() - lastCommittedTxnTime > 5);
      }
      if (m_recoveryProcessor != null) {
        m_recoveryProcessor.notifyBlockedOnMultiPartTxn(currentTxnState.txnId);
      }
    }
  }
  return null;
}
