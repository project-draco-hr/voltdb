{
  if (message instanceof TransactionInfoBaseMessage) {
    TransactionInfoBaseMessage info=(TransactionInfoBaseMessage)message;
    assertTxnIdOrdering(info);
    if (info instanceof HeartbeatMessage) {
      long lastSeenTxnFromInitiator=m_transactionQueue.noteTransactionRecievedAndReturnLastSeen(info.getInitiatorHSId(),info.getTxnId(),true,((HeartbeatMessage)info).getLastSafeTxnId());
      HeartbeatResponseMessage response=new HeartbeatResponseMessage(m_siteId,lastSeenTxnFromInitiator,m_transactionQueue.getQueueState() == QueueState.BLOCKED_SAFETY);
      try {
        m_mailbox.send(info.getInitiatorHSId(),response);
      }
 catch (      MessagingException e) {
        throw new RuntimeException(e);
      }
      return;
    }
 else     if (info instanceof InitiateTaskMessage) {
      m_transactionQueue.noteTransactionRecievedAndReturnLastSeen(info.getInitiatorHSId(),info.getTxnId(),false,((InitiateTaskMessage)info).getLastSafeTxnId());
    }
 else     if (info instanceof MultiPartitionParticipantMessage) {
      m_transactionQueue.noteTransactionRecievedAndReturnLastSeen(info.getInitiatorHSId(),info.getTxnId(),false,DtxnConstants.DUMMY_LAST_SEEN_TXN_ID);
    }
    TransactionState ts=m_transactionsById.get(info.getTxnId());
    if (info instanceof CompleteTransactionMessage) {
      CompleteTransactionMessage complete=(CompleteTransactionMessage)info;
      if (ts != null) {
        ts.processCompleteTransaction(complete);
      }
 else {
        if (complete.requiresAck()) {
          CompleteTransactionResponseMessage ctrm=new CompleteTransactionResponseMessage(complete,m_siteId);
          try {
            m_mailbox.send(complete.getCoordinatorHSId(),ctrm);
          }
 catch (          MessagingException e) {
            throw new RuntimeException(e);
          }
        }
      }
      return;
    }
    if (ts == null) {
      if (info.isSinglePartition()) {
        ts=new SinglePartitionTxnState(m_mailbox,this,info);
      }
 else {
        ts=new MultiPartitionParticipantTxnState(m_mailbox,this,info);
      }
      if (m_transactionQueue.add(ts)) {
        m_transactionsById.put(ts.txnId,ts);
      }
 else {
        hostLog.info("Dropping txn " + ts.txnId + " data from failed initiatorSiteId: "+ ts.initiatorHSId);
      }
    }
    if (ts != null) {
      if (message instanceof FragmentTaskMessage) {
        ts.createLocalFragmentWork((FragmentTaskMessage)message,false);
      }
    }
  }
 else   if (message instanceof RecoveryMessage) {
    RecoveryMessage rm=(RecoveryMessage)message;
    if (rm.recoveryMessagesAvailable()) {
      return;
    }
    assert(!m_recovering);
    assert(m_recoveryProcessor == null);
    final long recoveringPartitionTxnId=rm.txnId();
    m_recoveryStartTime=System.currentTimeMillis();
    m_recoveryLog.info("Recovery initiate received at site " + m_siteId + " from site "+ rm.sourceSite()+ " requesting recovery start before txnid "+ recoveringPartitionTxnId);
    m_recoveryProcessor=RecoverySiteProcessorSource.createProcessor(this,rm,m_context.database,m_context.siteTracker,ee,m_mailbox,m_siteId,m_onRecoveryCompletion,m_recoveryMessageHandler);
  }
 else   if (message instanceof FragmentResponseMessage) {
    FragmentResponseMessage response=(FragmentResponseMessage)message;
    TransactionState txnState=m_transactionsById.get(response.getTxnId());
    if (txnState != null) {
      assert(txnState instanceof MultiPartitionParticipantTxnState);
      txnState.processRemoteWorkResponse(response);
    }
  }
 else   if (message instanceof CompleteTransactionResponseMessage) {
    CompleteTransactionResponseMessage response=(CompleteTransactionResponseMessage)message;
    TransactionState txnState=m_transactionsById.get(response.getTxnId());
    if (txnState != null) {
      assert(txnState instanceof MultiPartitionParticipantTxnState);
      txnState.processCompleteTransactionResponse(response);
    }
  }
 else   if (message instanceof ExecutionSiteNodeFailureMessage) {
    discoverGlobalFaultData((ExecutionSiteNodeFailureMessage)message);
  }
 else   if (message instanceof CheckTxnStateCompletionMessage) {
    long txn_id=((CheckTxnStateCompletionMessage)message).m_txnId;
    TransactionState txnState=m_transactionsById.get(txn_id);
    if (txnState != null) {
      assert(txnState instanceof MultiPartitionParticipantTxnState);
      ((MultiPartitionParticipantTxnState)txnState).checkWorkUnits();
    }
  }
 else   if (message instanceof RawProcessor.ExportInternalMessage) {
    RawProcessor.ExportInternalMessage exportm=(RawProcessor.ExportInternalMessage)message;
    ee.exportAction(exportm.m_m.isSync(),exportm.m_m.getAckOffset(),0,exportm.m_m.getPartitionId(),exportm.m_m.getSignature());
  }
 else   if (message instanceof PotentialSnapshotWorkMessage) {
    m_snapshotter.doSnapshotWork(ee,false);
  }
 else   if (message instanceof ExecutionSiteLocalSnapshotMessage) {
    hostLog.info("Executing local snapshot. Completing any on-going snapshots.");
    try {
      HashSet<Exception> completeSnapshotWork=m_snapshotter.completeSnapshotWork(ee);
      if (completeSnapshotWork != null && !completeSnapshotWork.isEmpty()) {
        for (        Exception e : completeSnapshotWork) {
          hostLog.error("Error completing in progress snapshot.",e);
        }
      }
    }
 catch (    InterruptedException e) {
      hostLog.warn("Interrupted during snapshot completion",e);
    }
    hostLog.info("Executing local snapshot. Creating new snapshot.");
    ee.quiesce(lastCommittedTxnId);
    ExecutionSiteLocalSnapshotMessage snapshotMsg=(ExecutionSiteLocalSnapshotMessage)message;
    String nonce=snapshotMsg.nonce + "_" + snapshotMsg.m_roadblockTransactionId;
    SnapshotSaveAPI saveAPI=new SnapshotSaveAPI();
    VoltTable startSnapshotting=saveAPI.startSnapshotting(snapshotMsg.path,nonce,(byte)0x1,snapshotMsg.m_roadblockTransactionId,m_systemProcedureContext,ConnectionUtil.getHostnameOrAddress());
    if (SnapshotSiteProcessor.ExecutionSitesCurrentlySnapshotting.get() == -1 && snapshotMsg.crash) {
      String msg="Executing local snapshot. Finished final snapshot. Shutting down. " + "Result: " + startSnapshotting.toString();
      VoltDB.crashLocalVoltDB(msg,false,null);
    }
  }
 else   if (message instanceof LocalObjectMessage) {
    LocalObjectMessage lom=(LocalObjectMessage)message;
    ((Runnable)lom.payload).run();
  }
 else {
    hostLog.l7dlog(Level.FATAL,LogKeys.org_voltdb_dtxn_SimpleDtxnConnection_UnkownMessageClass.name(),new Object[]{message.getClass().getName()},null);
    VoltDB.crashLocalVoltDB("No additional info.",false,null);
  }
}
