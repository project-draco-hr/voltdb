{
  if (m_txnlog.isTraceEnabled()) {
    m_txnlog.trace("FUZZTEST completeTransaction " + txnState.txnId);
  }
  if (!txnState.isReadOnly()) {
    assert(latestUndoToken != kInvalidUndoToken);
    assert(txnState.getBeginUndoToken() != kInvalidUndoToken);
    assert(latestUndoToken >= txnState.getBeginUndoToken());
    if (latestUndoToken > txnState.getBeginUndoToken()) {
      ee.releaseUndoToken(latestUndoToken);
    }
    txnState.setBeginUndoToken(kInvalidUndoToken);
  }
  if (!txnState.needsRollback()) {
    if (txnState.txnId > lastCommittedTxnId) {
      lastCommittedTxnId=txnState.txnId;
      if (!txnState.isSinglePartition() && !txnState.isReadOnly()) {
        lastKnownGloballyCommitedMultiPartTxnId=Math.max(txnState.txnId,lastKnownGloballyCommitedMultiPartTxnId);
      }
      if (m_recoveryProcessor != null) {
        m_recoveryProcessor.doRecoveryWork(lastCommittedTxnId);
      }
    }
  }
}
