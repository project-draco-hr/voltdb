{
  if (m_txnlog.isTraceEnabled()) {
    m_txnlog.trace("FUZZTEST completeTransaction " + txnState.txnId);
  }
  if (!txnState.isReadOnly()) {
    assert(latestUndoToken != kInvalidUndoToken);
    assert(latestUndoToken >= txnState.getBeginUndoToken());
    if (txnState.getBeginUndoToken() == kInvalidUndoToken) {
      if (m_rejoining == false) {
        throw new AssertionError("Non-recovering write txn has invalid undo state.");
      }
    }
 else     if (latestUndoToken > txnState.getBeginUndoToken()) {
      ee.releaseUndoToken(latestUndoToken);
    }
    StoredProcedureInvocation invocation=txnState.getInvocation();
    long ts=TransactionIdManager.getTimestampFromTransactionId(txnState.txnId);
    if ((invocation != null) && (m_rejoining == false) && (ts > m_startupTime)) {
      if (!txnState.needsRollback()) {
        String adhocParam=null;
        if (invocation.procName.startsWith("@AdHoc")) {
          adhocParam=txnState.getBatchFormattedAdHocSQLString();
        }
        m_partitionDRGateway.onSuccessfulProcedureCall(txnState.txnId,invocation,txnState.getResults(),adhocParam);
      }
    }
    if ((txnState.getRejoinState() == RejoinState.REJOINING) && m_rejoinTaskLog != null && !txnState.needsRollback()) {
      try {
        TransactionInfoBaseMessage base=txnState.getTransactionInfoBaseMessageForRejoinLog();
        if (base != null) {
          if (base instanceof FragmentTaskLogMessage) {
            FragmentTaskLogMessage ftlm=(FragmentTaskLogMessage)base;
            if (ftlm.getFragmentTasks().size() > 0) {
              m_rejoinTaskLog.logTask(ftlm);
              m_loggedTaskCount++;
            }
          }
 else           if (base instanceof InitiateTaskMessage) {
            InitiateTaskMessage itm=(InitiateTaskMessage)base;
            if ((itm.getStoredProcedureName().startsWith("@") == false) || (itm.getStoredProcedureName().startsWith("@AdHoc") == true)) {
              m_rejoinTaskLog.logTask(itm);
              m_loggedTaskCount++;
            }
          }
 else {
            hostLog.error("Logged a notice of type: " + base.getClass().getCanonicalName() + "for replay.");
            assert(false);
          }
        }
 else {
        }
      }
 catch (      IOException e) {
        VoltDB.crashLocalVoltDB("Failed to log task message",false,e);
      }
    }
    txnState.setBeginUndoToken(kInvalidUndoToken);
  }
  if (!txnState.needsRollback()) {
    if (txnState.txnId > lastCommittedTxnId) {
      lastCommittedTxnId=txnState.txnId;
      lastCommittedTxnTime=EstTime.currentTimeMillis();
      if (!txnState.isSinglePartition() && !txnState.isReadOnly()) {
        lastKnownGloballyCommitedMultiPartTxnId=Math.max(txnState.txnId,lastKnownGloballyCommitedMultiPartTxnId);
      }
    }
  }
}
