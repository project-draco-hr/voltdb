{
  if (VoltDB.instance().getMode() == OperationMode.INITIALIZING) {
    VoltDB.crashGlobalVoltDB("Detected node failure during command log replay. Cluster will shut down.",false,null);
  }
  if (m_rejoining) {
    VoltDB.crashLocalVoltDB("Aborting rejoin due to a remote node failure. Retry again.",false,null);
  }
  SiteTracker newTracker=null;
  HashSet<SiteFailureFault> failures=message.m_failedSites;
  m_context=VoltDB.instance().getCatalogContext();
  for (  SiteFailureFault fault : failures) {
    for (    Long siteId : fault.getSiteIds()) {
      if (!m_pendingFailedSites.add(siteId)) {
        VoltDB.crashLocalVoltDB("A site id shouldn't be distributed as a fault twice",true,null);
      }
    }
  }
  HashMap<Long,Long> initiatorSafeInitPoint=new HashMap<Long,Long>();
  discoverGlobalFaultData_send(newTracker);
  Long multiPartitionCommitPoint=null;
  if (discoverGlobalFaultData_rcv(newTracker)) {
    multiPartitionCommitPoint=extractGlobalFaultData(newTracker,initiatorSafeInitPoint);
  }
 else {
    return;
  }
  PPDPolicyDecision makePPDPolicyDecisions=VoltDB.instance().getFaultDistributor().makePPDPolicyDecisions(m_pendingFailedSites,newTracker);
  if (makePPDPolicyDecisions == PPDPolicyDecision.NodeFailure) {
    handleSiteFaults(false,m_pendingFailedSites,multiPartitionCommitPoint,initiatorSafeInitPoint);
  }
 else   if (makePPDPolicyDecisions == PPDPolicyDecision.PartitionDetection) {
    handleSiteFaults(true,m_pendingFailedSites,multiPartitionCommitPoint,initiatorSafeInitPoint);
  }
  m_tracker=newTracker;
  m_pendingFailedSites.clear();
}
