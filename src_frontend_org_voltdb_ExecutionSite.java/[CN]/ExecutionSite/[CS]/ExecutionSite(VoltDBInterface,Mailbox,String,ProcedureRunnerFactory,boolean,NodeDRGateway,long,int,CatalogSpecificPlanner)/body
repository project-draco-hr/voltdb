{
  m_siteId=mailbox.getHSId();
  hostLog.l7dlog(Level.TRACE,LogKeys.host_ExecutionSite_Initializing.name(),new Object[]{String.valueOf(m_siteId)},null);
  m_context=voltdb.getCatalogContext();
  m_tracker=null;
  final int partitionId=m_tracker.getPartitionForSite(m_siteId);
  String txnlog_name=ExecutionSite.class.getName() + "." + m_siteId;
  m_txnlog=new VoltLogger(txnlog_name);
  m_rejoining=recovering;
  VoltDB.instance().getFaultDistributor().registerFaultHandler(SiteFailureFault.SITE_FAILURE_EXECUTION_SITE,m_faultHandler,FaultType.SITE_FAILURE);
  m_partitionDRGateway=PartitionDRGateway.getInstance(partitionId,nodeDRGateway,false,m_rejoining);
  if (voltdb.getBackendTargetType() == BackendTarget.NONE) {
    ee=new MockExecutionEngine(null);
    hsql=null;
  }
 else   if (voltdb.getBackendTargetType() == BackendTarget.HSQLDB_BACKEND) {
    hsql=HsqlBackend.initializeHSQLBackend(m_siteId,m_context);
    ee=new MockExecutionEngine(null);
  }
 else {
    String serializedCatalog=serializedCatalogIn;
    if (serializedCatalog == null) {
      serializedCatalog=voltdb.getCatalogContext().catalog.serialize();
    }
    hsql=null;
    ee=initializeEE(voltdb.getBackendTargetType(),serializedCatalog,txnId,m_context.m_uniqueId,configuredNumberOfPartitions);
  }
  m_systemProcedureContext=new SystemProcedureContext();
  m_mailbox=mailbox;
  if (runnerFactory != null) {
    runnerFactory.configure(this,m_systemProcedureContext);
  }
  m_loadedProcedures=new LoadedProcedureSet(this,runnerFactory,getSiteId(),siteIndex);
  m_loadedProcedures.loadProcedures(m_context,voltdb.getBackendTargetType(),csp);
  int snapshotPriority=6;
  if (m_context.cluster.getDeployment().get("deployment") != null) {
    snapshotPriority=m_context.cluster.getDeployment().get("deployment").getSystemsettings().get("systemsettings").getSnapshotpriority();
  }
  m_snapshotter=new SnapshotSiteProcessor(new Runnable(){
    @Override public void run(){
      m_mailbox.deliver(new PotentialSnapshotWorkMessage());
    }
  }
,snapshotPriority);
}
