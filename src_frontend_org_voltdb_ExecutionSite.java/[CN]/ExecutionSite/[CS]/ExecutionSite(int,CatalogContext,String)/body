{
  hostLog.l7dlog(Level.TRACE,LogKeys.host_ExecutionSite_Initializing.name(),new Object[]{String.valueOf(siteId)},null);
  String hostname="";
  try {
    java.net.InetAddress localMachine=java.net.InetAddress.getLocalHost();
    hostname=localMachine.getHostName();
  }
 catch (  java.net.UnknownHostException uhe) {
  }
  if (serializedCatalog == null)   serializedCatalog=context.catalog.serialize();
  m_watchdog=new Watchdog(siteId,siteIndex);
  this.siteId=siteId;
  m_context=context;
  catalog=context.catalog;
  site=m_context.cluster.getSites().get(Integer.toString(siteId));
  m_systemProcedureContext=new SystemProcedureContext();
  m_dumpId="ExecutionSite." + String.valueOf(siteId);
  DumpManager.register(m_dumpId,this);
  int initiatorCount=0;
  for (  final Site s : m_context.cluster.getSites())   if (s.getIsexec() == false)   initiatorCount++;
  final int[] initiatorIds=new int[initiatorCount];
  int index=0;
  for (  final Site s : m_context.cluster.getSites())   if (s.getIsexec() == false)   initiatorIds[index++]=Integer.parseInt(s.getTypeName());
  final Messenger messenger=VoltDB.instance().getMessenger();
  final Mailbox mqueue=messenger.createMailbox(siteId,VoltDB.DTXN_MAILBOX_ID,null);
  dtxnConn=new SimpleDtxnConnection(this,mqueue,initiatorIds);
  HsqlBackend hsqlTemp=null;
  ExecutionEngine eeTemp=null;
  try {
    final BackendTarget target=VoltDB.getEEBackendType();
    if (target == BackendTarget.HSQLDB_BACKEND) {
      hsqlTemp=new HsqlBackend(siteId);
      final String hexDDL=m_context.database.getSchema();
      final String ddl=Encoder.hexDecodeToString(hexDDL);
      final String[] commands=ddl.split(";");
      for (      String command : commands) {
        command=command.trim();
        if (command.length() == 0) {
          continue;
        }
        hsqlTemp.runDDL(command);
      }
      eeTemp=new MockExecutionEngine();
    }
 else     if (target == BackendTarget.NATIVE_EE_JNI) {
      eeTemp=new ExecutionEngineJNI(this,m_context.cluster.getRelativeIndex(),siteId,Integer.valueOf(site.getPartition().getTypeName()),Integer.valueOf(site.getHost().getTypeName()),hostname);
      eeTemp.loadCatalog(serializedCatalog);
      lastTickTime=EstTime.currentTimeMillis();
      eeTemp.tick(lastTickTime,0);
    }
 else {
      eeTemp=new ExecutionEngineIPC(this,m_context.cluster.getRelativeIndex(),siteId,Integer.valueOf(site.getPartition().getTypeName()),Integer.valueOf(site.getHost().getTypeName()),hostname,target);
      eeTemp.loadCatalog(serializedCatalog);
      lastTickTime=EstTime.currentTimeMillis();
      eeTemp.tick(lastTickTime,0);
    }
  }
 catch (  final Exception ex) {
    hostLog.l7dlog(Level.FATAL,LogKeys.host_ExecutionSite_FailedConstruction.name(),new Object[]{siteId,siteIndex},ex);
    VoltDB.crashVoltDB();
  }
  ee=eeTemp;
  hsql=hsqlTemp;
  loadProceduresFromCatalog();
  m_snapshotter=new SnapshotSiteProcessor();
}
