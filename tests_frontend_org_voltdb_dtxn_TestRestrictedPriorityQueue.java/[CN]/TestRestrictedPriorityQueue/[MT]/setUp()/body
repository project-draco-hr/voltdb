{
  m_initiators=new int[2];
  m_initiators[0]=0;
  m_initiators[1]=1;
  m_queue=new RestrictedPriorityQueue(m_initiators,0);
  m_idManager=new TransactionIdManager(0);
  m_txnIds=new Vector<Long>();
  m_proc=new StoredProcedureInvocation();
  m_task=new InitiateTask(0,0,m_idManager.getNextUniqueTransactionId(),true,true,m_proc);
  m_txnIds.add(m_task.getTxnId());
  m_state1=new SinglePartitionTxnState(null,null,m_task);
  m_task=new InitiateTask(1,1,m_idManager.getNextUniqueTransactionId(),true,true,m_proc);
  assertTrue(m_txnIds.lastElement() < m_task.getTxnId());
  m_txnIds.add(m_task.getTxnId());
  m_state2=new SinglePartitionTxnState(null,null,m_task);
  m_task=new InitiateTask(0,0,m_idManager.getNextUniqueTransactionId(),true,true,m_proc);
  assertTrue(m_txnIds.lastElement() < m_task.getTxnId());
  m_txnIds.add(m_task.getTxnId());
  m_state3=new SinglePartitionTxnState(null,null,m_task);
  m_task=new InitiateTask(1,1,m_idManager.getNextUniqueTransactionId(),true,true,m_proc);
  assertTrue(m_txnIds.lastElement() < m_task.getTxnId());
  m_txnIds.add(m_task.getTxnId());
  m_state4=new SinglePartitionTxnState(null,null,m_task);
  m_task=new InitiateTask(0,0,m_idManager.getNextUniqueTransactionId(),true,true,m_proc);
  assertTrue(m_txnIds.lastElement() < m_task.getTxnId());
  m_txnIds.add(m_task.getTxnId());
  m_state5=new SinglePartitionTxnState(null,null,m_task);
  m_task=new InitiateTask(1,1,m_idManager.getNextUniqueTransactionId(),true,true,m_proc);
  assertTrue(m_txnIds.lastElement() < m_task.getTxnId());
  m_state6=new SinglePartitionTxnState(null,null,m_task);
  m_queue.shutdown();
}
