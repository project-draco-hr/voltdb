{
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestLiveSchemaChanges.class);
  VoltServerConfig config=new LocalCluster("liveschema-base.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  ((LocalCluster)config).setHasLocalServer(true);
  VoltProjectBuilder project=new TPCCProjectBuilder();
  project.addLiteralSchema(makeTable("P1",true,false,false,true));
  project.addLiteralSchema(makeTable("R1",true,true,false,true));
  project.addLiteralSchema("CREATE UNIQUE INDEX RLTY ON P1 (BIG);");
  project.addLiteralSchema("CREATE UNIQUE INDEX EXPRESS ON P1 (ABS(SMALL));");
  boolean basecompile=config.compile(project);
  assertTrue(basecompile);
  m_globalDeploymentURL=Configuration.getPathToCatalogForTest("liveschema.xml");
  MiscUtils.copyFile(project.getPathToDeployment(),m_globalDeploymentURL);
  builder.addServerConfig(config);
  config=new LocalCluster("liveschema-newtableinmiddle.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addLiteralSchema(makeTable("P1",true,false,false,true));
  project.addLiteralSchema(makeTable("P2",true,false,false,false));
  project.addLiteralSchema(makeTable("R1",true,true,false,true));
  project.addLiteralSchema("CREATE UNIQUE INDEX EXPRESS ON P1 (ABS(SMALL));");
  boolean compile=config.compile(project);
  assertTrue(compile);
  config=new LocalCluster("liveschema-dropconstraint.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addLiteralSchema(makeTable("P1",true,false,false,false));
  project.addLiteralSchema(makeTable("R1",true,true,false,false));
  project.addLiteralSchema("CREATE UNIQUE INDEX RLTY ON P1 (BIG);");
  project.addLiteralSchema("CREATE UNIQUE INDEX EXPRESS ON P1 (ABS(SMALL));");
  compile=config.compile(project);
  assertTrue(compile);
  config=new LocalCluster("liveschema-addconstraint.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addLiteralSchema(makeTable("P1",true,false,false,true));
  project.addLiteralSchema(makeTable("R1",true,true,false,false));
  project.addLiteralSchema("CREATE UNIQUE INDEX RLTY ON P1 (BIG);");
  project.addLiteralSchema("CREATE UNIQUE INDEX EXPRESS ON P1 (ABS(SMALL));");
  compile=config.compile(project);
  assertTrue(compile);
  config=new LocalCluster("liveschema-renamedindex.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addLiteralSchema(makeTable("P1",true,false,false,true));
  project.addLiteralSchema(makeTable("R1",true,true,false,true));
  project.addLiteralSchema("CREATE UNIQUE INDEX RLTYX ON P1 (BIG);");
  project.addLiteralSchema("CREATE UNIQUE INDEX EXPRESS ON P1 (ABS(SMALL));");
  compile=config.compile(project);
  assertTrue(compile);
  config=new LocalCluster("liveschema-renamedexpressionindex.jar",SITES_PER_HOST,HOSTS,K,BackendTarget.NATIVE_EE_JNI);
  project=new TPCCProjectBuilder();
  project.addLiteralSchema(makeTable("P1",true,false,false,true));
  project.addLiteralSchema(makeTable("R1",true,true,false,true));
  project.addLiteralSchema("CREATE UNIQUE INDEX RLTY ON P1 (BIG);");
  project.addLiteralSchema("CREATE UNIQUE INDEX EXPRESS_RENAMED ON P1 (ABS(SMALL));");
  compile=config.compile(project);
  assertTrue(compile);
  return builder;
}
