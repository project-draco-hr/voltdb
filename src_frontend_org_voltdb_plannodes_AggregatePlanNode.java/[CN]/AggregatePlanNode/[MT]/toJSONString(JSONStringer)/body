{
  super.toJSONString(stringer);
  stringer.key("AGGREGATE_COLUMNS");
  stringer.array();
  for (int ii=0; ii < m_aggregateTypes.size(); ii++) {
    stringer.object();
    stringer.key(Members.AGGREGATE_TYPE.name()).value(m_aggregateTypes.get(ii).name());
    stringer.key(Members.AGGREGATE_NAME.name()).value(m_aggregateColumnNames.get(ii));
    stringer.key(Members.AGGREGATE_GUID.name()).value(m_aggregateColumnGuids.get(ii));
    stringer.key(Members.AGGREGATE_OUTPUT_COLUMN.name()).value(m_aggregateOutputColumns.get(ii));
    stringer.endObject();
  }
  stringer.endArray();
  if (!m_groupByColumnGuids.isEmpty()) {
    stringer.key(Members.GROUPBY_COLUMNS.name()).array();
    for (int i=0; i < m_groupByColumnGuids.size(); i++) {
      PlanColumn column=m_context.get(m_groupByColumnGuids.get(i));
      column.toJSONString(stringer);
    }
    stringer.endArray();
  }
}
