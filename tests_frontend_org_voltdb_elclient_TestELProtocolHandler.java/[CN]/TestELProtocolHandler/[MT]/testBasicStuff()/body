{
  ELDataSink dut=new ELDataSink(PARTITION_ID,TABLE_ID,"coffeetable",new TestELTDecoder(new AdvertisedDataSource(PARTITION_ID,TABLE_ID,"coffeetable",null,null)));
  assertNull(dut.getTxQueue().peek());
  dut.work();
  assertNotNull(dut.getTxQueue().peek());
  ELTProtoMessage m=dut.getTxQueue().poll();
  assertTrue(m.isPoll());
  assertFalse(m.isAck());
  m=new ELTProtoMessage(PARTITION_ID,TABLE_ID);
  m.pollResponse(0,makeFakePollData(10));
  dut.getRxQueue().offer(m);
  dut.work();
  assertNotNull(dut.getTxQueue().peek());
  m=dut.getTxQueue().poll();
  assertTrue(m.isPoll());
  assertTrue(m.isAck());
  assertEquals(0,m.getAckOffset());
  m=new ELTProtoMessage(PARTITION_ID,TABLE_ID);
  m.pollResponse(10,makeFakePollData(20));
  dut.getRxQueue().offer(m);
  dut.work();
  assertNotNull(dut.getTxQueue().peek());
  m=dut.getTxQueue().poll();
  assertTrue(m.isPoll());
  assertTrue(m.isAck());
  assertEquals(10,m.getAckOffset());
  m=new ELTProtoMessage(PARTITION_ID,TABLE_ID);
  m.pollResponse(20,makeFakePollData(0));
  dut.getRxQueue().offer(m);
  dut.work();
  assertNotNull(dut.getTxQueue().peek());
  m=dut.getTxQueue().poll();
  assertTrue(m.isPoll());
  assertFalse(m.isAck());
}
