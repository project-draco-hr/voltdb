{
  if ((this.MaxProcessPerSecond != maxProcessPerSecond) || (adjustment != 0l) || forceSet) {
    this.MaxProcessPerSecond=maxProcessPerSecond;
    maxProcessPerSecond+=adjustment;
    if (0 == maxProcessPerSecond)     maxProcessPerSecond=1000;
    this.SleepTime=(1000l / maxProcessPerSecond) - 1l;
    long gcd=MathEx.gcd(maxProcessPerSecond,1000l);
    double cycleDuration=(1000l / gcd);
    double cycleMaxCount=(maxProcessPerSecond / gcd);
    ArrayList<Long> cycleStepDuration=new ArrayList<Long>();
    ArrayList<Long> cycleStepMaxCount=new ArrayList<Long>();
    ArrayList<Long> cycleStepCount=new ArrayList<Long>();
    while ((cycleDuration >= 1d) && (cycleMaxCount > 0d)) {
      cycleStepDuration.add((long)cycleDuration);
      cycleStepMaxCount.add((long)cycleMaxCount);
      cycleStepCount.add(0l);
      cycleDuration=cycleDuration / 10d;
      cycleMaxCount=Math.ceil(cycleMaxCount / 10d);
    }
    this.StepCount=cycleStepCount.size();
    this.CycleStepDuration=cycleStepDuration.toArray(new Long[this.StepCount]);
    this.CycleStepMaxCount=cycleStepMaxCount.toArray(new Long[this.StepCount]);
    this.CycleStepCount=cycleStepCount.toArray(new Long[this.StepCount]);
    this.CycleStepEndTime=cycleStepCount.toArray(new Long[this.StepCount]);
    for (int i=0; i < this.StepCount; i++)     this.CycleStepEndTime[i]=System.currentTimeMillis() + this.CycleStepDuration[i];
  }
}
