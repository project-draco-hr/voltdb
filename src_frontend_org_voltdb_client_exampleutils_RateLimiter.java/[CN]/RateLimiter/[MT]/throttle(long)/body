{
  long adjustment=0l;
  boolean forceSet=false;
  if (this.CycleAdjustment <= System.currentTimeMillis()) {
    if ((this.MaxProcessPerSecond == maxProcessPerSecond) && (this.LastCycleCount != Long.MAX_VALUE)) {
      if (this.MaxProcessPerSecond > this.LastCycleCount) {
        adjustment=this.MaxProcessPerSecond - this.LastCycleCount;
      }
 else       forceSet=true;
    }
    this.CycleAdjustment=System.currentTimeMillis() + 1000l;
    this.LastCycleCount=0l;
  }
  this.set(maxProcessPerSecond,adjustment,forceSet);
  try {
    if (this.SleepTime > 0)     Thread.sleep(this.SleepTime);
    for (int i=0; i < this.StepCount; i++) {
      this.CycleStepCount[i]++;
      if (this.CycleStepCount[i] >= this.CycleStepMaxCount[i]) {
        long sleepDuration=this.CycleStepEndTime[i] - System.currentTimeMillis() - 1;
        if (sleepDuration > 0)         Thread.sleep(sleepDuration);
        while (System.currentTimeMillis() < this.CycleStepEndTime[i])         ;
        this.CycleStepEndTime[i]=System.currentTimeMillis() + this.CycleStepDuration[i];
        this.CycleStepCount[i]=0l;
      }
    }
    this.LastCycleCount++;
  }
 catch (  Exception tie) {
  }
}
