{
  AbstractExpression predicate=null;
  boolean deleteTuples=false;
  if (!table.getIsreplicated()) {
    predicate=createPredicateForTable(table,config);
    if (predicate != null) {
      deleteTuples=true;
    }
  }
  for (  Entry<Long,Collection<SnapshotDataTarget>> siteTargets : dataTargets.entrySet()) {
    long hsId=siteTargets.getKey();
    Collection<SnapshotDataTarget> targets=siteTargets.getValue();
    m_targets.addAll(targets);
    final List<SnapshotTableTask> tasksForThisTable=new ArrayList<SnapshotTableTask>();
    for (    SnapshotDataTarget target : targets) {
      final Runnable onClose=new TargetStatsClosure(target,table.getTypeName(),numTables,snapshotRecord);
      target.setOnCloseHandler(onClose);
      final SnapshotTableTask task=new SnapshotTableTask(table,target,new SnapshotDataFilter[0],predicate,deleteTuples);
      tasksForThisTable.add(task);
    }
    if (table.getIsreplicated()) {
      placeReplicatedTasks(tasksForThisTable,Arrays.asList(hsId));
    }
 else {
      placePartitionedTasks(tasksForThisTable,Arrays.asList(hsId));
    }
  }
}
