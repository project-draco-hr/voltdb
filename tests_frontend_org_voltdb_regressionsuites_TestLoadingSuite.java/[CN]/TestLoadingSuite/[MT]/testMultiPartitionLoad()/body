{
  Client client=getClient();
  VoltTable table;
  ClientResponse r;
  table=m_template.clone(100);
  table.addRow(1,1,1,"1",1.0);
  table.addRow(2,1,2,"2",2.0);
  table.addRow(3,2,3,"3",3.0);
  table.addRow(4,2,4,"4",4.0);
  r=client.callProcedure("@LoadMultipartitionTable","REPLICATED",upsertMode,table);
  assertEquals(ClientResponse.SUCCESS,r.getStatus());
  assertEquals(1,r.getResults().length);
  assertEquals(4,r.getResults()[0].asScalarLong());
  assertEquals(4,countReplicatedRows(client));
  if (!isHSQL()) {
    table=m_template.clone(100);
    table.addRow(1,1,1,"1",1.0);
    table.addRow(2,1,2,"2",2.0);
    table.addRow(3,2,3,"3",3.0);
    table.addRow(4,2,4,"4",4.0);
    try {
      r=client.callProcedure("@LoadMultipartitionTable","PARTITIONED",upsertMode,table);
      fail();
    }
 catch (    ProcCallException e) {
    }
    table=m_template.clone(100);
    table.addRow(5,1,5,"5",5.0);
    table.addRow(5,1,5,"5",5.0);
    try {
      r=client.callProcedure("@LoadMultipartitionTable","REPLICATED",upsertMode,table);
      fail();
    }
 catch (    ProcCallException e) {
    }
    assertEquals(4,countReplicatedRows(client));
  }
}
