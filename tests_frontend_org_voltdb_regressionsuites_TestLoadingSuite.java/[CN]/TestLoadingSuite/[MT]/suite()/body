{
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestLoadingSuite.class);
  String schema="CREATE TABLE REPLICATED (\n" + "  ival INTEGER DEFAULT '0' NOT NULL,\n" + "  pval INTEGER DEFAULT '0' NOT NULL,\n"+ "  bval TINYINT DEFAULT '0' NOT NULL,\n"+ "  sval VARCHAR(60) DEFAULT '0' NOT NULL,\n"+ "  dval FLOAT DEFAULT '0' NOT NULL,\n"+ "  PRIMARY KEY (ival)\n"+ ");\n"+ "CREATE TABLE PARTITIONED (\n"+ "  ival INTEGER DEFAULT '0' NOT NULL,\n"+ "  pval INTEGER DEFAULT '0' NOT NULL,\n"+ "  bval TINYINT DEFAULT '0' NOT NULL,\n"+ "  sval VARCHAR(60) DEFAULT '0' NOT NULL,\n"+ "  dval FLOAT DEFAULT '0' NOT NULL,\n"+ "  PRIMARY KEY (ival,pval)\n"+ ");\n";
  VoltProjectBuilder project=new VoltProjectBuilder();
  project.addLiteralSchema(schema);
  project.addPartitionInfo("PARTITIONED","pval");
  project.addStmtProcedure("dummy","select * from REPLICATED;");
  boolean success;
  VoltServerConfig config=new LocalSingleProcessServer("loading-twosites.jar",2,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assert(success);
  builder.addServerConfig(config);
  config=new LocalSingleProcessServer("loading-hsqldb.jar",1,BackendTarget.HSQLDB_BACKEND);
  success=config.compile(project);
  assert(success);
  builder.addServerConfig(config);
  config=new LocalCluster("loading-cluster.jar",2,2,1,BackendTarget.NATIVE_EE_JNI);
  success=config.compile(project);
  assert(success);
  builder.addServerConfig(config);
  return builder;
}
