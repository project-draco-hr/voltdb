{
  Vector result=null;
  try {
    lTable.removeAll();
    if (iSelectionStep == Transfer.SELECT_SOURCE_CATALOG) {
      result=sourceDb.getCatalog();
    }
 else     if (iSelectionStep == Transfer.SELECT_DEST_CATALOG) {
      result=targetDb.getCatalog();
    }
 else {
      exit();
    }
    if (result.size() > 1) {
      lTable.setMultipleMode(true);
      if (iSelectionStep == Transfer.SELECT_SOURCE_CATALOG) {
        bStart.setLabel("Select Catalog: Source");
      }
 else {
        bStart.setLabel("Select Catalog: Destination");
      }
      bStart.invalidate();
      bStart.setEnabled(true);
      for (Enumeration e=result.elements(); e.hasMoreElements(); ) {
        lTable.add(e.nextElement().toString());
      }
      lTable.repaint();
      trace("Select correct Catalog");
    }
 else {
      if (result.size() == 1) {
        if (iSelectionStep == Transfer.SELECT_SOURCE_CATALOG) {
          sSourceCatalog=(String)result.firstElement();
          sSourceSchemas=null;
        }
 else {
          sDestCatalog=(String)result.firstElement();
          sDestSchema=null;
        }
      }
 else {
        if (iSelectionStep == Transfer.SELECT_SOURCE_CATALOG) {
          sSourceCatalog=null;
          sSourceSchemas=null;
        }
 else {
          sDestCatalog=null;
          sDestSchema=null;
        }
      }
      if ((iSelectionStep == Transfer.SELECT_DEST_CATALOG) && (sDestCatalog != null)) {
        try {
          targetDb.setCatalog(sDestCatalog);
        }
 catch (        Exception ex) {
          trace("Catalog " + sSourceCatalog + " could not be selected in the target database");
          sSourceCatalog=null;
        }
      }
      iSelectionStep++;
      ProcessNextStep();
      return false;
    }
  }
 catch (  Exception exp) {
    lTable.removeAll();
    trace("Exception reading catalog: " + exp);
    exp.printStackTrace();
  }
  return (lTable.getItemCount() > 0);
}
