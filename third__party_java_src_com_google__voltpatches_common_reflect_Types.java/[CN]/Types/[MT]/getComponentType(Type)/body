{
  checkNotNull(type);
  final AtomicReference<Type> result=new AtomicReference<Type>();
  new TypeVisitor(){
    @Override void visitTypeVariable(    TypeVariable<?> t){
      result.set(subtypeOfComponentType(t.getBounds()));
    }
    @Override void visitWildcardType(    WildcardType t){
      result.set(subtypeOfComponentType(t.getUpperBounds()));
    }
    @Override void visitGenericArrayType(    GenericArrayType t){
      result.set(t.getGenericComponentType());
    }
    @Override void visitClass(    Class<?> t){
      result.set(t.getComponentType());
    }
  }
.visit(type);
  return result.get();
}
