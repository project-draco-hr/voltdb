{
  assertFalse(CatalogUtil.isCatalogCompatible("0.3"));
  int[] minCompatibleVersion=Arrays.copyOf(CatalogUtil.minCompatibleVersion,CatalogUtil.minCompatibleVersion.length);
  for (int i=minCompatibleVersion.length - 1; i >= 0; i--) {
    if (minCompatibleVersion[i] != 0) {
      minCompatibleVersion[i]--;
      break;
    }
  }
  ArrayList<Integer> arrayList=new ArrayList<Integer>();
  for (  int part : minCompatibleVersion) {
    arrayList.add(part);
  }
  String version=Joiner.on('.').join(arrayList);
  assertNotNull(version);
  assertFalse(CatalogUtil.isCatalogCompatible(version));
  final String currentVersion=VoltDB.instance().getVersionString();
  int[] parseCurrentVersion=MiscUtils.parseVersionString(currentVersion);
  parseCurrentVersion[parseCurrentVersion.length - 1]++;
  arrayList=new ArrayList<Integer>();
  for (  int part : parseCurrentVersion) {
    arrayList.add(part);
  }
  String futureVersion=Joiner.on('.').join(arrayList);
  assertFalse(CatalogUtil.isCatalogCompatible(futureVersion));
  String longerVersion=currentVersion + ".2";
  assertFalse(CatalogUtil.isCatalogCompatible(longerVersion));
  int[] longVersion=MiscUtils.parseVersionString("2.3.1");
  int[] shortVersion=MiscUtils.parseVersionString("2.3");
  assertEquals(-1,MiscUtils.compareVersions(shortVersion,longVersion));
  assertTrue(CatalogUtil.isCatalogCompatible(VoltDB.instance().getVersionString()));
}
