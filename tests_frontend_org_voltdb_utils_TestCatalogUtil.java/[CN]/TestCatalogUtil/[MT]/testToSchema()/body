{
  String search_str="";
  for (  Table catalog_tbl : catalog_db.getTables()) {
    StringBuilder sb=new StringBuilder();
    CatalogSchemaTools.toSchema(sb,catalog_tbl,null,false);
    String sql=sb.toString();
    assertTrue(sql.startsWith("CREATE TABLE " + catalog_tbl.getTypeName()));
    for (    Column catalog_col : catalog_tbl.getColumns()) {
      assertTrue(sql.indexOf(catalog_col.getTypeName()) != -1);
    }
    for (    Constraint catalog_const : catalog_tbl.getConstraints()) {
      ConstraintType const_type=ConstraintType.get(catalog_const.getType());
      Index catalog_idx=catalog_const.getIndex();
      List<ColumnRef> columns=CatalogUtil.getSortedCatalogItems(catalog_idx.getColumns(),"index");
      if (!columns.isEmpty()) {
        search_str="";
        String add="";
        for (        ColumnRef catalog_colref : columns) {
          search_str+=add + catalog_colref.getColumn().getTypeName();
          add=", ";
        }
        assertTrue(sql.indexOf(search_str) != -1);
      }
switch (const_type) {
case PRIMARY_KEY:
        assertTrue(sql.indexOf("PRIMARY KEY") != -1);
      break;
case FOREIGN_KEY:
    search_str="REFERENCES " + catalog_const.getForeignkeytable().getTypeName();
  assertTrue(sql.indexOf(search_str) != -1);
break;
}
}
}
}
