{
  if (!MiscUtils.isPro()) {
    return;
  }
  final String deploymentString="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "</deployment>";
  final String ddl="SET " + DatabaseConfiguration.DR_MODE_NAME + "="+ DatabaseConfiguration.ACTIVE_ACTIVE+ ";\n"+ "CREATE TABLE T (D1 INTEGER NOT NULL, D2 INTEGER);\n"+ "DR TABLE T;\n";
  final File tmpWithDefault=VoltProjectBuilder.writeStringToTempFile(deploymentString);
  DeploymentType deploymentWithDefault=CatalogUtil.getDeployment(new FileInputStream(tmpWithDefault));
  final File tmpDdl=VoltProjectBuilder.writeStringToTempFile(ddl);
  VoltCompiler compiler=new VoltCompiler();
  String x[]={tmpDdl.getAbsolutePath()};
  Catalog cat=compiler.compileCatalogFromDDL(x);
  CatalogUtil.compileDeployment(cat,deploymentWithDefault,false);
  Database db=cat.getClusters().get("cluster").getDatabases().get("database");
  assertTrue(db.getIsactiveactivedred());
  assertTrue(db.getConnectors().get(CatalogUtil.DR_CONFLICTS_TABLE_EXPORT_GROUP) != null);
  assertEquals("MyExport",db.getConnectors().get(CatalogUtil.DR_CONFLICTS_TABLE_EXPORT_GROUP).getConfig().get("nonce").getValue());
  assertEquals(cat.getClusters().get("cluster").getVoltroot() + "/" + CatalogUtil.DEFAULT_DR_CONFLICTS_DIR,db.getConnectors().get(CatalogUtil.DR_CONFLICTS_TABLE_EXPORT_GROUP).getConfig().get("outdir").getValue());
  assertEquals("true",db.getConnectors().get(CatalogUtil.DR_CONFLICTS_TABLE_EXPORT_GROUP).getConfig().get("replicated").getValue());
  assertEquals(CatalogUtil.DEFAULT_DR_CONFLICTS_EXPORT_TYPE,db.getConnectors().get(CatalogUtil.DR_CONFLICTS_TABLE_EXPORT_GROUP).getConfig().get("type").getValue());
}
