{
  if (!MiscUtils.isPro()) {
    return;
  }
  final String withBadImport1="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <import>"+ "        <configuration type=\"custom\" module=\"///\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </import>"+ "</deployment>";
  final String withBadImport2="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <import>"+ "        <configuration type=\"custom\" module=\"file:/tmp/foobar.jar\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </import>"+ "</deployment>";
  File catjar=CatalogUtil.createTemporaryEmptyCatalogJarFile();
  final String withBadImport3="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <import>"+ "        <configuration type=\"custom\" module=\"file:/" + catjar.toString() + "\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "        <configuration type=\"custom\" module=\"file:/"+ catjar.toString()+ "\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </import>"+ "</deployment>";
  final String withBadImport4="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <import>"+ "        <configuration type=\"custom\" module=\"file:" + catjar.toString() + "\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "        <configuration type=\"custom\" module=\"file:"+ catjar.toString()+ "\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </import>"+ "</deployment>";
  final String goodImport1="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <import>"+ "        <configuration type=\"custom\" module=\"file:" + catjar.toString() + "\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </import>"+ "</deployment>";
  final String goodImport2="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <import>"+ "        <configuration type=\"custom\" module=\"org.voltdb.importer.ImportHandlerProxy\" >"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </import>"+ "</deployment>";
  final String ddl="CREATE TABLE data ( id BIGINT default 0 , value BIGINT DEFAULT 0 );\n";
  final File tmpDdl=VoltProjectBuilder.writeStringToTempFile(ddl);
  final File tmpBad=VoltProjectBuilder.writeStringToTempFile(withBadImport1);
  DeploymentType bad_deployment=CatalogUtil.getDeployment(new FileInputStream(tmpBad));
  VoltCompiler compiler=new VoltCompiler();
  String x[]={tmpDdl.getAbsolutePath()};
  Catalog cat=compiler.compileCatalogFromDDL(x);
  String msg=CatalogUtil.compileDeployment(cat,bad_deployment,false);
  assertTrue("compilation should have failed",msg.contains("Error validating deployment configuration: Import failed to configure, failed to load module by URL or classname provided"));
  final File tmpBad2=VoltProjectBuilder.writeStringToTempFile(withBadImport2);
  DeploymentType bad_deployment2=CatalogUtil.getDeployment(new FileInputStream(tmpBad2));
  VoltCompiler compiler2=new VoltCompiler();
  String x2[]={tmpDdl.getAbsolutePath()};
  Catalog cat2=compiler2.compileCatalogFromDDL(x2);
  String msg2=CatalogUtil.compileDeployment(cat2,bad_deployment2,false);
  assertTrue("compilation should have failed",msg2.contains("Error validating deployment configuration: Import failed to configure, failed to load module by URL or classname provided"));
  final File tmpBad3=VoltProjectBuilder.writeStringToTempFile(withBadImport3);
  DeploymentType bad_deployment3=CatalogUtil.getDeployment(new FileInputStream(tmpBad3));
  VoltCompiler compiler3=new VoltCompiler();
  String x3[]={tmpDdl.getAbsolutePath()};
  Catalog cat3=compiler3.compileCatalogFromDDL(x3);
  String msg3=CatalogUtil.compileDeployment(cat3,bad_deployment3,false);
  assertTrue("compilation should have failed",msg3.contains("Error validating deployment configuration: Import failed to configure, failed to load module by URL or classname provided"));
  final File tmpBad4=VoltProjectBuilder.writeStringToTempFile(withBadImport4);
  DeploymentType bad_deployment4=CatalogUtil.getDeployment(new FileInputStream(tmpBad4));
  VoltCompiler compiler4=new VoltCompiler();
  String x4[]={tmpDdl.getAbsolutePath()};
  Catalog cat4=compiler4.compileCatalogFromDDL(x4);
  String msg4=CatalogUtil.compileDeployment(cat4,bad_deployment4,false);
  assertTrue("compilation should have failed",msg4.contains("Error validating deployment configuration: Multiple connectors can not be assigned to single import module"));
  final File good1=VoltProjectBuilder.writeStringToTempFile(goodImport1);
  DeploymentType good_deployment1=CatalogUtil.getDeployment(new FileInputStream(good1));
  VoltCompiler good_compiler1=new VoltCompiler();
  String x5[]={tmpDdl.getAbsolutePath()};
  Catalog cat5=good_compiler1.compileCatalogFromDDL(x5);
  String msg5=CatalogUtil.compileDeployment(cat5,good_deployment1,false);
  assertNull(msg5);
  final File good2=VoltProjectBuilder.writeStringToTempFile(goodImport2);
  DeploymentType good_deployment2=CatalogUtil.getDeployment(new FileInputStream(good2));
  VoltCompiler good_compiler2=new VoltCompiler();
  String x6[]={tmpDdl.getAbsolutePath()};
  Catalog cat6=good_compiler2.compileCatalogFromDDL(x6);
  String msg6=CatalogUtil.compileDeployment(cat6,good_deployment2,false);
  assertNull(msg6);
  System.out.println("Import deployment tests done.");
}
