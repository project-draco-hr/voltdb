{
  System.out.println("STARTING testAbs");
  Client client=getClient();
  ProcedureCallback callback=new ProcedureCallback(){
    @Override public void clientCallback(    ClientResponse clientResponse) throws Exception {
      if (clientResponse.getStatus() != ClientResponse.SUCCESS) {
        throw new RuntimeException("Failed with response: " + clientResponse.getStatusString());
      }
    }
  }
;
  for (int id=8; id < 11; id++) {
  }
  client.callProcedure(callback,"P1.insert",1,"??????ab",10,1.1,new Timestamp(100000000L));
  client.callProcedure(callback,"P1.insert",2,"Xin",10,1.1,new Timestamp(100000000L));
  ClientResponse cr=null;
  VoltTable r=null;
  cr=client.callProcedure("CHAR_LENGTH");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  System.err.println("[CHAR_LENGTH] result:\n" + r);
  cr=client.callProcedure("OCTET_LENGTH");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  r=cr.getResults()[0];
  System.err.println("[OCTET_LENGTH] result:\n" + r);
}
