@staticmethod
def port_validation(form, field):
    '\n        Port Validation part\n        '
    response_result = {'status': 1, }
    if (':' in field.data):
        count = field.data.count(':')
        if (count > 1):
            raise ValidationError('Invalid value')
        array = field.data.split(':')
        if (len(array) == 2):
            try:
                socket.inet_pton(socket.AF_INET, array[0])
            except AttributeError:
                try:
                    socket.inet_aton(array[0])
                except socket.error:
                    raise ValidationError('Invalid IP address')
                return (array[0].count('.') == 3)
            except socket.error:
                raise ValidationError('Invalid IP address')
            try:
                val = int(array[1])
                if ((val < 1) or (val >= 65535)):
                    raise ValidationError('Port must be greater than 1 and less than 65535')
            except ValueError as err:
                msg = err.message
                if (msg is 'Port must be greater than 1 and less than 65535'):
                    raise ValidationError('Port must be greater than 1 and less than 65535')
                else:
                    raise ValidationError('Value must be positive.')
        else:
            raise ValidationError('Invalid value')
    else:
        try:
            val = int(field.data)
            if ((val < 1) or (val > 65536)):
                raise ValidationError('Port must be greater than 1 and less than 65535')
        except ValueError as err:
            msg = err.message
            if (msg is 'Port must be greater than 1 and less than 65535'):
                raise ValidationError('Port must be greater than 1 and less than 65535')
            else:
                raise ValidationError('Value must be positive.')
