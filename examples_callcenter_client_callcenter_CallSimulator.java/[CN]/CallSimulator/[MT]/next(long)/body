{
  if (systemCurrentTimeMillis > currentSystemMilliTimestamp) {
    long eventBacklog=targetEventsThisMillisecond - eventsSoFarThisMillisecond;
    targetEventsThisMillisecond=(long)Math.floor(targetEventsPerMillisecond);
    double targetFraction=targetEventsPerMillisecond - targetEventsThisMillisecond;
    targetEventsThisMillisecond+=(rand.nextDouble() <= targetFraction) ? 1 : 0;
    targetEventsThisMillisecond+=eventBacklog;
    eventsSoFarThisMillisecond=0;
    currentSystemMilliTimestamp=systemCurrentTimeMillis;
  }
  CallEvent callEvent=delayedEvents.nextReady(systemCurrentTimeMillis);
  if (callEvent != null) {
    assert(callEvent.startTS == null);
    assert(callEvent.endTS != null);
    agentsAvailable.add(callEvent.agentId);
    phoneNumbersAvailable.add(callEvent.phoneNo);
    validate();
    return callEvent;
  }
  if (targetEventsThisMillisecond == eventsSoFarThisMillisecond) {
    validate();
    return null;
  }
  CallEvent[] event=makeRandomEvent();
  if (event == null) {
    validate();
    return null;
  }
  long endTimeKey=event[1].endTS.getTime();
  assert((endTimeKey - systemCurrentTimeMillis) < (config.maxcalldurationseconds * 1000));
  delayedEvents.add(endTimeKey,event[1]);
  eventsSoFarThisMillisecond++;
  validate();
  return event[0];
}
