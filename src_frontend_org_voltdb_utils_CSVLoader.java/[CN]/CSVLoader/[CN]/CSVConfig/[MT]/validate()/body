{
  if (maxerrors < 0) {
    exitWithMessageAndUsage("abortfailurecount must be >=0");
  }
  if (procedure.equals("") && table.equals("")) {
    exitWithMessageAndUsage("procedure name or a table name required");
  }
  if (!procedure.equals("") && !table.equals("")) {
    exitWithMessageAndUsage("Only a procedure name or a table name required, pass only one please");
  }
  if (skip < 0) {
    exitWithMessageAndUsage("skipline must be >= 0");
  }
  if (port < 0) {
    exitWithMessageAndUsage("port number must be >= 0");
  }
  if (batch < 0) {
    exitWithMessageAndUsage("batch size number must be >= 0");
  }
  if (!customNullString.isEmpty() && !blank.equals("error")) {
    blank="empty";
  }
  if (!blank.equalsIgnoreCase("error") && !blank.equalsIgnoreCase("null") && !blank.equalsIgnoreCase("empty")) {
    exitWithMessageAndUsage("blank configuration specified must be one of {error|null|empty}");
  }
  if ((procedure != null) && (procedure.trim().length() > 0)) {
    useSuppliedProcedure=true;
  }
  if (!timezone.equals("")) {
    boolean isValidTimezone=false;
    for (    String tzId : TimeZone.getAvailableIDs()) {
      if (tzId.equals(timezone)) {
        TimeZone.setDefault(TimeZone.getTimeZone(timezone));
        isValidTimezone=true;
        break;
      }
    }
    if (!isValidTimezone) {
      exitWithMessageAndUsage("specified timezone \"" + timezone + "\" is invalid");
    }
  }
}
