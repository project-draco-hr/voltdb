{
  int bulkflush=300;
  try {
    long linect=0;
    for (    Long irow : errorInfo.keySet()) {
      String info[]=errorInfo.get(irow);
      if (info.length != 2)       System.out.println("internal error, infomation is not enough");
      linect++;
      out_invaliderowfile.write(info[0] + "\n");
      String message="invalid line " + irow + ":  "+ info[0]+ "\n";
      System.err.print(message);
      out_logfile.write(message + info[1] + "\n");
      if (linect % bulkflush == 0) {
        out_invaliderowfile.flush();
        out_logfile.flush();
      }
    }
    float elapsedTimeSec=latency / 1000F;
    out_reportfile.write("CSVLoader elaspsed: " + elapsedTimeSec + " seconds\n");
    out_reportfile.write("Number of tuples tring to insert:" + outCount.get() + "\n");
    out_reportfile.write("Number of failed tuples:" + errorInfo.size() + "\n");
    out_reportfile.write("Number of acknowledged tuples:     " + inCount.get() + "\n");
    out_reportfile.write("CSVLoader rate: " + outCount.get() / elapsedTimeSec + " row/s\n");
    System.out.println("invalid row file is generated to:" + path_invalidrowfile + "\n"+ "log file is generated to:"+ path_logfile+ "\n"+ "report file is generated to:"+ path_reportfile);
    out_invaliderowfile.flush();
    out_logfile.flush();
    out_reportfile.flush();
  }
 catch (  FileNotFoundException e) {
    System.err.println("CSV report directory '" + config.reportdir + "' does not exist.");
  }
catch (  Exception x) {
    System.err.println(x.getMessage());
  }
}
