{
  latency=System.currentTimeMillis() - start;
  m_log.info("CSVLoader elapsed: " + latency / 1000F + " seconds");
  int bulkflush=300;
  try {
    long linect=0;
    for (    Long irow : errorInfo.keySet()) {
      String info[]=errorInfo.get(irow);
      if (info.length != 2)       System.out.println("internal error, information is not enough");
      linect++;
      out_invaliderowfile.write(info[0] + "\n");
      String message="Invalid input on line " + irow + ".\n  Contents:"+ info[0];
      m_log.error(message);
      out_logfile.write(message + "\n  " + info[1]+ "\n");
      if (linect % bulkflush == 0) {
        out_invaliderowfile.flush();
        out_logfile.flush();
      }
    }
    float elapsedTimeSec=latency / 1000F;
    out_reportfile.write("csvloader elaspsed: " + elapsedTimeSec + " seconds\n");
    out_reportfile.write("Number of rows read from input: " + outCount.get() + "\n");
    out_reportfile.write("Number of rows successfully inserted: " + inCount.get() + "\n");
    out_reportfile.write("Number of rows that could not be inserted: " + errorInfo.size() + "\n");
    out_reportfile.write("CSVLoader rate: " + outCount.get() / elapsedTimeSec + " row/s\n");
    m_log.info("invalid row file is generated to:" + pathInvalidrowfile);
    m_log.info("log file is generated to:" + pathLogfile);
    m_log.info("report file is generated to:" + pathReportfile);
    out_invaliderowfile.flush();
    out_logfile.flush();
    out_reportfile.flush();
  }
 catch (  FileNotFoundException e) {
    m_log.error("CSV report directory '" + config.reportdir + "' does not exist.");
  }
catch (  Exception x) {
    m_log.error(x.getMessage());
  }
}
