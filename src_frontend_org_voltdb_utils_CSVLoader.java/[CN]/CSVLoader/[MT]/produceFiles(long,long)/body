{
  long latency=System.currentTimeMillis() - start;
  m_log.info("Elapsed time: " + latency / 1000F + " seconds");
  try {
    flushErrorInfo();
    float elapsedTimeSec=latency / 1000F;
    out_reportfile.write("CSVLoader elaspsed: " + elapsedTimeSec + " seconds\n");
    long trueSkip;
    long totolLineCnt;
    long totalRowCnt;
    if (config.useSuppliedProcedure) {
      totolLineCnt=CSVFileReader.m_totalLineCount.get();
      totalRowCnt=CSVFileReader.m_totalRowCount.get();
    }
 else {
      totolLineCnt=CSVFileReader.m_totalLineCount.get();
      totalRowCnt=CSVFileReader.m_totalRowCount.get();
    }
    if (config.skip < totolLineCnt) {
      trueSkip=config.skip;
    }
 else {
      trueSkip=totolLineCnt;
    }
    out_reportfile.write("Number of input lines skipped: " + trueSkip + "\n");
    out_reportfile.write("Number of lines read from input: " + (totolLineCnt - trueSkip) + "\n");
    if (config.limitrows == -1) {
      out_reportfile.write("Input stopped after " + totalRowCnt + " rows read"+ "\n");
    }
    out_reportfile.write("Number of rows discovered: " + totolLineCnt + "\n");
    out_reportfile.write("Number of rows successfully inserted: " + ackCount + "\n");
    out_reportfile.write("Number of rows that could not be inserted: " + m_errorCount + "\n");
    out_reportfile.write("CSVLoader rate: " + insertCount / elapsedTimeSec + " row/s\n");
    m_log.info("Invalid row file: " + pathInvalidrowfile);
    m_log.info("Log file: " + pathLogfile);
    m_log.info("Report file: " + pathReportfile);
    out_invaliderowfile.flush();
    out_logfile.flush();
    out_reportfile.flush();
  }
 catch (  FileNotFoundException e) {
    m_log.error("CSV report directory '" + config.reportdir + "' does not exist.");
  }
catch (  Exception x) {
    m_log.error(x.getMessage());
  }
}
