{
  String s=null;
  if (next >= qtext.length || qtext[next] != '\"') {
    return super.getField(sep,sepLen,isEnd);
  }
  try {
    field++;
    StringBuffer sb=new StringBuffer();
    boolean done=false;
    int state=NORMAL_FIELD;
    int end=-1;
    if (!isEnd) {
      end=text.indexOf(sep,next);
    }
    for (; next < qtext.length; next++) {
switch (state) {
case NORMAL_FIELD:
default :
        if (next == end) {
          next+=sepLen;
          done=true;
        }
 else         if (qtext[next] == '\"') {
          state=NEED_END_QUOTE;
        }
 else {
          sb.append(qtext[next]);
        }
      break;
case NEED_END_QUOTE:
    if (qtext[next] == '\"') {
      state=FOUND_QUOTE;
    }
 else {
      sb.append(qtext[next]);
    }
  break;
case FOUND_QUOTE:
if (qtext[next] == '\"') {
  sb.append(qtext[next]);
  state=NEED_END_QUOTE;
}
 else {
  next+=sepLen - 1;
  state=NORMAL_FIELD;
  if (!isEnd) {
    next++;
    done=true;
  }
}
break;
}
if (done) {
break;
}
}
s=sb.toString();
}
 catch (Exception e) {
throw new IOException(Error.getMessage(ErrorCode.M_TEXT_SOURCE_FIELD_ERROR,0,new Object[]{new Integer(field),e.toString()}));
}
return s;
}
