def __init__(self, verbs, options, usage, description, version):
    '\n        Command line processor constructor.\n        '
    self.verbs = verbs
    self.verb_names = verbs.keys()
    self.options = options
    self.preproc = VoltCLICommandPreprocessor(self.options)
    full_usage = ('%s\n' % usage)
    self.verb_names.sort()
    if verbs:
        for verb_name in self.verb_names:
            verb = self.verbs[verb_name]
            if (not verb.cli_spec.baseverb):
                full_usage += ('\n       %s' % get_verb_usage(verb))
        full_usage += '\n'
        for verb_name in self.verb_names:
            verb = self.verbs[verb_name]
            if verb.cli_spec.baseverb:
                full_usage += ('\n       %s' % get_verb_usage(verb))
    optparse.OptionParser.__init__(self, description=description, usage=full_usage, version=version)
    self.options.sort()
    for option in self.options:
        self.add_option(*option.get_option_names(), **option.kwargs)
