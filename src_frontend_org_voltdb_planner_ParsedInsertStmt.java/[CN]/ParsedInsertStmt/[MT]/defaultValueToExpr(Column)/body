{
  AbstractExpression expr=null;
  boolean isConstantValue=true;
  if (column.getDefaulttype() == VoltType.TIMESTAMP.getValue()) {
    boolean isFunctionFormat=true;
    String timeValue=column.getDefaultvalue();
    try {
      Long.parseLong(timeValue);
      isFunctionFormat=false;
    }
 catch (    NumberFormatException e) {
    }
    if (isFunctionFormat) {
      try {
        java.sql.Timestamp.valueOf(timeValue);
        isFunctionFormat=false;
      }
 catch (      IllegalArgumentException e) {
      }
    }
    if (isFunctionFormat) {
      String name=timeValue.split(":")[0];
      int id=Integer.parseInt(timeValue.split(":")[1]);
      FunctionExpression funcExpr=new FunctionExpression();
      funcExpr.setAttributes(name,name,id);
      funcExpr.setValueType(VoltType.TIMESTAMP);
      funcExpr.setValueSize(VoltType.TIMESTAMP.getMaxLengthInBytes());
      expr=funcExpr;
      isConstantValue=false;
    }
  }
  if (isConstantValue) {
    ConstantValueExpression const_expr=new ConstantValueExpression();
    expr=const_expr;
    if (column.getDefaulttype() != 0) {
      const_expr.setValue(column.getDefaultvalue());
      const_expr.refineValueType(VoltType.get((byte)column.getDefaulttype()),column.getSize());
    }
 else {
      const_expr.setValue(null);
      const_expr.refineValueType(VoltType.get((byte)column.getType()),column.getSize());
    }
  }
  assert(expr != null);
  return expr;
}
