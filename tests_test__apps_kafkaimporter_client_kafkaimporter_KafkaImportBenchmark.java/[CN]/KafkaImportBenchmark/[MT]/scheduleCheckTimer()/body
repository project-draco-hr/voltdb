{
  final Timer timer=new Timer("checkTimer",true);
  final long period=config.displayinterval;
  timer.scheduleAtFixedRate(new TimerTask(){
    @Override public void run(){
      long count=0;
      if (!config.useexport) {
        count=MatchChecks.getImportTableRowCount(config.alltypes,client);
      }
 else {
        count=MatchChecks.getImportRowCount(client);
      }
      importProgress.add((int)count);
      if (config.alltypes) {
        long key=MatchChecks.checkRowMismatch(client);
        if (key != 0) {
          log.error("Import value mismatch at row " + key + ". Exiting.");
          System.exit(-1);
        }
      }
      int sz=importProgress.size();
      if (sz > 1) {
        log.info("Import Throughput " + (count - importProgress.get(sz - 2)) / period + "/s, Total Rows: " + count);
      }
      log.info("Import stats: " + MatchChecks.getImportStats(client));
    }
  }
,config.displayinterval * 1000,config.displayinterval * 1000);
}
