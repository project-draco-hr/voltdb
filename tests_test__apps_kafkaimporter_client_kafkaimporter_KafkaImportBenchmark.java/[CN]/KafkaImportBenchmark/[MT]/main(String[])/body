{
  VoltLogger log=new VoltLogger("Benchmark.main");
  Config config=new Config();
  config.parse(KafkaImportBenchmark.class.getName(),args);
  dbconnect(config.servers,config.ratelimit);
  exportProc=new InsertExport(config.allvalues,client,rowsAdded);
  exportMon=new TableChangeMonitor(client,"StreamedTable","KAFKAEXPORTTABLE1");
  importMon=new TableChangeMonitor(client,"PersistentTable","KAFKAIMPORTTABLE1");
  log.info("Starting KafkaImportBenchmark...");
  KafkaImportBenchmark benchmark=new KafkaImportBenchmark(config);
  BenchmarkRunner runner=new BenchmarkRunner(benchmark);
  runner.start();
  runner.join();
  long exportRowCount=MatchChecks.getExportRowCount(client);
  log.info("Export phase complete, " + exportRowCount + " rows exported, waiting for import to drain...");
  do {
    Thread.sleep(END_WAIT * 1000);
  }
 while (importProgress.size() < 4 || importProgress.get(importProgress.size() - 1) > importProgress.get(importProgress.size() - 2) || importProgress.get(importProgress.size() - 1) > importProgress.get(importProgress.size() - 3) || importProgress.get(importProgress.size() - 1) > importProgress.get(importProgress.size() - 4));
  long mirrorRows=MatchChecks.getMirrorTableRowCount(config.allvalues,client);
  long importRows=MatchChecks.getImportTableRowCount(config.allvalues,client);
  long importRowCount=MatchChecks.getImportRowCount(client);
  log.info("Total rows exported: " + finalInsertCount);
  log.info("Unmatched Rows remaining in the export Mirror Table: " + mirrorRows);
  log.info("Unmatched Rows received from Kafka to Import Table (duplicate rows): " + importRows);
  boolean testResult=true;
  if (mirrorRows != 0) {
    log.error(mirrorRows + " Rows are missing from the import stream, failing test");
    testResult=false;
  }
  if (importRowCount < exportRowCount) {
    log.error("Export count '" + exportRowCount + "' does not match import row count '"+ importRowCount+ "' test fails.");
    testResult=false;
  }
  client.drain();
  client.close();
  if (testResult == true) {
    log.info("Test passed!");
    System.exit(0);
  }
 else {
    log.info("Test failed!");
    System.exit(1);
  }
}
