{
  VoltServerConfig config=null;
  MultiConfigSuiteBuilder builder=new MultiConfigSuiteBuilder(TestLimitOffsetSuite.class);
  VoltProjectBuilder project=new VoltProjectBuilder();
  project.addSchema(TestLimitOffsetSuite.class.getResource("testlimitoffset-ddl.sql"));
  project.addPartitionInfo("A","PKEY");
  project.addStmtProcedure("InsertA","INSERT INTO A VALUES(?, ?);");
  project.addStmtProcedure("InsertB","INSERT INTO B VALUES(?, ?);");
  project.addStmtProcedure("LimitAPKEY","SELECT * FROM A ORDER BY PKEY LIMIT ? OFFSET ?;");
  project.addStmtProcedure("LimitBPKEY","SELECT * FROM B ORDER BY PKEY LIMIT ? OFFSET ?;");
  project.addStmtProcedure("LimitAI","SELECT * FROM A ORDER BY I LIMIT ? OFFSET ?;");
  project.addStmtProcedure("LimitBI","SELECT * FROM B ORDER BY I LIMIT ? OFFSET ?;");
  config=new LocalSingleProcessServer("testlimitoffset-onesite.jar",1,BackendTarget.NATIVE_EE_JNI);
  config.compile(project);
  builder.addServerConfig(config);
  config=new LocalSingleProcessServer("testlimitoffset-threesites.jar",3,BackendTarget.NATIVE_EE_JNI);
  config.compile(project);
  builder.addServerConfig(config);
  config=new LocalCluster("testlimitoffset-cluster.jar",2,2,1,BackendTarget.NATIVE_EE_JNI);
  config.compile(project);
  builder.addServerConfig(config);
  return builder;
}
