{
  ServerThread server=m_server;
  ParameterSet pset;
  String responseJSON;
  Response response;
  VoltTable[] results;
  VoltTable result;
  String c, j, k;
  pset=ParameterSet.fromArrayNoCopy(POORLY_TRANSLATED_CHINESE,POORLY_TRANSLATED_JAPANESE,POORLY_TRANSLATED_KOREAN);
  responseJSON=TestJSONInterface.callProcOverJSON("Insert",pset,null,null,false);
  System.out.println(responseJSON);
  response=TestJSONInterface.responseFromJSON(responseJSON);
  assertTrue(response.status == ClientResponse.SUCCESS);
  pset=ParameterSet.emptyParameterSet();
  responseJSON=TestJSONInterface.callProcOverJSON("Select",pset,null,null,false);
  System.out.println(responseJSON);
  response=TestJSONInterface.responseFromJSON(responseJSON);
  assertTrue(response.status == ClientResponse.SUCCESS);
  results=response.results;
  assertEquals(1,results.length);
  result=results[0];
  assertEquals(1,result.getRowCount());
  assertEquals(3,result.getColumnCount());
  result.advanceRow();
  c=result.getString(0);
  j=result.getString(1);
  k=result.getString(2);
  System.out.printf("c: %s\nj: %s\nk: %s\n",c,j,k);
  assertEquals(0,c.compareTo(POORLY_TRANSLATED_CHINESE));
  assertEquals(0,j.compareTo(POORLY_TRANSLATED_JAPANESE));
  assertEquals(0,k.compareTo(POORLY_TRANSLATED_KOREAN));
  Client client=ClientFactory.createClient();
  client.createConnection("localhost");
  ClientResponse response1;
  response1=client.callProcedure("Select");
  assertEquals(response1.getStatus(),ClientResponse.SUCCESS);
  results=response1.getResults();
  assertEquals(1,results.length);
  result=results[0];
  assertEquals(1,result.getRowCount());
  assertEquals(3,result.getColumnCount());
  result.advanceRow();
  c=result.getString(0);
  j=result.getString(1);
  k=result.getString(2);
  System.out.printf("c: %s\nj: %s\nk: %s\n",c,j,k);
  assertEquals(0,c.compareTo(POORLY_TRANSLATED_CHINESE));
  assertEquals(0,j.compareTo(POORLY_TRANSLATED_JAPANESE));
  assertEquals(0,k.compareTo(POORLY_TRANSLATED_KOREAN));
  server.shutdown();
  server.join();
}
