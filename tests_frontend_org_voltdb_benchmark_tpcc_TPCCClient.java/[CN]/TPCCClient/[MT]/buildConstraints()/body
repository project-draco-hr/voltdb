{
  Expression constraint=null;
  Expression constraint1=null;
  Expression constraint2=null;
  Expression constraint3=null;
  Expression constraint4=null;
  Expression constraint5=null;
  constraint=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"o_id",0);
  addConstraint(Constants.DELIVERY,0,constraint);
  constraint1=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"C_DISCOUNT",0.0);
  constraint2=Verification.compareWithConstant(ExpressionType.COMPARE_LESSTHANOREQUALTO,"C_DISCOUNT",1.0);
  constraint=Verification.conjunction(ExpressionType.CONJUNCTION_AND,constraint1,constraint2);
  addConstraint(Constants.NEWORDER,0,constraint);
  constraint1=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"w_tax",0.0);
  constraint2=Verification.compareWithConstant(ExpressionType.COMPARE_LESSTHANOREQUALTO,"w_tax",1.0);
  constraint3=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"d_tax",0.0);
  constraint4=Verification.compareWithConstant(ExpressionType.COMPARE_LESSTHANOREQUALTO,"d_tax",1.0);
  constraint5=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHAN,"total",0.0);
  constraint=Verification.conjunction(ExpressionType.CONJUNCTION_AND,constraint1,constraint2,constraint3,constraint4,constraint5);
  addConstraint(Constants.NEWORDER,1,constraint);
  constraint1=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"s_quantity",0);
  constraint2=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"i_price",0.0);
  constraint3=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHAN,"ol_amount",0.0);
  constraint=Verification.conjunction(ExpressionType.CONJUNCTION_AND,constraint1,constraint2,constraint3);
  addConstraint(Constants.NEWORDER,2,constraint);
  constraint=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"C_ID",0);
  addConstraint(Constants.ORDER_STATUS_BY_ID,0,constraint);
  addConstraint(Constants.ORDER_STATUS_BY_NAME,0,constraint);
  constraint1=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"O_ID",0);
  constraint2=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"O_CARRIER_ID",0);
  constraint=Verification.conjunction(ExpressionType.CONJUNCTION_AND,constraint1,constraint2);
  addConstraint(Constants.ORDER_STATUS_BY_ID,1,constraint);
  addConstraint(Constants.ORDER_STATUS_BY_NAME,1,constraint);
  constraint1=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHAN,"OL_SUPPLY_W_ID",(short)0);
  constraint2=Verification.compareWithConstant(ExpressionType.COMPARE_LESSTHANOREQUALTO,"OL_SUPPLY_W_ID",(short)m_scaleParams.warehouses);
  constraint3=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"OL_I_ID",0);
  constraint4=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"OL_QUANTITY",0);
  constraint5=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"OL_AMOUNT",0.0);
  constraint=Verification.conjunction(ExpressionType.CONJUNCTION_AND,constraint1,constraint2,constraint3,constraint4,constraint5);
  addConstraint(Constants.ORDER_STATUS_BY_ID,2,constraint);
  addConstraint(Constants.ORDER_STATUS_BY_NAME,1,constraint);
  constraint1=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"c_id",0);
  constraint2=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"c_credit_lim",0.0);
  constraint3=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"c_discount",0.0);
  constraint4=Verification.compareWithConstant(ExpressionType.COMPARE_LESSTHANOREQUALTO,"c_discount",1.0);
  constraint=Verification.conjunction(ExpressionType.CONJUNCTION_AND,constraint1,constraint2,constraint3,constraint4);
  addConstraint(Constants.PAYMENT_BY_ID,2,constraint);
  addConstraint(Constants.PAYMENT_BY_ID_C,0,constraint);
  addConstraint(Constants.PAYMENT_BY_NAME,2,constraint);
  addConstraint(Constants.PAYMENT_BY_NAME_C,0,constraint);
  constraint=Verification.compareWithConstant(ExpressionType.COMPARE_GREATERTHANOREQUALTO,"C1",0L);
  addConstraint(Constants.STOCK_LEVEL,0,constraint);
}
