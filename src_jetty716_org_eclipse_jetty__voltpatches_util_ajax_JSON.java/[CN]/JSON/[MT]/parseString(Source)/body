{
  if (source.next() != '"')   throw new IllegalStateException();
  boolean escape=false;
  StringBuilder b=null;
  final char[] scratch=source.scratchBuffer();
  if (scratch != null) {
    int i=0;
    while (source.hasNext()) {
      if (i >= scratch.length) {
        b=new StringBuilder(scratch.length * 2);
        b.append(scratch,0,i);
        break;
      }
      char c=source.next();
      if (escape) {
        escape=false;
switch (c) {
case '"':
          scratch[i++]='"';
        break;
case '\\':
      scratch[i++]='\\';
    break;
case '/':
  scratch[i++]='/';
break;
case 'b':
scratch[i++]='\b';
break;
case 'f':
scratch[i++]='\f';
break;
case 'n':
scratch[i++]='\n';
break;
case 'r':
scratch[i++]='\r';
break;
case 't':
scratch[i++]='\t';
break;
case 'u':
char uc=(char)((TypeUtil.convertHexDigit((byte)source.next()) << 12) + (TypeUtil.convertHexDigit((byte)source.next()) << 8) + (TypeUtil.convertHexDigit((byte)source.next()) << 4)+ (TypeUtil.convertHexDigit((byte)source.next())));
scratch[i++]=uc;
break;
default :
scratch[i++]=c;
}
}
 else if (c == '\\') {
escape=true;
continue;
}
 else if (c == '\"') {
return toString(scratch,0,i);
}
 else scratch[i++]=c;
}
if (b == null) return toString(scratch,0,i);
}
 else b=new StringBuilder(getStringBufferSize());
final StringBuilder builder=b;
while (source.hasNext()) {
char c=source.next();
if (escape) {
escape=false;
switch (c) {
case '"':
builder.append('"');
break;
case '\\':
builder.append('\\');
break;
case '/':
builder.append('/');
break;
case 'b':
builder.append('\b');
break;
case 'f':
builder.append('\f');
break;
case 'n':
builder.append('\n');
break;
case 'r':
builder.append('\r');
break;
case 't':
builder.append('\t');
break;
case 'u':
char uc=(char)((TypeUtil.convertHexDigit((byte)source.next()) << 12) + (TypeUtil.convertHexDigit((byte)source.next()) << 8) + (TypeUtil.convertHexDigit((byte)source.next()) << 4)+ (TypeUtil.convertHexDigit((byte)source.next())));
builder.append(uc);
break;
default :
builder.append(c);
}
}
 else if (c == '\\') {
escape=true;
continue;
}
 else if (c == '\"') break;
 else builder.append(c);
}
return builder.toString();
}
