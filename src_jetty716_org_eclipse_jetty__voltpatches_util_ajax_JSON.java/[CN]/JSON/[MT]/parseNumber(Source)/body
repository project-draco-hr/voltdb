{
  boolean minus=false;
  long number=0;
  StringBuilder buffer=null;
  longLoop:   while (source.hasNext()) {
    char c=source.peek();
switch (c) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
      number=number * 10 + (c - '0');
    source.next();
  break;
case '-':
case '+':
if (number != 0) throw new IllegalStateException("bad number");
minus=true;
source.next();
break;
case '.':
case 'e':
case 'E':
buffer=new StringBuilder(16);
if (minus) buffer.append('-');
buffer.append(number);
buffer.append(c);
source.next();
break longLoop;
default :
break longLoop;
}
}
if (buffer == null) return minus ? -1 * number : number;
doubleLoop: while (source.hasNext()) {
char c=source.peek();
switch (c) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
case '-':
case '.':
case '+':
case 'e':
case 'E':
buffer.append(c);
source.next();
break;
default :
break doubleLoop;
}
}
return new Double(buffer.toString());
}
