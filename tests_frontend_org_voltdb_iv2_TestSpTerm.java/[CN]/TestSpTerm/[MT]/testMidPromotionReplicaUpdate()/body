{
  final AtomicBoolean promotionResult=new AtomicBoolean(true);
  final InitiatorMailbox mailbox=mock(InitiatorMailbox.class);
  final BabySitter babysitter=mock(BabySitter.class);
  final SpTerm term=new SpTerm(null,mock(ZooKeeper.class),0,0L,mailbox,VoltZK.iv2masters,"Test"){
    @Override protected void makeBabySitter(){
      m_babySitter=babysitter;
    }
    @Override void prepareForFaultRecovery(){
    }
  }
;
  Thread promotionThread=new Thread(){
    @Override public void run(){
      try {
        promotionResult.set(term.start().get());
      }
 catch (      Exception e) {
        System.out.println("Promotion thread threw: " + e);
        throw new RuntimeException(e);
      }
    }
  }
;
  promotionThread.start();
  term.cancel();
  promotionThread.join();
  assertFalse(promotionResult.get());
}
