{
  if ((transactionToInvoke == Transaction.MEASURE_OVERHEAD) || (transactionToInvoke == Transaction.MEASURE_OVERHEAD_MULTIPARTITION)) {
    invokeProcedure(connection,new MeasureOverheadCallback(),transactionToInvoke.callName,new Object[]{new Long(invocations++)});
  }
 else {
    Object argObjects[]=new Object[42];
    argObjects[0]=invocations++;
switch (transactionToInvoke.ordinal()) {
case 3:
      for (int ii=1; ii < argObjects.length; ii++) {
        argObjects[ii]=new Long(ii);
      }
    break;
case 5:
  for (int ii=1; ii < argObjects.length; ii++) {
    argObjects[ii]=new String("1234567");
  }
break;
case 1:
for (int ii=1; ii < argObjects.length; ii++) {
argObjects[ii]=new Byte((byte)1);
}
break;
default :
assert(false);
}
invokeProcedure(connection,new MeasureOverheadCallback(),transactionToInvoke.callName,argObjects);
}
}
