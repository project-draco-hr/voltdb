{
  try {
    ImportType importElement=catalogContext.getDeployment().getImport();
    if (importElement == null || importElement.getConfiguration().isEmpty()) {
      return;
    }
    startOSGiFramework();
    ImportDataProcessor newProcessor=new ImportProcessor(myHostId,m_distributer,m_framework,m_statsCollector);
    m_processorConfig=CatalogUtil.getImportProcessorConfig(catalogContext.getDeployment().getImport());
    m_formatterFactories.clear();
    for (    ImportConfiguration config : m_processorConfig.values()) {
      Properties prop=config.getformatterProperties();
      String module=prop.getProperty(ImportDataProcessor.IMPORT_FORMATTER);
      try {
        AbstractFormatterFactory formatterFactory=m_formatterFactories.get(module);
        if (formatterFactory == null) {
          Bundle bundle=m_framework.getBundleContext().installBundle(module);
          bundle.start();
          ServiceReference<?> refs[]=bundle.getRegisteredServices();
          ServiceReference<?> reference=refs[0];
          if (reference == null) {
            VoltDB.crashLocalVoltDB("Failed to initialize formatter from: " + module);
          }
          formatterFactory=(AbstractFormatterFactory)bundle.getBundleContext().getService(reference);
          m_formatterFactories.put(module,formatterFactory);
        }
        config.setFormatterFactory(formatterFactory);
      }
 catch (      Throwable t) {
        VoltDB.crashLocalVoltDB("Failed to configure import handler for " + module);
      }
    }
    newProcessor.setProcessorConfig(catalogContext,m_processorConfig);
    m_processor.set(newProcessor);
  }
 catch (  final Exception e) {
    VoltDB.crashLocalVoltDB("Error creating import processor",true,e);
  }
}
