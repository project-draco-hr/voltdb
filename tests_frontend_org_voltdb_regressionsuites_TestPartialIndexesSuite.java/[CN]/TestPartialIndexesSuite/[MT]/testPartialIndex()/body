{
  Client client=getClient();
  if (!isHSQL()) {
    for (    String tb : replicated_tbs) {
      emptyTable(client,tb);
      ClientResponse cr=client.callProcedure("@AdHoc","INSERT INTO " + tb + " VALUES(1, NULL, 1, 1, 1);");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      cr=client.callProcedure("@AdHoc","INSERT INTO " + tb + " VALUES(-2, NULL, 2, 2, 2);");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      cr=client.callProcedure("@AdHoc","INSERT INTO " + tb + " VALUES(3, NULL, 3, 1, 5);");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      cr=client.callProcedure("@AdHoc","INSERT INTO " + tb + " VALUES(-4, NULL, 4, 2, 6);");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      VoltTable vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d > 0 and a > 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{1,1},{3,1}});
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d = 2 and a < 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{-4,2},{-2,2}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = 2, D = 2 WHERE A = 1 AND D = 1;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d > 0 and a > 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{2,2},{3,1}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = -5 WHERE A = -4 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d = 2 and a < 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{-5,2},{-2,2}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = 3 WHERE A = -5 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d > 0 and a > 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{2,2},{3,1},{3,2}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = -5 WHERE A = 3 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d = 2 and a < 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{-5,2},{-2,2}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = -6  WHERE A = 2 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d > 0 and a > 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{3,1}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = 3 WHERE A = -6 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d = 2 and a < 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{-5,2},{-2,2}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = -6  WHERE A = -5 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d > 0 and a > 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{3,1},{3,2}});
      cr=client.callProcedure("@AdHoc","UPDATE " + tb + " SET A = 4  WHERE A = 3 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d = 2 and a < 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{-6,2},{-2,2}});
      cr=client.callProcedure("@AdHoc","DELETE FROM " + tb + " WHERE A = 4 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d > 0 and a > 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{3,1}});
      cr=client.callProcedure("@AdHoc","DELETE FROM " + tb + " WHERE A = -6 AND D = 2;");
      assertEquals(ClientResponse.SUCCESS,cr.getStatus());
      vt=client.callProcedure("@AdHoc","select a, d from " + tb + " where d = 2 and a < 0 order by a, d").getResults()[0];
      validateTableOfLongs(vt,new long[][]{{-2,2}});
    }
  }
}
