{
  AbstractPlanNode pn=compile("select * FROM R1 LEFT JOIN R2 ON R1.C = R2.C");
  AbstractPlanNode n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopPlanNode);
  NestLoopPlanNode nl=(NestLoopPlanNode)n;
  assertTrue(nl.getJoinType().equals(JoinType.LEFT));
  assertTrue(nl.getChildCount() == 2);
  AbstractPlanNode c0=nl.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c0).getTargetTableName().equalsIgnoreCase("R1"));
  AbstractPlanNode c1=nl.getChild(1);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c1).getTargetTableName().equalsIgnoreCase("R2"));
  pn=compile("select * FROM R1 RIGHT JOIN R2 ON R1.C = R2.C");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopPlanNode);
  nl=(NestLoopPlanNode)n;
  assertTrue(nl.getJoinType().equals(JoinType.LEFT));
  assertTrue(nl.getChildCount() == 2);
  c0=nl.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c0).getTargetTableName().equalsIgnoreCase("R2"));
  c1=nl.getChild(1);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c1).getTargetTableName().equalsIgnoreCase("R1"));
  pn=compile("select * FROM R1 LEFT JOIN R2 ON R1.C = R2.C AND R1.A = 5");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopPlanNode);
  nl=(NestLoopPlanNode)n;
  assertTrue(nl.getJoinType().equals(JoinType.LEFT));
  assertTrue(nl.getChildCount() == 2);
  c0=nl.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c0).getTargetTableName().equalsIgnoreCase("R1"));
  c1=nl.getChild(1);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c1).getTargetTableName().equalsIgnoreCase("R2"));
}
