{
  AbstractPlanNode pn, pn1, pn2;
  AbstractScanPlanNode sn;
  IndexScanPlanNode isn;
  pn=compile("SELECT * FROM R2 JOIN R1 USING (C) WHERE R1.A > 0");
  pn=pn.getChild(0).getChild(0);
  assertEquals(PlanNodeType.NESTLOOP,pn.getPlanNodeType());
  sn=(AbstractScanPlanNode)pn.getChild(0);
  assertEquals("R1",sn.getTargetTableName());
  pn=compile("SELECT * FROM R1 JOIN R2 USING (C) WHERE R1.A > 0 AND R2.A = 3");
  pn=pn.getChild(0).getChild(0);
  assertEquals(PlanNodeType.NESTLOOP,pn.getPlanNodeType());
  sn=(AbstractScanPlanNode)pn.getChild(0);
  assertEquals("R2",sn.getTargetTableName());
  pn=compile("SELECT * FROM R1 JOIN R2 USING (C) WHERE R1.A > 0 AND R1.A < 3 AND R2.A = 3");
  pn=pn.getChild(0).getChild(0);
  assertEquals(PlanNodeType.NESTLOOP,pn.getPlanNodeType());
  sn=(AbstractScanPlanNode)pn.getChild(0);
  assertEquals("R2",sn.getTargetTableName());
  pn=compile("SELECT * FROM R1 JOIN R2 USING (C) WHERE R1.A = 0 AND R1.D < 3 AND R2.A = 3");
  pn=pn.getChild(0).getChild(0);
  assertEquals(PlanNodeType.NESTLOOP,pn.getPlanNodeType());
  sn=(AbstractScanPlanNode)pn.getChild(0);
  assertEquals("R1",sn.getTargetTableName());
  pn=compile("SELECT * FROM R1 JOIN R3 ON R3.A = R1.A WHERE R3.C = 0");
  pn=pn.getChild(0).getChild(0);
  assertEquals(PlanNodeType.NESTLOOPINDEX,pn.getPlanNodeType());
  sn=(AbstractScanPlanNode)pn.getChild(0);
  assertEquals("R1",sn.getTargetTableName());
  pn=compile("SELECT L.A, R.A FROM R3 L JOIN R3 R ON L.A = R.A WHERE R.A > 3 AND R.C  = 3 and L.A > 2 ;");
  pn=pn.getChild(0).getChild(0);
  assertEquals(PlanNodeType.NESTLOOPINDEX,pn.getPlanNodeType());
  pn=pn.getChild(0);
  assertEquals(PlanNodeType.INDEXSCAN,pn.getPlanNodeType());
  sn=(AbstractScanPlanNode)pn;
  assertEquals("R",sn.getTargetTableAlias());
  pn=compile("SELECT * FROM R3 JOIN R2 ON R3.C = R2.C WHERE R2.C > 100;");
  pn=pn.getChild(0).getChild(0);
  assertEquals(PlanNodeType.NESTLOOPINDEX,pn.getPlanNodeType());
  isn=(IndexScanPlanNode)pn.getInlinePlanNode(PlanNodeType.INDEXSCAN);
  assertEquals("PARTIAL_IND2",isn.getTargetIndexName());
  sn=(AbstractScanPlanNode)pn.getChild(0);
  assertEquals("R3",sn.getTargetTableName());
}
