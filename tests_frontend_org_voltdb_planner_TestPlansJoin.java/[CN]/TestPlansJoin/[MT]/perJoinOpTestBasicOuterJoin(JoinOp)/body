{
  AbstractPlanNode pn=compile("SELECT * FROM R1 LEFT JOIN R2 ON R1.C " + joinOp + " R2.C");
  AbstractPlanNode n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopPlanNode);
  NestLoopPlanNode nl=(NestLoopPlanNode)n;
  assertEquals(JoinType.LEFT,nl.getJoinType());
  assertEquals(2,nl.getChildCount());
  AbstractPlanNode c0=nl.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue("R1".equalsIgnoreCase(((SeqScanPlanNode)c0).getTargetTableName()));
  AbstractPlanNode c1=nl.getChild(1);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue("R2".equalsIgnoreCase(((SeqScanPlanNode)c1).getTargetTableName()));
  pn=compile("SELECT * FROM R1 LEFT JOIN R2 ON R1.C " + joinOp + " R2.C AND R1.A = 5");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopPlanNode);
  nl=(NestLoopPlanNode)n;
  assertEquals(JoinType.LEFT,nl.getJoinType());
  assertEquals(2,nl.getChildCount());
  c0=nl.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue("R1".equalsIgnoreCase(((SeqScanPlanNode)c0).getTargetTableName()));
  c1=nl.getChild(1);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue("R2".equalsIgnoreCase(((SeqScanPlanNode)c1).getTargetTableName()));
}
