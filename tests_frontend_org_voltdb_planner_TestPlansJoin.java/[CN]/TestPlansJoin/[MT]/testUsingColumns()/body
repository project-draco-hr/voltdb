{
  AbstractPlanNode pn=compile("SELECT MAX(R1.A), C FROM R1 FULL JOIN R2 USING (C) WHERE C > 0 GROUP BY C ORDER BY C");
  pn=pn.getChild(0);
  assertEquals(PlanNodeType.ORDERBY,pn.getPlanNodeType());
  List<AbstractExpression> s=((OrderByPlanNode)pn).getSortExpressions();
  assertEquals(1,s.size());
  assertEquals(ExpressionType.VALUE_TUPLE,s.get(0).getExpressionType());
  pn=pn.getChild(0);
  assertEquals(PlanNodeType.NESTLOOP,pn.getPlanNodeType());
  AbstractExpression f=((NestLoopPlanNode)pn).getWherePredicate();
  assertNotNull(f);
  assertEquals(ExpressionType.OPERATOR_CASE_WHEN,f.getLeft().getExpressionType());
  AbstractPlanNode aggr=pn.getInlinePlanNode(PlanNodeType.HASHAGGREGATE);
  assertNotNull(aggr);
  List<AbstractExpression> g=((AggregatePlanNode)aggr).getGroupByExpressions();
  assertEquals(1,g.size());
  assertEquals(ExpressionType.OPERATOR_CASE_WHEN,g.get(0).getExpressionType());
}
