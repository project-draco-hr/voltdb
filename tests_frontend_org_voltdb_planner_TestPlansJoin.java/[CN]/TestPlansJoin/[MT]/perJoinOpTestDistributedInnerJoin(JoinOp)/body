{
  AbstractPlanNode pn;
  AbstractPlanNode n;
  pn=compile("SELECT * FROM R1 JOIN P2 ON R1.C " + joinOp + " P2.A");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  pn=compile("SELECT * FROM R1 JOIN P2 ON R1.C IS NOT DISTINCT FROM P2.A");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  pn=compile("SELECT * FROM P1 JOIN P2 USING(A)");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof ReceivePlanNode);
  failToCompile("SELECT * FROM P1 JOIN P2 ON P1.C " + joinOp + " P2.E","This query is not plannable.  The planner cannot guarantee that all rows would be in a single partition.");
  failToCompile("SELECT * FROM P1 JOIN P2 ON P1.C IS NOT DISTINCT FROM P2.E","This query is not plannable.  The planner cannot guarantee that all rows would be in a single partition.");
  failToCompile("SELECT * FROM P1 JOIN P2 ON 1=1","This query is not plannable.  The planner cannot guarantee that all rows would be in a single partition.");
}
