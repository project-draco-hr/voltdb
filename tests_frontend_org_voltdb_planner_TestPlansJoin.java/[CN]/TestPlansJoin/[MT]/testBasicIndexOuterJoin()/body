{
  AbstractPlanNode pn=compile("select * FROM R3 LEFT JOIN R2 ON R3.A = R2.C");
  AbstractPlanNode n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopPlanNode);
  NestLoopPlanNode nl=(NestLoopPlanNode)n;
  assertEquals(JoinType.LEFT,nl.getJoinType());
  assertEquals(2,nl.getChildCount());
  AbstractPlanNode c0=nl.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c0).getTargetTableName().equalsIgnoreCase("R3"));
  AbstractPlanNode c1=nl.getChild(1);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c1).getTargetTableName().equalsIgnoreCase("R2"));
  pn=compile("select * FROM R2 RIGHT JOIN R3 ON R3.A = R2.C");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopPlanNode);
  nl=(NestLoopPlanNode)n;
  assertEquals(JoinType.LEFT,nl.getJoinType());
  assertEquals(2,nl.getChildCount());
  c0=nl.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c0).getTargetTableName().equalsIgnoreCase("R3"));
  c1=nl.getChild(1);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c1).getTargetTableName().equalsIgnoreCase("R2"));
  pn=compile("select * FROM R2 LEFT JOIN R3 ON R2.C = R3.A");
  n=pn.getChild(0).getChild(0);
  assertTrue(n instanceof NestLoopIndexPlanNode);
  NestLoopIndexPlanNode nli=(NestLoopIndexPlanNode)n;
  assertEquals(JoinType.LEFT,nli.getJoinType());
  assertEquals(1,nli.getChildCount());
  c0=nli.getChild(0);
  assertTrue(c0 instanceof SeqScanPlanNode);
  assertTrue(((SeqScanPlanNode)c0).getTargetTableName().equalsIgnoreCase("R2"));
  c1=nli.getInlinePlanNode(PlanNodeType.INDEXSCAN);
  assertNotNull(c1);
  assertTrue(((IndexScanPlanNode)c1).getTargetTableName().equalsIgnoreCase("R3"));
}
