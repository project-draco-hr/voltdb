{
  int hostCount=getHostCount();
  int partitionCount=getPartitionCount();
  int sitesPerHost=getSitesPerHost();
  if (hostCount != hostGroups.size()) {
    throw new RuntimeException("Provided " + hostGroups.size() + " host ids when host count is "+ hostCount);
  }
  JSONObject topo;
  if (Boolean.valueOf(System.getenv("VOLT_REPLICA_FALLBACK"))) {
    topo=fallbackPlacementStrategy(Lists.newArrayList(hostGroups.keySet()),hostCount,partitionCount,sitesPerHost);
  }
 else {
    try {
      topo=groupAwarePlacementStrategy(hostGroups,partitionCount,sitesPerHost);
    }
 catch (    Exception e) {
      hostLog.error("Unable to use optimal replica placement strategy. " + "Falling back to a less optimal strategy that may result in worse performance");
      topo=fallbackPlacementStrategy(Lists.newArrayList(hostGroups.keySet()),hostCount,partitionCount,sitesPerHost);
    }
  }
  hostLog.debug("TOPO: " + topo.toString(2));
  return topo;
}
