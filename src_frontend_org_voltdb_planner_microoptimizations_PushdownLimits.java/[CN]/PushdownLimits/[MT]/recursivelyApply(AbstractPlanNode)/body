{
  assert(plan != null);
  ArrayList<AbstractPlanNode> children=new ArrayList<AbstractPlanNode>();
  for (int i=0; i < plan.getChildCount(); i++)   children.add(plan.getChild(i));
  plan.clearChildren();
  for (  AbstractPlanNode child : children) {
    child=recursivelyApply(child);
    child.clearParents();
    plan.addAndLinkChild(child);
  }
  if (!(plan instanceof LimitPlanNode)) {
    return plan;
  }
  if (plan.getChildCount() != 1) {
    assert(plan.getChildCount() == 1);
    return plan;
  }
  AbstractPlanNode child=plan.getChild(0);
  if (child instanceof AbstractScanPlanNode) {
    plan.clearChildren();
    child.clearParents();
    child.addInlinePlanNode(plan);
    return child;
  }
  if (child instanceof ProjectionPlanNode) {
    assert(child.getChildCount() == 1);
    AbstractPlanNode leaf=child.getChild(0);
    leaf.clearParents();
    plan.clearChildren();
    plan.addAndLinkChild(leaf);
    child.clearChildren();
    child.clearParents();
    child.addAndLinkChild(plan);
    return recursivelyApply(child);
  }
  if (child instanceof AbstractJoinPlanNode) {
    plan.clearChildren();
    child.clearParents();
    child.addInlinePlanNode(plan);
    return child;
  }
  return plan;
}
