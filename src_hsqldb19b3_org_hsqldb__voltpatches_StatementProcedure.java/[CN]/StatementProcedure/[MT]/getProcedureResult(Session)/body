{
  Object[] data=ValuePool.emptyObjectArray;
  if (arguments.length > 0) {
    data=new Object[arguments.length];
  }
  for (int i=0; i < arguments.length; i++) {
    Expression e=arguments[i];
    if (e != null) {
      data[i]=e.getValue(session,e.dataType);
    }
  }
  int variableCount=procedure.getVariableCount();
  session.sessionContext.push();
  session.sessionContext.routineArguments=data;
  session.sessionContext.routineVariables=ValuePool.emptyObjectArray;
  if (variableCount > 0) {
    session.sessionContext.routineVariables=new Object[variableCount];
  }
  Result result=procedure.statement.execute(session);
  if (!result.isError()) {
    result=Result.updateZeroResult;
  }
  Object[] callArguments=session.sessionContext.routineArguments;
  session.sessionContext.pop();
  if (result.isError()) {
    return result;
  }
  boolean returnParams=false;
  for (int i=0; i < procedure.getParameterCount(); i++) {
    ColumnSchema param=procedure.getParameter(i);
    int mode=param.getParameterMode();
    if (mode != SchemaObject.ParameterModes.PARAM_IN) {
      if (this.arguments[i].isParam()) {
        int paramIndex=arguments[i].parameterIndex;
        session.sessionContext.dynamicArguments[paramIndex]=callArguments[i];
        returnParams=true;
      }
 else {
        int varIndex=arguments[i].getColumnIndex();
        session.sessionContext.routineVariables[varIndex]=callArguments[i];
      }
    }
  }
  if (returnParams) {
    result=Result.newCallResponse(this.getParametersMetaData().getParameterTypes(),this.id,session.sessionContext.dynamicArguments);
  }
  return result;
}
