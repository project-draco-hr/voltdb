{
  final BitSet table=new BitSet();
  setBits(table);
  int totalCharacters=table.cardinality();
  if (totalCharacters * 2 <= DISTINCT_CHARS) {
    return precomputedPositive(totalCharacters,table,toString());
  }
 else {
    table.flip(Character.MIN_VALUE,Character.MAX_VALUE + 1);
    int negatedCharacters=DISTINCT_CHARS - totalCharacters;
    String suffix=".negate()";
    final String description=toString();
    String negatedDescription=description.endsWith(suffix) ? description.substring(0,description.length() - suffix.length()) : description + suffix;
    return new NegatedFastMatcher(precomputedPositive(negatedCharacters,table,negatedDescription)){
      @Override public String toString(){
        return description;
      }
    }
;
  }
}
