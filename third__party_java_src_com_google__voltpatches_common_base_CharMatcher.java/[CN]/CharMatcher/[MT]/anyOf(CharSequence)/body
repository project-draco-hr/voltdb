{
switch (sequence.length()) {
case 0:
    return NONE;
case 1:
  return is(sequence.charAt(0));
case 2:
return isEither(sequence.charAt(0),sequence.charAt(1));
default :
}
final char[] chars=sequence.toString().toCharArray();
Arrays.sort(chars);
StringBuilder description=new StringBuilder("CharMatcher.anyOf(\"");
for (char c : chars) {
description.append(showCharacter(c));
}
description.append("\")");
return new CharMatcher(description.toString()){
@Override public boolean matches(char c){
return Arrays.binarySearch(chars,c) >= 0;
}
@Override @GwtIncompatible("java.util.BitSet") void setBits(BitSet table){
for (char c : chars) {
  table.set(c);
}
}
}
;
}
