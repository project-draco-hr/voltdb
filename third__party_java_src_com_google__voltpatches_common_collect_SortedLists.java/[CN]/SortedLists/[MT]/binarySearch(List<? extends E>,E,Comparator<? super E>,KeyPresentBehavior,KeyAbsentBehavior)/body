{
  checkNotNull(comparator);
  checkNotNull(list);
  checkNotNull(presentBehavior);
  checkNotNull(absentBehavior);
  if (!(list instanceof RandomAccess)) {
    list=Lists.newArrayList(list);
  }
  int lower=0;
  int upper=list.size() - 1;
  while (lower <= upper) {
    int middle=(lower + upper) >>> 1;
    int c=comparator.compare(key,list.get(middle));
    if (c < 0) {
      upper=middle - 1;
    }
 else     if (c > 0) {
      lower=middle + 1;
    }
 else {
      return lower + presentBehavior.resultIndex(comparator,key,list.subList(lower,upper + 1),middle - lower);
    }
  }
  return absentBehavior.resultIndex(lower);
}
