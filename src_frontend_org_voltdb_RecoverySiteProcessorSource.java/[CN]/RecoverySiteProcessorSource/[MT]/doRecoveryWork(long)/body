{
  if (!m_sentInitiateResponse) {
    recoveryLog.trace("Sending recovery initiate response from " + m_siteId + " before txnId "+ nextTxnId+ " to site "+ m_destinationSiteId);
    m_sentInitiateResponse=true;
    m_stopBeforeTxnId=Math.max(nextTxnId,m_destinationStoppedBeforeTxnId);
    ByteBuffer buf=ByteBuffer.allocate(2048);
    BBContainer cont=DBBPool.wrapBB(buf);
    RecoveryMessage response=new RecoveryMessage(cont,m_siteId,m_stopBeforeTxnId);
    try {
      m_mailbox.send(m_destinationSiteId,0,response);
    }
 catch (    MessagingException e) {
      throw new RuntimeException(e);
    }
  }
  if (nextTxnId < m_stopBeforeTxnId) {
    return;
  }
  recoveryLog.trace("Starting recovery of " + m_destinationSiteId + " work before txnId "+ nextTxnId);
  while (true) {
    while (m_allowedBuffers > 0 && !m_tablesToStream.isEmpty() && !m_buffers.isEmpty()) {
      m_allowedBuffers--;
      BBContainer container=m_buffers.poll();
      ByteBuffer buffer=container.b;
      RecoveryMessage rm=new RecoveryMessage(container,m_siteId,m_blockIndex++);
      buffer.clear();
      buffer.position(RecoveryMessage.getHeaderLength());
      RecoveryTable table=m_tablesToStream.peek();
      int serialized=m_engine.tableStreamSerializeMore(container,table.m_tableId,TableStreamType.RECOVERY);
      recoveryLog.trace("Serialized " + serialized + " for table "+ table.m_name);
      if (serialized <= 0) {
        VoltDB.crashVoltDB();
      }
 else {
        buffer.limit(buffer.position() + serialized);
      }
      assert(rm != null);
      if (rm.type() == RecoveryMessageType.Complete) {
        m_tablesToStream.poll();
        RecoveryTable nextTable=m_tablesToStream.peek();
        if (nextTable != null) {
          if (!m_engine.activateTableStream(nextTable.m_tableId,TableStreamType.RECOVERY)) {
            hostLog.error("Attempted to activate recovery stream for table " + nextTable.m_name + " and failed");
            VoltDB.crashVoltDB();
          }
        }
      }
      final int numDestinations=table.m_destinationIds.length;
      m_ackTracker.waitForAcks(rm.blockIndex(),numDestinations);
      if (numDestinations == 1) {
        try {
          m_mailbox.send(table.m_destinationIds[0],0,rm);
        }
 catch (        MessagingException e) {
          throw new RuntimeException(e);
        }
      }
 else {
        VoltDB.crashVoltDB();
      }
    }
    if (m_tablesToStream.isEmpty()) {
      if (!m_recoveryComplete) {
synchronized (this) {
          m_recoveryComplete=true;
          BBContainer buffer=null;
          while ((buffer=m_buffers.poll()) != null) {
            m_bufferToOriginMap.remove(buffer).discard();
          }
        }
      }
      if (!m_ackTracker.hasOutstanding()) {
        return;
      }
    }
    VoltMessage message=m_mailbox.recv();
    if (message != null) {
      if (message instanceof RecoveryMessage) {
        handleRecoveryMessage((RecoveryMessage)message);
      }
 else {
        m_messageHandler.handleMessage(message);
      }
    }
 else {
      Thread.yield();
    }
  }
}
