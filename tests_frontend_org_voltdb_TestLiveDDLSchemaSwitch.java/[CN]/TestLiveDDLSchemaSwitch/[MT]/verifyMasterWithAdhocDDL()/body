{
  assertFalse(findTableInSystemCatalogResults("FOO"));
  boolean threw=false;
  try {
    m_client.updateApplicationCatalog(new File(m_pathToCatalog),null);
  }
 catch (  ProcCallException pce) {
    threw=true;
    assertTrue(pce.getMessage().contains("Use of @UpdateApplicationCatalog is forbidden"));
  }
  assertTrue("@UAC should have failed",threw);
  assertFalse(findTableInSystemCatalogResults("FOO"));
  try {
    m_client.callProcedure("@AdHoc","create table FOO (ID integer, VAL varchar(50));");
  }
 catch (  ProcCallException pce) {
    fail("Should be able to use Adhoc DDL to create a table.");
  }
  assertTrue(findTableInSystemCatalogResults("FOO"));
  verifyDeploymentOnlyUAC();
  verifyAdhocQuery();
  assertFalse(findClassInSystemCatalog("org.voltdb_testprocs.fullddlfeatures.testImportProc"));
  InMemoryJarfile jarfile=new InMemoryJarfile();
  VoltCompiler comp=new VoltCompiler();
  comp.addClassToJar(jarfile,org.voltdb_testprocs.fullddlfeatures.testImportProc.class);
  try {
    m_client.callProcedure("@UpdateClasses",jarfile.getFullJarBytes(),null);
  }
 catch (  ProcCallException pce) {
    fail("Should be able to call @UpdateClasses when adhoc DDL enabled.");
  }
  assertTrue(findClassInSystemCatalog("org.voltdb_testprocs.fullddlfeatures.testImportProc"));
}
