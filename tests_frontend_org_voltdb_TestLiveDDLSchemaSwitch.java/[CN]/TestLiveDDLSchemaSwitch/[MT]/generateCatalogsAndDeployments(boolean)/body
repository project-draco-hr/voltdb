{
  m_pathToCatalog=Configuration.getPathToCatalogForTest("adhocddl.jar");
  m_pathToDeployment=Configuration.getPathToCatalogForTest("adhocddl.xml");
  m_pathToOtherCatalog=Configuration.getPathToCatalogForTest("newadhocddl.jar");
  m_pathToOtherDeployment=Configuration.getPathToCatalogForTest("newadhocddl.xml");
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema("create table FOO (" + "ID integer not null," + "VAL bigint, "+ "constraint PK_TREE primary key (ID)"+ ");\n"+ "create table FOO_R ("+ "ID integer not null,"+ "VAL bigint, "+ "constraint PK_TREE_R primary key (ID)"+ ");\n");
  builder.addPartitionInfo("FOO","ID");
  builder.setUseDDLSchema(useLiveDDL);
  builder.setDRMasterHost("localhost");
  boolean success=builder.compile(m_pathToCatalog,2,1,0);
  assertTrue("Schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),m_pathToDeployment);
  builder=new VoltProjectBuilder();
  builder.addLiteralSchema("create table BAZ (" + "ID integer not null," + "VAL bigint, "+ "constraint PK_TREE primary key (ID)"+ ");\n"+ "create table FOO_R ("+ "ID integer not null,"+ "VAL bigint, "+ "constraint PK_TREE_R primary key (ID)"+ ");\n");
  builder.addPartitionInfo("BAZ","ID");
  builder.setUseDDLSchema(useLiveDDL);
  builder.setDeadHostTimeout(6);
  success=builder.compile(m_pathToOtherCatalog,2,1,0);
  assertTrue("2nd schema compilation failed",success);
  MiscUtils.copyFile(builder.getPathToDeployment(),m_pathToOtherDeployment);
}
