{
  orig_mem.advanceRow();
  final_mem.advanceRow();
  assertFalse(0 == orig_mem.getLong("TUPLEDATA"));
  assertFalse(0 == orig_mem.getLong("TUPLECOUNT"));
  assertEquals(orig_mem.getLong("TUPLEDATA"),final_mem.getLong("TUPLEDATA"));
  assertEquals(orig_mem.getLong("TUPLEALLOCATED"),final_mem.getLong("TUPLEALLOCATED"));
  assertEquals(orig_mem.getLong("INDEXMEMORY"),final_mem.getLong("INDEXMEMORY"));
  assertEquals(orig_mem.getLong("STRINGMEMORY"),final_mem.getLong("STRINGMEMORY"));
  assertEquals(orig_mem.getLong("TUPLECOUNT"),final_mem.getLong("TUPLECOUNT"));
  assertEquals(orig_mem.getLong("POOLEDMEMORY"),final_mem.getLong("POOLEDMEMORY"));
  long orig_rss=orig_mem.getLong("RSS");
  long final_rss=final_mem.getLong("RSS");
  assertTrue(Math.abs(orig_rss - final_rss) < orig_rss * .1);
}
