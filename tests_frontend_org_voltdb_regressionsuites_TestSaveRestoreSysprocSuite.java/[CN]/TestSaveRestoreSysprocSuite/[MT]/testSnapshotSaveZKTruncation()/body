{
  ZooKeeper zk=VoltDB.instance().getZK();
  Client client=getClient();
  byte pathBytes[]=TMPDIR.getBytes("UTF-8");
  ByteBuffer payload=ByteBuffer.allocate(8 + pathBytes.length);
  payload.putLong(0);
  payload.put(pathBytes);
  SnapshotCompletionMonitor monitor=VoltDB.instance().getSnapshotCompletionMonitor();
  SnapshotCompletionIntr interest=new SnapshotCompletionIntr();
  monitor.addInterest(interest);
  zk.create("/request_truncation_snapshot",payload.array(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  interest.snapshotCompleted.acquire();
  assertTrue(interest.truncationSnapshot);
  Thread.sleep(100);
  assertNull(zk.exists("/request_truncation_snapshot",false));
  ClientResponse response=client.callProcedure("@SnapshotSave",TMPDIR,TESTNONCE,(byte)1);
  String statusString=response.getAppStatusString();
  JSONObject obj=new JSONObject(statusString);
  long txnId=obj.getLong("txnId");
  interest.snapshotCompleted.acquire();
  assertEquals(interest.txnId,txnId);
  assertFalse(interest.truncationSnapshot);
  statusString=client.callProcedure("@SnapshotSave",TMPDIR,TESTNONCE + "5",(byte)1).getAppStatusString();
  obj=new JSONObject(statusString);
  txnId=obj.getLong("txnId");
  interest.snapshotCompleted.acquire();
  assertEquals(interest.txnId,txnId);
  assertFalse(interest.truncationSnapshot);
  for (int ii=0; ii < 35; ii++) {
    zk.create("/completed_snapshots/" + ii,null,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  }
  response=client.callProcedure("@SnapshotSave",TMPDIR,TESTNONCE + "6",(byte)1);
  statusString=response.getAppStatusString();
  Thread.sleep(300);
  assertEquals(30,zk.getChildren("/completed_snapshots",false).size());
}
