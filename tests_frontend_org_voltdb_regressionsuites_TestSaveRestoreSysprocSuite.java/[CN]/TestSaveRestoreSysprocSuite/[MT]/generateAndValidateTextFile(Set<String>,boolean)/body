{
  String args[]=new String[]{TESTNONCE,"--dir",TMPDIR,"--table","REPLICATED_TESTER","--type",csv ? "CSV" : "TSV","--outdir",TMPDIR};
  SnapshotConverter.main(args);
  FileInputStream fis=new FileInputStream(TMPDIR + File.separator + "REPLICATED_TESTER"+ (csv ? ".csv" : ".tsv"));
  try {
    InputStreamReader isr=new InputStreamReader(fis,"UTF-8");
    BufferedReader br=new BufferedReader(isr);
    StringBuffer sb=new StringBuffer();
    int nextCharInt;
    while ((nextCharInt=br.read()) != -1) {
      char nextChar=(char)nextCharInt;
      if (csv) {
        if (nextChar == '"') {
          sb.append(nextChar);
          int nextNextCharInt=-1;
          char prevChar=nextChar;
          while ((nextNextCharInt=br.read()) != -1) {
            char nextNextChar=(char)nextNextCharInt;
            if (nextNextChar == '"') {
              if (prevChar == '"') {
                sb.append(nextNextChar);
              }
 else {
                sb.append(nextNextChar);
                break;
              }
            }
 else {
              sb.append(nextNextChar);
            }
            prevChar=nextNextChar;
          }
        }
 else         if (nextChar == '\n' || nextChar == '\r') {
          if (!expectedText.contains(sb.toString())) {
            System.out.println("Missing string is " + sb);
          }
          assertTrue(expectedText.remove(sb.toString()));
          sb=new StringBuffer();
        }
 else {
          sb.append(nextChar);
        }
      }
 else {
        if (nextChar == '\\') {
          sb.append(nextChar);
          int nextNextCharInt=br.read();
          char nextNextChar=(char)nextNextCharInt;
          sb.append(nextNextChar);
        }
 else         if (nextChar == '\n' || nextChar == '\r') {
          if (!expectedText.contains(sb.toString())) {
            System.out.println("Missing string is " + sb);
          }
          assertTrue(expectedText.remove(sb.toString()));
          sb=new StringBuffer();
        }
 else {
          sb.append(nextChar);
        }
      }
    }
    assertTrue(expectedText.isEmpty());
  }
  finally {
    fis.close();
  }
}
