{
  m_config.shutDown();
  int host_count=2;
  int site_count=1;
  int k_factor=0;
  LocalCluster lc=new LocalCluster(JAR_NAME,site_count,host_count,k_factor,BackendTarget.NATIVE_EE_JNI);
  lc.setHasLocalServer(false);
  SaveRestoreTestProjectBuilder project=new SaveRestoreTestProjectBuilder();
  project.addAllDefaults();
  lc.compile(project);
  lc.startUp();
  String replicatedTableName="REPLICATED_TESTER";
  try {
    Client client=ClientFactory.createClient();
    client.createConnection(lc.getListenerAddresses().get(0));
    try {
      VoltTable repl_table=createReplicatedTable(100,0,null);
      loadTable(client,replicatedTableName,repl_table);
      VoltTable[] results=saveTables(client,TMPDIR,TESTNONCE,true,true);
      assertEquals("Wrong host/site count from @SnapshotSave.",host_count * site_count,results[0].getRowCount());
    }
  finally {
      client.close();
    }
    int nReplSaved=0;
    for (int iclient=0; iclient < host_count; iclient++) {
      client=ClientFactory.createClient();
      client.createConnection(lc.getListenerAddresses().get(iclient));
      try {
        SnapshotResult[] results=checkSnapshotStatus(client,null,TESTNONCE,null,"SUCCESS",null);
        for (        SnapshotResult result : results) {
          if (result.table.equals(replicatedTableName)) {
            nReplSaved++;
          }
        }
      }
  finally {
        client.close();
      }
    }
    assertEquals("Replicated table CSV is not saved on exactly one host.",1,nReplSaved);
  }
 catch (  Exception e) {
    fail(String.format("Caught %s: %s",e.getClass().getName(),e.getMessage()));
  }
 finally {
    lc.shutDown();
  }
}
