{
  if (_in == null || !_in.isOpen() || in != _inStream) {
    _in=Channels.newChannel(in);
    _inStream=in;
  }
  if (max < 0 || max > space())   max=space();
  int p=putIndex();
  try {
    int len=0, total=0, available=max;
    int loop=0;
    while (total < max) {
      _buf.position(p);
      _buf.limit(p + available);
      len=_in.read(_buf);
      if (len < 0) {
        _in=null;
        _inStream=in;
        break;
      }
 else       if (len > 0) {
        p+=len;
        total+=len;
        available-=len;
        setPutIndex(p);
        loop=0;
      }
 else       if (loop++ > 1)       break;
      if (in.available() <= 0)       break;
    }
    if (len < 0 && total == 0)     return -1;
    return total;
  }
 catch (  IOException e) {
    _in=null;
    _inStream=in;
    throw e;
  }
 finally {
    if (_in != null && !_in.isOpen()) {
      _in=null;
      _inStream=in;
    }
    _buf.position(0);
    _buf.limit(_buf.capacity());
  }
}
