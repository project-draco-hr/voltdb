{
  return new Maps.EntrySet<Range<K>,V>(){
    @Override Map<Range<K>,V> map(){
      return SubRangeMapAsMap.this;
    }
    @Override public Iterator<Entry<Range<K>,V>> iterator(){
      return entryIterator();
    }
    @Override public boolean retainAll(    Collection<?> c){
      return removeEntryIf(not(in(c)));
    }
    @Override public int size(){
      return Iterators.size(iterator());
    }
    @Override public boolean isEmpty(){
      return !iterator().hasNext();
    }
  }
;
}
