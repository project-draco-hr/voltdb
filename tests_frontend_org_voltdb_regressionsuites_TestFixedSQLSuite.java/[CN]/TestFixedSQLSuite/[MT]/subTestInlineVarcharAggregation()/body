{
  Client client=getClient();
  ClientResponse cr;
  cr=client.callProcedure("VARCHARTB.insert",1,"zz","panda");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("VARCHARTB.insert",6,"a","panda");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("VARCHARTB.insert",7,"mm","panda");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("VARCHARTB.insert",8,"z","orangutan");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("VARCHARTB.insert",9,"aa","orangutan");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("VARCHARTB.insert",10,"n","orangutan");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("@AdHoc","select max(var2), min(var2) from VarcharTB");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  VoltTable vt=cr.getResults()[0];
  assertTrue(vt.advanceRow());
  assertEquals("zz",vt.getString(0));
  assertEquals("a",vt.getString(1));
  String sql="select var80, max(var2) as maxvar2, min(var2) as minvar2 " + "from VarcharTB " + "group by var80 "+ "order by maxvar2, minvar2";
  cr=client.callProcedure("@AdHoc",sql);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  vt=cr.getResults()[0];
  assertTrue(vt.advanceRow());
  assertEquals("orangutan",vt.getString(0));
  assertEquals("z",vt.getString(1));
  assertEquals("aa",vt.getString(2));
  assertTrue(vt.advanceRow());
  assertEquals("panda",vt.getString(0));
  assertEquals("zz",vt.getString(1));
  assertEquals("a",vt.getString(2));
  cr=client.callProcedure("PWEE_WITH_INDEX.insert",0,"MM",88);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("PWEE_WITH_INDEX.insert",1,"ZZ",88);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("PWEE_WITH_INDEX.insert",2,"AA",88);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("PWEE_WITH_INDEX.insert",3,"NN",88);
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  cr=client.callProcedure("@AdHoc","select num, max(wee), min(wee) " + "from pwee_with_index group by num order by num");
  assertEquals(ClientResponse.SUCCESS,cr.getStatus());
  vt=cr.getResults()[0];
  assertTrue(vt.advanceRow());
  assertEquals("ZZ",vt.getString(1));
  assertEquals("AA",vt.getString(2));
  truncateTables(client,new String[]{"VARCHARTB","PWEE_WITH_INDEX"});
}
