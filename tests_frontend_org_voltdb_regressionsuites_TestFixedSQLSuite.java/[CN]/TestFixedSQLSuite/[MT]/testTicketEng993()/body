{
  Client client=getClient();
  ClientResponse response=client.callProcedure("Eng993Insert",5,5.5);
  assertTrue(response.getStatus() == ClientResponse.SUCCESS);
  response=client.callProcedure("@AdHoc","select DESC from P1 where ID = 6");
  VoltTable result=response.getResults()[0];
  assertEquals("NULL",result.fetchRow(0).get(0,VoltType.STRING));
  response=client.callProcedure("@AdHoc","select * from P1");
  result=response.getResults()[0];
  result.advanceRow();
  assertEquals(6,result.getLong(0));
  assertEquals("NULL",result.getString(1));
  result.getLong(2);
  if (!isHSQL()) {
    assertTrue(result.wasNull());
  }
  assertEquals(6.5,result.getDouble(3));
  response=client.callProcedure("Eng5926Insert",5,"",5.5);
  assertTrue(response.getStatus() == ClientResponse.SUCCESS);
  try {
    response=client.callProcedure("Eng5926Insert",7,"HOO",7.5);
    fail("Failed to throw ProcCallException for runtime varchar length exceeded.");
  }
 catch (  ProcCallException pce) {
  }
  response=client.callProcedure("@AdHoc","select * from PWEE ORDER BY ID DESC");
  result=response.getResults()[0];
  result.advanceRow();
  assertEquals(6,result.getLong(0));
  assertEquals("WEE",result.getString(1));
  result.getLong(2);
  if (!isHSQL()) {
    assertTrue(result.wasNull());
  }
  assertEquals(6.5,result.getDouble(3));
  try {
    client.callProcedure("@AdHoc","insert into P1 (ID,DESC,NUM,RATIO) VALUES('?',?,?,?);");
    fail();
  }
 catch (  Exception e) {
    assertTrue(e.getMessage().contains("invalid format for a constant"));
  }
  try {
    client.callProcedure("@AdHoc","insert into P1 (ID,DESC,NUM,RATIO) VALUES(?,?,?,?);");
    fail();
  }
 catch (  Exception e) {
    assertTrue(e.getMessage().contains("Number of arguments provided was 0 where 4 was expected"));
  }
}
