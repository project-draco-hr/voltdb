{
  Client client=getClient();
  String sql;
  sql="insert into R1 Values(1, 'MA', 2, 2.2);";
  client.callProcedure("@AdHoc",sql);
  sql="SELECT 0.1 + (1-0.1) + ratio FROM R1";
  runQueryGetDouble(client,sql,3.2);
  sql="SELECT 0.1 + (1-0.1) - ratio FROM R1";
  runQueryGetDouble(client,sql,-1.2);
  sql="SELECT 0.1 + (1-0.1) / ratio FROM R1";
  runQueryGetDouble(client,sql,0.509090909091);
  sql="SELECT 0.1 + (1-0.1) * ratio FROM R1";
  runQueryGetDouble(client,sql,2.08);
  sql="SELECT 0.1 + ratio + (1-0.1) FROM R1";
  runQueryGetDouble(client,sql,3.2);
  sql="SELECT 0.1 + ratio - (1-0.1) FROM R1";
  runQueryGetDouble(client,sql,1.4);
  sql="SELECT 0.1 + ratio / (1-0.1) FROM R1";
  runQueryGetDouble(client,sql,2.544444444444);
  sql="SELECT 0.1 + ratio * (1-0.1) FROM R1";
  runQueryGetDouble(client,sql,2.08);
  sql="SELECT 0.1 + (1-0.1) + NUM FROM R1";
  runQueryGetDecimal(client,sql,3.0);
  sql="SELECT 0.1 + (1-0.1) - NUM FROM R1";
  runQueryGetDecimal(client,sql,-1.0);
  sql="SELECT 0.1 + (1-0.1) / NUM FROM R1";
  runQueryGetDecimal(client,sql,0.55);
  sql="SELECT 0.1 + (1-0.1) * NUM FROM R1";
  runQueryGetDecimal(client,sql,1.9);
  sql="SELECT 0.1 + NUM + (1-0.1) FROM R1";
  runQueryGetDecimal(client,sql,3.0);
  sql="SELECT 0.1 + NUM - (1-0.1) FROM R1";
  runQueryGetDecimal(client,sql,1.2);
  sql="SELECT 0.1 + NUM / (1-0.1) FROM R1";
  runQueryGetDecimal(client,sql,2.322222222222);
  sql="SELECT 0.1 + NUM * (1-0.1) FROM R1";
  runQueryGetDecimal(client,sql,1.9);
  sql="SELECT NUM + 111111111111111111111111111111111111111.1111 FROM R1";
  if (isHSQL()) {
    verifyStmtFails(client,sql,"HSQL-BACKEND ERROR");
    verifyStmtFails(client,sql,"to the left of the decimal point is 39 and the max is 26");
  }
 else {
    verifyStmtFails(client,sql,"Maximum precision exceeded. " + "Maximum of 26 digits to the left of the decimal point");
  }
  sql="SELECT NUM + 111111.1111111111111111111111111111111111111 FROM R1";
  runQueryGetDecimal(client,sql,111113.1111111111111111111111111111111111111);
  sql="SELECT NUM + " + StringUtils.repeat("1",256) + ".1111E1 FROM R1";
  runQueryGetDouble(client,sql,Double.parseDouble(StringUtils.repeat("1",255) + "3.1111E1"));
  sql="SELECT NUM + " + StringUtils.repeat("1",368) + ".1111E1 FROM R1";
  verifyStmtFails(client,sql,"java.lang.NumberFormatException");
  VoltTable vt=null;
  vt=client.callProcedure("R1_PROC1").getResults()[0];
  validateTableColumnOfScalarDecimal(vt,0,new BigDecimal[]{new BigDecimal(2.1)});
  vt=client.callProcedure("R1_PROC2").getResults()[0];
  validateTableColumnOfScalarFloat(vt,0,new double[]{2.1});
}
