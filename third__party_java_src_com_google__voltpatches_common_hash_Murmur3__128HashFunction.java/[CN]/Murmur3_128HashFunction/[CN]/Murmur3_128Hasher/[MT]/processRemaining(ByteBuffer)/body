{
  long k1=0;
  long k2=0;
  length+=bb.remaining();
switch (bb.remaining()) {
case 15:
    k2^=(long)toInt(bb.get(14)) << 48;
case 14:
  k2^=(long)toInt(bb.get(13)) << 40;
case 13:
k2^=(long)toInt(bb.get(12)) << 32;
case 12:
k2^=(long)toInt(bb.get(11)) << 24;
case 11:
k2^=(long)toInt(bb.get(10)) << 16;
case 10:
k2^=(long)toInt(bb.get(9)) << 8;
case 9:
k2^=(long)toInt(bb.get(8));
case 8:
k1^=bb.getLong();
break;
case 7:
k1^=(long)toInt(bb.get(6)) << 48;
case 6:
k1^=(long)toInt(bb.get(5)) << 40;
case 5:
k1^=(long)toInt(bb.get(4)) << 32;
case 4:
k1^=(long)toInt(bb.get(3)) << 24;
case 3:
k1^=(long)toInt(bb.get(2)) << 16;
case 2:
k1^=(long)toInt(bb.get(1)) << 8;
case 1:
k1^=(long)toInt(bb.get(0));
break;
default :
throw new AssertionError("Should never get here.");
}
h1^=mixK1(k1);
h2^=mixK2(k2);
}
