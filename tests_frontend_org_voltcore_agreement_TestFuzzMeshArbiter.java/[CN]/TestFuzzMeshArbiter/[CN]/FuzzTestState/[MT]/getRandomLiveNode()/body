{
  int i=0;
  int[] picks=new int[m_nodes.size()];
  for (  long HSid : m_nodes.keySet()) {
    picks[i++]=getHostId(HSid);
  }
  i=0;
  MiniNode mini=null;
  int node=picks[m_rand.nextInt(picks.length)];
  while (m_alreadyPicked.contains(node) || mini == null) {
    node=picks[m_rand.nextInt(picks.length)];
    if ((++i % 10) == 0) {
      m_fuzzLog.warn("alreadyPicked: " + m_alreadyPicked + ", picks: "+ Ints.asList(picks));
    }
    mini=m_nodes.get(getHSId(node));
  }
  m_alreadyPicked.add(node);
  return node;
}
