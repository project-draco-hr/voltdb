{
  m_expectations.clear();
  Iterator<Integer> itr=m_alreadyPicked.iterator();
  while (itr.hasNext()) {
    MiniNode node=m_nodes.get(getHSId(itr.next()));
    if (node == null || node.getNodeState() != NodeState.STOP) {
      itr.remove();
    }
  }
  m_failedCounts.clear();
  for (  Map.Entry<Long,MiniNode> e : m_nodes.entrySet()) {
    if (e.getValue().getNodeState() == NodeState.STOP)     continue;
    MiniSite site=e.getValue().m_miniSite;
    m_failedCounts.put(e.getKey(),site.getFailedSitesCount());
  }
  m_expectations.put(m_killSet.size(),m_expectedLive.size());
  int killSetSize=m_killSet.size();
  Iterator<Long> kitr=m_killSet.iterator();
  while (kitr.hasNext()) {
    MiniNode knode=m_nodes.get(kitr.next());
    if (knode == null || knode.getNodeState() == NodeState.STOP) {
      kitr.remove();
    }
  }
  if (!m_killSet.isEmpty()) {
    m_expectations.put(m_expectedLive.size() + killSetSize - 1,m_killSet.size());
  }
  m_killSet.clear();
}
