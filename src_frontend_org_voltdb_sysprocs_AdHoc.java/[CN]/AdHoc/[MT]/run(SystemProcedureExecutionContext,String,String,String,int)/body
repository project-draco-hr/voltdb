{
  boolean replicatedTableDML=isReplicatedTableDML == 1;
  SynthesizedPlanFragment[] pfs=null;
  VoltTable[] results=null;
  ParameterSet params=null;
  if (VoltDB.getEEBackendType() == BackendTarget.HSQLDB_BACKEND) {
    pfs=new SynthesizedPlanFragment[1];
    pfs[0]=new SynthesizedPlanFragment();
    pfs[0].fragmentId=SysProcFragmentId.PF_runAdHocFragment;
    pfs[0].outputDepId=AGG_DEPID;
    pfs[0].multipartition=false;
    params=new ParameterSet();
    params.setParameters(AGG_DEPID,"",sql);
    pfs[0].parameters=params;
  }
 else {
    pfs=new SynthesizedPlanFragment[2];
    if (collectorFragment != null) {
      pfs=new SynthesizedPlanFragment[2];
      pfs[1]=new SynthesizedPlanFragment();
      pfs[1].fragmentId=SysProcFragmentId.PF_runAdHocFragment;
      pfs[1].outputDepId=COLLECT_DEPID;
      pfs[1].multipartition=true;
      pfs[1].suppressDuplicates=true;
      params=new ParameterSet();
      params.setParameters(COLLECT_DEPID,collectorFragment,sql);
      pfs[1].parameters=params;
    }
 else {
      pfs=new SynthesizedPlanFragment[1];
    }
    pfs[0]=new SynthesizedPlanFragment();
    pfs[0].fragmentId=SysProcFragmentId.PF_runAdHocFragment;
    pfs[0].outputDepId=AGG_DEPID;
    if (collectorFragment != null)     pfs[0].inputDepIds=new int[]{COLLECT_DEPID};
    pfs[0].multipartition=false;
    pfs[0].suppressDuplicates=true;
    params=new ParameterSet();
    params.setParameters(AGG_DEPID,aggregatorFragment,sql);
    pfs[0].parameters=params;
  }
  results=executeSysProcPlanFragments(pfs,AGG_DEPID);
  if (replicatedTableDML) {
    assert(results.length == 1);
    long changedTuples=results[0].asScalarLong();
    assert((changedTuples % ctx.getNumberOfPartitions()) == 0);
    VoltTable retval=new VoltTable(new VoltTable.ColumnInfo("",VoltType.BIGINT));
    retval.addRow(changedTuples / ctx.getNumberOfPartitions());
    results[0]=retval;
  }
  return results;
}
