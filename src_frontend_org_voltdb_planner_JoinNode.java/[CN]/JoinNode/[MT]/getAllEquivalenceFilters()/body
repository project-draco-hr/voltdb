{
  List<AbstractExpression> equivalences=new ArrayList<AbstractExpression>();
  ArrayDeque<JoinNode> joinNodes=new ArrayDeque<JoinNode>();
  joinNodes.add(this);
  while (!joinNodes.isEmpty()) {
    JoinNode joinNode=joinNodes.poll();
    if (joinNode.m_joinExpr != null) {
      Collection<AbstractExpression> joinFilters=ExpressionUtil.collectPartitioningJoinFilters(joinNode.m_joinExpr);
      equivalences.addAll(joinFilters);
    }
    if (joinNode.m_whereExpr != null) {
      Collection<AbstractExpression> whereFilters=ExpressionUtil.collectPartitioningWhereFilters(joinNode.m_whereExpr);
      equivalences.addAll(whereFilters);
    }
    if (joinNode.m_leftNode != null) {
      joinNodes.add(joinNode.m_leftNode);
    }
    if (joinNode.m_rightNode != null) {
      joinNodes.add(joinNode.m_rightNode);
    }
  }
  return equivalences;
}
