{
  Multimap<Class<?>,EventSubscriber> methodsInListener=finder.findAllSubscribers(object);
  for (  Entry<Class<?>,Collection<EventSubscriber>> entry : methodsInListener.asMap().entrySet()) {
    Class<?> eventType=entry.getKey();
    Collection<EventSubscriber> eventMethodsInListener=entry.getValue();
    subscribersByTypeLock.writeLock().lock();
    try {
      Set<EventSubscriber> currentSubscribers=subscribersByType.get(eventType);
      if (!currentSubscribers.containsAll(eventMethodsInListener)) {
        throw new IllegalArgumentException("missing event subscriber for an annotated method. Is " + object + " registered?");
      }
      currentSubscribers.removeAll(eventMethodsInListener);
    }
  finally {
      subscribersByTypeLock.writeLock().unlock();
    }
  }
}
