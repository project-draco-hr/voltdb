{
  try {
    final ByteBuffer compressionBuffer=ByteBuffer.allocateDirect(CompressionService.maxCompressedLength(1024 * 1024 * 2 + (1024 * 256)));
    while (true) {
      BBContainer message=m_queue.take();
      if (message.b == null) {
        rejoinLog.debug("Got terminator, terminating the snapshot sender");
        return;
      }
      try {
        if (message.b.isDirect()) {
          compressionBuffer.clear();
          final int compressedSize=CompressionService.compressBuffer(message.b,compressionBuffer);
          compressionBuffer.limit(compressedSize);
          compressionBuffer.position(0);
          byte[] data=new byte[compressedSize];
          compressionBuffer.get(data);
          RejoinDataMessage msg=new RejoinDataMessage(data);
          m_mb.send(m_destHSId,msg);
          m_bytesSent.addAndGet(compressedSize);
        }
 else {
          byte compressedBytes[]=CompressionService.compressBytes(message.b.array(),message.b.position(),message.b.remaining());
          RejoinDataMessage msg=new RejoinDataMessage(compressedBytes);
          m_mb.send(m_destHSId,msg);
          m_bytesSent.addAndGet(compressedBytes.length);
        }
      }
 catch (      IOException e) {
        rejoinLog.error("Error writing rejoin snapshot block",e);
        return;
      }
 finally {
        message.discard();
      }
    }
  }
 catch (  InterruptedException e) {
  }
}
