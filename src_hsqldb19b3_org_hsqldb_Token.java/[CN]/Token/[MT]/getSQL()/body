{
  if (namePrefix == null && isUndelimitedIdentifier) {
    return tokenString;
  }
  if (tokenType == Tokens.X_VALUE) {
    return dataType.convertToSQLString(tokenValue);
  }
  StringBuffer sb=new StringBuffer();
  if (tokenType == Tokens.ASTERISK) {
    if (columnExpression != null && columnExpression.opType == OpTypes.MULTICOLUMN && columnExpression.nodes.length > 0) {
      sb.append(' ');
      for (int i=0; i < columnExpression.nodes.length; i++) {
        Expression e=columnExpression.nodes[i];
        ColumnSchema c=e.getColumn();
        String name;
        if (e.opType == OpTypes.COALESCE) {
          sb.append(e.getColumnName());
          continue;
        }
        if (e.getRangeVariable().tableAlias == null) {
          name=c.getName().getSchemaQualifiedStatementName();
        }
 else {
          RangeVariable range=e.getRangeVariable();
          name=range.tableAlias.getStatementName() + '.' + c.getName().statementName;
        }
        if (i > 0) {
          sb.append(',');
        }
        sb.append(name);
      }
      sb.append(' ');
    }
 else {
      return tokenString;
    }
    return sb.toString();
  }
  if (namePrePrefix != null) {
    if (isDelimitedPrePrefix) {
      sb.append('"');
      sb.append(namePrePrefix);
      sb.append('"');
    }
 else {
      sb.append(namePrePrefix);
    }
    sb.append('.');
  }
  if (namePrefix != null) {
    if (isDelimitedPrefix) {
      sb.append('"');
      sb.append(namePrefix);
      sb.append('"');
    }
 else {
      sb.append(namePrefix);
    }
    sb.append('.');
  }
  if (isDelimitedIdentifier) {
    sb.append('"');
    sb.append(tokenString);
    sb.append('"');
  }
 else {
    sb.append(tokenString);
  }
  return sb.toString();
}
