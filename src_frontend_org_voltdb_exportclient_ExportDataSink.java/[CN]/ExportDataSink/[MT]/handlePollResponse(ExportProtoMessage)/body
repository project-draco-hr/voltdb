{
  m.getData().order(ByteOrder.LITTLE_ENDIAN);
  try {
    if (m.getData().remaining() == 0) {
      m_decoder.noDataReceived(m.getAckOffset());
      poll();
      return;
    }
    int ttllength=m.getData().getInt();
    m_logger.trace("Poller: generation: " + m_generation + " table: "+ m_tableName+ ", partition: "+ partitionId+ " : data payload bytes: "+ ttllength);
    if (ttllength == 0) {
      m_decoder.noDataReceived(m.getAckOffset());
      poll();
      return;
    }
    while (m.getData().hasRemaining()) {
      int length=m.getData().getInt();
      byte[] rowdata=new byte[length];
      m.getData().get(rowdata,0,length);
      m_decoder.processRow(length,rowdata);
    }
    m_decoder.onBlockCompletion();
    pollAndAck(m);
  }
  finally {
    m.getData().order(ByteOrder.BIG_ENDIAN);
  }
}
