{
  Type[] paramTypes=m_def.getParamTypes();
  for (int i=0; i < nodes.length; i++) {
    if (nodes[i] != null) {
      nodes[i].resolveTypes(session,this);
    }
  }
switch (m_def.getId()) {
case FunctionId.FUNC_CONCAT:
    for (int ii=0; ii < nodes.length; ii++) {
      if (nodes[ii].dataType == null && nodes[ii].isParam) {
        nodes[ii].dataType=Type.SQL_VARCHAR;
      }
    }
  break;
case FunctionId.FUNC_VOLT_FIELD:
if (nodes[0].dataType == null && nodes[0].isParam) {
  nodes[0].dataType=Type.SQL_VARCHAR;
}
if (nodes[1].dataType == null && nodes[1].isParam) {
nodes[1].dataType=Type.SQL_VARCHAR;
}
break;
case FunctionId.FUNC_VOLT_DECODE:
boolean needParamType=false;
Type inputTypeInferred=null;
Type resultTypeInferred=null;
for (int ii=0; ii < nodes.length; ii++) {
Type argType=nodes[ii].dataType;
if (argType == null) {
if (nodes[ii].isParam || nodes[ii].valueData == null) {
needParamType=true;
}
continue;
}
if ((((ii % 2) == 0) || ii == nodes.length - 1) && (ii != 0)) {
if (resultTypeInferred == null) {
resultTypeInferred=argType;
}
 else if (resultTypeInferred.typeComparisonGroup != argType.typeComparisonGroup) {
resultTypeInferred=Type.SQL_VARCHAR;
}
}
 else {
if (inputTypeInferred == null) {
inputTypeInferred=argType;
}
 else if (inputTypeInferred.typeComparisonGroup != argType.typeComparisonGroup) {
inputTypeInferred=Type.SQL_VARCHAR;
}
}
}
if (!needParamType) {
break;
}
if (inputTypeInferred == null) {
inputTypeInferred=Type.SQL_VARCHAR;
}
if (resultTypeInferred == null) {
resultTypeInferred=Type.SQL_VARCHAR;
}
for (int ii=0; ii < nodes.length; ii++) {
Type argType=nodes[ii].dataType;
if ((argType != null) || !(nodes[ii].isParam || nodes[ii].valueData == null)) {
continue;
}
if ((((ii % 2) == 0) || ii == nodes.length - 1) && (ii != 0)) {
nodes[ii].dataType=resultTypeInferred;
}
 else {
nodes[ii].dataType=inputTypeInferred;
}
}
break;
default :
break;
}
for (int i=0; i < nodes.length; i++) {
if (nodes[i] != null) {
if (i >= paramTypes.length) {
break;
}
if (paramTypes[i] == null) {
continue;
}
if (nodes[i].dataType == null) {
nodes[i].dataType=paramTypes[i];
continue;
}
 else if (paramTypes[i].canConvertFrom(nodes[i].dataType)) {
if (paramTypes[i].isDateTimeType() && nodes[i].dataType.isCharacterType()) {
String datetimestring=(String)nodes[i].valueData;
if (datetimestring != null) {
datetimestring=datetimestring.trim();
try {
Timestamp.valueOf(datetimestring);
}
 catch (Exception e) {
throw Error.error(ErrorCode.X_42561);
}
nodes[i].dataType=paramTypes[i];
}
}
 else if (paramTypes[i].isNumberType() && !nodes[i].dataType.isNumberType()) {
throw Error.error(ErrorCode.X_42565);
}
continue;
}
throw Error.error(ErrorCode.X_42565);
}
}
dataType=m_def.getDataType();
if (dataType == null && nodes.length > 0) {
if (parameterArg < 0 || parameterArg >= nodes.length) {
throw Error.error(ErrorCode.X_42565);
}
Expression like_child=nodes[parameterArg];
if (like_child != null) {
dataType=like_child.dataType;
}
}
}
