{
  assert(m_lastAckedDrId <= tracker.m_lastAckedDrId);
  m_lastSpUniqueId=Math.max(m_lastSpUniqueId,tracker.m_lastSpUniqueId);
  m_lastMpUniqueId=Math.max(m_lastMpUniqueId,tracker.m_lastMpUniqueId);
  assert(tracker.size() > 0);
  if (m_map.isEmpty()) {
    m_map=tracker.m_map;
  }
 else {
    Map.Entry<Long,Long> firstNewEntry=tracker.m_map.firstEntry();
    Map.Entry<Long,Long> lastOldEntry=m_map.lastEntry();
    assert(lastOldEntry.getValue() < firstNewEntry.getKey());
    if (lastOldEntry.getValue() + 1 == firstNewEntry.getKey()) {
      tracker.m_map.remove(firstNewEntry.getKey());
      m_map.put(lastOldEntry.getKey(),firstNewEntry.getValue());
    }
    m_map.putAll(tracker.m_map);
  }
}
