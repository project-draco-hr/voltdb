{
  assert(m_lastAckedDrId <= tracker.m_lastAckedDrId);
  m_lastSpUniqueId=Math.max(m_lastSpUniqueId,tracker.m_lastSpUniqueId);
  m_lastMpUniqueId=Math.max(m_lastMpUniqueId,tracker.m_lastMpUniqueId);
  assert(tracker.size() > 0);
  if (m_map.isEmpty()) {
    m_map=new TreeMap<>(tracker.m_map);
  }
 else {
    Map.Entry<Long,Long> lastEntry=m_map.lastEntry();
    for (    Entry<Long,Long> newEntry : tracker.m_map.entrySet()) {
      assert(lastEntry.getValue() < newEntry.getKey());
      if (lastEntry.getValue() + 1 == newEntry.getKey()) {
        m_map.put(lastEntry.getKey(),newEntry.getValue());
        lastEntry=Maps.immutableEntry(lastEntry.getKey(),newEntry.getValue());
      }
 else {
        m_map.put(newEntry.getKey(),newEntry.getValue());
        lastEntry=newEntry;
      }
    }
  }
  truncate(tracker.m_lastAckedDrId);
}
