{
  CountDownLatch zkInitBarrier=new CountDownLatch(1);
  if (m_joiner.start(zkInitBarrier)) {
    m_network.start();
    m_config.internalInterface=m_config.coordinatorIp.getAddress().getHostAddress();
    m_config.internalPort=m_config.coordinatorIp.getPort();
    long agreementHSId=getHSIdForLocalSite(AGREEMENT_SITE_ID);
    HashSet<Long> agreementSites=new HashSet<Long>();
    agreementSites.add(agreementHSId);
    SiteMailbox sm=new SiteMailbox(this,agreementHSId);
    createMailbox(agreementHSId,sm);
    m_agreementSite=new AgreementSite(this,agreementHSId,agreementSites,0,sm,new InetSocketAddress(m_config.zkInterface.split(":")[0],Integer.parseInt(m_config.zkInterface.split(":")[1])),m_config.backwardsTimeForgivenessWindow);
    m_agreementSite.start();
    m_agreementSite.waitForRecovery();
    m_zk=org.voltcore.agreement.ZKUtil.getClient(m_config.zkInterface,60 * 1000);
    if (m_zk == null) {
      throw new Exception("Timed out trying to connect local ZooKeeper instance");
    }
    CoreZK.createHierarchy(m_zk);
    final int selectedHostId=selectNewHostId(m_config.coordinatorIp.toString());
    if (selectedHostId != 0) {
      VoltDB.crashLocalVoltDB("Selected host id for coordinator was not 0, " + selectedHostId,false,null);
    }
    JSONObject instance_id=new JSONObject();
    instance_id.put("coord",ByteBuffer.wrap(m_config.coordinatorIp.getAddress().getAddress()).getInt());
    instance_id.put("timestamp",System.currentTimeMillis());
    hostLog.debug("Cluster will have instance ID:\n" + instance_id.toString(4));
    byte[] payload=instance_id.toString(4).getBytes("UTF-8");
    m_zk.create(CoreZK.instance_id,payload,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
    byte hostInfoBytes[]=m_config.coordinatorIp.toString().getBytes("UTF-8");
    m_zk.create(CoreZK.hosts_host + selectedHostId,hostInfoBytes,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL);
  }
  zkInitBarrier.countDown();
}
