{
  final long hsId=mailboxId == null ? getHSIdForLocalSite(m_nextSiteId.getAndIncrement()) : mailboxId;
  m_siteMailboxes.put(hsId,new Mailbox(){
    @Override public void send(    long hsId,    VoltMessage message){
    }
    @Override public void send(    long[] hsIds,    VoltMessage message){
    }
    @Override public void deliver(    VoltMessage message){
      hostLog.info("No-op mailbox(" + CoreUtils.hsIdToString(hsId) + ") dropped message "+ message);
    }
    @Override public void deliverFront(    VoltMessage message){
    }
    @Override public VoltMessage recv(){
      return null;
    }
    @Override public VoltMessage recvBlocking(){
      return null;
    }
    @Override public VoltMessage recvBlocking(    long timeout){
      return null;
    }
    @Override public VoltMessage recv(    Subject[] s){
      return null;
    }
    @Override public VoltMessage recvBlocking(    Subject[] s){
      return null;
    }
    @Override public VoltMessage recvBlocking(    Subject[] s,    long timeout){
      return null;
    }
    @Override public long getHSId(){
      return 0L;
    }
    @Override public void setHSId(    long hsId){
    }
  }
);
  return hsId;
}
