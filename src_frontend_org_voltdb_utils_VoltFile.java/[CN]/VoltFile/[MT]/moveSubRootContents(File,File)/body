{
  assert(fromSubRoot.exists() && fromSubRoot.isDirectory());
  assert(toSubRoot.exists() && toSubRoot.isDirectory());
  for (  File f : fromSubRoot.listFiles()) {
    File fInOtherSubroot=new File(toSubRoot,f.getName());
    if (f.isDirectory()) {
      if (!fInOtherSubroot.exists()) {
        if (!fInOtherSubroot.mkdir()) {
          throw new IOException("Can't create directory " + fInOtherSubroot);
        }
      }
      moveSubRootContents(f,fInOtherSubroot);
    }
 else {
      if (!fInOtherSubroot.exists()) {
        if (!fInOtherSubroot.createNewFile()) {
          throw new IOException();
        }
        FileInputStream fis=new FileInputStream(f);
        FileOutputStream fos=new FileOutputStream(fInOtherSubroot);
        FileChannel inputChannel=fis.getChannel();
        FileChannel outputChannel=fos.getChannel();
        BBContainer bufC=DBBPool.allocateDirect(8192);
        ByteBuffer buf=bufC.b();
        try {
          while (inputChannel.read(buf) != -1) {
            buf.flip();
            outputChannel.write(buf);
            buf.clear();
          }
          inputChannel.close();
          outputChannel.close();
        }
  finally {
          bufC.discard();
        }
      }
 else {
        throw new IOException(fInOtherSubroot + " already exists");
      }
    }
  }
}
