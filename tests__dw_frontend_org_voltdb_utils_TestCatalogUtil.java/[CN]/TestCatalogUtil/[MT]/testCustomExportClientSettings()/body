{
  if (!MiscUtils.isPro()) {
    return;
  }
  final String withBadCustomExport="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export enabled='true' target='custom' exportconnectorclass=\"com.foo.export.ExportClient\" >"+ "        <configuration>"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  final String withGoodCustomExport="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export enabled='true' target='custom' exportconnectorclass=\"org.voltdb.exportclient.NoOpTestExportClient\" >"+ "        <configuration>"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  final String withBuiltinFileExport="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export enabled='true' target='file'>"+ "        <configuration>"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  final String withBuiltinKafkaExport="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export enabled='true' target='kafka'>"+ "        <configuration>"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  final String withBuiltinRabbitMQExport="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export enabled='true' target='rabbitmq'>"+ "        <configuration>"+ "            <property name=\"foo\">false</property>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  final String ddl="CREATE TABLE export_data ( id BIGINT default 0 , value BIGINT DEFAULT 0 );\n" + "EXPORT TABLE export_data;";
  final File tmpDdl=VoltProjectBuilder.writeStringToTempFile(ddl);
  final File tmpBad=VoltProjectBuilder.writeStringToTempFile(withBadCustomExport);
  DeploymentType bad_deployment=CatalogUtil.getDeployment(new FileInputStream(tmpBad));
  VoltCompiler compiler=new VoltCompiler();
  String x[]={tmpDdl.getAbsolutePath()};
  Catalog cat=compiler.compileCatalogFromDDL(x);
  String msg=CatalogUtil.compileDeployment(cat,bad_deployment,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  Database db=cat.getClusters().get("cluster").getDatabases().get("database");
  org.voltdb.catalog.Connector catconn=db.getConnectors().get("0");
  assertNotNull(catconn);
  assertFalse(bad_deployment.getExport().isEnabled());
  final File tmpGood=VoltProjectBuilder.writeStringToTempFile(withGoodCustomExport);
  DeploymentType good_deployment=CatalogUtil.getDeployment(new FileInputStream(tmpGood));
  Catalog cat2=compiler.compileCatalogFromDDL(x);
  msg=CatalogUtil.compileDeployment(cat2,good_deployment,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  db=cat2.getClusters().get("cluster").getDatabases().get("database");
  catconn=db.getConnectors().get("0");
  assertNotNull(catconn);
  assertTrue(good_deployment.getExport().isEnabled());
  assertEquals(good_deployment.getExport().getTarget(),ServerExportEnum.CUSTOM);
  assertEquals(good_deployment.getExport().getExportconnectorclass(),"org.voltdb.exportclient.NoOpTestExportClient");
  ConnectorProperty prop=catconn.getConfig().get(ExportDataProcessor.EXPORT_TO_TYPE);
  assertEquals(prop.getValue(),"org.voltdb.exportclient.NoOpTestExportClient");
  final File tmpBuiltin=VoltProjectBuilder.writeStringToTempFile(withBuiltinFileExport);
  DeploymentType builtin_deployment=CatalogUtil.getDeployment(new FileInputStream(tmpBuiltin));
  Catalog cat3=compiler.compileCatalogFromDDL(x);
  msg=CatalogUtil.compileDeployment(cat3,builtin_deployment,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  db=cat3.getClusters().get("cluster").getDatabases().get("database");
  catconn=db.getConnectors().get("0");
  assertNotNull(catconn);
  assertTrue(builtin_deployment.getExport().isEnabled());
  assertEquals(builtin_deployment.getExport().getTarget(),ServerExportEnum.FILE);
  prop=catconn.getConfig().get(ExportDataProcessor.EXPORT_TO_TYPE);
  assertEquals(prop.getValue(),"org.voltdb.exportclient.ExportToFileClient");
  final File tmpKafkaBuiltin=VoltProjectBuilder.writeStringToTempFile(withBuiltinKafkaExport);
  DeploymentType builtin_kafkadeployment=CatalogUtil.getDeployment(new FileInputStream(tmpKafkaBuiltin));
  Catalog cat4=compiler.compileCatalogFromDDL(x);
  msg=CatalogUtil.compileDeployment(cat4,builtin_kafkadeployment,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  db=cat4.getClusters().get("cluster").getDatabases().get("database");
  catconn=db.getConnectors().get("0");
  assertNotNull(catconn);
  assertTrue(builtin_kafkadeployment.getExport().isEnabled());
  assertEquals(builtin_kafkadeployment.getExport().getTarget(),ServerExportEnum.KAFKA);
  prop=catconn.getConfig().get(ExportDataProcessor.EXPORT_TO_TYPE);
  assertEquals(prop.getValue(),"org.voltdb.exportclient.KafkaExportClient");
  final File tmpRabbitMQBuiltin=VoltProjectBuilder.writeStringToTempFile(withBuiltinRabbitMQExport);
  DeploymentType builtin_rabbitmqdeployment=CatalogUtil.getDeployment(new FileInputStream(tmpRabbitMQBuiltin));
  Catalog cat5=compiler.compileCatalogFromDDL(x);
  msg=CatalogUtil.compileDeployment(cat5,builtin_rabbitmqdeployment,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  db=cat5.getClusters().get("cluster").getDatabases().get("database");
  catconn=db.getConnectors().get("0");
  assertNotNull(catconn);
  assertTrue(builtin_rabbitmqdeployment.getExport().isEnabled());
  assertEquals(ServerExportEnum.RABBITMQ,builtin_rabbitmqdeployment.getExport().getTarget());
  prop=catconn.getConfig().get(ExportDataProcessor.EXPORT_TO_TYPE);
  assertEquals("org.voltdb.exportclient.RabbitMQExportClient",prop.getValue());
}
