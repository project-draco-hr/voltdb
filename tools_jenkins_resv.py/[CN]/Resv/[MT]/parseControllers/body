def parseControllers(self, node_data):
    for node in node_data:
        name = node['displayName']
        controlMatch = re.match('(volt\\d+[a-z]{1,2})-controller', name)
        if (controlMatch != None):
            controller = str(name)
            controller_volt = controlMatch.group(1)
            base = 'volt'
            num = ''
            letter = ''
            for w in str.split(controller, '-'):
                base_matchobj = re.match('volt(\\d+)([a-z]{1,2})', w)
                sub_matchobj = re.match('([a-z]{1,2})', w)
                if (base_matchobj != None):
                    num = base_matchobj.group(1)
                    letter = base_matchobj.group(2)
                elif (sub_matchobj != None):
                    letter = sub_matchobj.group(1)
                self.node_controller_map[(('volt' + num) + letter)] = str(controller)
