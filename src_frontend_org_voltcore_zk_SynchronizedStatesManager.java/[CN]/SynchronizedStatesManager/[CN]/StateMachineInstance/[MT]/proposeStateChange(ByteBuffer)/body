{
  assert(proposedState != null);
  assert(proposedState.remaining() < Short.MAX_VALUE);
  lockLocalState();
  assert(m_requestedInitialState == null);
  if (proposedState.position() == 0) {
    m_pendingProposal=proposedState;
  }
 else {
    m_pendingProposal=ByteBuffer.allocate(proposedState.remaining());
    m_pendingProposal.put(proposedState.array(),proposedState.arrayOffset() + proposedState.position(),proposedState.remaining());
    m_pendingProposal.flip();
  }
  m_log.debug(m_stateMachineId + ": Proposing new state " + stateToString(m_pendingProposal.asReadOnlyBuffer()));
  m_stateChangeInitiator=true;
  m_currentRequestType=REQUEST_TYPE.STATE_CHANGE_REQUEST;
  ByteBuffer stateChange=buildProposal(REQUEST_TYPE.STATE_CHANGE_REQUEST,m_synchronizedState.asReadOnlyBuffer(),m_pendingProposal.asReadOnlyBuffer());
  m_lastProposalVersion=wakeCommunityWithProposal(stateChange.array());
  assignStateChangeAgreement(true);
}
