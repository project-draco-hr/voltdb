{
  lockLocalState();
  assert(m_currlockName != null);
  assert(m_requestedInitialState == null);
  assert(m_currentParticipants == 0);
  m_proposedState=proposedState;
  m_stateChangeInitiator=true;
  try {
    ByteBuffer states=buildResultPair(m_synchronizedState,m_proposedState);
    List<String> results=m_zk.getChildren(m_barrierResultsPath,false);
    for (    String resultNode : results) {
      m_zk.delete(ZKUtil.joinZKPath(m_barrierResultsPath,resultNode),-1);
    }
    m_zk.setData(m_barrierResultsPath,states.array(),-1);
    m_zk.create(m_myPartiticpantsPath,null,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL);
  }
 catch (  KeeperException.SessionExpiredException e) {
    e.printStackTrace();
  }
catch (  KeeperException.ConnectionLossException e) {
    e.printStackTrace();
  }
catch (  InterruptedException e) {
    e.printStackTrace();
  }
catch (  Exception e) {
    org.voltdb.VoltDB.crashLocalVoltDB("Unexepected failure in StateMachine.",true,e);
  }
  assignStateChangeAgreement(true);
}
