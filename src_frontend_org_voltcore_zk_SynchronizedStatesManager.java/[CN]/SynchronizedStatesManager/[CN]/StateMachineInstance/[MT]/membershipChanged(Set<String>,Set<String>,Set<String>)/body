{
  lockLocalState();
  m_knownMembers=knownHosts;
  m_membershipChangePending=false;
  boolean notInitializing=m_requestedInitialState == null;
  if (m_pendingProposal != null && m_memberResults != null && Sets.difference(m_knownMembers,m_memberResults).isEmpty()) {
    processResultQuorum(m_memberResults);
  }
 else {
    unlockLocalState();
  }
  if (notInitializing) {
    try {
      membershipChanged(addedMembers,removedMembers);
    }
 catch (    Exception e) {
      if (m_log.isDebugEnabled()) {
        m_log.debug("Error in StateMachineInstance callbacks.",e);
      }
      m_initializationCompleted=false;
      m_shared_es.submit(new CallbackExceptionHandler(this));
    }
  }
  assert(!debugIsLocalStateLocked());
}
