{
  assert(proposedTask != null);
  assert(proposedTask.remaining() < Short.MAX_VALUE);
  lockLocalState();
  assert(m_requestedInitialState == null);
  if (proposedTask.position() == 0) {
    m_pendingProposal=proposedTask;
  }
 else {
    m_pendingProposal=ByteBuffer.allocate(proposedTask.remaining());
    m_pendingProposal.put(proposedTask.array(),proposedTask.arrayOffset() + proposedTask.position(),proposedTask.remaining());
    m_pendingProposal.flip();
  }
  if (m_log.isDebugEnabled()) {
    if (m_pendingProposal.hasRemaining()) {
      m_log.debug(m_stateMachineId + ": New Task request " + taskToString(m_pendingProposal.asReadOnlyBuffer()));
    }
 else {
      m_log.debug(m_stateMachineId + ": New unspecified Task");
    }
  }
  m_stateChangeInitiator=true;
  m_currentRequestType=correlated ? REQUEST_TYPE.CORRELATED_COORDINATED_TASK : REQUEST_TYPE.UNCORRELATED_COORDINATED_TASK;
  ByteBuffer taskProposal=buildProposal(m_currentRequestType,m_synchronizedState.asReadOnlyBuffer(),proposedTask.asReadOnlyBuffer());
  m_pendingProposal=proposedTask;
  wakeCommunityWithProposal(taskProposal.array());
  unlockLocalState();
}
