{
  assert(debugIsLocalStateLocked());
  if (m_pendingProposal == null) {
    unlockLocalState();
    return;
  }
  Set<String> membersWithResults;
  try {
    membersWithResults=ImmutableSet.copyOf(m_zk.getChildren(m_barrierResultsPath,m_barrierResultsWatcher));
  }
 catch (  KeeperException.SessionExpiredException e) {
    membersWithResults=new TreeSet<String>(Arrays.asList("We died so avoid Quorum path"));
    m_log.debug(m_stateMachineId + ": Received SessionExpiredException in checkForBarrierResultsChanges");
  }
catch (  KeeperException.ConnectionLossException e) {
    membersWithResults=new TreeSet<String>(Arrays.asList("We died so avoid Quorum path"));
    m_log.debug(m_stateMachineId + ": Received ConnectionLossException in checkForBarrierResultsChanges");
  }
catch (  InterruptedException e) {
    membersWithResults=new TreeSet<String>(Arrays.asList("We died so avoid Quorum path"));
    m_log.debug(m_stateMachineId + ": Received InterruptedException in checkForBarrierResultsChanges");
  }
catch (  Exception e) {
    org.voltdb.VoltDB.crashLocalVoltDB("Unexepected failure in StateMachine.",true,e);
    membersWithResults=new TreeSet<String>();
  }
  if (Sets.difference(m_knownMembers,membersWithResults).isEmpty()) {
    processResultQuorum(membersWithResults);
    assert(!debugIsLocalStateLocked());
  }
 else {
    m_memberResults=membersWithResults;
    unlockLocalState();
  }
}
