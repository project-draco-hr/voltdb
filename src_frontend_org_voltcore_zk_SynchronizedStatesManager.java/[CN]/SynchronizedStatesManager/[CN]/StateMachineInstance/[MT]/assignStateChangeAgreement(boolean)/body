{
  assert(debugIsLocalStateLocked());
  assert(m_pendingProposal != null);
  assert(m_currentRequestType == REQUEST_TYPE.STATE_CHANGE_REQUEST);
  byte result[]=new byte[1];
  result[0]=(byte)(acceptable ? 1 : 0);
  addResultEntry(result);
  if (acceptable) {
    checkForBarrierResultsChanges();
  }
 else {
    try {
      m_zk.delete(m_myPartiticpantsPath,-1);
    }
 catch (    KeeperException.SessionExpiredException e) {
      m_log.debug(m_stateMachineId + ": Received SessionExpiredException in assignStateChangeAgreement");
    }
catch (    KeeperException.ConnectionLossException e) {
      m_log.debug(m_stateMachineId + ": Received ConnectionLossException in assignStateChangeAgreement");
    }
catch (    InterruptedException e) {
      m_log.debug(m_stateMachineId + ": Received InterruptedException in assignStateChangeAgreement");
    }
catch (    Exception e) {
      org.voltdb.VoltDB.crashLocalVoltDB("Unexepected failure in StateMachine.",true,e);
    }
    unlockLocalState();
  }
}
