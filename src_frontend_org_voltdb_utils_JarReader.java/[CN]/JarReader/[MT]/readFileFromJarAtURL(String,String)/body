{
  JarInputStream jarIn=JarReader.openJar(jarpath);
  if (jarIn == null)   return (null);
  byte[] bytes=null;
  try {
    JarEntry catEntry=jarIn.getNextJarEntry();
    while ((catEntry != null) && (catEntry.getName().equals(filename) == false)) {
      catEntry=jarIn.getNextJarEntry();
    }
    if (catEntry == null) {
      return null;
    }
    int totalRead=0;
    int maxToRead=4096 << 10;
    byte buffer[]=new byte[maxToRead];
    bytes=new byte[maxToRead * 2];
    while (jarIn.available() == 1) {
      int readSize=jarIn.read(buffer,0,buffer.length);
      if (readSize > 0) {
        totalRead+=readSize;
        if (totalRead > bytes.length) {
          byte temp[]=new byte[bytes.length * 2];
          System.arraycopy(bytes,0,temp,0,bytes.length);
          bytes=temp;
        }
        System.arraycopy(buffer,0,bytes,totalRead - readSize,readSize);
      }
    }
    byte temp[]=new byte[totalRead];
    System.arraycopy(bytes,0,temp,0,totalRead);
    bytes=temp;
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  return bytes;
}
