{
  Constraint c=(Constraint)tempConstraints.get(0);
  String namePart=c.getName() == null ? null : c.getName().name;
  HsqlName indexName=session.database.nameManager.newAutoName("IDX",namePart,table.getSchemaName(),table.getName(),SchemaObject.INDEX);
  if (c.mainColSet != null) {
    c.core.mainCols=table.getColumnIndexes(c.mainColSet);
  }
  table.createPrimaryKey(indexName,c.core.mainCols,true);
  if (c.core.mainCols != null) {
    Constraint newconstraint=new Constraint(c.getName(),table,table.getPrimaryIndex(),Constraint.PRIMARY_KEY);
    table.addConstraint(newconstraint);
    session.database.schemaManager.addSchemaObject(newconstraint);
  }
  for (int i=1; i < tempConstraints.size(); i++) {
    c=(Constraint)tempConstraints.get(i);
    boolean assumeUnique=false;
switch (c.constType) {
case Constraint.ASSUMEUNIQUE:
{
        assumeUnique=true;
      }
case Constraint.UNIQUE:
{
      c.setColumnsIndexes(table);
      if (c.indexExprs != null) {
        if (table.getUniqueConstraintForExprs(c.indexExprs) != null) {
          throw Error.error(ErrorCode.X_42522);
        }
      }
 else       if (table.getUniqueConstraintForColumns(c.core.mainCols) != null) {
        throw Error.error(ErrorCode.X_42522);
      }
      indexName=session.database.nameManager.newAutoName("IDX",c.getName().name,table.getSchemaName(),table.getName(),SchemaObject.INDEX);
      Index index=null;
      if (c.indexExprs != null || assumeUnique) {
        index=table.createAndAddVoltIndexStructure(indexName,c.core.mainCols,c.indexExprs,true,true,assumeUnique);
      }
 else {
        index=table.createAndAddIndexStructure(indexName,c.core.mainCols,null,null,true,true,false);
      }
      Constraint newconstraint=new Constraint(c.getName(),table,index,Constraint.UNIQUE);
      table.addConstraint(newconstraint);
      session.database.schemaManager.addSchemaObject(newconstraint);
      break;
    }
case Constraint.FOREIGN_KEY:
{
    addForeignKey(session,table,c,constraintList);
    break;
  }
case Constraint.CHECK:
{
  c.prepareCheckConstraint(session,table,false);
  table.addConstraint(c);
  if (c.isNotNull()) {
    ColumnSchema column=table.getColumn(c.notNullColumnIndex);
    column.setNullable(false);
    table.setColumnTypeVars(c.notNullColumnIndex);
  }
  session.database.schemaManager.addSchemaObject(c);
  break;
}
}
}
return table;
}
