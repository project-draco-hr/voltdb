{
  VoltTable t1=TableHelper.quickTable("(SMALLINT, VARCHAR30, VARCHAR80)");
  VoltTable t2=TableHelper.quickTable("(INTEGER, VARCHAR40, VARCHAR120)");
  Catalog catOriginal=getCatalogForTable("A","modtablecolumn1",t1);
  Catalog catUpdated=getCatalogForTable("A","modtablecolumn2",t2);
  verifyDiff(catOriginal,catUpdated,true,null);
  t1=TableHelper.quickTable("(VARBINARY30)");
  t2=TableHelper.quickTable("(VARBINARY70)");
  catOriginal=getCatalogForTable("A","modtablecolumn1",t1);
  catUpdated=getCatalogForTable("A","modtablecolumn2",t2);
  verifyDiff(catOriginal,catUpdated,true,null);
  t1=TableHelper.quickTable("(BIGINT)");
  t2=TableHelper.quickTable("(INTEGER)");
  catOriginal=getCatalogForTable("A","modtablecolumn1",t1);
  catUpdated=getCatalogForTable("A","modtablecolumn2",t2);
  verifyDiffRejected(catOriginal,catUpdated);
  t1=TableHelper.quickTable("(VARCHAR35)");
  t2=TableHelper.quickTable("(VARCHAR34)");
  catOriginal=getCatalogForTable("A","modtablecolumn1",t1);
  catUpdated=getCatalogForTable("A","modtablecolumn2",t2);
  verifyDiffRejected(catOriginal,catUpdated);
  t1=TableHelper.quickTable("(VARCHAR35)");
  t2=TableHelper.quickTable("(VARCHAR34)");
  catOriginal=getExportCatalogForTable("A","modtablecolumn1",t1);
  catUpdated=getExportCatalogForTable("A","modtablecolumn2",t2);
  verifyDiffRejected(catOriginal,catUpdated);
}
