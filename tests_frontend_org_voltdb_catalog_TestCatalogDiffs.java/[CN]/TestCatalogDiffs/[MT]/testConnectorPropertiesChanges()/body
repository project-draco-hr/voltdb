{
  String testDir=BuildDirectoryUtils.getBuildDirectoryPath();
  final String ddl="CREATE TABLE export_data ( id BIGINT default 0 , value BIGINT DEFAULT 0 );\n" + "EXPORT TABLE export_data;";
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema(ddl);
  final String origXml="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export>"+ "        <configuration stream='default' enabled='true' type='file'>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "            <property name=\"nonce\">pre-fix</property>"+ "            <property name=\"outdir\">exportdata</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  builder.compile(testDir + File.separator + "propexport1.jar");
  Catalog origCat=catalogForJar(testDir + File.separator + "propexport1.jar");
  final File origFile=VoltProjectBuilder.writeStringToTempFile(origXml);
  DeploymentType origDepl=CatalogUtil.getDeployment(new FileInputStream(origFile));
  String msg=CatalogUtil.compileDeployment(origCat,origDepl,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  final String newPropXml="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export>"+ "        <configuration stream='default' enabled='true' type='file'>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "            <property name=\"nonce\">pre-fix</property>"+ "            <property name=\"outdir\">exportdata</property>"+ "            <property name=\"iamnew\">see_me_roar</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  builder.compile(testDir + File.separator + "propexport2.jar");
  Catalog newPropCat=catalogForJar(testDir + File.separator + "propexport2.jar");
  final File newPropFile=VoltProjectBuilder.writeStringToTempFile(newPropXml);
  DeploymentType newPropDepl=CatalogUtil.getDeployment(new FileInputStream(newPropFile));
  msg=CatalogUtil.compileDeployment(newPropCat,newPropDepl,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  final String modPropXml="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export>"+ "        <configuration stream='default' enabled='true' type='file'>"+ "            <property name=\"type\">TSV</property>"+ "            <property name=\"with-schema\">true</property>"+ "            <property name=\"nonce\">pre-fix-other</property>"+ "            <property name=\"outdir\">exportdatadata</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  builder.compile(testDir + File.separator + "propexport3.jar");
  Catalog modPropCat=catalogForJar(testDir + File.separator + "propexport3.jar");
  final File modPropFile=VoltProjectBuilder.writeStringToTempFile(modPropXml);
  DeploymentType modPropDepl=CatalogUtil.getDeployment(new FileInputStream(modPropFile));
  msg=CatalogUtil.compileDeployment(modPropCat,modPropDepl,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  verifyDiff(origCat,newPropCat);
  verifyDiff(newPropCat,origCat);
  verifyDiff(origCat,modPropCat);
}
