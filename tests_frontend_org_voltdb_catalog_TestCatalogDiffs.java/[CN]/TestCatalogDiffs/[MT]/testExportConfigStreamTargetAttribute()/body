{
  if (!MiscUtils.isPro()) {
    return;
  }
  String testDir=BuildDirectoryUtils.getBuildDirectoryPath();
  final String ddl="CREATE STREAM export_data ( id BIGINT default 0 , value BIGINT DEFAULT 0 );";
  VoltProjectBuilder builder=new VoltProjectBuilder();
  builder.addLiteralSchema(ddl);
  String depXml="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export>"+ "        <configuration stream='default' enabled='true' type='file'>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "            <property name=\"nonce\">pre-fix</property>"+ "            <property name=\"outdir\">" + m_dir + "</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  builder.compile(testDir + File.separator + "exporttarget1.jar");
  Catalog cat=catalogForJar(testDir + File.separator + "exporttarget1.jar");
  File file=VoltProjectBuilder.writeStringToTempFile(depXml);
  DeploymentType deployment=CatalogUtil.getDeployment(new FileInputStream(file));
  String msg=CatalogUtil.compileDeployment(cat,deployment,false);
  assertTrue("Deployment file failed to parse: " + msg,msg == null);
  depXml="<?xml version='1.0' encoding='UTF-8' standalone='no'?>" + "<deployment>" + "<cluster hostcount='3' kfactor='1' sitesperhost='2'/>"+ "    <export>"+ "        <configuration stream='default' target='newtarget' enabled='true' type='file'>"+ "            <property name=\"type\">CSV</property>"+ "            <property name=\"with-schema\">false</property>"+ "            <property name=\"nonce\">pre-fix</property>"+ "            <property name=\"outdir\">" + m_dir + "</property>"+ "        </configuration>"+ "    </export>"+ "</deployment>";
  builder.compile(testDir + File.separator + "exporttarget2.jar");
  cat=catalogForJar(testDir + File.separator + "exporttarget2.jar");
  file=VoltProjectBuilder.writeStringToTempFile(depXml);
  deployment=CatalogUtil.getDeployment(new FileInputStream(file));
  msg=CatalogUtil.compileDeployment(cat,deployment,false);
  assertTrue("Must fail when both 'stream' and 'target' attributes are specified",msg.contains("Only one of 'target' or 'stream' attribute must be specified"));
}
