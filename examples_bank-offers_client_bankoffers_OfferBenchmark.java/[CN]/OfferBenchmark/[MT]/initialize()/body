{
  List<Long> acctList=new ArrayList<Long>(config.custcount * 2);
  List<String> stList=new ArrayList<String>(config.custcount * 2);
  System.out.println("generating " + config.custcount + " customers...");
  for (int c=0; c < config.custcount; c++) {
    if (c % 10000 == 0) {
      System.out.println("  " + c);
    }
    PersonGenerator.Person p=gen.newPerson();
    client.callProcedure(new BenchmarkCallback("CUSTOMER.insert"),"CUSTOMER.insert",c,p.firstname,p.lastname,"Anytown",p.state,p.phonenumber,p.dob,p.sex);
    int accts=rand.nextInt(5);
    for (int a=0; a < accts; a++) {
      int acct_no=(c * 100) + a;
      client.callProcedure(new BenchmarkCallback("ACCOUNT.insert"),"ACCOUNT.insert",acct_no,c,rand.nextInt(10000),rand.nextInt(10000),new Date(),"Y");
      acctList.add(Long.valueOf(acct_no));
      stList.add(p.state);
    }
  }
  accounts=acctList.toArray(new Long[acctList.size()]);
  acct_states=stList.toArray(new String[stList.size()]);
  System.out.println("generating " + config.vendorcount + " vendors...");
  for (int v=0; v < config.vendorcount; v++) {
    if (v % 10000 == 0) {
      System.out.println("  " + v);
    }
    client.callProcedure(new BenchmarkCallback("VENDOR_OFFERS.insert"),"VENDOR_OFFERS.insert",v,rand.nextInt(5) + 1,0,rand.nextInt(5) + 1,(double)rand.nextInt(100),0,offers[rand.nextInt(offers.length)]);
  }
}
