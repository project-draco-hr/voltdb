{
  if ((m_commandLog != null) && (m_commandLog.needsInitialization())) {
    m_commandLog.init(m_catalogContext.cluster.getLogconfig().get("log").getLogsize(),txnId,m_cartographer.getPartitionCount(),m_config.m_commandLogBinding,perPartitionTxnIds);
    try {
      ZKCountdownLatch latch=new ZKCountdownLatch(m_messenger.getZK(),VoltZK.commandlog_init_barrier,m_messenger.getLiveHostIds().size());
      latch.countDown(true);
      latch.await();
    }
 catch (    Exception e) {
      VoltDB.crashLocalVoltDB("Failed to init and wait on command log init barrier",true,e);
    }
  }
  for (  Initiator initiator : m_iv2Initiators.values()) {
    initiator.enableWritingIv2FaultLog();
  }
  if (m_leaderAppointer != null) {
    m_leaderAppointer.onReplayCompletion();
  }
  if (!m_rejoining && !m_joining) {
    if (m_clientInterface != null) {
      try {
        m_clientInterface.startAcceptingConnections();
      }
 catch (      IOException e) {
        hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_ErrorStartAcceptingConnections.name(),e);
        VoltDB.crashLocalVoltDB("Error starting client interface.",true,e);
      }
    }
    prepareReplication();
    startResourceUsageMonitor();
    ExportManager.instance().startPolling(m_catalogContext);
    ImportManager.instance().readyForData(m_catalogContext,m_messenger);
  }
  try {
    if (m_adminListener != null) {
      m_adminListener.start();
    }
  }
 catch (  Exception e) {
    hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_ErrorStartHTTPListener.name(),e);
    VoltDB.crashLocalVoltDB("HTTP service unable to bind to port.",true,e);
  }
  if (m_startMode != null) {
    m_mode=m_startMode;
  }
 else {
    m_mode=OperationMode.RUNNING;
  }
  Object args[]={(m_mode == OperationMode.PAUSED) ? "PAUSED" : "NORMAL"};
  consoleLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_ServerOpMode.name(),args,null);
  consoleLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_ServerCompletedInitialization.name(),null,null);
  m_messenger.getZK().create(VoltZK.init_completed,null,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,new ZKUtil.StringCallback(),null);
  m_statusTracker.setNodeState(NodeState.UP);
}
