{
  int numberOfNodes=m_deployment.getCluster().getHostcount();
  if (numberOfNodes <= 0) {
    hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_InvalidHostCount.name(),new Object[]{numberOfNodes},null);
    VoltDB.crashLocalVoltDB("Invalid cluster size: " + numberOfNodes,false,null);
  }
  String leaderAddress=m_config.m_leader;
  InetAddress leader=null;
  try {
    leader=InetAddress.getByName(leaderAddress);
  }
 catch (  UnknownHostException ex) {
    hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_CouldNotRetrieveLeaderAddress.name(),new Object[]{leaderAddress},null);
    VoltDB.crashLocalVoltDB("Failed to resolve leader address.",false,null);
  }
  org.voltcore.messaging.HostMessenger.Config hmconfig=new org.voltcore.messaging.HostMessenger.Config(leader.getHostAddress(),m_config.m_internalPort);
  hmconfig.factory=new VoltDbMessageFactory();
  m_messenger=new org.voltcore.messaging.HostMessenger(hmconfig);
  hostLog.l7dlog(Level.TRACE,LogKeys.host_VoltDB_CreatingVoltDB.name(),new Object[]{numberOfNodes,leader},null);
  hostLog.info(String.format("Beginning inter-node communication on port %d.",m_config.m_internalPort));
  try {
    m_messenger.start();
  }
 catch (  Exception e) {
    VoltDB.crashLocalVoltDB(e.getMessage(),true,e);
  }
  createPersistentZKNodes();
  if (!isRejoin) {
    m_messenger.waitForGroupJoin(numberOfNodes);
  }
  m_myHostId=m_messenger.getHostId();
}
