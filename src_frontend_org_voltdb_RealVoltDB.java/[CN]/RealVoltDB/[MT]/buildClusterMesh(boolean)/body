{
  String leaderAddress=m_config.m_leader;
  InetAddress leader=null;
  try {
    leader=InetAddress.getByName(leaderAddress);
  }
 catch (  UnknownHostException ex) {
    hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_CouldNotRetrieveLeaderAddress.name(),new Object[]{leaderAddress},null);
    VoltDB.crashLocalVoltDB("Failed to resolve leader address.",false,null);
  }
  org.voltcore.messaging.HostMessenger.Config hmconfig;
  if (m_config.m_rejoinToHostAndPort != null) {
    hmconfig=new org.voltcore.messaging.HostMessenger.Config(MiscUtils.getHostnameFromHostnameColonPort(m_config.m_rejoinToHostAndPort),MiscUtils.getPortFromHostnameColonPort(m_config.m_rejoinToHostAndPort,m_config.m_internalPort));
  }
 else {
    hmconfig=new org.voltcore.messaging.HostMessenger.Config(leader.getHostAddress(),m_config.m_leaderPort != null ? m_config.m_leaderPort : m_config.m_internalPort);
  }
  hmconfig.internalPort=m_config.m_internalPort;
  hmconfig.internalInterface=m_config.m_internalInterface;
  hmconfig.zkInterface=m_config.m_zkInterface;
  hmconfig.deadHostTimeout=m_config.m_deadHostTimeoutMS;
  hmconfig.factory=new VoltDbMessageFactory();
  m_messenger=new org.voltcore.messaging.HostMessenger(hmconfig);
  hostLog.info(String.format("Beginning inter-node communication on port %d.",m_config.m_internalPort));
  try {
    m_messenger.start();
  }
 catch (  Exception e) {
    VoltDB.crashLocalVoltDB(e.getMessage(),true,e);
  }
  VoltZK.createPersistentZKNodes(m_messenger.getZK());
  m_myHostId=m_messenger.getHostId();
}
