{
synchronized (m_startAndStopLock) {
    hostLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_StartupString.name(),null);
    m_faultManager=new FaultDistributor();
    if (config.listenForDumpRequests)     DumpManager.init();
    readBuildInfo();
    m_config=config;
    int port;
    for (port=8080; true; port++) {
      try {
        m_adminListener=new HTTPAdminListener(port);
        break;
      }
 catch (      IOException e1) {
      }
    }
    if (port == 8081)     hostLog.info("HTTP admin console unable to bind to port 8080");
 else     if (port > 8081)     hostLog.info("HTTP admin console unable to bind to ports 8080 through " + (port - 1));
    hostLog.info("HTTP admin console listening on port " + port);
    if (m_config.m_pathToCatalog.startsWith("http")) {
      hostLog.info("Loading application catalog jarfile from " + m_config.m_pathToCatalog);
    }
 else {
      File f=new File(m_config.m_pathToCatalog);
      hostLog.info("Loading application catalog jarfile from " + f.getAbsolutePath());
    }
    final String serializedCatalog=CatalogUtil.loadCatalogFromJar(m_config.m_pathToCatalog,hostLog);
    if ((serializedCatalog == null) || (serializedCatalog.length() == 0))     VoltDB.crashVoltDB();
    Catalog catalog=new Catalog();
    catalog.execute(serializedCatalog);
    m_catalogContext=new CatalogContext(catalog,m_config.m_pathToCatalog);
    final SnapshotSchedule schedule=m_catalogContext.database.getSnapshotschedule().get("default");
    int lowestNonExecSiteId=-1;
    for (    Site site : m_catalogContext.sites) {
      if (!site.getIsexec()) {
        if (lowestNonExecSiteId == -1) {
          lowestNonExecSiteId=Integer.parseInt(site.getTypeName());
        }
 else {
          lowestNonExecSiteId=Math.min(lowestNonExecSiteId,Integer.parseInt(site.getTypeName()));
        }
      }
    }
    TheHashinator.initialize(catalog);
    m_network=new VoltNetwork(new Runnable[]{new Runnable(){
      @Override public void run(){
        for (        final ClientInterface ci : m_clientInterfaces) {
          ci.processPeriodicWork();
        }
      }
    }
});
    try {
      ELTManager.initialize(catalog);
    }
 catch (    ELTManager.SetupException e) {
      hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_ELTInitFailure.name(),e);
      System.exit(-1);
    }
    InetAddress leader=null;
    try {
      leader=InetAddress.getByName(m_catalogContext.cluster.getLeaderaddress());
    }
 catch (    UnknownHostException ex) {
      hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_CouldNotRetrieveLeaderAddress.name(),new Object[]{m_catalogContext.cluster.getLeaderaddress()},ex);
      throw new RuntimeException(ex);
    }
    if (m_catalogContext.numberOfNodes <= 0) {
      hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_InvalidHostCount.name(),new Object[]{m_catalogContext.numberOfNodes},null);
      VoltDB.crashVoltDB();
    }
    hostLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_CreatingVoltDB.name(),new Object[]{m_catalogContext.numberOfNodes,leader},null);
    m_messenger=new HostMessenger(m_network,leader,m_catalogContext.numberOfNodes,hostLog);
    m_instanceId=m_messenger.waitForGroupJoin();
    int myHostId=m_messenger.getHostId();
    m_localSites=new Hashtable<Integer,ExecutionSite>();
    m_siteThreads=new Hashtable<Integer,Thread>();
    m_runners=new ArrayList<ExecutionSiteRunner>();
    Site siteForThisThread=null;
    m_currentThreadSite=null;
    for (    Site site : m_catalogContext.sites) {
      int sitesHostId=Integer.parseInt(site.getHost().getTypeName());
      int siteId=Integer.parseInt(site.getTypeName());
      if (sitesHostId == myHostId) {
        log.l7dlog(Level.TRACE,LogKeys.org_voltdb_VoltDB_CreatingLocalSite.name(),new Object[]{siteId},null);
        m_messenger.createLocalSite(siteId);
        if (site.getIsexec()) {
          if (siteForThisThread == null) {
            siteForThisThread=site;
          }
 else {
            ExecutionSiteRunner runner=new ExecutionSiteRunner(siteId,m_catalogContext,serializedCatalog);
            m_runners.add(runner);
            Thread runnerThread=new Thread(runner,"Site " + siteId);
            runnerThread.start();
            log.l7dlog(Level.TRACE,LogKeys.org_voltdb_VoltDB_CreatingThreadForSite.name(),new Object[]{siteId},null);
            m_siteThreads.put(siteId,runnerThread);
          }
        }
      }
    }
    int siteId=Integer.parseInt(siteForThisThread.getTypeName());
    ExecutionSite siteObj=new ExecutionSite(siteId,m_catalogContext,serializedCatalog);
    m_localSites.put(Integer.parseInt(siteForThisThread.getTypeName()),siteObj);
    m_currentThreadSite=siteObj;
    for (    ExecutionSiteRunner runner : m_runners) {
synchronized (runner) {
        if (!runner.m_isSiteCreated) {
          try {
            runner.wait();
          }
 catch (          InterruptedException e) {
            throw new RuntimeException(e);
          }
        }
        m_localSites.put(runner.m_siteId,runner.m_siteObj);
      }
    }
    if (m_localSites.size() == 1) {
      if (m_config.m_profilingLevel != ProcedureProfiler.Level.DISABLED)       hostLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_ProfileLevelIs.name(),new Object[]{m_config.m_profilingLevel},null);
      ProcedureProfiler.profilingLevel=m_config.m_profilingLevel;
    }
 else {
      hostLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_InternalProfilingDisabledOnMultipartitionHosts.name(),null);
    }
    ProcedureProfiler.initializeWorkloadTrace(catalog);
    int portOffset=0;
    for (    Site site : m_catalogContext.sites) {
      int sitesHostId=Integer.parseInt(site.getHost().getTypeName());
      int currSiteId=Integer.parseInt(site.getTypeName());
      if ((sitesHostId == myHostId) && (site.getIsexec() == false)) {
        ClientInterface ci=ClientInterface.create(m_network,m_messenger,m_catalogContext,m_catalogContext.numberOfNodes,currSiteId,site.getInitiatorid(),config.m_port + portOffset++,currSiteId == lowestNonExecSiteId ? schedule : null);
        m_clientInterfaces.add(ci);
        try {
          ci.startAcceptingConnections();
        }
 catch (        IOException e) {
          hostLog.l7dlog(Level.FATAL,LogKeys.host_VoltDB_ErrorStartAcceptingConnections.name(),e);
          VoltDB.crashVoltDB();
        }
      }
    }
    hostLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_StartingNetwork.name(),null);
    m_network.start();
    m_messenger.sendReadyMessage();
    m_messenger.waitForAllHostsToBeReady();
    hostLog.l7dlog(Level.INFO,LogKeys.host_VoltDB_ServerCompletedInitialization.name(),null);
  }
}
