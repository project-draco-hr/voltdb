{
  long megabytes=1024 * 1024;
  long maxMemory=Runtime.getRuntime().maxMemory() / megabytes;
  long drRqt=isPro ? 128 * sitesPerHost : 0;
  long crazyThresh=computeMinimumHeapRqt(isPro,tableCount,sitesPerHost);
  long warnThresh=crazyThresh + drRqt;
  if (maxMemory < crazyThresh) {
    StringBuilder builder=new StringBuilder();
    builder.append(String.format("The configuration of %d tables and %d sites-per-host requires at least %d MB of Java heap memory. ",tableCount,sitesPerHost,crazyThresh));
    builder.append(String.format("The maximum amount of heap memory available to the JVM is %d MB. ",maxMemory));
    builder.append("Please increase the maximum heap size using the VOLTDB_HEAPMAX environment variable and then restart VoltDB.");
    VoltDB.crashLocalVoltDB(builder.toString(),false,null);
  }
 else   if (maxMemory < warnThresh) {
    StringBuilder builder=new StringBuilder();
    builder.append(String.format("The configuration of %d tables and %d sites-per-host requires at least %d MB of Java heap memory. ",tableCount,sitesPerHost,crazyThresh));
    builder.append(String.format("The maximum amount of heap memory available to the JVM is %d MB. ",maxMemory));
    builder.append("The system has enough memory for normal operation but is in danger of running out of Java heap space if the DR feature is used. ");
    builder.append("Use the VOLTDB_HEAPMAX environment variable to adjust the Java max heap size before starting VoltDB, as necessary.");
    consoleLog.warn(builder.toString());
  }
}
