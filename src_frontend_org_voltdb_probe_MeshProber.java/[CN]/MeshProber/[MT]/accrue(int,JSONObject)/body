{
  checkArgument(hostId >= 0,"host id %s is not greater or equal to 0",hostId);
  checkArgument(jo != null,"json object is null");
  HostCriteria hc=new HostCriteria(jo);
  checkArgument(!hc.isUndefined(),"json object does not contain host prober fields");
  Map<Integer,HostCriteria> expect;
  Map<Integer,HostCriteria> update;
  do {
    expect=m_hostCriteria.get();
    update=ImmutableMap.<Integer,HostCriteria>builder().putAll(Maps.filterKeys(expect,not(equalTo(hostId)))).put(hostId,hc).build();
  }
 while (!m_hostCriteria.compareAndSet(expect,update));
  determineStartActionIfNecessary(update);
}
