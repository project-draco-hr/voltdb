{
  if (m_probedDetermination.isDone()) {
    return;
  }
  final int ksafety=getkFactor() + 1;
  int bare=0;
  int unmeshed=0;
  int operational=0;
  int hostCount=getHostCount();
  boolean paused=isPaused();
  boolean safemode=isSafeMode();
  for (  HostCriteria c : hostCriteria.values()) {
    if (c.getNodeState().operational()) {
      operational+=1;
      if (operational == 1) {
        paused=c.isPaused();
        hostCount=c.getHostCount();
      }
    }
    unmeshed+=c.getNodeState().unmeshed() ? 1 : 0;
    bare+=c.isBare() ? 1 : 0;
    if (c.isPaused() && operational == 0) {
      paused=c.isPaused();
    }
    safemode=safemode || c.isSafeMode();
  }
  if (hostCriteria.size() < hostCount && operational == 0) {
    m_networkLog.debug("have yet to receive all the required host criteria");
    return;
  }
  if (hostCount < getHostCount() && hostCriteria.size() <= hostCount) {
    m_networkLog.debug("have yet to receive all the required host criteria");
    return;
  }
  m_networkLog.debug("Received all the required host criteria");
  safemode=safemode && operational == 0 && bare < ksafety;
  if (m_networkLog.isDebugEnabled()) {
    m_networkLog.debug("We have " + operational + " operational nodes, "+ bare+ " bare nodes, and "+ unmeshed+ " unmeshed nodes");
    m_networkLog.debug("Propagated cluster attribute are paused: " + paused + ", and safemode: "+ safemode);
  }
  if (getStartAction() != StartAction.PROBE) {
    m_probedDetermination.set(new Determination(getStartAction(),getHostCount(),paused));
    return;
  }
  StartAction determination=isBare() ? StartAction.CREATE : StartAction.RECOVER;
  if (operational > 0 && operational < hostCount) {
    determination=StartAction.LIVE_REJOIN;
  }
 else   if (operational > 0 && operational == hostCount) {
    if (isAddAllowed()) {
      hostCount=hostCount + ksafety;
      determination=StartAction.JOIN;
    }
 else {
      org.voltdb.VoltDB.crashLocalVoltDB("Node is not allowed to rejoin an already whole cluster");
      return;
    }
  }
 else   if (operational == 0 && bare == unmeshed) {
    determination=StartAction.CREATE;
  }
 else   if (operational == 0 && bare < ksafety) {
    determination=safemode ? StartAction.SAFE_RECOVER : StartAction.RECOVER;
  }
 else   if (operational == 0 && bare >= ksafety) {
    org.voltdb.VoltDB.crashLocalVoltDB("Unable to determine start action as " + bare + " nodes have no command logs, while "+ (unmeshed - bare)+ " nodes have them");
    return;
  }
  final Determination dtrm=new Determination(determination,hostCount,paused);
  if (m_networkLog.isDebugEnabled()) {
    m_networkLog.debug("made the following " + dtrm);
  }
  m_probedDetermination.set(dtrm);
}
