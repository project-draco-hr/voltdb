{
  int hash1, hash2;
  hash1=h1.getHashedPartitionForParameter(VoltType.TINYINT.getValue(),new Byte(VoltType.NULL_TINYINT));
  hash2=h2.getHashedPartitionForParameter(VoltType.TINYINT.getValue(),new Byte(VoltType.NULL_TINYINT));
  assertEquals(0,hash1);
  assertEquals(hash1,hash2);
  System.out.println("Lite " + hash1 + " Std "+ hash2);
  hash1=h1.getHashedPartitionForParameter(VoltType.SMALLINT.getValue(),new Short(VoltType.NULL_SMALLINT));
  hash2=h2.getHashedPartitionForParameter(VoltType.SMALLINT.getValue(),new Short(VoltType.NULL_SMALLINT));
  assertEquals(0,hash1);
  assertEquals(hash1,hash2);
  System.out.println("Lite " + hash1 + " Std "+ hash2);
  hash1=h1.getHashedPartitionForParameter(VoltType.INTEGER.getValue(),new Integer(VoltType.NULL_INTEGER));
  hash2=h2.getHashedPartitionForParameter(VoltType.INTEGER.getValue(),new Integer(VoltType.NULL_INTEGER));
  assertEquals(0,hash1);
  assertEquals(hash1,hash2);
  System.out.println("Lite " + hash1 + " Std "+ hash2);
  hash1=h1.getHashedPartitionForParameter(VoltType.BIGINT.getValue(),new Long(VoltType.NULL_BIGINT));
  hash2=h2.getHashedPartitionForParameter(VoltType.BIGINT.getValue(),new Long(VoltType.NULL_BIGINT));
  assertEquals(0,hash1);
  assertEquals(hash1,hash2);
  System.out.println("Lite " + hash1 + " Std "+ hash2);
  hash1=h1.getHashedPartitionForParameter(VoltType.STRING.getValue(),VoltType.NULL_STRING_OR_VARBINARY);
  hash2=h2.getHashedPartitionForParameter(VoltType.STRING.getValue(),VoltType.NULL_STRING_OR_VARBINARY);
  assertEquals(0,hash1);
  assertEquals(hash1,hash2);
  System.out.println("Lite " + hash1 + " Std "+ hash2);
  hash1=h1.getHashedPartitionForParameter(VoltType.VARBINARY.getValue(),null);
  hash2=h2.getHashedPartitionForParameter(VoltType.VARBINARY.getValue(),null);
  assertEquals(0,hash1);
  assertEquals(hash1,hash2);
  System.out.println("Lite  " + hash1 + " Std "+ hash2);
}
