{
  int bytesRead=0;
  int lastRead=1;
  try {
    while (bytesRead < maxBytes && lastRead > 0) {
      if (m_writeBuffer == null) {
        m_writeBuffer=pool.acquire();
        m_writeBuffer.b.clear();
      }
      lastRead=channel.read(m_writeBuffer.b);
      if (lastRead < 0 && bytesRead == 0) {
        if (m_writeBuffer.b.position() == 0) {
          m_writeBuffer.discard();
          m_writeBuffer=null;
        }
        return -1;
      }
      if (lastRead > 0) {
        bytesRead+=lastRead;
        if (!m_writeBuffer.b.hasRemaining()) {
          m_writeBuffer.b.flip();
          m_readBuffers.add(m_writeBuffer);
          m_writeBuffer=null;
        }
 else {
          break;
        }
      }
 else       if (m_writeBuffer.b.position() == 0) {
        m_writeBuffer.discard();
        m_writeBuffer=null;
      }
    }
  }
  finally {
    if (bytesRead > 0) {
      m_bytesRead+=bytesRead;
      m_totalAvailable+=bytesRead;
    }
  }
  return bytesRead;
}
